{"tree": {"_type": "Module", "body": [{"name": "AcidicSwampOoze", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Destroy", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AcidicSwampOoze(MinionCard):\n    def __init__(self):\n        super().__init__(\"Acidic Swamp Ooze\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncestralHealing", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}]}]}]}, "orig_code": "class AncestralHealing(SpellCard):\n    def __init__(self):\n        super().__init__(\"Ancestral Healing\", 0, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.heal(player.effective_heal_power(self.target.calculate_max_health()), self)\n        self.target.taunt = True\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AnimalCompanion", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "beast_list", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"attr": "Huffer", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "beast_list", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}}]}]}]}, "orig_code": "class AnimalCompanion(SpellCard):\n    def __init__(self):\n        super().__init__(\"Animal Companion\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        beast_list = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.cards.minions.hunter.Leokk()]\n        card = game.random_choice(beast_list)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArcaneExplosion", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Num", "n": 2}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class ArcaneExplosion(SpellCard):\n    def __init__(self):\n        super().__init__(\"Arcane Explosion\", 2, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArcaneIntellect", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "c", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class ArcaneIntellect(SpellCard):\n    def __init__(self):\n        super().__init__(\"Arcane Intellect\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArcaneMissiles", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class ArcaneMissiles(SpellCard):\n    def __init__(self):\n        super().__init__(\"Arcane Missiles\", 1, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArcaneShot", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class ArcaneShot(SpellCard):\n    def __init__(self):\n        super().__init__(\"Arcane Shot\", 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArcaniteReaper", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Num", "n": 5}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class ArcaniteReaper(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Arcanite Reaper\", 5, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Assassinate", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Assassinate(SpellCard):\n    def __init__(self):\n        super().__init__(\"Assassinate\", 5, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.die(self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Backstab", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "filter_func", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "comparators": [{"_type": "Call", "func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}]}, {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}]}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Backstab(SpellCard):\n    def __init__(self):\n        super().__init__(\"Backstab\", 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target, filter_func=lambda target: target.health == target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BlessingOfKings", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class BlessingOfKings(SpellCard):\n    def __init__(self):\n        super().__init__(\"Blessing of Kings\", 4, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BlessingOfMight", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class BlessingOfMight(SpellCard):\n    def __init__(self):\n        super().__init__(\"Blessing of Might\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BloodfenRaptor", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BloodfenRaptor(MinionCard):\n    def __init__(self):\n        super().__init__(\"Bloodfen Raptor\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Bloodlust", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Num", "n": 5}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Bloodlust(SpellCard):\n    def __init__(self):\n        super().__init__(\"Bloodlust\", 5, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BluegillWarrior", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class BluegillWarrior(MinionCard):\n    def __init__(self):\n        super().__init__(\"Bluegill Warrior\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Boar(MinionCard):\n    def __init__(self):\n        super().__init__(\"Boar\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Charge", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "_Charge", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Charge(SpellCard):\n    def __init__(self):\n        super().__init__(\"Charge\", 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(_Charge()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ChillwindYeti", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ChillwindYeti(MinionCard):\n    def __init__(self):\n        super().__init__(\"Chillwind Yeti\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Claw", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Num", "n": 1}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Claw(SpellCard):\n    def __init__(self):\n        super().__init__(\"Claw\", 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Cleave", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 2}]}]}}]}]}]}, "orig_code": "class Cleave(SpellCard):\n    def __init__(self):\n        super().__init__(\"Cleave\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        minions = copy.copy(game.other_player.minions)\n\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) >= 2\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Consecration", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class Consecration(SpellCard):\n    def __init__(self):\n        super().__init__(\"Consecration\", 4, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CoreHound", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class CoreHound(MinionCard):\n    def __init__(self):\n        super().__init__(\"Core Hound\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Corruption", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}], "func": {"attr": "add_effect", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Corruption(SpellCard):\n    def __init__(self):\n        super().__init__(\"Corruption\", 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()), ActionTag(Kill(), SelfSelector())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DalaranMage", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_damage", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class DalaranMage(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dalaran Mage\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DivineSpirit", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class DivineSpirit(SpellCard):\n    def __init__(self):\n        super().__init__(\"Divine Spirit\", 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.increase_health(self.target.health)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DragonlingMechanic", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MechanicalDragonling", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DragonlingMechanic(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dragonling Mechanic\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Summon(MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DrainLife", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class DrainLife(SpellCard):\n    def __init__(self):\n        super().__init__(\"Drain Life\", 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DreadInfernal", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DreadInfernal(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dread Infernal\", 6, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ElvenArcher", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ElvenArcher(MinionCard):\n    def __init__(self):\n        super().__init__(\"Elven Archer\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ExcessMana", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class ExcessMana(SpellCard):\n    def __init__(self):\n        super().__init__(\"Excess Mana\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Execute", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "filter_func", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "comparators": [{"_type": "Call", "func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}]}, {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}]}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Execute(SpellCard):\n    def __init__(self):\n        super().__init__(\"Execute\", 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_enemy_minion_spell_target, filter_func=lambda target: target.health != target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.die(self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FanOfKnives", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Num", "n": 3}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class FanOfKnives(SpellCard):\n    def __init__(self):\n        super().__init__(\"Fan of Knives\", 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Fireball", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Fireball(SpellCard):\n    def __init__(self):\n        super().__init__(\"Fireball\", 4, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Flamestrike", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Num", "n": 7}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Flamestrike(SpellCard):\n    def __init__(self):\n        super().__init__(\"Flamestrike\", 7, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FlametongueTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FlametongueTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Flametongue Totem\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(Adjacent()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Frog", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Frog(MinionCard):\n    def __init__(self):\n        super().__init__(\"Frog\", 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FrostNova", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class FrostNova(SpellCard):\n    def __init__(self):\n        super().__init__(\"Frost Nova\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FrostShock", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class FrostShock(SpellCard):\n    def __init__(self):\n        super().__init__(\"Frost Shock\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_enemy_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Frostbolt", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Num", "n": 2}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Frostbolt(SpellCard):\n    def __init__(self):\n        super().__init__(\"Frostbolt\", 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FrostwolfGrunt", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FrostwolfGrunt(MinionCard):\n    def __init__(self):\n        super().__init__(\"Frostwolf Grunt\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GoldshireFootman", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GoldshireFootman(MinionCard):\n    def __init__(self):\n        super().__init__(\"Goldshire Footman\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GrimscaleOracle", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GrimscaleOracle(MinionCard):\n    def __init__(self):\n        super().__init__(\"Grimscale Oracle\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GuardianOfKings", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class GuardianOfKings(MinionCard):\n    def __init__(self):\n        super().__init__(\"Guardian of Kings\", 7, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GurubashiBerserker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "MinionIsTarget", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GurubashiBerserker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gurubashi Berserker\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[\n            Effect(CharacterDamaged(condition=MinionIsTarget()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HammerOfWrath", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class HammerOfWrath(SpellCard):\n    def __init__(self):\n        super().__init__(\"Hammer of Wrath\", 4, CHARACTER_CLASS.PALADIN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HandOfProtection", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}]}]}]}, "orig_code": "class HandOfProtection(SpellCard):\n    def __init__(self):\n        super().__init__(\"Hand of Protection\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.divine_shield = True\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HealingTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "NameConstant", "value": null}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class HealingTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Healing Totem\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1), MinionSelector(condition=None)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HealingTouch", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 8}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class HealingTouch(SpellCard):\n    def __init__(self):\n        super().__init__(\"Healing Touch\", 3, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Hex", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "neutral", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "replace", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Hex(SpellCard):\n    def __init__(self):\n        super().__init__(\"Hex\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        frog = hearthbreaker.cards.minions.neutral.Frog()\n        minion = frog.create_minion(None)\n        minion.card = frog\n        self.target.replace(minion)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HolyLight", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class HolyLight(SpellCard):\n    def __init__(self):\n        super().__init__(\"Holy Light\", 2, CHARACTER_CLASS.PALADIN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.heal(player.effective_heal_power(6), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HolyNova", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Num", "n": 5}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class HolyNova(SpellCard):\n    def __init__(self):\n        super().__init__(\"Holy Nova\", 5, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HolySmite", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class HolySmite(SpellCard):\n    def __init__(self):\n        super().__init__(\"Holy Smite\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Houndmaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "NONE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Taunt", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Houndmaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Houndmaster\", 4, CHARACTER_CLASS.HUNTER, CARD_RARITY.FREE, minion_type=MINION_TYPE.NONE, battlecry=Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Huffer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Huffer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Huffer\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Humility", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Humility(SpellCard):\n    def __init__(self):\n        super().__init__(\"Humility\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.change_attack(1 - self.target.calculate_attack())\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HuntersMark", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hunter's Mark"}, {"_type": "Num", "n": 0}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "set_health_to", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class HuntersMark(SpellCard):\n    def __init__(self):\n        super().__init__(\"Hunter's Mark\", 0, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IronforgeRifleman", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "NONE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class IronforgeRifleman(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ironforge Rifleman\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=Battlecry(Damage(1), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IronfurGrizzly", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class IronfurGrizzly(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ironfur Grizzly\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KillCommand", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "beasts", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}, "body": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "func": {"attr": "find_friendly_minion_battlecry_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"id": "beasts", "_type": "Name"}, "comparators": [{"_type": "NameConstant", "value": null}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class KillCommand(SpellCard):\n    def __init__(self):\n        super().__init__(\"Kill Command\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        beasts = hearthbreaker.targeting.find_friendly_minion_battlecry_target(\n            player.game, lambda x: x.card.minion_type is MINION_TYPE.BEAST)\n        if beasts is None:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KoboldGeomancer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_damage", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class KoboldGeomancer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Kobold Geomancer\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KorkronElite", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Num", "n": 4}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class KorkronElite(MinionCard):\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Leokk", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Leokk(MinionCard):\n    def __init__(self):\n        super().__init__(\"Leokk\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LightsJustice", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Light's Justice"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class LightsJustice(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Light's Justice\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LordOfTheArena", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class LordOfTheArena(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lord of the Arena\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MechanicalDragonling", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MechanicalDragonling(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mechanical Dragonling\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MindBlast", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class MindBlast(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mind Blast\", 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MindControl", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mind Control"}, {"_type": "Num", "n": 10}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "new_minion", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}], "func": {"attr": "copy", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "remove_from_board", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "add_to_board", "_type": "Attribute", "value": {"id": "new_minion", "_type": "Name"}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}}]}]}]}, "orig_code": "class MindControl(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mind Control\", 10, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        new_minion = self.target.copy(player)\n        self.target.remove_from_board()\n        new_minion.add_to_board(len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MindVision", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mind Vision"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "deepcopy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "card", "_type": "Name"}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}]}]}]}]}, "orig_code": "class MindVision(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mind Vision\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        if (len(game.other_player.hand) > 0):\n            card = copy.deepcopy(game.random_choice(game.other_player.hand))\n            player.hand.append(card)\n            card.player = player\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MirrorImage", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mirror Image"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "MirrorImageMinion", "_type": "Name"}}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}}]}]}]}, "orig_code": "class MirrorImage(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mirror Image\", 1, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            MirrorImageMinion().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MirrorImage", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mirror Image"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "MirrorImageMinion", "_type": "Name"}}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}}]}]}]}, "orig_code": "class MirrorImage(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mirror Image\", 1, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            MirrorImageMinion().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Misha", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Misha"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Misha(MinionCard):\n    def __init__(self):\n        super().__init__(\"Misha\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 4, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Moonfire", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Moonfire"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Moonfire(SpellCard):\n    def __init__(self):\n        super().__init__(\"Moonfire\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MurlocRaider", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Murloc Raider"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MurlocRaider(MinionCard):\n    def __init__(self):\n        super().__init__(\"Murloc Raider\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MurlocScout", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Murloc Scout"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MurlocScout(MinionCard):\n    def __init__(self):\n        super().__init__(\"Murloc Scout\", 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MurlocTidehunter", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Murloc Tidehunter"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MurlocScout", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MurlocTidehunter(MinionCard):\n    def __init__(self):\n        super().__init__(\"Murloc Tidehunter\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=Battlecry(Summon(MurlocScout()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nightblade", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nightblade"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Nightblade(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nightblade\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.FREE, battlecry=Battlecry(Damage(3), HeroSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "NorthshireCleric", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Northshire Cleric"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CharacterHealed", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}, "_type": "keyword"}, {"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class NorthshireCleric(MinionCard):\n    def __init__(self):\n        super().__init__(\"Northshire Cleric\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(CharacterHealed(condition=IsMinion(), player=BothPlayer()), ActionTag(Draw(), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "NoviceEngineer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Novice Engineer"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class NoviceEngineer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Novice Engineer\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.FREE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "OasisSnapjaw", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Oasis Snapjaw"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class OasisSnapjaw(MinionCard):\n    def __init__(self):\n        super().__init__(\"Oasis Snapjaw\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 7)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "OgreMagi", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ogre Magi"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_damage", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class OgreMagi(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ogre Magi\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4, spell_damage=1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RaidLeader", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Raid Leader"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class RaidLeader(MinionCard):\n    def __init__(self):\n        super().__init__(\"Raid Leader\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RazorfenHunter", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Razorfen Hunter"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Boar", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class RazorfenHunter(MinionCard):\n    def __init__(self):\n        super().__init__(\"Razorfen Hunter\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Boar()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RecklessRocketeer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Reckless Rocketeer"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class RecklessRocketeer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Reckless Rocketeer\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(5, 2, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RiverCrocolisk", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "River Crocolisk"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class RiverCrocolisk(MinionCard):\n    def __init__(self):\n        super().__init__(\"River Crocolisk\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RockbiterWeapon", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Rockbiter Weapon"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class RockbiterWeapon(SpellCard):\n    def __init__(self):\n        super().__init__(\"Rockbiter Weapon\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_friendly_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SacrificialPact", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sacrificial Pact"}, {"_type": "Num", "n": 0}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "filter_func", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "character"}]}, "body": {"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}, "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class SacrificialPact(SpellCard):\n    def __init__(self):\n        super().__init__(\"Sacrificial Pact\", 0, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target, filter_func=lambda character: character.card.minion_type == MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(5), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Sap", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sap"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "bounce", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Sap(SpellCard):\n    def __init__(self):\n        super().__init__(\"Sap\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.bounce()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SavageRoar", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Savage Roar"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class SavageRoar(SpellCard):\n    def __init__(self):\n        super().__init__(\"Savage Roar\", 3, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShadowBolt", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadow Bolt"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class ShadowBolt(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shadow Bolt\", 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShadowWordDeath", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadow Word: Death"}, {"_type": "Num", "n": 3}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "filter_func", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}, "comparators": [{"_type": "Num", "n": 5}]}, {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}]}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class ShadowWordDeath(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shadow Word: Death\", 3, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target, filter_func=lambda target: target.calculate_attack() >= 5 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.die(self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShadowWordPain", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadow Word: Pain"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "filter_func", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}, "comparators": [{"_type": "Num", "n": 3}]}, {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}]}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class ShadowWordPain(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shadow Word: Pain\", 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target, filter_func=lambda target: target.calculate_attack() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.die(self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShatteredSunCleric", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shattered Sun Cleric"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ShatteredSunCleric(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shattered Sun Cleric\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Sheep", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sheep"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Sheep(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sheep\", 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShieldBlock", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shield Block"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class ShieldBlock(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shield Block\", 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(5)\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shiv", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shiv"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class Shiv(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shiv\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SilverHandRecruit", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Silver Hand Recruit"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SilverHandRecruit(MinionCard):\n    def __init__(self):\n        super().__init__(\"Silver Hand Recruit\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.FREE, False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Soulfire", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Soulfire"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "discard", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class Soulfire(SpellCard):\n    def __init__(self):\n        super().__init__(\"Soulfire\", 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n        player.discard()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Sprint", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sprint"}, {"_type": "Num", "n": 7}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Sprint(SpellCard):\n    def __init__(self):\n        super().__init__(\"Sprint\", 7, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for i in range(0, 4):\n            player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Starfire", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Starfire"}, {"_type": "Num", "n": 6}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class Starfire(SpellCard):\n    def __init__(self):\n        super().__init__(\"Starfire\", 6, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StarvingBuzzard", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Starving Buzzard"}, {"_type": "Num", "n": 5}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionPlaced", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class StarvingBuzzard(MinionCard):\n    def __init__(self):\n        super().__init__(\"Starving Buzzard\", 5, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE.BEAST)), ActionTag(Draw(), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StoneclawTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stoneclaw Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class StoneclawTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stoneclaw Totem\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StonetuskBoar", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stonetusk Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class StonetuskBoar(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stonetusk Boar\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StormpikeCommando", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stormpike Commando"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class StormpikeCommando(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stormpike Commando\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StormwindChampion", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stormwind Champion"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class StormwindChampion(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stormwind Champion\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, auras=[Aura(ChangeAttack(1), MinionSelector()), Aura(ChangeHealth(1), MinionSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Swipe", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Swipe"}, {"_type": "Num", "n": 4}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"test": {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"id": "minion", "_type": "Name"}, "comparators": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}, {"test": {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "comparators": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}]}]}]}]}, "orig_code": "class Swipe(SpellCard):\n    def __init__(self):\n        super().__init__(\"Swipe\", 4, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_enemy_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n\n        for minion in copy.copy(game.other_player.minions):\n            if minion is not self.target:\n                minion.damage(player.effective_spell_damage(1), self)\n\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TimberWolf", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Timber Wolf"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TimberWolf(MinionCard):\n    def __init__(self):\n        super().__init__(\"Timber Wolf\", 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(IsType(MINION_TYPE.BEAST)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TotemicMight", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Totemic Might"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"test": {"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}, "comparators": [{"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}]}, "orig_code": "class TotemicMight(SpellCard):\n    def __init__(self):\n        super().__init__(\"Totemic Might\", 0, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for minion in player.minions:\n            if minion.card.minion_type == MINION_TYPE.TOTEM:\n                minion.increase_health(2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Tracking", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tracking"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "cards", "_type": "Name"}], "value": {"_type": "List"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "card_index", "_type": "Name"}, "_type": "For", "body": [{"test": {"_type": "Call", "func": {"attr": "can_draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"id": "game", "_type": "Name"}], "func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "deck", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}}}]}]}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Call", "args": [{"id": "cards", "_type": "Name"}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "chosen_card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "cards", "_type": "Name"}, {"id": "player", "_type": "Name"}], "func": {"attr": "choose_option", "_type": "Attribute", "value": {"attr": "agent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "chosen_card", "_type": "Name"}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "value": {"id": "player", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "chosen_card", "_type": "Name"}], "func": {"attr": "trigger", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Tracking(SpellCard):\n    def __init__(self):\n        super().__init__(\"Tracking\", 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        cards = []\n        for card_index in range(0, 3):\n            if player.can_draw():\n                cards.append(player.deck.draw(game))\n        if len(cards) > 0:\n            chosen_card = player.agent.choose_option(cards, player)\n            player.hand.append(chosen_card)\n            player.hand[-1].player = player\n            player.trigger(\"card_drawn\", chosen_card)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TruesilverChampion", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Truesilver Champion"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsHero", "_type": "Name"}}], "func": {"id": "CharacterAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TruesilverChampion(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Truesilver Champion\", 4, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(4, 2, effects=[Effect(CharacterAttack(IsHero()), ActionTag(Heal(2), HeroSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TundraRhino", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tundra Rhino"}, {"_type": "Num", "n": 5}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Charge", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TundraRhino(MinionCard):\n    def __init__(self):\n        super().__init__(\"Tundra Rhino\", 5, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 5, charge=True, auras=[Aura(Charge(), MinionSelector(IsType(MINION_TYPE.BEAST)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Vanish", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Vanish"}, {"_type": "Num", "n": 6}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"iter": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"id": "sorted", "_type": "Name"}, "keywords": [{"arg": "key", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "m"}]}, "body": {"attr": "born", "_type": "Attribute", "value": {"id": "m", "_type": "Name"}}}, "_type": "keyword"}]}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "bounce", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Vanish(SpellCard):\n    def __init__(self):\n        super().__init__(\"Vanish\", 6, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n\n        for minion in sorted(targets, key=lambda m: m.born):\n            minion.bounce()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Voidwalker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Voidwalker"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Voidwalker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Voidwalker\", 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WarsongCommander", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Warsong Commander"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "AttackLessThanOrEqualTo", "_type": "Name"}}], "func": {"id": "MinionPlaced", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Charge", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TargetSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class WarsongCommander(MinionCard):\n    def __init__(self):\n        super().__init__(\"Warsong Commander\", 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(MinionPlaced(AttackLessThanOrEqualTo(3)), ActionTag(Give(Charge()), TargetSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WaterElemental", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Water Elemental"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DidDamage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TargetSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class WaterElemental(MinionCard):\n    def __init__(self):\n        super().__init__(\"Water Elemental\", 4, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 6, effects=[Effect(DidDamage(), ActionTag(Give(Frozen()), TargetSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Whirlwind", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Whirlwind"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Whirlwind(SpellCard):\n    def __init__(self):\n        super().__init__(\"Whirlwind\", 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WickedKnife", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wicked Knife"}, {"_type": "Num", "n": 1}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class WickedKnife(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Wicked Knife\", 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE, False)\n\n    def create_weapon(self, player):\n        return Weapon(1, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WildGrowth", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wild Growth"}, {"_type": "Num", "n": 2}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"attr": "max_mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 10}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "ExcessMana", "_type": "Name"}}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "value": {"id": "player", "_type": "Name"}}], "body": [{"op": {"_type": "Add"}, "target": {"attr": "max_mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 1}}]}]}]}]}, "orig_code": "class WildGrowth(SpellCard):\n    def __init__(self):\n        super().__init__(\"Wild Growth\", 2, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.max_mana < 10:\n            player.max_mana += 1\n        else:\n            player.hand.append(ExcessMana())\n            player.hand[-1].player = player\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Windfury", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Windfury"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "_Windfury", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Windfury(SpellCard):\n    def __init__(self):\n        super().__init__(\"Windfury\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.add_buff(Buff(_Windfury()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Windspeaker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Windspeaker"}, {"_type": "Num", "n": 4}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Windfury", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Windspeaker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Windspeaker\", 4, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, battlecry=Battlecry(Give(Windfury()), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Wolfrider", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wolfrider"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Wolfrider(MinionCard):\n    def __init__(self):\n        super().__init__(\"Wolfrider\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 1, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AlexstraszasChampion", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Alexstrasza's Champion"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Charge", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "args": [{"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AlexstraszasChampion(MinionCard):\n    def __init__(self):\n        super().__init__(\"Alexstrasza's Champion\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE, battlecry=(Battlecry(Give([Buff(ChangeAttack(1)), Buff(Charge())]), SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0))))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncestralKnowledge", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancestral Knowledge"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 2}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "c", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class AncestralKnowledge(SpellCard):\n    def __init__(self):\n        super().__init__(\"Ancestral Knowledge\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Anubarak", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Anub'arak"}, {"_type": "Num", "n": 9}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Bounce", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Nerubian", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Anubarak(MinionCard):\n    def __init__(self):\n        super().__init__(\"Anub'arak\", 9, CHARACTER_CLASS.ROGUE, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(8, 4, deathrattle=[Deathrattle(Bounce(), SelfSelector()), Deathrattle(Summon(Nerubian()), PlayerSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArcaneBlast", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Arcane Blast"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "Add"}, "_type": "BinOp", "left": {"_type": "Num", "n": 2}, "right": {"attr": "spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class ArcaneBlast(SpellCard):\n    def __init__(self):\n        super().__init__(\"Arcane Blast\", 1, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2 + player.spell_damage), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArgentHorserider", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Argent Horserider"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ArgentHorserider(MinionCard):\n    def __init__(self):\n        super().__init__(\"Argent Horserider\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, divine_shield=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArgentLance", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Argent Lance"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IncreaseDurability", "_type": "Name"}}], "func": {"id": "Joust", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class ArgentLance(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Argent Lance\", 2, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE, battlecry=Battlecry(Joust(IncreaseDurability()), SelfSelector()))\n\n    def create_weapon(self, player):\n        return Weapon(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArgentWatchman", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Argent Watchman"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CantAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}, {"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "UsedPower", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CanAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ArgentWatchman(MinionCard):\n    def __init__(self):\n        super().__init__(\"Argent Watchman\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 4, buffs=[Buff(CantAttack())], effects=[Effect(UsedPower(), ActionTag(Give(BuffUntil(CanAttack(), TurnEnded())), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArmoredWarhorse", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Armored Warhorse"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Charge", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}], "func": {"id": "Joust", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ArmoredWarhorse(MinionCard):\n    def __init__(self):\n        super().__init__(\"Armored Warhorse\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST, battlecry=Battlecry(Joust(Give(Buff(Charge()))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HealingTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "NameConstant", "value": null}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class HealingTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Healing Totem\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1), MinionSelector(condition=None)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nerubian", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nerubian"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Nerubian(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nerubian\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, False)\n\n    def create_minion(self, p):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SearingTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Searing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SearingTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Searing Totem\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StoneclawTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stoneclaw Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class StoneclawTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stoneclaw Totem\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TournamentMedic", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tournament Medic"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "UsedPower", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TournamentMedic(MinionCard):\n    def __init__(self):\n        super().__init__(\"Tournament Medic\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 8, effects=[Effect(UsedPower(), ActionTag(Heal(2), HeroSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WrathOfAirTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wrath of Air Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_damage", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class WrathOfAirTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Wrath of Air Totem\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, spell_damage=1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncestorsCall", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancestor's Call"}, {"_type": "Num", "n": 4}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"op": {"_type": "Or"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"attr": "players", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "target": {"id": "player", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "ListComp", "elt": {"id": "card", "_type": "Name"}, "generators": [{"iter": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "target": {"id": "card", "_type": "Name"}, "_type": "comprehension", "ifs": [{"_type": "Call", "func": {"attr": "is_minion", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}]}]}}, {"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"id": "len", "_type": "Name"}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "unattach", "_type": "Attribute", "value": {"id": "minion_card", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "minion_card", "_type": "Name"}], "func": {"attr": "remove", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "minion_card", "_type": "Name"}}}}]}]}]}]}]}, "orig_code": "class AncestorsCall(SpellCard):\n    def __init__(self):\n        super().__init__(\"Ancestor's Call\", 4, CHARACTER_CLASS.SHAMAN, CARD_RARITY.EPIC)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or len(player.opponent.minions) < 7)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for player in game.players:\n            minions = [card for card in player.hand if card.is_minion()]\n            if len(minions) and len(player.minions) < 7:\n                minion_card = game.random_choice(minions)\n                minion_card.unattach()\n                player.hand.remove(minion_card)\n                minion_card.summon(player, game, len(player.minions))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AnimaGolem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Anima Golem"}, {"_type": "Num", "n": 6}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 9}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "MinionCountIs", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AnimaGolem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Anima Golem\", 6, CHARACTER_CLASS.WARLOCK, CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 9, effects=[Effect(TurnEnded(MinionCountIs(1), BothPlayer()), ActionTag(Kill(), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AntiqueHealbot", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Antique Healbot"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 8}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AntiqueHealbot(MinionCard):\n    def __init__(self):\n        super().__init__(\"Antique Healbot\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Heal(8), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArcaneNullifierX21", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Arcane Nullifier X-21"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "spell_targetable", "value": {"_type": "NameConstant", "value": false}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ArcaneNullifierX21(MinionCard):\n    def __init__(self):\n        super().__init__(\"Arcane Nullifier X-21\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 5, taunt=True, spell_targetable=False)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArmorPlating", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Armor Plating"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class ArmorPlating(SpellCard):\n    def __init__(self):\n        super().__init__(\"Armor Plating\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Blingtron3000", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blingtron 3000"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "IsWeapon", "_type": "Name"}}]}, "_type": "keyword"}]}], "func": {"id": "Equip", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Blingtron3000(MinionCard):\n    def __init__(self):\n        super().__init__(\"Blingtron 3000\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Equip(CardQuery(conditions=[IsWeapon()])), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BolvarFordragon", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bolvar Fordragon"}, {"_type": "Num", "n": 5}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BolvarFordragon(MinionCard):\n    def __init__(self):\n        super().__init__(\"Bolvar Fordragon\", 5, CHARACTER_CLASS.PALADIN, CARD_RARITY.LEGENDARY, effects=[Effect(MinionDied(), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n    def create_minion(self, player):\n        return Minion(1, 7)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BombLobber", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bomb Lobber"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BombLobber(MinionCard):\n    def __init__(self):\n        super().__init__(\"Bomb Lobber\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector(None, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BoomBot", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Boom Bot"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "RandomAmount", "_type": "Name"}}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class BoomBot(MinionCard):\n    def __init__(self):\n        super().__init__(\"Boom Bot\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 1, deathrattle=Deathrattle(Damage(RandomAmount(1, 4)), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BouncingBlade", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bouncing Blade"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"op": {"_type": "Add"}, "_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "right": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}}, "comparators": [{"_type": "Num", "n": 1}]}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"op": {"_type": "Add"}, "_type": "BinOp", "left": {"slice": {"_type": "Slice"}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "right": {"slice": {"_type": "Slice"}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}, {"test": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"id": "len", "_type": "Name"}}, "_type": "If", "body": [{"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 80}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "bounces", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"test": {"attr": "dead", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "If", "body": [{"_type": "Break"}]}]}]}]}]}]}, "orig_code": "class BouncingBlade(SpellCard):\n    def __init__(self):\n        super().__init__(\"Bouncing Blade\", 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.EPIC)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) + len(player.opponent.minions) >= 1\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = player.minions[:] + player.opponent.minions[:]\n        if len(targets):\n            for bounces in range(80):\n                target = game.random_choice(targets)\n                target.damage(player.effective_spell_damage(1), self)\n                if target.dead:\n                    break\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CallPet", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Call Pet"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"name": "reduce_cost", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "card"}]}, "body": [{"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "func": {"attr": "is_minion", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}, {"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 4}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}}]}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "reduce_cost", "_type": "Name"}], "func": {"attr": "bind_once", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class CallPet(SpellCard):\n    def __init__(self):\n        super().__init__(\"Call Pet\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        def reduce_cost(card):\n            if card.is_minion() and card.minion_type == MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-4)))\n\n        super().use(player, game)\n        player.bind_once(\"card_drawn\", reduce_cost)\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Chicken", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Chicken"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Chicken(MinionCard):\n    def __init__(self):\n        super().__init__(\"Chicken\", 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ClockworkGiant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Clockwork Giant"}, {"_type": "Num", "n": 12}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "CardSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ClockworkGiant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Clockwork Giant\", 12, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH, buffs=[Buff(ManaChange(Count(CardSelector(EnemyPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ClockworkGnome", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Clockwork Gnome"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"module": "hearthbreaker.cards.spells.neutral", "_type": "ImportFrom", "level": 0, "names": [{"name": "spare_part_list", "_type": "alias"}]}, {"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LIST", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "source_list", "value": {"id": "spare_part_list", "_type": "Name"}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ClockworkGnome(MinionCard):\n    def __init__(self):\n        super().__init__(\"Clockwork Gnome\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(2, 1, deathrattle=Deathrattle(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CobaltGuardian", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cobalt Guardian"}, {"_type": "Num", "n": 5}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSummoned", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DivineShield", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class CobaltGuardian(MinionCard):\n    def __init__(self):\n        super().__init__(\"Cobalt Guardian\", 5, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(6, 3, effects=[Effect(MinionSummoned(IsType(MINION_TYPE.MECH)), ActionTag(Give(DivineShield()), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CobraShot", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cobra Shot"}, {"_type": "Num", "n": 5}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class CobraShot(SpellCard):\n    def __init__(self):\n        super().__init__(\"Cobra Shot\", 5, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Coghammer", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Coghammer"}, {"_type": "Num", "n": 3}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DivineShield", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Taunt", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class Coghammer(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Coghammer\", 3, CHARACTER_CLASS.PALADIN, CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(DivineShield()), Buff(Taunt())]), MinionSelector(picker=RandomPicker())))\n\n    def create_weapon(self, player):\n        return Weapon(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Cogmaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cogmaster"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Cogmaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Cogmaster\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, auras=[Aura(ChangeAttack(2), SelfSelector(), GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.MECH))), value=0))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Crush", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Crush"}, {"_type": "Num", "n": 7}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 4}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsDamaged", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Crush(SpellCard):\n    def __init__(self):\n        super().__init__(\"Crush\", 7, CHARACTER_CLASS.WARRIOR, CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.find_minion_spell_target, buffs=[Buff(ManaChange(-4), GreaterThan(Count(MinionSelector(IsDamaged())), value=0))])\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.die(self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DarkWispers", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dark Wispers"}, {"_type": "Num", "n": 6}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"op": {"_type": "Or"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}, {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"_type": "Call", "args": [{"id": "game", "_type": "Name"}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "t"}]}, "body": {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "t", "_type": "Name"}}}}], "func": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "comparators": [{"_type": "NameConstant", "value": null}]}]}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"name": "Buff5", "_type": "ClassDef", "bases": [{"id": "ChoiceCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Give a minion +5/+5 and Taunt"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"_type": "Call", "args": [{"id": "game", "_type": "Name"}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "t"}]}, "body": {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "t", "_type": "Name"}}}}], "func": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "comparators": [{"_type": "NameConstant", "value": null}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "game", "_type": "Name"}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "t"}]}, "body": {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "t", "_type": "Name"}}}}], "func": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "choose_target", "_type": "Attribute", "value": {"attr": "agent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": true}}]}]}, {"name": "Wisps5", "_type": "ClassDef", "bases": [{"id": "ChoiceCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Summon 5 Wisps"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"module": "hearthbreaker.cards.minions.neutral", "_type": "ImportFrom", "level": 0, "names": [{"name": "Wisp", "_type": "alias"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 5}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "wisp", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "Wisp", "_type": "Name"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "wisp", "_type": "Name"}}}}]}]}]}, {"test": {"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Call", "args": [{"_type": "Call", "args": [{"id": "game", "_type": "Name"}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "t"}]}, "body": {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "t", "_type": "Name"}}}}], "func": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "orelse": [{"_type": "Assign", "targets": [{"id": "option", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Wisps5", "_type": "Name"}}, {"_type": "Call", "func": {"id": "Buff5", "_type": "Name"}}]}, {"id": "player", "_type": "Name"}], "func": {"attr": "choose_option", "_type": "Attribute", "value": {"attr": "agent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}], "body": [{"_type": "Assign", "targets": [{"id": "option", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "Wisps5", "_type": "Name"}}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"id": "option", "_type": "Name"}}}}]}]}]}, "orig_code": "class DarkWispers(SpellCard):\n    def __init__(self):\n        super().__init__(\"Dark Wispers\", 6, CHARACTER_CLASS.DRUID, CARD_RARITY.EPIC)\n\n    def can_use(self, player, game):\n        return (super().can_use(player, game) and (len(player.minions) < 7 or hearthbreaker.targeting.find_minion_spell_target(game, lambda t: t.spell_targetable()) is not None))\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        class Buff5(ChoiceCard):\n            def __init__(self):\n                super().__init__(\"Give a minion +5/+5 and Taunt\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False)\n\n            def can_use(self, player, game):\n                return hearthbreaker.targeting.find_minion_spell_target(game, lambda t: t.spell_targetable()) is not None\n\n            def use(self, player, game):\n                targets = hearthbreaker.targeting.find_minion_spell_target(game, lambda t: t.spell_targetable())\n                target = player.agent.choose_target(targets)\n                target.change_attack(5)\n                target.increase_health(5)\n                target.taunt = True\n\n        class Wisps5(ChoiceCard):\n            def __init__(self):\n                super().__init__(\"Summon 5 Wisps\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False)\n\n            def can_use(self, player, game):\n                return len(player.minions) < 7\n\n            def use(self, player, game):\n                from hearthbreaker.cards.minions.neutral import Wisp\n                for i in range(0, 5):\n                    wisp = Wisp()\n                    wisp.summon(player, game, len(player.minions))\n\n        if len(hearthbreaker.targeting.find_minion_spell_target(game, lambda t: t.spell_targetable())) == 0:\n            option = Wisps5()\n        else:\n            option = player.agent.choose_option([Wisps5(), Buff5()], player)\n        option.use(player, game)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Darkbomb", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Darkbomb"}, {"_type": "Num", "n": 2}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Darkbomb(SpellCard):\n    def __init__(self):\n        super().__init__(\"Darkbomb\", 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Demonheart", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Demonheart"}, {"_type": "Num", "n": 5}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Compare", "ops": [{"_type": "In"}], "left": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "comparators": [{"id": "targets", "_type": "Name"}]}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class Demonheart(SpellCard):\n    def __init__(self):\n        super().__init__(\"Demonheart\", 5, CHARACTER_CLASS.WARLOCK, CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if self.target.card.minion_type is MINION_TYPE.DEMON and self.target in targets:\n            self.target.change_attack(5)\n            self.target.increase_health(5)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DoctorBoom", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dr. Boom"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BoomBot", "_type": "Name"}}, {"_type": "Num", "n": 2}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DoctorBoom(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dr. Boom\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(BoomBot(), 2), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DruidOfTheFang", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Druid of the Fang"}, {"_type": "Num", "n": 5}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CobraForm", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DruidOfTheFang(MinionCard):\n    def __init__(self):\n        super().__init__(\"Druid of the Fang\", 5, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, battlecry=Battlecry(Transform(CobraForm()), SelfSelector(), GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.BEAST))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DruidOfTheFang", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Druid of the Fang"}, {"_type": "Num", "n": 5}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CobraForm", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DruidOfTheFang(MinionCard):\n    def __init__(self):\n        super().__init__(\"Druid of the Fang\", 5, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, battlecry=Battlecry(Transform(CobraForm()), SelfSelector(), GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.BEAST))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DunemaulShaman", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dunemaul Shaman"}, {"_type": "Num", "n": 4}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "windfury", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Attack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "NotCurrentTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}], "func": {"id": "ChangeTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "OneIn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"id": "OpponentMinionCountIsGreaterThan", "_type": "Name"}}], "func": {"id": "And", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class DunemaulShaman(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dunemaul Shaman\", 4, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, overload=1)\n\n    def create_minion(self, player):\n        return Minion(5, 4, windfury=True, effects=[Effect(Attack(), ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(), EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2), OpponentMinionCountIsGreaterThan(0))))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EnhanceoMechano", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Enhance-o Mechano"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Windfury", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Taunt", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DivineShield", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class EnhanceoMechano(MinionCard):\n    def __init__(self):\n        super().__init__(\"Enhance-o Mechano\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Give([ Buff(Windfury()), Buff(Taunt()), Buff(DivineShield())], RandomPicker()), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ExplosiveSheep", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Explosive Sheep"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}, {"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ExplosiveSheep(MinionCard):\n    def __init__(self):\n        super().__init__(\"Explosive Sheep\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 1, deathrattle=Deathrattle(Damage(2), CharacterSelector(players=BothPlayer())), taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FeignDeath", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Feign Death"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "sorted", "_type": "Name"}, "keywords": [{"arg": "key", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "m"}]}, "body": {"attr": "born", "_type": "Attribute", "value": {"id": "m", "_type": "Name"}}}, "_type": "keyword"}]}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"iter": {"attr": "deathrattle", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}, "target": {"id": "deathrattle", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "do", "_type": "Attribute", "value": {"id": "deathrattle", "_type": "Name"}}}}]}, {"test": {"attr": "double_deathrattle", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "If", "body": [{"iter": {"attr": "deathrattle", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}, "target": {"id": "deathrattle", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "do", "_type": "Attribute", "value": {"id": "deathrattle", "_type": "Name"}}}}]}]}]}]}]}]}, "orig_code": "class FeignDeath(SpellCard):\n    def __init__(self):\n        super().__init__(\"Feign Death\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for minion in sorted(player.minions, key=lambda m: m.born):\n            for deathrattle in minion.deathrattle:\n                deathrattle.do(minion)\n            if player.double_deathrattle:\n                for deathrattle in minion.deathrattle:\n                    deathrattle.do(minion)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FelCannon", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Fel Cannon"}, {"_type": "Num", "n": 4}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "Not", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FelCannon(MinionCard):\n    def __init__(self):\n        super().__init__(\"Fel Cannon\", 4, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 5, effects=[Effect(TurnEnded(), ActionTag(Damage(2), MinionSelector(Not(IsType(MINION_TYPE.MECH, True)), BothPlayer(), RandomPicker())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FelReaver", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Fel Reaver"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardPlayed", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Discard", "_type": "Name"}, "keywords": [{"arg": "query", "value": {"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "MY_DECK", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}]}, "_type": "keyword"}]}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FelReaver(MinionCard):\n    def __init__(self):\n        super().__init__(\"Fel Reaver\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(8, 8, effects=[Effect(CardPlayed(player=EnemyPlayer()), ActionTag(Discard(3, query=CardQuery(source=CARD_SOURCE.MY_DECK)), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FinickyCloakfield", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Finicky Cloakfield"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Stealth", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class FinickyCloakfield(SpellCard):\n    def __init__(self):\n        super().__init__(\"Finicky Cloakfield\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(Stealth(), TurnStarted()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FlameLeviathan", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flame Leviathan"}, {"_type": "Num", "n": 7}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Drawn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class FlameLeviathan(MinionCard):\n    def __init__(self):\n        super().__init__(\"Flame Leviathan\", 7, CHARACTER_CLASS.MAGE, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH, effects=[Effect(Drawn(), ActionTag(Damage(2), CharacterSelector(None, BothPlayer())))])\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Flamecannon", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flamecannon"}, {"_type": "Num", "n": 2}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}, "body": {"_type": "NameConstant", "value": true}}], "func": {"attr": "find_enemy_minion_battlecry_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 1}]}]}}]}]}]}, "orig_code": "class Flamecannon(SpellCard):\n    def __init__(self):\n        super().__init__(\"Flamecannon\", 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(player.game, lambda x: True)\n        target = game.random_choice(targets)\n        target.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) >= 1\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FoeReaper4000", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Foe Reaper 4000"}, {"_type": "Num", "n": 8}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 9}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}], "func": {"id": "Attack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "attack"}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TargetAdjacent", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FoeReaper4000(MinionCard):\n    def __init__(self):\n        super().__init__(\"Foe Reaper 4000\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(6, 9, effects=[Effect(Attack(IsMinion()), ActionTag(Damage(Attribute(\"attack\", SelfSelector())), MinionSelector(TargetAdjacent(), EnemyPlayer())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ForceTankMAX", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Force-Tank MAX"}, {"_type": "Num", "n": 8}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ForceTankMAX(MinionCard):\n    def __init__(self):\n        super().__init__(\"Force-Tank MAX\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(7, 7, divine_shield=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Gahzrilla", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gahz'rilla"}, {"_type": "Num", "n": 7}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 9}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Damaged", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DoubleAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Gahzrilla(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gahz'rilla\", 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(6, 9, effects=[Effect(Damaged(), ActionTag(Give(Buff(DoubleAttack())), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GallywixsCoin", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gallywix's Coin"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"attr": "mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 10}]}, "_type": "If", "body": [{"op": {"_type": "Add"}, "target": {"attr": "mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 1}}]}]}]}]}, "orig_code": "class GallywixsCoin(SpellCard):\n    def __init__(self):\n        super().__init__(\"Gallywix's Coin\", 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.mana < 10:\n            player.mana += 1\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Gazlowe", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gazlowe"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ManaCost", "_type": "Name"}}], "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Gazlowe(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gazlowe\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(3, 6, effects=[Effect(SpellCast(ManaCost(1)), ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH)])), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GilblinStalker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gilblin Stalker"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GilblinStalker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gilblin Stalker\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, stealth=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Glaivezooka", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Glaivezooka"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class Glaivezooka(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Glaivezooka\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeAttack(1)), MinionSelector(None, picker=RandomPicker())))\n\n    def create_weapon(self, player):\n        return Weapon(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GnomereganInfantry", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gnomeregan Infantry"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GnomereganInfantry(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gnomeregan Infantry\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GoblinBlastmage", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Goblin Blastmage"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class GoblinBlastmage(MinionCard):\n    def __init__(self):\n        super().__init__(\"Goblin Blastmage\", 4, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE, battlecry=Battlecry(Damage(1), CharacterSelector(None, EnemyPlayer(), RandomPicker(4)), GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.MECH))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GoblinSapper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Goblin Sapper"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "CardSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 5}, "_type": "keyword"}]}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GoblinSapper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Goblin Sapper\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 4, buffs=[Buff(ChangeAttack(4), GreaterThan(Count(CardSelector(EnemyPlayer())), value=5))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GroveTender", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Grove Tender"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "GiftOfMana", "_type": "Name"}}, {"_type": "Call", "func": {"id": "GiveManaCrystal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "GiftOfCards", "_type": "Name"}}, {"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class GroveTender(MinionCard):\n    def __init__(self):\n        super().__init__(\"Grove Tender\", 3, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE, choices=[\n            Choice(GiftOfMana(), GiveManaCrystal(), PlayerSelector(players=BothPlayer())),\n            Choice(GiftOfCards(), Draw(), PlayerSelector(players=BothPlayer()))\n        ])\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HemetNesingwary", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hemet Nesingwary"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class HemetNesingwary(MinionCard):\n    def __init__(self):\n        super().__init__(\"Hemet Nesingwary\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.BEAST), players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Hobgoblin", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hobgoblin"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "BaseAttackEqualTo", "_type": "Name"}}], "func": {"id": "MinionPlaced", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TargetSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Hobgoblin(MinionCard):\n    def __init__(self):\n        super().__init__(\"Hobgoblin\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(MinionPlaced(BaseAttackEqualTo(1)), ActionTag(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]), TargetSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Illuminator", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Illuminator"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HasSecret", "_type": "Name"}}], "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Illuminator(MinionCard):\n    def __init__(self):\n        super().__init__(\"Illuminator\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 4, effects=[Effect(TurnEnded(HasSecret()), ActionTag(Heal(4), HeroSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Imp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Imp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Implosion", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Imp-losion"}, {"_type": "Num", "n": 4}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "amount", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"attr": "random_amount", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"id": "had_shield", "_type": "Name"}], "value": {"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "amount", "_type": "Name"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"test": {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"id": "had_shield", "_type": "Name"}}, "_type": "If", "body": [{"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"id": "amount", "_type": "Name"}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "imp", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "Imp", "_type": "Name"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "imp", "_type": "Name"}}}}]}]}]}]}]}, "orig_code": "class Implosion(SpellCard):\n    def __init__(self):\n        super().__init__(\"Imp-losion\", 4, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        amount = player.effective_spell_damage(game.random_amount(2, 4))\n        had_shield = self.target.divine_shield\n\n        self.target.damage(amount, self)\n\n        if not had_shield:\n            for i in range(0, amount):\n                imp = Imp()\n                imp.summon(player, game, len(player.minions))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Jeeves", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Jeeves"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "CurrentPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "Difference", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 3}, "_type": "keyword"}]}], "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CurrentPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Jeeves(MinionCard):\n    def __init__(self):\n        super().__init__(\"Jeeves\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(player=BothPlayer()), ActionTag(Draw(Difference(Count(CardSelector(players=CurrentPlayer())), value=3)), PlayerSelector(CurrentPlayer())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Junkbot", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Junkbot"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionDied", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Junkbot(MinionCard):\n    def __init__(self):\n        super().__init__(\"Junkbot\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 5, effects=[Effect(MinionDied(IsType(MINION_TYPE.MECH)), ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KezanMystic", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Kezan Mystic"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "ENEMY_SECRETS", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}], "func": {"id": "ApplySecret", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class KezanMystic(MinionCard):\n    def __init__(self):\n        super().__init__(\"Kezan Mystic\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(ApplySecret(CARD_SOURCE.ENEMY_SECRETS), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KingOfBeasts", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "King of Beasts"}, {"_type": "Num", "n": 5}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class KingOfBeasts(MinionCard):\n    def __init__(self):\n        super().__init__(\"King of Beasts\", 5, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST, battlecry=Battlecry(Give(Buff(ChangeAttack(Count(MinionSelector(IsType( MINION_TYPE.BEAST)))))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 6, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LightOfTheNaaru", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Light of the Naaru"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "lightwarden", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "Lightwarden", "_type": "Name"}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "comparators": [{"_type": "NameConstant", "value": null}]}, "_type": "If", "orelse": [{"test": {"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "comparators": [{"_type": "Call", "func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "lightwarden", "_type": "Name"}}}}]}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "lightwarden", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class LightOfTheNaaru(SpellCard):\n    def __init__(self):\n        super().__init__(\"Light of the Naaru\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.heal(player.effective_heal_power(3), self)\n\n        lightwarden = Lightwarden()\n        if self.target is None:\n            lightwarden.summon(player, game, len(player.minions))\n        elif self.target.health != self.target.calculate_max_health():\n            lightwarden.summon(player, game, len(player.minions))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Lightbomb", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lightbomb"}, {"_type": "Num", "n": 6}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Lightbomb(SpellCard):\n    def __init__(self):\n        super().__init__(\"Lightbomb\", 6, CHARACTER_CLASS.PRIEST, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(minion.calculate_attack()), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LilExorcist", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lil' Exorcist"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionHasDeathrattle", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionHasDeathrattle", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class LilExorcist(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lil' Exorcist\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(Count(MinionSelector(MinionHasDeathrattle(), EnemyPlayer())))), Buff(ChangeHealth(Count(MinionSelector(MinionHasDeathrattle(), EnemyPlayer()))))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LostTallstrider", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lost Tallstrider"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class LostTallstrider(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lost Tallstrider\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Malorne", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Malorne"}, {"_type": "Num", "n": 7}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "MINION", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "minion", "value": {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}, "keywords": [{"arg": "add_to_deck", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Remove", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Malorne(MinionCard):\n    def __init__(self):\n        super().__init__(\"Malorne\", 7, CHARACTER_CLASS.DRUID, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 7, deathrattle=[Deathrattle(AddCard(CardQuery(source=CARD_SOURCE.MINION, minion=SelfSelector()), add_to_deck=True), PlayerSelector()), Deathrattle(Remove(), SelfSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MechBearCat", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mech-Bear-Cat"}, {"_type": "Num", "n": 6}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Damaged", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LIST", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "source_list", "value": {"id": "spare_part_list", "_type": "Name"}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MechBearCat(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mech-Bear-Cat\", 6, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(7, 6, effects=[Effect(Damaged(), ActionTag(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MechanicalYeti", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mechanical Yeti"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"module": "hearthbreaker.cards.spells.neutral", "_type": "ImportFrom", "level": 0, "names": [{"name": "spare_part_list", "_type": "alias"}]}, {"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LIST", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "source_list", "value": {"id": "spare_part_list", "_type": "Name"}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MechanicalYeti(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mechanical Yeti\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(4, 5, deathrattle=Deathrattle(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector(BothPlayer())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Mechwarper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mechwarper"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Mechwarper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mechwarper\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 3, auras=[Aura(ManaChange(-1), CardSelector(condition=IsType(MINION_TYPE.MECH)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MekgineerThermaplugg", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mekgineer Thermaplugg"}, {"_type": "Num", "n": 9}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "LeperGnome", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MekgineerThermaplugg(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mekgineer Thermaplugg\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(MinionDied(player=EnemyPlayer()), ActionTag(Summon(LeperGnome()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MetaltoothLeaper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Metaltooth Leaper"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MetaltoothLeaper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Metaltooth Leaper\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Give(Buff(ChangeAttack(2))), MinionSelector(IsType(MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MicroMachine", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Micro Machine"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MicroMachine(MinionCard):\n    def __init__(self):\n        super().__init__(\"Micro Machine\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 2, effects=[Effect(TurnStarted(player=BothPlayer()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MimironsHead", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mimiron's Head"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 2}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "V07TR0N", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}]}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MimironsHead(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mimiron's Head\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 5, effects=[Effect(TurnStarted(), [ActionTag(Kill(), MinionSelector(IsType(MINION_TYPE.MECH, True)), GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.MECH, True))), value=2)), ActionTag(Summon(V07TR0N()), PlayerSelector())])])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MogorTheOgre", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mogor the Ogre"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "NameConstant", "value": null}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "CharacterAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "NotCurrentTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}], "func": {"id": "ChangeTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TargetSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "OneIn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"id": "OpponentMinionCountIsGreaterThan", "_type": "Name"}}], "func": {"id": "And", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MogorTheOgre(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mogor the Ogre\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(7, 6, effects=[Effect(CharacterAttack(None, BothPlayer()), ActionTag(ChangeTarget(\n            CharacterSelector(NotCurrentTarget(), EnemyPlayer(), RandomPicker())), TargetSelector(),\n            And(OneIn(2), OpponentMinionCountIsGreaterThan(0))))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MusterForBattle", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Muster for Battle"}, {"_type": "Num", "n": 3}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "dude", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "SilverHandRecruit", "_type": "Name"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "dude", "_type": "Name"}}}}]}, {"_type": "Assign", "targets": [{"id": "justice", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "LightsJustice", "_type": "Name"}}}, {"_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}], "func": {"attr": "create_weapon", "_type": "Attribute", "value": {"id": "justice", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "hammer", "_type": "Name"}}], "value": {"id": "justice", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}], "func": {"attr": "equip", "_type": "Attribute", "value": {"id": "hammer", "_type": "Name"}}}}]}]}]}, "orig_code": "class MusterForBattle(SpellCard):\n    def __init__(self):\n        super().__init__(\"Muster for Battle\", 3, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for i in range(0, 3):\n            dude = SilverHandRecruit()\n            dude.summon(player, player.game, len(player.minions))\n        justice = LightsJustice()\n        hammer = justice.create_weapon(player)\n        hammer.card = justice\n        hammer.equip(player)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Neptulon", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"module": "hearthbreaker.cards.minions.neutral", "_type": "ImportFrom", "level": 0, "names": [{"name": "BluegillWarrior", "_type": "alias"}, {"name": "ColdlightOracle", "_type": "alias"}, {"name": "ColdlightSeer", "_type": "alias"}, {"name": "GrimscaleOracle", "_type": "alias"}, {"name": "MurlocRaider", "_type": "alias"}, {"name": "MurlocTidecaller", "_type": "alias"}, {"name": "MurlocTidehunter", "_type": "alias"}, {"name": "MurlocWarleader", "_type": "alias"}, {"name": "OldMurkEye", "_type": "alias"}, {"name": "Puddlestomper", "_type": "alias"}]}, {"_type": "Assign", "targets": [{"id": "murloc_list", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "BluegillWarrior", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ColdlightOracle", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ColdlightSeer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "GrimscaleOracle", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MurlocRaider", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MurlocTidecaller", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MurlocTidehunter", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MurlocWarleader", "_type": "Name"}}, {"_type": "Call", "func": {"id": "OldMurkEye", "_type": "Name"}}, {"_type": "Call", "func": {"id": "Puddlestomper", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SiltfinSpiritwalker", "_type": "Name"}}]}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Neptulon"}, {"_type": "Num", "n": 7}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 3}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LIST", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "source_list", "value": {"id": "murloc_list", "_type": "Name"}, "_type": "keyword"}]}, {"_type": "Num", "n": 4}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Neptulon(MinionCard):\n    def __init__(self):\n        from hearthbreaker.cards.minions.neutral import BluegillWarrior, ColdlightOracle, ColdlightSeer, \\\n            GrimscaleOracle, MurlocRaider, MurlocTidecaller, MurlocTidehunter, MurlocWarleader, OldMurkEye, \\\n            Puddlestomper\n        murloc_list = [BluegillWarrior(), ColdlightOracle(), ColdlightSeer(), GrimscaleOracle(), MurlocRaider(), MurlocTidecaller(), MurlocTidehunter(), MurlocWarleader(), OldMurkEye(), Puddlestomper(), SiltfinSpiritwalker()]\n        super().__init__(\"Neptulon\", 7, CHARACTER_CLASS.SHAMAN, CARD_RARITY.LEGENDARY, overload=3, battlecry=Battlecry(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=murloc_list), 4), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "OgreBrute", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ogre Brute"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Attack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "NotCurrentTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}], "func": {"id": "ChangeTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "OneIn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"id": "OpponentMinionCountIsGreaterThan", "_type": "Name"}}], "func": {"id": "And", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class OgreBrute(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ogre Brute\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4, effects=[Effect(Attack(), ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(), EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2), OpponentMinionCountIsGreaterThan(0))))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "OgreNinja", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ogre Ninja"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Attack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "NotCurrentTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}], "func": {"id": "ChangeTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "OneIn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"id": "OpponentMinionCountIsGreaterThan", "_type": "Name"}}], "func": {"id": "And", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class OgreNinja(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ogre Ninja\", 5, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(6, 6, stealth=True, effects=[Effect(Attack(), ActionTag(ChangeTarget( CharacterSelector(NotCurrentTarget(), EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2), OpponentMinionCountIsGreaterThan(0))))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "OgreWarmaul", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ogre Warmaul"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsHero", "_type": "Name"}}], "func": {"id": "CharacterAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "NotCurrentTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}], "func": {"id": "ChangeTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "OneIn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 0}], "func": {"id": "OpponentMinionCountIsGreaterThan", "_type": "Name"}}], "func": {"id": "And", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class OgreWarmaul(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Ogre Warmaul\", 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(4, 2, effects=[Effect(CharacterAttack(IsHero()), ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(), EnemyPlayer(), RandomPicker())), HeroSelector(), And(OneIn(2), OpponentMinionCountIsGreaterThan(0))))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "OneeyedCheat", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "One-eyed Cheat"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSummoned", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Stealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class OneeyedCheat(MinionCard):\n    def __init__(self):\n        super().__init__(\"One-eyed Cheat\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 1, effects=[Effect(MinionSummoned(IsType(MINION_TYPE.PIRATE)), ActionTag(Give(Stealth()), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PilotedShredder", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Piloted Shredder"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ManaCost", "_type": "Name"}}, {"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}]}, "_type": "keyword"}]}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class PilotedShredder(MinionCard):\n    def __init__(self):\n        super().__init__(\"Piloted Shredder\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Summon(CardQuery(conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Puddlestomper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Puddlestomper"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Puddlestomper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Puddlestomper\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Quartermaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Quartermaster"}, {"_type": "Num", "n": 5}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "Silver Hand Recruit"}], "func": {"id": "HasCardName", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Quartermaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Quartermaster\", 5, CHARACTER_CLASS.PALADIN, CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(HasCardName(\"Silver Hand Recruit\"))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Recombobulator", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Recombobulator"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "mana"}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "ManaCost", "_type": "Name"}}, {"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}]}, "_type": "keyword"}]}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Recombobulator(MinionCard):\n    def __init__(self):\n        super().__init__(\"Recombobulator\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, battlecry=Battlecry(Transform(CardQuery(conditions=[ ManaCost(Attribute(\"mana\", SelfSelector())), IsMinion()])), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Recycle", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Recycle"}, {"_type": "Num", "n": 6}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "put_back", "_type": "Attribute", "value": {"attr": "deck", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "remove_from_board", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Recycle(SpellCard):\n    def __init__(self):\n        super().__init__(\"Recycle\", 6, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.opponent.deck.put_back(self.target)\n        self.target.remove_from_board()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ReversingSwitch", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Reversing Switch"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "temp_attack", "_type": "Name"}], "value": {"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "temp_health", "_type": "Name"}], "value": {"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"id": "temp_attack", "_type": "Name"}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "temp_health", "_type": "Name"}], "func": {"attr": "set_attack_to", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "temp_attack", "_type": "Name"}], "func": {"attr": "set_health_to", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class ReversingSwitch(SpellCard):\n    def __init__(self):\n        super().__init__(\"Reversing Switch\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        temp_health = self.target.health\n        if temp_attack == 0:\n            self.target.die(None)\n        else:\n            self.target.set_attack_to(temp_health)\n            self.target.set_health_to(temp_attack)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RustyHorn", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Rusty Horn"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Taunt", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class RustyHorn(SpellCard):\n    def __init__(self):\n        super().__init__(\"Rusty Horn\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Taunt()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Sabotage", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sabotage"}, {"_type": "Num", "n": 4}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}, "body": {"_type": "NameConstant", "value": true}}], "func": {"attr": "find_enemy_minion_battlecry_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}], "func": {"attr": "die", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"attr": "cards_played", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"attr": "weapon", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "comparators": [{"_type": "NameConstant", "value": null}]}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "destroy", "_type": "Attribute", "value": {"attr": "weapon", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 1}]}]}}]}]}]}, "orig_code": "class Sabotage(SpellCard):\n    def __init__(self):\n        super().__init__(\"Sabotage\", 4, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(player.game, lambda x: True)\n        target = game.random_choice(targets)\n        target.die(None)\n        game.check_delayed()\n        if player.cards_played > 0 and game.other_player.weapon is not None:\n            game.other_player.weapon.destroy()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) >= 1\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SaltyDog", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Salty Dog"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SaltyDog(MinionCard):\n    def __init__(self):\n        super().__init__(\"Salty Dog\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(7, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SealOfLight", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Seal of Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class SealOfLight(SpellCard):\n    def __init__(self):\n        super().__init__(\"Seal of Light\", 2, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(4), self)\n        player.hero.change_temp_attack(2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shadowbomber", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadowbomber"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Shadowbomber(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shadowbomber\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.EPIC, battlecry=Battlecry(Damage(3), HeroSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shadowboxer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadowboxer"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CharacterHealed", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}, {"arg": "condition", "value": {"_type": "NameConstant", "value": null}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Shadowboxer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shadowboxer\", 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(CharacterHealed(player=BothPlayer()), ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker(), condition=None)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShieldedMinibot", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shielded Minibot"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ShieldedMinibot(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shielded Minibot\", 2, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shieldmaiden", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shieldmaiden"}, {"_type": "Num", "n": 6}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "IncreaseArmor", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Shieldmaiden(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shieldmaiden\", 6, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE, battlecry=Battlecry(IncreaseArmor(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShipsCannon", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ship's Cannon"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSummoned", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ShipsCannon(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ship's Cannon\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(MinionSummoned(IsType(MINION_TYPE.PIRATE)), ActionTag(Damage(2), CharacterSelector(None, EnemyPlayer(), RandomPicker())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shrinkmeister", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shrinkmeister"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 2}}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "CurrentPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Shrinkmeister(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shrinkmeister\", 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, battlecry=Battlecry(Give(BuffUntil(ChangeAttack(-2), TurnEnded(player=CurrentPlayer()))), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SiegeEngine", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Siege Engine"}, {"_type": "Num", "n": 5}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "ArmorIncreased", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SiegeEngine(MinionCard):\n    def __init__(self):\n        super().__init__(\"Siege Engine\", 5, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(ArmorIncreased(), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Snowchugger", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Snowchugger"}, {"_type": "Num", "n": 2}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DidDamage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TargetSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Snowchugger(MinionCard):\n    def __init__(self):\n        super().__init__(\"Snowchugger\", 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(DidDamage(), ActionTag(Give(Frozen()), TargetSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SootSpewer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Soot Spewer"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_damage", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SootSpewer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Soot Spewer\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 3, spell_damage=1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SpiderTank", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spider Tank"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SpiderTank(MinionCard):\n    def __init__(self):\n        super().__init__(\"Spider Tank\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SteamwheedleSniper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Steamwheedle Sniper"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "PowerTargetsMinions", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SteamwheedleSniper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Steamwheedle Sniper\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(2, 3, auras=[Aura(PowerTargetsMinions(), HeroSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StonesplinterTrogg", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stonesplinter Trogg"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class StonesplinterTrogg(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stonesplinter Trogg\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(SpellCast(player=EnemyPlayer()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TargetDummy", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Target Dummy"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TargetDummy(MinionCard):\n    def __init__(self):\n        super().__init__(\"Target Dummy\", 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(0, 2, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TimeRewinder", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Time Rewinder"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "bounce", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class TimeRewinder(SpellCard):\n    def __init__(self):\n        super().__init__(\"Time Rewinder\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TinkersSharpswordOil", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tinker's Sharpsword Oil"}, {"_type": "Num", "n": 4}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"op": {"_type": "Add"}, "target": {"attr": "base_attack", "_type": "Attribute", "value": {"attr": "weapon", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 3}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"attr": "cards_played", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}, "body": {"id": "x", "_type": "Name"}}], "func": {"attr": "find_friendly_minion_battlecry_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"id": "targets", "_type": "Name"}, "comparators": [{"_type": "NameConstant", "value": null}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"attr": "weapon", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "NameConstant", "value": null}]}]}}]}]}]}, "orig_code": "class TinkersSharpswordOil(SpellCard):\n    def __init__(self):\n        super().__init__(\"Tinker's Sharpsword Oil\", 4, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 3\n        player.hero.change_temp_attack(3)\n        if player.cards_played > 0:\n            targets = hearthbreaker.targeting.find_friendly_minion_battlecry_target(player.game, lambda x: x)\n            if targets is not None:\n                target = player.game.random_choice(targets)\n                target.add_buff(Buff(ChangeAttack(3)))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TradePrinceGallywix", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Trade Prince Gallywix"}, {"_type": "Num", "n": 6}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "Gallywix's Coin"}], "func": {"id": "HasCardName", "_type": "Name"}}], "func": {"id": "Not", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LAST_CARD", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FriendlyPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "Gallywix's Coin"}], "func": {"id": "HasCardName", "_type": "Name"}}], "func": {"id": "Not", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "GallywixsCoin", "_type": "Name"}}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TradePrinceGallywix(MinionCard):\n    def __init__(self):\n        super().__init__(\"Trade Prince Gallywix\", 6, CHARACTER_CLASS.ROGUE, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 8, effects=[Effect(SpellCast(Not(HasCardName(\"Gallywix's Coin\")), EnemyPlayer()), ActionTag(AddCard(CardQuery(source=CARD_SOURCE.LAST_CARD)), PlayerSelector(FriendlyPlayer()))), Effect(SpellCast(Not(HasCardName(\"Gallywix's Coin\")), EnemyPlayer()), ActionTag(AddCard(GallywixsCoin()), PlayerSelector(EnemyPlayer())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TreeOfLife", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tree of Life"}, {"_type": "Num", "n": 9}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "target", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class TreeOfLife(SpellCard):\n    def __init__(self):\n        super().__init__(\"Tree of Life\", 9, CHARACTER_CLASS.DRUID, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.append(game.other_player.hero)\n        targets.append(game.current_player.hero)\n        for target in targets:\n            target.heal(player.effective_heal_power(target.calculate_max_health()), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TroggzorTheEarthinator", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Troggzor the Earthinator"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BurlyRockjawTrogg", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TroggzorTheEarthinator(MinionCard):\n    def __init__(self):\n        super().__init__(\"Troggzor the Earthinator\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 6, effects=[Effect(SpellCast(player=EnemyPlayer()), ActionTag(Summon(BurlyRockjawTrogg()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "UnstablePortal", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Unstable Portal"}, {"_type": "Num", "n": 2}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "query", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}]}, "_type": "keyword"}]}}, {"_type": "Assign", "targets": [{"id": "new_minon", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "player", "_type": "Name"}, {"id": "self", "_type": "Name"}], "func": {"attr": "get_card", "_type": "Attribute", "value": {"id": "query", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 3}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "new_minon", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "new_minon", "_type": "Name"}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class UnstablePortal(SpellCard):\n    def __init__(self):\n        super().__init__(\"Unstable Portal\", 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        query = CardQuery(conditions=[IsMinion()])\n        new_minon = query.get_card(player, player, self)\n        new_minon.add_buff(Buff(ManaChange(-3)))\n        player.hand.append(new_minon)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "UpgradedRepairBot", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Upgraded Repair Bot"}, {"_type": "Num", "n": 5}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class UpgradedRepairBot(MinionCard):\n    def __init__(self):\n        super().__init__(\"Upgraded Repair Bot\", 5, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "V07TR0N", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "V-07-TR-0N"}, {"_type": "Num", "n": 8}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MegaWindfury", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class V07TR0N(MinionCard):\n    def __init__(self):\n        super().__init__(\"V-07-TR-0N\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, False, MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 8, charge=True, buffs=[Buff(MegaWindfury())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "VelensChosen", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Velen's Chosen"}, {"_type": "Num", "n": 3}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "SpellDamage", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class VelensChosen(SpellCard):\n    def __init__(self):\n        super().__init__(\"Velen's Chosen\", 3, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.add_buff(Buff(SpellDamage(1)))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "VitalityTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Vitality Totem"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class VitalityTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Vitality Totem\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, effects=[Effect(TurnEnded(), ActionTag(Heal(4), HeroSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WeeSpellstopper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wee Spellstopper"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "NoSpellTarget", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class WeeSpellstopper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Wee Spellstopper\", 4, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(2, 5, auras=[Aura(NoSpellTarget(), MinionSelector(Adjacent()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WhirlingBlades", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Whirling Blades"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class WhirlingBlades(SpellCard):\n    def __init__(self):\n        super().__init__(\"Whirling Blades\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WhirlingZapomatic", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Whirling Zap-o-matic"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "windfury", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class WhirlingZapomatic(MinionCard):\n    def __init__(self):\n        super().__init__(\"Whirling Zap-o-matic\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(3, 2, windfury=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AnubarAmbusher", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Anub'ar Ambusher"}, {"_type": "Num", "n": 4}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Bounce", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AnubarAmbusher(MinionCard):\n    def __init__(self):\n        super().__init__(\"Anub'ar Ambusher\", 4, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 5, deathrattle=Deathrattle(Bounce(), MinionSelector(picker=RandomPicker())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Avenge", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Avenge"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "dead_minion"}, {"_type": "arg", "arg": "attacker"}]}, "body": [{"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Call", "args": [{"_type": "ListComp", "elt": {"id": "minion", "_type": "Name"}, "generators": [{"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "comprehension", "ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"attr": "dead", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}]}]}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_died"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_died"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class Avenge(SecretCard):\n    def __init__(self):\n        super().__init__(\"Avenge\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n\n    def _reveal(self, dead_minion, attacker):\n        if len([minion for minion in self.player.minions if not minion.dead]) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            target.change_attack(3)\n            target.increase_health(2)\n            super().reveal()\n\n    def activate(self, player):\n        player.bind(\"minion_died\", self._reveal)\n\n    def deactivate(self, player):\n        player.unbind(\"minion_died\", self._reveal)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BaronRivendare", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Baron Rivendare"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DoubleDeathrattle", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class BaronRivendare(MinionCard):\n    def __init__(self):\n        super().__init__(\"Baron Rivendare\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(1, 7, auras=[Aura(DoubleDeathrattle(), PlayerSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DancingSwords", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dancing Swords"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class DancingSwords(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dancing Swords\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4, deathrattle=Deathrattle(Draw(), PlayerSelector(EnemyPlayer())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DarkCultist", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dark Cultist"}, {"_type": "Num", "n": 3}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class DarkCultist(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dark Cultist\", 3, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 4, deathrattle=Deathrattle(Give(ChangeHealth(3)), MinionSelector(picker=RandomPicker())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Duplicate", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Duplicate"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": null}}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_died"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_died"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": null}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "minion"}, {"_type": "arg", "arg": "by"}]}, "body": [{"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "c", "_type": "Name"}, "_type": "For", "body": [{"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 10}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "new_card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Call", "args": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}], "func": {"id": "type", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "new_card", "_type": "Name"}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "new_card", "_type": "Name"}, {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "attach", "_type": "Attribute", "value": {"id": "new_card", "_type": "Name"}}}}]}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Duplicate(SecretCard):\n    def __init__(self):\n        super().__init__(\"Duplicate\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n        self.player = None\n\n    def activate(self, player):\n        player.bind(\"minion_died\", self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.unbind(\"minion_died\", self._reveal)\n        self.player = None\n\n    def _reveal(self, minion, by):\n        for c in range(0, 2):\n            if len(self.player.hand) < 10:\n                new_card = type(minion.card)()\n                self.player.hand.append(new_card)\n                new_card.attach(new_card, self.player)\n        super().reveal()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EchoingOoze", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Echoing Ooze"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Duplicate", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}], "func": {"id": "GiveEffect", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class EchoingOoze(MinionCard):\n    def __init__(self):\n        super().__init__(\"Echoing Ooze\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, battlecry=Battlecry(GiveEffect(Effect(TurnEnded(), ActionTag(Duplicate(SelfSelector()), PlayerSelector()))), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Feugen", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Feugen"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Thaddius", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Stalagg", "_type": "Name"}}], "func": {"id": "InGraveyard", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Feugen(MinionCard):\n    def __init__(self):\n        super().__init__(\"Feugen\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 7, deathrattle=Deathrattle(Summon(Thaddius()), PlayerSelector(), InGraveyard(Stalagg())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Feugen", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Feugen"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Thaddius", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Stalagg", "_type": "Name"}}], "func": {"id": "InGraveyard", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Feugen(MinionCard):\n    def __init__(self):\n        super().__init__(\"Feugen\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 7, deathrattle=Deathrattle(Summon(Thaddius()), PlayerSelector(), InGraveyard(Stalagg())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HauntedCreeper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Haunted Creeper"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpectralSpider", "_type": "Name"}}, {"_type": "Num", "n": 2}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class HauntedCreeper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Haunted Creeper\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 2, deathrattle=Deathrattle(Summon(SpectralSpider(), 2), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KelThuzad", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Kel'Thuzad"}, {"_type": "Num", "n": 8}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "ResurrectFriendly", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class KelThuzad(MinionCard):\n    def __init__(self):\n        super().__init__(\"Kel'Thuzad\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 8, effects=[Effect(TurnEnded(player=BothPlayer()), ActionTag(ResurrectFriendly(), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Loatheb", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Loatheb"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsSpell", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}], "func": {"id": "AuraUntil", "_type": "Name"}}], "func": {"id": "GiveAura", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Loatheb(MinionCard):\n    def __init__(self):\n        super().__init__(\"Loatheb\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(GiveAura(AuraUntil(ManaChange(5), CardSelector(condition=IsSpell()), TurnEnded())), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MadScientist", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mad Scientist"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MY_DECK", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}], "func": {"id": "ApplySecret", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MadScientist(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mad Scientist\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, deathrattle=Deathrattle(ApplySecret(CARD_SOURCE.MY_DECK), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nerubian", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nerubian"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Nerubian(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nerubian\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, False)\n\n    def create_minion(self, p):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nerubian", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nerubian"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Nerubian(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nerubian\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, False)\n\n    def create_minion(self, p):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nerubian", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nerubian"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Nerubian(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nerubian\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, False)\n\n    def create_minion(self, p):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "NerubianEgg", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nerubian Egg"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Nerubian", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class NerubianEgg(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nerubian Egg\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 2, deathrattle=Deathrattle(Summon(Nerubian()), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PoisonSeeds", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Poison Seeds"}, {"_type": "Num", "n": 4}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"module": "hearthbreaker.cards.minions.druid", "_type": "ImportFrom", "level": 0, "names": [{"name": "PoisonSeedsTreant", "_type": "alias"}]}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "game", "_type": "Name"}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "m"}]}, "body": {"_type": "NameConstant", "value": true}}], "func": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "target", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}], "func": {"attr": "die", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "target", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "player", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, {"attr": "game", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "PoisonSeedsTreant", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class PoisonSeeds(SpellCard):\n    def __init__(self):\n        super().__init__(\"Poison Seeds\", 4, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import PoisonSeedsTreant\n        targets = hearthbreaker.targeting.find_minion_spell_target(game, lambda m: True)\n        for target in targets:\n            target.die(None)\n\n        game.check_delayed()\n\n        for target in targets:\n            PoisonSeedsTreant().summon(target.player, target.game, len(target.player.minions))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Reincarnate", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Reincarnate"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "player", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class Reincarnate(SpellCard):\n\n    def __init__(self):\n        super().__init__(\"Reincarnate\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed()\n        self.target.card.summon(self.target.player, game, len(self.target.player.minions))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShadeOfNaxxramas", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shade of Naxxramas"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ShadeOfNaxxramas(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shade of Naxxramas\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(2, 2, stealth=True, effects=[Effect(TurnStarted(), ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Slime", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Slime"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Slime(MinionCard):\n    def __init__(self):\n        super().__init__(\"Slime\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SpectralSpider", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spectral Spider"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SpectralSpider(MinionCard):\n    def __init__(self):\n        super().__init__(\"Spectral Spider\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Stalagg", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stalagg"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Thaddius", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Feugen", "_type": "Name"}}], "func": {"id": "InGraveyard", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Stalagg(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stalagg\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(7, 4, deathrattle=Deathrattle(Summon(Thaddius()), PlayerSelector(), InGraveyard(Feugen())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Stalagg", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stalagg"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Thaddius", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Feugen", "_type": "Name"}}], "func": {"id": "InGraveyard", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Stalagg(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stalagg\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(7, 4, deathrattle=Deathrattle(Summon(Thaddius()), PlayerSelector(), InGraveyard(Feugen())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StoneskinGargoyle", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stoneskin Gargoyle"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 10000}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class StoneskinGargoyle(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stoneskin Gargoyle\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnStarted(), ActionTag(Heal(10000), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Thaddius", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Thaddius"}, {"_type": "Num", "n": 10}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 11}, {"_type": "Num", "n": 11}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Thaddius(MinionCard):\n    def __init__(self):\n        super().__init__(\"Thaddius\", 10, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, False)\n\n    def create_minion(self, player):\n        return Minion(11, 11)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Treant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Treant"}, {"_type": "Num", "n": 1}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "_"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Treant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Treant\", 1, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Undertaker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Undertaker"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionHasDeathrattle", "_type": "Name"}}], "func": {"id": "MinionSummoned", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Undertaker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Undertaker\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, effects=[Effect(MinionSummoned(MinionHasDeathrattle()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "UnstableGhoul", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Unstable Ghoul"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}, {"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class UnstableGhoul(MinionCard):\n    def __init__(self):\n        super().__init__(\"Unstable Ghoul\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, deathrattle=Deathrattle(Damage(1), MinionSelector(players=BothPlayer())), taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Webspinner", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Webspinner"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Webspinner(MinionCard):\n    def __init__(self):\n        super().__init__(\"Webspinner\", 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, deathrattle=Deathrattle(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.BEAST)])), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ZombieChow", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Zombie Chow"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ZombieChow(MinionCard):\n    def __init__(self):\n        super().__init__(\"Zombie Chow\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, deathrattle=Deathrattle(Heal(5), HeroSelector(EnemyPlayer())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Abomination", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Abomination"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}, {"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Abomination(MinionCard):\n    def __init__(self):\n        super().__init__(\"Abomination\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(4, 4, deathrattle=Deathrattle(Damage(2), CharacterSelector(players=BothPlayer())), taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AbusiveSergeant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Abusive Sergeant"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "CurrentPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AbusiveSergeant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Abusive Sergeant\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Give(BuffUntil(ChangeAttack(2), TurnEnded(player=CurrentPlayer()))), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AcolyteOfPain", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Acolyte of Pain"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Damaged", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AcolyteOfPain(MinionCard):\n    def __init__(self):\n        super().__init__(\"Acolyte of Pain\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(Damaged(), ActionTag(Draw(), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AlAkirTheWindlord", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Al'Akir the Windlord"}, {"_type": "Num", "n": 8}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "windfury", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AlAkirTheWindlord(MinionCard):\n    def __init__(self):\n        super().__init__(\"Al'Akir the Windlord\", 8, CHARACTER_CLASS.SHAMAN, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(3, 5, windfury=True, charge=True, divine_shield=True, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AlarmoBot", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Alarm-o-Bot"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SwapWithHand", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AlarmoBot(MinionCard):\n    def __init__(self):\n        super().__init__(\"Alarm-o-Bot\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(0, 3, effects=[Effect(TurnStarted(), ActionTag(SwapWithHand(), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AldorPeacekeeper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Aldor Peacekeeper"}, {"_type": "Num", "n": 3}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "SetAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "NameConstant", "value": null}, "_type": "keyword"}, {"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AldorPeacekeeper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Aldor Peacekeeper\", 3, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE, battlecry=Battlecry(Give(SetAttack(1)), MinionSelector(condition=None, players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncestralSpirit", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancestral Spirit"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "card", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "deathrattle", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class AncestralSpirit(SpellCard):\n    def __init__(self):\n        super().__init__(\"Ancestral Spirit\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.deathrattle.append(Deathrattle(Summon(self.target.card), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncientBrewmaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancient Brewmaster"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Bounce", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AncientBrewmaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ancient Brewmaster\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncientMage", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancient Mage"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "SpellDamage", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AncientMage(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ancient Mage\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)), MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncientWatcher", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancient Watcher"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CantAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AncientWatcher(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ancient Watcher\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(4, 5, buffs=[Buff(CantAttack())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncientOfLore", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancient of Lore"}, {"_type": "Num", "n": 7}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "AncientSecrets", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "AncientTeachings", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AncientOfLore(MinionCard):\n    def __init__(self):\n\n        super().__init__(\"Ancient of Lore\", 7, CHARACTER_CLASS.DRUID, CARD_RARITY.EPIC, choices=[\n            Choice(AncientSecrets(), Heal(5), HeroSelector()),\n            Choice(AncientTeachings(), Draw(3), PlayerSelector())\n        ])\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AncientOfWar", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ancient of War"}, {"_type": "Num", "n": 7}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Health", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Taunt", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Attack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class AncientOfWar(MinionCard):\n    def __init__(self):\n\n        super().__init__(\"Ancient of War\", 7, CHARACTER_CLASS.DRUID, CARD_RARITY.EPIC, choices=[\n            Choice(Health(), Give([Buff(ChangeHealth(5)), Buff(Taunt())]), SelfSelector()),\n            Choice(Attack(), Give([Buff(ChangeAttack(5))]), SelfSelector()),\n        ])\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AngryChicken", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Angry Chicken"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AngryChicken(MinionCard):\n    def __init__(self):\n        super().__init__(\"Angry Chicken\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArathiWeaponsmith", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Arathi Weaponsmith"}, {"_type": "Num", "n": 4}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BattleAxe", "_type": "Name"}}], "func": {"id": "Equip", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ArathiWeaponsmith(MinionCard):\n    def __init__(self):\n        super().__init__(\"Arathi Weaponsmith\", 4, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, battlecry=Battlecry(Equip(BattleAxe()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArgentCommander", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Argent Commander"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ArgentCommander(MinionCard):\n    def __init__(self):\n        super().__init__(\"Argent Commander\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, divine_shield=True, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArgentProtector", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Argent Protector"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DivineShield", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ArgentProtector(MinionCard):\n    def __init__(self):\n        super().__init__(\"Argent Protector\", 2, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON, battlecry=Battlecry(Give(DivineShield()), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArgentSquire", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Argent Squire"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ArgentSquire(MinionCard):\n    def __init__(self):\n        super().__init__(\"Argent Squire\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1, divine_shield=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Armorsmith", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Armorsmith"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IncreaseArmor", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Armorsmith(MinionCard):\n    def __init__(self):\n        super().__init__(\"Armorsmith\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(CharacterDamaged(condition=IsMinion()), ActionTag(IncreaseArmor(), HeroSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Ashbringer", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ashbringer"}, {"_type": "Num", "n": 5}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Assign", "targets": [{"id": "weapon", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 3}], "func": {"id": "Weapon", "_type": "Name"}}}, {"_type": "Return", "value": {"id": "weapon", "_type": "Name"}}]}]}]}, "orig_code": "class Ashbringer(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Ashbringer\", 5, CHARACTER_CLASS.PALADIN, CARD_RARITY.LEGENDARY, False)\n\n    def create_weapon(self, player):\n        weapon = Weapon(5, 3)\n        return weapon\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AuchenaiSoulpriest", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Auchenai Soulpriest"}, {"_type": "Num", "n": 4}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HealAsDamage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AuchenaiSoulpriest(MinionCard):\n    def __init__(self):\n        super().__init__(\"Auchenai Soulpriest\", 4, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, auras=[Aura(HealAsDamage(), PlayerSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AvengingWrath", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Avenging Wrath"}, {"_type": "Num", "n": 6}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Call", "args": [{"_type": "Num", "n": 8}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class AvengingWrath(SpellCard):\n    def __init__(self):\n        super().__init__(\"Avenging Wrath\", 6, CHARACTER_CLASS.PALADIN, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(8)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AzureDrake", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Azure Drake"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_damage", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AzureDrake(MinionCard):\n    def __init__(self):\n        super().__init__(\"Azure Drake\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 4, spell_damage=1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BaronGeddon", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Baron Geddon"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class BaronGeddon(MinionCard):\n    def __init__(self):\n        super().__init__(\"Baron Geddon\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(7, 5, effects=[Effect(TurnEnded(), ActionTag(Damage(2), CharacterSelector(players=BothPlayer())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BattleAxe", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Battle Axe"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class BattleAxe(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Battle Axe\", 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, False)\n\n    def create_weapon(self, player):\n        return Weapon(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BattleRage", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Battle Rage"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"name": "damaged_character", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "character"}]}, "body": [{"_type": "Return", "value": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"attr": "health", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}, "comparators": [{"_type": "Call", "func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}]}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "characters", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"attr": "append", "_type": "Attribute", "value": {"id": "characters", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"id": "characters", "_type": "Name"}], "value": {"_type": "ListComp", "elt": {"id": "character", "_type": "Name"}, "generators": [{"iter": {"id": "characters", "_type": "Name"}, "target": {"id": "character", "_type": "Name"}, "_type": "comprehension", "ifs": [{"_type": "Call", "args": [{"id": "character", "_type": "Name"}], "func": {"id": "damaged_character", "_type": "Name"}}]}]}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Call", "args": [{"id": "characters", "_type": "Name"}], "func": {"id": "len", "_type": "Name"}}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class BattleRage(SpellCard):\n    def __init__(self):\n        super().__init__(\"Battle Rage\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        def damaged_character(character):\n            return character.health < character.calculate_max_health()\n\n        super().use(player, game)\n\n        characters = copy.copy(player.minions)\n        characters.append(player.hero)\n\n        characters = [character for character in characters if damaged_character(character)]\n\n        for i in range(0, len(characters)):\n            player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BestialWrath", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bestial Wrath"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "filter_func", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "minion"}]}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}, "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}]}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Immune", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "CurrentPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class BestialWrath(SpellCard):\n    def __init__(self):\n        super().__init__(\"Bestial Wrath\", 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.find_friendly_minion_spell_target, filter_func=lambda minion: minion.card.minion_type is MINION_TYPE.BEAST and minion.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(Immune(), TurnEnded(player=CurrentPlayer())))\n        self.target.change_temp_attack(2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Betrayal", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Betrayal"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "left_minion", "_type": "Name"}], "value": {"_type": "NameConstant", "value": null}}, {"_type": "Assign", "targets": [{"id": "right_minion", "_type": "Name"}], "value": {"_type": "NameConstant", "value": null}}, {"_type": "Assign", "targets": [{"id": "index", "_type": "Name"}], "value": {"attr": "index", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"id": "index", "_type": "Name"}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "left_minion", "_type": "Name"}], "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"id": "index", "_type": "Name"}, "right": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}]}, {"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"id": "index", "_type": "Name"}, "comparators": [{"_type": "Call", "args": [{"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "right": {"_type": "Num", "n": 1}}, {"_type": "Num", "n": 6}], "func": {"id": "min", "_type": "Name"}}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "right_minion", "_type": "Name"}], "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "Add"}, "_type": "BinOp", "left": {"id": "index", "_type": "Name"}, "right": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}]}, {"_type": "Assign", "targets": [{"id": "original_immune", "_type": "Name"}], "value": {"attr": "immune", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"attr": "immune", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}, {"test": {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"id": "left_minion", "_type": "Name"}, "comparators": [{"_type": "NameConstant", "value": null}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "left_minion", "_type": "Name"}}}}]}, {"test": {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"id": "right_minion", "_type": "Name"}, "comparators": [{"_type": "NameConstant", "value": null}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "right_minion", "_type": "Name"}}}}]}, {"_type": "Assign", "targets": [{"attr": "immune", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "value": {"id": "original_immune", "_type": "Name"}}]}]}]}, "orig_code": "class Betrayal(SpellCard):\n    def __init__(self):\n        super().__init__(\"Betrayal\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        left_minion = None\n        right_minion = None\n\n        index = self.target.index\n        if index > 0:\n            left_minion = game.other_player.minions[index - 1]\n        if index < min(len(game.other_player.minions) - 1, 6):\n            right_minion = game.other_player.minions[index + 1]\n\n        original_immune = self.target.immune\n        self.target.immune = True\n        if left_minion is not None:\n            left_minion.damage(self.target.calculate_attack(), self.target)\n        if right_minion is not None:\n            right_minion.damage(self.target.calculate_attack(), self.target)\n        self.target.immune = original_immune\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BigGameHunter", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Big Game Hunter"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"id": "AttackGreaterThan", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BigGameHunter(MinionCard):\n    def __init__(self):\n        super().__init__(\"Big Game Hunter\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(AttackGreaterThan(6), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Bite", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bite"}, {"_type": "Num", "n": 4}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Bite(SpellCard):\n    def __init__(self):\n        super().__init__(\"Bite\", 4, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.increase_armor(4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BlessingOfWisdom", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blessing of Wisdom"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"id": "player", "_type": "Name"}, "comparators": [{"slice": {"_type": "Index", "value": {"_type": "Num", "n": 0}}, "_type": "Subscript", "value": {"attr": "players", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, "_type": "If", "orelse": [{"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "PlayerTwo", "_type": "Name"}}}], "body": [{"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "PlayerOne", "_type": "Name"}}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Attack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "args": [{"id": "draw_player", "_type": "Name"}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}], "func": {"attr": "add_effect", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class BlessingOfWisdom(SpellCard):\n    def __init__(self):\n        super().__init__(\"Blessing of Wisdom\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player is game.players[0]:\n            draw_player = PlayerOne()\n        else:\n            draw_player = PlayerTwo()\n        self.target.add_effect(Effect(Attack(), ActionTag(Draw(), PlayerSelector(draw_player))))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Blizzard", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blizzard"}, {"_type": "Num", "n": 6}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Blizzard(SpellCard):\n    def __init__(self):\n        super().__init__(\"Blizzard\", 6, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BloodFury", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blood Fury"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 8}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class BloodFury(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Blood Fury\", 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE, False)\n\n    def create_weapon(self, player):\n        return Weapon(3, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BloodImp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blood Imp"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class BloodImp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Blood Imp\", 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, stealth=True, effects=[Effect(TurnEnded(), ActionTag(Give(ChangeHealth(1)), MinionSelector(picker=RandomPicker())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BloodKnight", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blood Knight"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HasDivineShield", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}, {"_type": "Num", "n": 3}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HasDivineShield", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}, {"_type": "Num", "n": 3}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}]}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "RemoveDivineShields", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HasDivineShield", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BloodKnight(MinionCard):\n    def __init__(self):\n        super().__init__(\"Blood Knight\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, battlecry=(Battlecry([Give([Buff(ChangeAttack(Count(MinionSelector(HasDivineShield(), BothPlayer())), 3)), Buff(ChangeHealth(Count(MinionSelector(HasDivineShield(), BothPlayer())), 3))])], SelfSelector()), Battlecry(RemoveDivineShields(), (MinionSelector(HasDivineShield(), BothPlayer())))))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BloodmageThalnos", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bloodmage Thalnos"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_damage", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}, {"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class BloodmageThalnos(MinionCard):\n    def __init__(self):\n        super().__init__(\"Bloodmage Thalnos\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(1, 1, spell_damage=1, deathrattle=Deathrattle(Draw(), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BloodsailCorsair", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bloodsail Corsair"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DecreaseDurability", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BloodsailCorsair(MinionCard):\n    def __init__(self):\n        super().__init__(\"Bloodsail Corsair\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=Battlecry(DecreaseDurability(), WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BloodsailRaider", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bloodsail Raider"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "base_attack"}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BloodsailRaider(MinionCard):\n    def __init__(self):\n        super().__init__(\"Bloodsail Raider\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=Battlecry(Give(Buff(ChangeAttack(Attribute(\"base_attack\", WeaponSelector())))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CairneBloodhoof", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cairne Bloodhoof"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BaineBloodhoof", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class CairneBloodhoof(MinionCard):\n    def __init__(self):\n        super().__init__(\"Cairne Bloodhoof\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 5, deathrattle=Deathrattle(Summon(BaineBloodhoof()), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CaptainGreenskin", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Captain Greenskin"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "IncreaseWeaponAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "IncreaseDurability", "_type": "Name"}}]}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class CaptainGreenskin(MinionCard):\n    def __init__(self):\n        super().__init__(\"Captain Greenskin\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.PIRATE, battlecry=Battlecry([IncreaseWeaponAttack(1), IncreaseDurability()], WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Cenarius", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cenarius"}, {"_type": "Num", "n": 9}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IncreaseStats", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Taunt", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SummonTreants", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TauntTreant", "_type": "Name"}}, {"_type": "Num", "n": 2}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Cenarius(MinionCard):\n    def __init__(self):\n        super().__init__(\"Cenarius\", 9, CHARACTER_CLASS.DRUID, CARD_RARITY.LEGENDARY, choices=[\n            Choice(IncreaseStats(), Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2)), Buff(Taunt())]), MinionSelector()),\n            Choice(SummonTreants(), Summon(TauntTreant(), 2), PlayerSelector())\n        ])\n\n    def create_minion(self, player):\n        return Minion(5, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CircleOfHealing", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Circle of Healing"}, {"_type": "Num", "n": 0}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class CircleOfHealing(SpellCard):\n    def __init__(self):\n        super().__init__(\"Circle of Healing\", 0, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n\n        for minion in targets:\n            minion.heal(player.effective_heal_power(4), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ColdBlood", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cold Blood"}, {"_type": "Num", "n": 1}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"attr": "cards_played", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class ColdBlood(SpellCard):\n    def __init__(self):\n        super().__init__(\"Cold Blood\", 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        if player.cards_played > 0:\n            self.target.change_attack(4)\n        else:\n            self.target.change_attack(2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ColdlightOracle", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Coldlight Oracle"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ColdlightOracle(MinionCard):\n    def __init__(self):\n        super().__init__(\"Coldlight Oracle\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=Battlecry(Draw(2), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ColdlightSeer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Coldlight Seer"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ColdlightSeer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Coldlight Seer\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CommandingShout", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Commanding Shout"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "MinimumHealth", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}], "func": {"id": "AuraUntil", "_type": "Name"}}], "func": {"attr": "add_aura", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class CommandingShout(SpellCard):\n    def __init__(self):\n        super().__init__(\"Commanding Shout\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(MinimumHealth(1), MinionSelector(), TurnEnded()))\n\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Counterspell", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Counterspell"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"test": {"_type": "Call", "func": {"attr": "is_spell", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"attr": "cancel", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class Counterspell(SecretCard):\n    def __init__(self):\n        super().__init__(\"Counterspell\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, card, index):\n        if card.is_spell():\n            card.cancel = True\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind(\"card_played\", self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind(\"card_played\", self._reveal)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CrazedAlchemist", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Crazed Alchemist"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "health"}, {"_type": "Str", "s": "attack"}, {"_type": "NameConstant", "value": false}], "func": {"id": "SwapStats", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class CrazedAlchemist(MinionCard):\n    def __init__(self):\n        super().__init__(\"Crazed Alchemist\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(SwapStats('health', 'attack', False), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CruelTaskmaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cruel Taskmaster"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class CruelTaskmaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Cruel Taskmaster\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(ChangeAttack(2))], MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CultMaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cult Master"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class CultMaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Cult Master\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionDied(), ActionTag(Draw(), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DamagedGolem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Damaged Golem"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DamagedGolem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Damaged Golem\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DarkIronDwarf", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dark Iron Dwarf"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "CurrentPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DarkIronDwarf(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dark Iron Dwarf\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Give(BuffUntil(ChangeAttack(2), TurnEnded(player=CurrentPlayer()))), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DeadlyShot", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Deadly Shot"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}, "body": {"_type": "NameConstant", "value": true}}], "func": {"attr": "find_enemy_minion_battlecry_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}], "func": {"attr": "die", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 1}]}]}}]}]}]}, "orig_code": "class DeadlyShot(SpellCard):\n    def __init__(self):\n        super().__init__(\"Deadly Shot\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(player.game, lambda x: True)\n        target = game.random_choice(targets)\n        target.die(None)\n        game.check_delayed()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) >= 1\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Deathwing", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Deathwing"}, {"_type": "Num", "n": 10}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Discard", "_type": "Name"}, "keywords": [{"arg": "amount", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 12}, {"_type": "Num", "n": 12}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Deathwing(MinionCard):\n    def __init__(self):\n        super().__init__(\"Deathwing\", 10, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=(Battlecry(Kill(), MinionSelector(players=BothPlayer())), Battlecry(Discard(amount=Count(CardSelector())), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(12, 12)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DefiasBandit", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Defias Bandit"}, {"_type": "Num", "n": 1}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DefiasBandit(MinionCard):\n    def __init__(self):\n        super().__init__(\"Defias Bandit\", 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DefiasRingleader", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Defias Ringleader"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DefiasBandit", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DefiasRingleader(MinionCard):\n    def __init__(self):\n        super().__init__(\"Defias Ringleader\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, combo=Battlecry(Summon(DefiasBandit()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Demolisher", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Demolisher"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Demolisher(MinionCard):\n    def __init__(self):\n        super().__init__(\"Demolisher\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnStarted(), ActionTag(Damage(2), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Demonfire", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Demonfire"}, {"_type": "Num", "n": 2}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Compare", "ops": [{"_type": "In"}], "left": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "comparators": [{"id": "targets", "_type": "Name"}]}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class Demonfire(SpellCard):\n    def __init__(self):\n        super().__init__(\"Demonfire\", 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if self.target.card.minion_type is MINION_TYPE.DEMON and self.target in targets:\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Demonfire", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Demonfire"}, {"_type": "Num", "n": 2}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Compare", "ops": [{"_type": "In"}], "left": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "comparators": [{"id": "targets", "_type": "Name"}]}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class Demonfire(SpellCard):\n    def __init__(self):\n        super().__init__(\"Demonfire\", 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if self.target.card.minion_type is MINION_TYPE.DEMON and self.target in targets:\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Devilsaur", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Devilsaur"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Devilsaur(MinionCard):\n    def __init__(self):\n        super().__init__(\"Devilsaur\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DireWolfAlpha", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dire Wolf Alpha"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class DireWolfAlpha(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dire Wolf Alpha\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector(Adjacent()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DivineFavor", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Divine Favor"}, {"_type": "Num", "n": 3}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "difference", "_type": "Name"}], "value": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "right": {"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"id": "difference", "_type": "Name"}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class DivineFavor(SpellCard):\n    def __init__(self):\n        super().__init__(\"Divine Favor\", 3, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        difference = len(game.other_player.hand) - len(player.hand)\n        for i in range(0, difference):\n            player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Doomsayer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Doomsayer"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "NameConstant", "value": null}, "_type": "keyword"}, {"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Doomsayer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Doomsayer\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 7, effects=[Effect(TurnStarted(), ActionTag(Kill(), MinionSelector(condition=None, players=BothPlayer())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DreadCorsair", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dread Corsair"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "attack"}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class DreadCorsair(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dread Corsair\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, buffs=[Buff(ManaChange(Attribute(\"attack\", WeaponSelector()), -1))])\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Dream", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dream"}, {"_type": "Num", "n": 0}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "bounce", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Dream(SpellCard):\n    def __init__(self):\n        super().__init__(\"Dream\", 0, CHARACTER_CLASS.DREAM, CARD_RARITY.COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DruidOfTheClaw", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Druid of the Claw"}, {"_type": "Num", "n": 5}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CatForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CatDruid", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BearForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BearDruid", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DruidOfTheClaw(MinionCard):\n    def __init__(self):\n        super().__init__(\"Druid of the Claw\", 5, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, choices=[\n            Choice(CatForm(), Transform(CatDruid()), SelfSelector()),\n            Choice(BearForm(), Transform(BearDruid()), SelfSelector())\n        ])\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DruidOfTheClaw", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Druid of the Claw"}, {"_type": "Num", "n": 5}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CatForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CatDruid", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BearForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BearDruid", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DruidOfTheClaw(MinionCard):\n    def __init__(self):\n        super().__init__(\"Druid of the Claw\", 5, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, choices=[\n            Choice(CatForm(), Transform(CatDruid()), SelfSelector()),\n            Choice(BearForm(), Transform(BearDruid()), SelfSelector())\n        ])\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DruidOfTheClaw", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Druid of the Claw"}, {"_type": "Num", "n": 5}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CatForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CatDruid", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BearForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BearDruid", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DruidOfTheClaw(MinionCard):\n    def __init__(self):\n        super().__init__(\"Druid of the Claw\", 5, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, choices=[\n            Choice(CatForm(), Transform(CatDruid()), SelfSelector()),\n            Choice(BearForm(), Transform(BearDruid()), SelfSelector())\n        ])\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DustDevil", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dust Devil"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 2}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "windfury", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class DustDevil(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dust Devil\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(3, 1, windfury=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EaglehornBow", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Eaglehorn Bow"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SecretRevealed", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IncreaseDurability", "_type": "Name"}}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class EaglehornBow(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Eaglehorn Bow\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(SecretRevealed(), ActionTag(IncreaseDurability(), WeaponSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EarthenRingFarseer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Earthen Ring Farseer"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class EarthenRingFarseer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Earthen Ring Farseer\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Heal(3), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EdwinVanCleef", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Edwin VanCleef"}, {"_type": "Num", "n": 3}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "cards_played"}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}, {"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "cards_played"}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}, {"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class EdwinVanCleef(MinionCard):\n    def __init__(self):\n        super().__init__(\"Edwin VanCleef\", 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.LEGENDARY, battlecry=Battlecry(Give([Buff(ChangeAttack(Attribute(\"cards_played\", PlayerSelector()), 2)), Buff(ChangeHealth(Attribute(\"cards_played\", PlayerSelector()), 2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EmeraldDrake", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Emerald Drake"}, {"_type": "Num", "n": 4}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class EmeraldDrake(MinionCard):\n    def __init__(self):\n        super().__init__(\"Emerald Drake\", 4, CHARACTER_CLASS.DREAM, CARD_RARITY.COMMON, False, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(7, 6)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EmperorCobra", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Emperor Cobra"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DidDamage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}], "func": {"id": "TargetSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class EmperorCobra(MinionCard):\n    def __init__(self):\n        super().__init__(\"Emperor Cobra\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(DidDamage(), ActionTag(Kill(), TargetSelector(IsMinion())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Equality", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Equality"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "set_health_to", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"op": {"_type": "Or"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}]}]}}]}]}]}, "orig_code": "class Equality(SpellCard):\n    def __init__(self):\n        super().__init__(\"Equality\", 2, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n\n        for minion in targets:\n            minion.set_health_to(1)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) > 0 or len(game.other_player.minions) > 0)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EtherealArcanist", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ethereal Arcanist"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HasSecret", "_type": "Name"}}], "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HasSecret", "_type": "Name"}}], "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class EtherealArcanist(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ethereal Arcanist\", 4, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, effects=[Effect(TurnEnded(HasSecret()), ActionTag(Give(ChangeAttack(2)), SelfSelector())), Effect(TurnEnded(HasSecret()), ActionTag(Give(ChangeHealth(2)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Eviscerate", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Eviscerate"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"attr": "cards_played", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class Eviscerate(SpellCard):\n    def __init__(self):\n        super().__init__(\"Eviscerate\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        if player.cards_played > 0:\n            self.target.damage(player.effective_spell_damage(4), self)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ExplosiveShot", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Explosive Shot"}, {"_type": "Num", "n": 5}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "index", "_type": "Name"}], "value": {"attr": "index", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"attr": "index", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "comparators": [{"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}], "func": {"id": "len", "_type": "Name"}}, "right": {"_type": "Num", "n": 1}}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "Add"}, "_type": "BinOp", "left": {"id": "index", "_type": "Name"}, "right": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"attr": "index", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"id": "index", "_type": "Name"}, "right": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class ExplosiveShot(SpellCard):\n    def __init__(self):\n        super().__init__(\"Explosive Shot\", 5, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(2), self)\n\n        self.target.damage(player.effective_spell_damage(5), self)\n\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FacelessManipulator", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Faceless Manipulator"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Replace", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class FacelessManipulator(MinionCard):\n    def __init__(self):\n        super().__init__(\"Faceless Manipulator\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, battlecry=Battlecry(Replace(), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FaerieDragon", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Faerie Dragon"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_targetable", "value": {"_type": "NameConstant", "value": false}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FaerieDragon(MinionCard):\n    def __init__(self):\n        super().__init__(\"Faerie Dragon\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(3, 2, spell_targetable=False)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FarSight", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Far Sight"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"name": "reduce_cost", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "card"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 3}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "reduce_cost", "_type": "Name"}], "func": {"attr": "bind_once", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class FarSight(SpellCard):\n    def __init__(self):\n        super().__init__(\"Far Sight\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        def reduce_cost(card):\n            card.add_buff(Buff(ManaChange(-3)))\n\n        super().use(player, game)\n        player.bind_once(\"card_drawn\", reduce_cost)\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Felguard", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Felguard"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DestroyManaCrystal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Felguard(MinionCard):\n    def __init__(self):\n        super().__init__(\"Felguard\", 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(DestroyManaCrystal(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FenCreeper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Fen Creeper"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FenCreeper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Fen Creeper\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 6, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FeralSpirit", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Feral Spirit"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 2}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "spirit_wolf", "_type": "Name"}], "value": {"_type": "Call", "func": {"attr": "SpiritWolf", "_type": "Attribute", "value": {"attr": "shaman", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "spirit_wolf", "_type": "Name"}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}}]}]}]}, "orig_code": "class FeralSpirit(SpellCard):\n    def __init__(self):\n        super().__init__(\"Feral Spirit\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for i in range(0, 2):\n            spirit_wolf = hearthbreaker.cards.minions.shaman.SpiritWolf()\n            spirit_wolf.summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FinkleEinhorn", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Finkle Einhorn"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class FinkleEinhorn(MinionCard):\n    def __init__(self):\n        super().__init__(\"Finkle Einhorn\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, False)\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FlameImp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flame Imp"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class FlameImp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Flame Imp\", 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(Damage(3), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FlesheatingGhoul", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flesheating Ghoul"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FlesheatingGhoul(MinionCard):\n    def __init__(self):\n        super().__init__(\"Flesheating Ghoul\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(MinionDied(player=BothPlayer()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ForceOfNature", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Force of Nature"}, {"_type": "Num", "n": 6}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"module": "hearthbreaker.cards.minions.druid", "_type": "ImportFrom", "level": 0, "names": [{"name": "ChargeTreant", "_type": "alias"}]}, {"iter": {"_type": "List", "elts": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}]}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "treant_card", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "ChargeTreant", "_type": "Name"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "treant_card", "_type": "Name"}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}}]}]}]}, "orig_code": "class ForceOfNature(SpellCard):\n    def __init__(self):\n        super().__init__(\"Force of Nature\", 6, CHARACTER_CLASS.DRUID, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import ChargeTreant\n        for i in [0, 1, 2]:\n            treant_card = ChargeTreant()\n            treant_card.summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ForkedLightning", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Forked Lightning"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 2}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 2}]}]}}]}]}]}, "orig_code": "class ForkedLightning(SpellCard):\n    def __init__(self):\n        super().__init__(\"Forked Lightning\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) >= 2\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FreezingTrap", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Freezing Trap"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "attacker"}, {"_type": "arg", "arg": "target"}]}, "body": [{"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "attacker", "_type": "Name"}, {"id": "Minion", "_type": "Name"}], "func": {"id": "isinstance", "_type": "Name"}}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"attr": "removed", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "bounce", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class FreezingTrap(SecretCard):\n    def __init__(self):\n        super().__init__(\"Freezing Trap\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind(\"character_attack\", self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind(\"character_attack\", self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(attacker, Minion) and not attacker.removed:\n            attacker.bounce()\n            attacker.card.add_buff(Buff(ManaChange(2)))\n            super().reveal()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FrostElemental", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Frost Elemental"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class FrostElemental(MinionCard):\n    def __init__(self):\n        super().__init__(\"Frost Elemental\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Give(Frozen()), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FrothingBerserker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Frothing Berserker"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FrothingBerserker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Frothing Berserker\", 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 4, effects=[Effect(CharacterDamaged(player=BothPlayer(), condition=IsMinion()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GadgetzanAuctioneer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gadgetzan Auctioneer"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GadgetzanAuctioneer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gadgetzan Auctioneer\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(4, 4, effects=[Effect(SpellCast(), ActionTag(Draw(), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GladiatorsLongbow", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gladiator's Longbow"}, {"_type": "Num", "n": 7}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsHero", "_type": "Name"}}], "func": {"id": "CharacterAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Immune", "_type": "Name"}}, {"_type": "Call", "func": {"id": "AttackCompleted", "_type": "Name"}}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GladiatorsLongbow(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Gladiator's Longbow\", 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2, effects=[Effect(CharacterAttack(IsHero()), ActionTag(Give(BuffUntil(Immune(), AttackCompleted())), HeroSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GrommashHellscream", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Grommash Hellscream"}, {"_type": "Num", "n": 8}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 9}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GrommashHellscream(MinionCard):\n    def __init__(self):\n        super().__init__(\"Grommash Hellscream\", 8, CHARACTER_CLASS.WARRIOR, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 9, charge=True, enrage=[Aura(ChangeAttack(6), SelfSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Gruul", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gruul"}, {"_type": "Num", "n": 8}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Gruul(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gruul\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(7, 7, effects=[Effect(TurnEnded(player=BothPlayer()), ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HarrisonJones", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Harrison Jones"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "durability"}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Destroy", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class HarrisonJones(MinionCard):\n    def __init__(self):\n        super().__init__(\"Harrison Jones\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=(Battlecry(Draw(Attribute(\"durability\", WeaponSelector(EnemyPlayer()))), PlayerSelector()), Battlecry(Destroy(), WeaponSelector(EnemyPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HarvestGolem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Harvest Golem"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DamagedGolem", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class HarvestGolem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Harvest Golem\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 3, deathrattle=Deathrattle(Summon(DamagedGolem()), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Headcrack", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Headcrack"}, {"_type": "Num", "n": 3}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"attr": "cards_played", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}], "func": {"attr": "add_effect", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Headcrack(SpellCard):\n    def __init__(self):\n        super().__init__(\"Headcrack\", 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n        if player.cards_played > 0:\n            player.add_effect(Effect(TurnEnded(), ActionTag(AddCard(self), PlayerSelector())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HeavyAxe", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Heavy Axe"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class HeavyAxe(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Heavy Axe\", 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, False)\n\n    def create_weapon(self, player):\n        return Weapon(1, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Hogger", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hogger"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Gnoll", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Hogger(MinionCard):\n    def __init__(self):\n        super().__init__(\"Hogger\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 4, effects=[Effect(TurnEnded(), ActionTag(Summon(Gnoll()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HolyFire", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Holy Fire"}, {"_type": "Num", "n": 6}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class HolyFire(SpellCard):\n    def __init__(self):\n        super().__init__(\"Holy Fire\", 6, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(5), self)\n        player.hero.heal(player.effective_heal_power(5), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HungryCrab", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hungry Crab"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class HungryCrab(MinionCard):\n    def __init__(self):\n        super().__init__(\"Hungry Crab\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, minion_type=MINION_TYPE.BEAST, battlecry=(Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer())), Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Hyena", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hyena"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Hyena(MinionCard):\n    def __init__(self):\n        super().__init__(\"Hyena\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IceBarrier", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ice Barrier"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "attacker"}, {"_type": "arg", "arg": "target"}]}, "body": [{"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"id": "target", "_type": "Name"}, "comparators": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"attr": "removed", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}]}, "_type": "If", "body": [{"op": {"_type": "Add"}, "target": {"attr": "armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}}}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 8}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class IceBarrier(SecretCard):\n    def __init__(self):\n        super().__init__(\"Ice Barrier\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and not attacker.removed:\n            attacker.player.game.other_player.hero.armor += 8\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind(\"character_attack\", self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind(\"character_attack\", self._reveal)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IceBlock", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ice Block"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": null}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "character"}, {"_type": "arg", "arg": "attacker"}, {"_type": "arg", "arg": "amount"}]}, "body": [{"test": {"_type": "Call", "func": {"attr": "is_hero", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}, "_type": "If", "body": [{"test": {"_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}, "right": {"id": "amount", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Immune", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "CurrentPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "pre_damage"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "pre_damage"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class IceBlock(SecretCard):\n    def __init__(self):\n        super().__init__(\"Ice Block\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = None\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            if character.health - amount <= 0:\n                character.add_buff(BuffUntil(Immune(), TurnEnded(player=CurrentPlayer())))\n                super().reveal()\n\n    def activate(self, player):\n        player.bind(\"pre_damage\", self._reveal)\n\n    def deactivate(self, player):\n        player.unbind(\"pre_damage\", self._reveal)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IceLance", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ice Lance"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"attr": "frozen", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class IceLance(SpellCard):\n    def __init__(self):\n        super().__init__(\"Ice Lance\", 1, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.frozen:\n            self.target.damage(4, self)\n        else:\n            self.target.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IllidanStormrage", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Illidan Stormrage"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardPlayed", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameOfAzzinoth", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class IllidanStormrage(MinionCard):\n    def __init__(self):\n        super().__init__(\"Illidan Stormrage\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(7, 5, effects=[Effect(CardPlayed(), ActionTag(Summon(FlameOfAzzinoth()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Imp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Imp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ImpMaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Imp Master"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Imp", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ImpMaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Imp Master\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 5, effects=[Effect(TurnEnded(), ActionTag(Damage(1), SelfSelector())), Effect(TurnEnded(), ActionTag(Summon(Imp()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "InnerFire", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Inner Fire"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "delta", "_type": "Name"}], "value": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "right": {"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "delta", "_type": "Name"}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class InnerFire(SpellCard):\n    def __init__(self):\n        super().__init__(\"Inner Fire\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        delta = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(delta)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "InnerRage", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Inner Rage"}, {"_type": "Num", "n": 0}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class InnerRage(SpellCard):\n    def __init__(self):\n        super().__init__(\"Inner Rage\", 0, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        self.target.change_attack(2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IronbeakOwl", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ironbeak Owl"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Silence", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class IronbeakOwl(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ironbeak Owl\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=Battlecry(Silence(), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "JunglePanther", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Jungle Panther"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class JunglePanther(MinionCard):\n    def __init__(self):\n        super().__init__(\"Jungle Panther\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, stealth=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KeeperOfTheGrove", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Keeper of the Grove"}, {"_type": "Num", "n": 4}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Moonfire", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Dispel", "_type": "Name"}}, {"_type": "Call", "func": {"id": "Silence", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class KeeperOfTheGrove(MinionCard):\n    def __init__(self):\n        super().__init__(\"Keeper of the Grove\", 4, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE, choices=[\n            Choice(Moonfire(), Damage(2), CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            Choice(Dispel(), Silence(), MinionSelector(players=BothPlayer(), picker=UserPicker()))\n        ])\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Kidnapper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Kidnapper"}, {"_type": "Num", "n": 6}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Bounce", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}, {"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Kidnapper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Kidnapper\", 6, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC, combo=Battlecry(Bounce(), MinionSelector(picker=UserPicker(), players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KingKrush", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "King Krush"}, {"_type": "Num", "n": 9}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class KingKrush(MinionCard):\n    def __init__(self):\n        super().__init__(\"King Krush\", 9, CHARACTER_CLASS.HUNTER, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KingMukla", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "King Mukla"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Bananas", "_type": "Name"}}, {"_type": "Num", "n": 2}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class KingMukla(MinionCard):\n    def __init__(self):\n        super().__init__(\"King Mukla\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST, battlecry=Battlecry(AddCard(Bananas(), 2), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LaughingSister", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Laughing Sister"}, {"_type": "Num", "n": 3}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_targetable", "value": {"_type": "NameConstant", "value": false}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class LaughingSister(MinionCard):\n    def __init__(self):\n        super().__init__(\"Laughing Sister\", 3, CHARACTER_CLASS.DREAM, CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(3, 5, spell_targetable=False)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LavaBurst", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lava Burst"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "overload", "value": {"_type": "Num", "n": 2}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class LavaBurst(SpellCard):\n    def __init__(self):\n        super().__init__(\"Lava Burst\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(5), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LayOnHands", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lay on Hands"}, {"_type": "Num", "n": 8}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 8}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class LayOnHands(SpellCard):\n    def __init__(self):\n        super().__init__(\"Lay on Hands\", 8, CHARACTER_CLASS.PALADIN, CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n        player.draw()\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LeeroyJenkins", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Leeroy Jenkins"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Whelp", "_type": "Name"}}, {"_type": "Num", "n": 2}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class LeeroyJenkins(MinionCard):\n    def __init__(self):\n        super().__init__(\"Leeroy Jenkins\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(Summon(Whelp(), 2), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 2, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LeperGnome", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Leper Gnome"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class LeperGnome(MinionCard):\n    def __init__(self):\n        super().__init__(\"Leper Gnome\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, deathrattle=Deathrattle(Damage(2), HeroSelector(EnemyPlayer())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LightningBolt", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lightning Bolt"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "overload", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class LightningBolt(SpellCard):\n    def __init__(self):\n        super().__init__(\"Lightning Bolt\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(3), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LightningStorm", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lightning Storm"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 2}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"attr": "random_amount", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class LightningStorm(SpellCard):\n    def __init__(self):\n        super().__init__(\"Lightning Storm\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.random_amount(2, 3)), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Lightspawn", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lightspawn"}, {"_type": "Num", "n": 4}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "AttackEqualsHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Lightspawn(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lightspawn\", 4, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 5, buffs=[Buff(AttackEqualsHealth())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LootHoarder", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Loot Hoarder"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class LootHoarder(MinionCard):\n    def __init__(self):\n        super().__init__(\"Loot Hoarder\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, deathrattle=Deathrattle(Draw(), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LordJaraxxus", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lord Jaraxxus"}, {"_type": "Num", "n": 9}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Jaraxxus", "_type": "Name"}}], "func": {"id": "ReplaceHeroWithMinion", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Remove", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BloodFury", "_type": "Name"}}], "func": {"id": "Equip", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 15}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class LordJaraxxus(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lord Jaraxxus\", 9, CHARACTER_CLASS.WARLOCK, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry=(Battlecry(ReplaceHeroWithMinion(Jaraxxus()), HeroSelector()), Battlecry(Remove(), SelfSelector()), Battlecry(Equip(BloodFury()), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(3, 15)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LordJaraxxus", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lord Jaraxxus"}, {"_type": "Num", "n": 9}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Jaraxxus", "_type": "Name"}}], "func": {"id": "ReplaceHeroWithMinion", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Remove", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BloodFury", "_type": "Name"}}], "func": {"id": "Equip", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 15}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class LordJaraxxus(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lord Jaraxxus\", 9, CHARACTER_CLASS.WARLOCK, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry=(Battlecry(ReplaceHeroWithMinion(Jaraxxus()), HeroSelector()), Battlecry(Remove(), SelfSelector()), Battlecry(Equip(BloodFury()), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(3, 15)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LorewalkerCho", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lorewalker Cho"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LAST_CARD", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "OtherPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class LorewalkerCho(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lorewalker Cho\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(0, 4, effects=[Effect(SpellCast(player=BothPlayer()), ActionTag(AddCard(CardQuery(source=CARD_SOURCE.LAST_CARD)), PlayerSelector(OtherPlayer())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MadBomber", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mad Bomber"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MadBomber(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mad Bomber\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), CharacterSelector(players=BothPlayer(), picker=RandomPicker(3))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Malygos", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Malygos"}, {"_type": "Num", "n": 9}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 12}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_damage", "value": {"_type": "Num", "n": 5}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Malygos(MinionCard):\n    def __init__(self):\n        super().__init__(\"Malygos\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 12, spell_damage=5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ManaAddict", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mana Addict"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ManaAddict(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mana Addict\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(BuffUntil(ChangeAttack(2), TurnEnded())), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ManaTideTotem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mana Tide Totem"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ManaTideTotem(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mana Tide Totem\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, effects=[Effect(TurnEnded(), ActionTag(Draw(), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MarkOfNature", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mark of Nature"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"name": "MarkOfNatureAttack", "_type": "ClassDef", "bases": [{"id": "ChoiceCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mark of Nature +4 Attack"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}]}, {"name": "MarkOfNatureHealth", "_type": "ClassDef", "bases": [{"id": "ChoiceCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mark of Nature +4 Health"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": true}}]}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, {"_type": "Assign", "targets": [{"id": "option", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "func": {"id": "MarkOfNatureAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MarkOfNatureHealth", "_type": "Name"}}]}, {"id": "player", "_type": "Name"}], "func": {"attr": "choose_option", "_type": "Attribute", "value": {"attr": "agent", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"id": "option", "_type": "Name"}}}}]}]}]}, "orig_code": "class MarkOfNature(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mark of Nature\", 3, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        class MarkOfNatureAttack(ChoiceCard):\n            def __init__(self):\n                super().__init__(\"Mark of Nature +4 Attack\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n            def use(self, player, game):\n                target.change_attack(4)\n\n        class MarkOfNatureHealth(ChoiceCard):\n            def __init__(self):\n                super().__init__(\"Mark of Nature +4 Health\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n            def use(self, player, game):\n                target.increase_health(4)\n                target.taunt = True\n\n        super().use(player, game)\n        target = self.target\n        option = game.current_player.agent.choose_option([MarkOfNatureAttack(), MarkOfNatureHealth()], player)\n        option.use(player, game)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MassDispel", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mass Dispel"}, {"_type": "Num", "n": 4}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "silence", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class MassDispel(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mass Dispel\", 4, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for minion in game.other_player.minions:\n            minion.silence()\n\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MasterSwordsmith", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Master Swordsmith"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MasterSwordsmith(MinionCard):\n    def __init__(self):\n        super().__init__(\"Master Swordsmith\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(TurnEnded(), ActionTag(Give(ChangeAttack(1)), MinionSelector(picker=RandomPicker())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MasterOfDisguise", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Master of Disguise"}, {"_type": "Num", "n": 4}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Stealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MasterOfDisguise(MinionCard):\n    def __init__(self):\n        super().__init__(\"Master of Disguise\", 4, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE, battlecry=Battlecry(Give(Stealth()), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MillhouseManastorm", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Millhouse Manastorm"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 100}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsSpell", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}], "func": {"id": "AuraUntil", "_type": "Name"}}], "func": {"id": "GiveAura", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MillhouseManastorm(MinionCard):\n    def __init__(self):\n        super().__init__(\"Millhouse Manastorm\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(GiveAura(AuraUntil(ManaChange(-100), CardSelector(condition=IsSpell()), TurnEnded())), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MindControlTech", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mind Control Tech"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Steal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "condition", "value": {"_type": "NameConstant", "value": null}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "OpponentMinionCountIsGreaterThan", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MindControlTech(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mind Control Tech\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Steal(), MinionSelector(players=EnemyPlayer(), condition=None, picker=RandomPicker()), OpponentMinionCountIsGreaterThan(3)) )\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Mindgames", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mindgames"}, {"_type": "Num", "n": 4}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "cards", "_type": "Attribute", "value": {"attr": "deck", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "c"}]}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"attr": "drawn", "_type": "Attribute", "value": {"id": "c", "_type": "Name"}}}, {"_type": "Call", "args": [{"id": "c", "_type": "Name"}, {"id": "MinionCard", "_type": "Name"}], "func": {"id": "isinstance", "_type": "Name"}}]}}], "func": {"attr": "random_draw", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"test": {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"id": "minion_card", "_type": "Name"}}, "_type": "If", "orelse": [{"_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "minion_card", "_type": "Name"}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}], "body": [{"_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}], "value": {"_type": "Call", "func": {"id": "ShadowOfNothing", "_type": "Name"}}}]}, {"_type": "Assign", "targets": [{"attr": "drawn", "_type": "Attribute", "value": {"id": "minion_card", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Num", "n": 0}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "minion_card", "_type": "Name"}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}}]}]}]}, "orig_code": "class Mindgames(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mindgames\", 4, CHARACTER_CLASS.PRIEST, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        minion_card = game.random_draw(game.other_player.deck.cards, lambda c: not c.drawn and isinstance(c, MinionCard))\n        if not minion_card:\n            minion_card = ShadowOfNothing()\n        else:\n            minion_card = copy.copy(minion_card)\n        minion_card.drawn = True\n        minion_card.summon(player, game, 0)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MirrorEntity", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mirror Entity"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": null}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "mirror", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "add_to_board", "_type": "Attribute", "value": {"id": "mirror", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_summoned"}, {"id": "mirror", "_type": "Name"}], "func": {"attr": "trigger", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "after_added"}, {"id": "mirror", "_type": "Name"}], "func": {"attr": "trigger", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": null}}]}]}]}, "orig_code": "class MirrorEntity(SecretCard):\n    def __init__(self):\n        super().__init__(\"Mirror Entity\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n        self.player = None\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.add_to_board(len(self.player.minions))\n            minion.player.trigger(\"minion_summoned\", mirror)\n            minion.player.trigger(\"after_added\", mirror)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind(\"minion_played\", self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player.unbind(\"minion_played\", self._reveal)\n        self.player = None\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MoltenGiant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Molten Giant"}, {"_type": "Num", "n": 20}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "damage"}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MoltenGiant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Molten Giant\", 20, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, buffs=[Buff(ManaChange(Attribute(\"damage\", HeroSelector()), -1))])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MortalStrike", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mortal Strike"}, {"_type": "Num", "n": 4}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"attr": "health", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "comparators": [{"_type": "Num", "n": 12}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class MortalStrike(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mortal Strike\", 4, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health <= 12:\n            self.target.damage(player.effective_spell_damage(6), self)\n        else:\n            self.target.damage(player.effective_spell_damage(4), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MountainGiant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mountain Giant"}, {"_type": "Num", "n": 12}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class MountainGiant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mountain Giant\", 12, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, buffs=[Buff(ManaChange(Count(CardSelector()), -1))])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MurlocTidecaller", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Murloc Tidecaller"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSummoned", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MurlocTidecaller(MinionCard):\n    def __init__(self):\n        super().__init__(\"Murloc Tidecaller\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 2, effects=[(Effect(MinionSummoned(IsType(MINION_TYPE.MURLOC), player=BothPlayer()), ActionTag(Give(ChangeAttack(1)), SelfSelector())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MurlocWarleader", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Murloc Warleader"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MurlocWarleader(MinionCard):\n    def __init__(self):\n        super().__init__(\"Murloc Warleader\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 3, auras=[Aura(ChangeAttack(2), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer())), Aura(ChangeHealth(1), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "NatPagle", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nat Pagle"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "OneIn", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class NatPagle(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nat Pagle\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(0, 4, effects=[Effect(TurnStarted(), ActionTag(Draw(), PlayerSelector(), OneIn(2)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Naturalize", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Naturalize"}, {"_type": "Num", "n": 1}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Naturalize(SpellCard):\n    def __init__(self):\n        super().__init__(\"Naturalize\", 1, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.other_player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nightmare", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nightmare"}, {"_type": "Num", "n": 0}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"_type": "Call", "func": {"id": "CurrentPlayer", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}], "func": {"attr": "add_effect", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Nightmare(SpellCard):\n    def __init__(self):\n        super().__init__(\"Nightmare\", 0, CHARACTER_CLASS.DREAM, CARD_RARITY.COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(5)))\n        self.target.add_buff(Buff(ChangeHealth(5)))\n        self.target.add_effect(Effect(TurnStarted(player=CurrentPlayer()), ActionTag(Kill(), SelfSelector())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nozdormu", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nozdormu"}, {"_type": "Num", "n": 9}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Nozdormu(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nozdormu\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Onyxia", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Onyxia"}, {"_type": "Num", "n": 9}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Whelp", "_type": "Name"}}, {"_type": "Num", "n": 6}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Onyxia(MinionCard):\n    def __init__(self):\n        super().__init__(\"Onyxia\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(Summon(Whelp(), 6), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Panther", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Panther"}, {"_type": "Num", "n": 2}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "_"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Panther(MinionCard):\n    def __init__(self):\n        super().__init__(\"Panther\", 2, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False, MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(3, 2, MINION_TYPE.BEAST)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PatientAssassin", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Patient Assassin"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DidDamage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}], "func": {"id": "TargetSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class PatientAssassin(MinionCard):\n    def __init__(self):\n        super().__init__(\"Patient Assassin\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, stealth=True, effects=[Effect(DidDamage(), ActionTag(Kill(), TargetSelector(IsMinion())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PerditionsBlade", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Perdition's Blade"}, {"_type": "Num", "n": 3}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}], "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}, {"arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}], "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class PerditionsBlade(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Perdition's Blade\", 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE, battlecry=Battlecry(Damage(1), CharacterSelector(None, picker=UserPicker())), combo=Battlecry(Damage(2), CharacterSelector(None, picker=UserPicker())))\n\n    def create_weapon(self, player):\n        return Weapon(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PintSizedSummoner", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Pint-Sized Summoner"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "func": {"id": "MinionPlaced", "_type": "Name"}}], "func": {"id": "AuraUntil", "_type": "Name"}}], "func": {"id": "GiveAura", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class PintSizedSummoner(MinionCard):\n    def __init__(self):\n        super().__init__(\"Pint-Sized Summoner\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(GiveAura(AuraUntil(ManaChange(-1), CardSelector( condition=IsMinion()), MinionPlaced())), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PitLord", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Pit Lord"}, {"_type": "Num", "n": 4}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class PitLord(MinionCard):\n    def __init__(self):\n        super().__init__(\"Pit Lord\", 4, CHARACTER_CLASS.WARLOCK, CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(Damage(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PowerOverwhelming", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Power Overwhelming"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}], "func": {"attr": "add_effect", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class PowerOverwhelming(SpellCard):\n    def __init__(self):\n        super().__init__(\"Power Overwhelming\", 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.add_effect(Effect(TurnEnded(), ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PriestessOfElune", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Priestess of Elune"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class PriestessOfElune(MinionCard):\n    def __init__(self):\n        super().__init__(\"Priestess of Elune\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Heal(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ProphetVelen", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Prophet Velen"}, {"_type": "Num", "n": 7}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "MultiplySpellDamage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "MultiplyHealAmount", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ProphetVelen(MinionCard):\n    def __init__(self):\n        super().__init__(\"Prophet Velen\", 7, CHARACTER_CLASS.PRIEST, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(7, 7, auras=[Aura(MultiplySpellDamage(2), PlayerSelector()), Aura(MultiplyHealAmount(2), PlayerSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Pyroblast", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Pyroblast"}, {"_type": "Num", "n": 10}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 10}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Pyroblast(SpellCard):\n    def __init__(self):\n        super().__init__(\"Pyroblast\", 10, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(10), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "QuestingAdventurer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Questing Adventurer"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardPlayed", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class QuestingAdventurer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Questing Adventurer\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(CardPlayed(), ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RagingWorgen", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Raging Worgen"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Windfury", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class RagingWorgen(MinionCard):\n    def __init__(self):\n        super().__init__(\"Raging Worgen\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()), Aura(Windfury(), SelfSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RagnarosTheFirelord", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ragnaros the Firelord"}, {"_type": "Num", "n": 8}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 8}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CantAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class RagnarosTheFirelord(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ragnaros the Firelord\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(8, 8, effects=[Effect(TurnEnded(), ActionTag(Damage(8), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker())))], buffs=[Buff(CantAttack())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Rampage", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Rampage"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "filter_func", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "comparators": [{"_type": "Call", "func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}]}, {"_type": "Call", "func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}]}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Rampage(SpellCard):\n    def __init__(self):\n        super().__init__(\"Rampage\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target, filter_func=lambda target: target.health != target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RavenholdtAssassin", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ravenholdt Assassin"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class RavenholdtAssassin(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ravenholdt Assassin\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(7, 5, stealth=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SI7Agent", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "SI:7 Agent"}, {"_type": "Num", "n": 3}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "combo", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SI7Agent(MinionCard):\n    def __init__(self):\n        super().__init__(\"SI:7 Agent\", 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE, combo=Battlecry(Damage(2), CharacterSelector( players=BothPlayer(), picker=UserPicker()) ))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Savagery", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Savagery"}, {"_type": "Num", "n": 1}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Savagery(SpellCard):\n    def __init__(self):\n        super().__init__(\"Savagery\", 1, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(player.hero.calculate_attack()), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SavannahHighmane", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Savannah Highmane"}, {"_type": "Num", "n": 6}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Hyena", "_type": "Name"}}, {"_type": "Num", "n": 2}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SavannahHighmane(MinionCard):\n    def __init__(self):\n        super().__init__(\"Savannah Highmane\", 6, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(6, 5, deathrattle=Deathrattle(Summon(Hyena(), 2), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ScarletCrusader", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Scarlet Crusader"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ScarletCrusader(MinionCard):\n    def __init__(self):\n        super().__init__(\"Scarlet Crusader\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 1, divine_shield=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ScavengingHyena", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Scavenging Hyena"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionDied", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionDied", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ScavengingHyena(MinionCard):\n    def __init__(self):\n        super().__init__(\"Scavenging Hyena\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(MinionDied(IsType(MINION_TYPE.BEAST)), ActionTag(Give(ChangeAttack(2)), SelfSelector())), Effect(MinionDied(IsType(MINION_TYPE.BEAST)), ActionTag(Give(ChangeHealth(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SeaGiant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sea Giant"}, {"_type": "Num", "n": 10}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "NameConstant", "value": null}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SeaGiant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sea Giant\", 10, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, buffs=[Buff(ManaChange(Count(MinionSelector(None, BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Secretkeeper", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Secretkeeper"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsSecret", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Secretkeeper(MinionCard):\n    def __init__(self):\n        super().__init__(\"Secretkeeper\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 2, effects=[Effect(SpellCast(IsSecret(), BothPlayer()), ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SenseDemons", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sense Demons"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "demon_card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "cards", "_type": "Attribute", "value": {"attr": "deck", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "c"}]}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"attr": "drawn", "_type": "Attribute", "value": {"id": "c", "_type": "Name"}}}, {"_type": "Call", "func": {"attr": "is_minion", "_type": "Attribute", "value": {"id": "c", "_type": "Name"}}}, {"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"id": "c", "_type": "Name"}}, "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}}], "func": {"attr": "random_draw", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"test": {"id": "demon_card", "_type": "Name"}, "_type": "If", "orelse": [{"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 10}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"attr": "WorthlessImp", "_type": "Attribute", "value": {"attr": "warlock", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "value": {"id": "player", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Call", "func": {"attr": "WorthlessImp", "_type": "Attribute", "value": {"attr": "warlock", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}], "func": {"attr": "trigger", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}]}], "body": [{"_type": "Assign", "targets": [{"attr": "drawn", "_type": "Attribute", "value": {"id": "demon_card", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": true}}, {"op": {"_type": "Sub"}, "target": {"attr": "left", "_type": "Attribute", "value": {"attr": "deck", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 1}}, {"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 10}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_destroyed"}, {"id": "demon_card", "_type": "Name"}], "func": {"attr": "trigger", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "demon_card", "_type": "Name"}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "demon_card", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "demon_card", "_type": "Name"}], "func": {"attr": "trigger", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}]}]}]}]}]}]}, "orig_code": "class SenseDemons(SpellCard):\n    def __init__(self):\n        super().__init__(\"Sense Demons\", 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for i in range(0, 2):\n            demon_card = game.random_draw(game.current_player.deck.cards, lambda c: not c.drawn and c.is_minion() and c.minion_type == MINION_TYPE.DEMON)\n            if demon_card:\n                demon_card.drawn = True\n                player.deck.left -= 1\n                if len(player.hand) < 10:\n                    player.hand.append(demon_card)\n                    demon_card.player = player\n                    self.trigger(\"card_drawn\", demon_card)\n                else:\n                    player.trigger(\"card_destroyed\", demon_card)\n            else:\n                if len(player.hand) < 10:\n                    player.hand.append(hearthbreaker.cards.minions.warlock.WorthlessImp())\n                    player.hand[-1].player = player\n                    self.trigger(\"card_drawn\", hearthbreaker.cards.minions.warlock.WorthlessImp())\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shadowflame", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadowflame"}, {"_type": "Num", "n": 4}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "shadowflame_damage", "_type": "Name"}], "value": {"_type": "Call", "func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"id": "shadowflame_damage", "_type": "Name"}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Shadowflame(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shadowflame\", 4, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        shadowflame_damage = self.target.calculate_attack()\n        self.target.die(self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(shadowflame_damage), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shadowform", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadowform"}, {"_type": "Num", "n": 3}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"_type": "Call", "args": [{"attr": "power", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"id": "type", "_type": "Name"}}, "comparators": [{"attr": "MindShatter", "_type": "Attribute", "value": {"attr": "powers", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}]}, {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"_type": "Call", "args": [{"attr": "power", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"id": "type", "_type": "Name"}}, "comparators": [{"attr": "MindSpike", "_type": "Attribute", "value": {"attr": "powers", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}]}]}, "_type": "If", "orelse": [{"test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Call", "args": [{"attr": "power", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"id": "type", "_type": "Name"}}, "comparators": [{"attr": "MindSpike", "_type": "Attribute", "value": {"attr": "powers", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"attr": "power", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "value": {"_type": "Call", "func": {"attr": "MindShatter", "_type": "Attribute", "value": {"attr": "powers", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "power", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}]}], "body": [{"_type": "Assign", "targets": [{"attr": "power", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "value": {"_type": "Call", "func": {"attr": "MindSpike", "_type": "Attribute", "value": {"attr": "powers", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "power", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}]}]}]}]}, "orig_code": "class Shadowform(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shadowform\", 3, CHARACTER_CLASS.PRIEST, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        if type(player.hero.power) is not hearthbreaker.powers.MindShatter and type( player.hero.power) is not hearthbreaker.powers.MindSpike:\n            player.hero.power = hearthbreaker.powers.MindSpike()\n            player.hero.power.hero = player.hero\n        elif type(player.hero.power) is hearthbreaker.powers.MindSpike:\n            player.hero.power = hearthbreaker.powers.MindShatter()\n            player.hero.power.hero = player.hero\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shadowstep", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadowstep"}, {"_type": "Num", "n": 0}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "bounce", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 3}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class Shadowstep(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shadowstep\", 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.bounce()\n        self.target.card.add_buff(Buff(ManaChange(-3)))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShieldSlam", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shield Slam"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class ShieldSlam(SpellCard):\n    def __init__(self):\n        super().__init__(\"Shield Slam\", 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(player.hero.armor), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Shieldbearer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shieldbearer"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Shieldbearer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shieldbearer\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 4, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Silence", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Silence"}, {"_type": "Num", "n": 0}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "silence", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Silence(SpellCard):\n    def __init__(self):\n        super().__init__(\"Silence\", 0, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.silence()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SilverHandKnight", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Silver Hand Knight"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Squire", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SilverHandKnight(MinionCard):\n    def __init__(self):\n        super().__init__(\"Silver Hand Knight\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Squire()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SilvermoonGuardian", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Silvermoon Guardian"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SilvermoonGuardian(MinionCard):\n    def __init__(self):\n        super().__init__(\"Silvermoon Guardian\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 3, divine_shield=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Snake", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Snake"}, {"_type": "Num", "n": 0}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Snake(MinionCard):\n    def __init__(self):\n        super().__init__(\"Snake\", 0, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SnakeTrap", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Snake Trap"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "attacker"}, {"_type": "arg", "arg": "target"}]}, "body": [{"test": {"_type": "Call", "args": [{"id": "target", "_type": "Name"}, {"id": "Minion", "_type": "Name"}], "func": {"id": "isinstance", "_type": "Name"}}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "snake", "_type": "Name"}], "value": {"_type": "Call", "func": {"attr": "Snake", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "player", "_type": "Name"}], "value": {"attr": "other_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "snake", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class SnakeTrap(SecretCard):\n    def __init__(self):\n        super().__init__(\"Snake Trap\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.EPIC)\n\n    def activate(self, player):\n        player.game.current_player.bind(\"character_attack\", self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind(\"character_attack\", self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(target, Minion):\n            snake = hearthbreaker.cards.minions.hunter.Snake()\n            player = target.player.game.other_player\n            for i in range(0, 3):\n                snake.summon(player, player.game, len(player.minions))\n            super().reveal()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Snipe", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Snipe"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "NameConstant", "value": null}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Snipe(SecretCard):\n    def __init__(self):\n        super().__init__(\"Snipe\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind(\"minion_played\", self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind(\"minion_played\", self._reveal)\n\n    def _reveal(self, minion):\n        minion.damage(4, None)\n        super().reveal()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SorcerersApprentice", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sorcerer's Apprentice"}, {"_type": "Num", "n": 2}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsSpell", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SorcerersApprentice(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sorcerer's Apprentice\", 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 2, auras=[Aura(ManaChange(-1), CardSelector(condition=IsSpell()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SoulOfTheForest", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Soul of the Forest"}, {"_type": "Num", "n": 4}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"module": "hearthbreaker.cards.minions.druid", "_type": "ImportFrom", "level": 0, "names": [{"name": "Treant", "_type": "alias"}]}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Treant", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "deathrattle", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}}]}]}]}]}, "orig_code": "class SoulOfTheForest(SpellCard):\n    def __init__(self):\n        super().__init__(\"Soul of the Forest\", 4, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Treant\n        for minion in player.minions:\n            minion.deathrattle.append(Deathrattle(Summon(Treant()), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SouthseaCaptain", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Southsea Captain"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SouthseaCaptain(MinionCard):\n    def __init__(self):\n        super().__init__(\"Southsea Captain\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, auras=[Aura(ChangeAttack(1), MinionSelector(IsType(MINION_TYPE.PIRATE))), Aura(ChangeHealth(1), MinionSelector(IsType(MINION_TYPE.PIRATE)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SouthseaDeckhand", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Southsea Deckhand"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Charge", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SouthseaDeckhand(MinionCard):\n    def __init__(self):\n        super().__init__(\"Southsea Deckhand\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, buffs=[Buff(Charge(), GreaterThan(Count(WeaponSelector()), value=0))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Spellbender", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spellbender"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": null}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "body": [{"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "func": {"attr": "is_spell", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}, {"attr": "target", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, {"_type": "Call", "func": {"attr": "is_minion", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, {"attr": "game", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "SpellbenderMinion", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "target", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}], "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": null}}]}]}]}, "orig_code": "class Spellbender(SecretCard):\n    def __init__(self):\n        super().__init__(\"Spellbender\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = None\n\n    def _reveal(self, card, index):\n        if card.is_spell() and len(self.player.minions) < 7 and card.target and card.target.is_minion():\n            SpellbenderMinion().summon(self.player, self.player.game, len(self.player.minions))\n            card.target = self.player.minions[-1]\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind(\"card_played\", self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player.unbind(\"card_played\", self._reveal)\n        self.player = None\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SpiritWolf", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spirit Wolf"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SpiritWolf(MinionCard):\n    def __init__(self):\n        super().__init__(\"Spirit Wolf\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, False)\n\n    def create_minion(self, p):\n        return Minion(2, 3, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SpitefulSmith", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spiteful Smith"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SpitefulSmith(MinionCard):\n    def __init__(self):\n        super().__init__(\"Spiteful Smith\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, enrage=[Aura(ChangeAttack(2), WeaponSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Squire", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Squire"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Squire(MinionCard):\n    def __init__(self):\n        super().__init__(\"Squire\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Squirrel", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Squirrel"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Squirrel(MinionCard):\n    def __init__(self):\n        super().__init__(\"Squirrel\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StampedingKodo", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stampeding Kodo"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "AttackLessThanOrEqualTo", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class StampedingKodo(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stampeding Kodo\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST, battlecry=Battlecry(Kill(), MinionSelector(AttackLessThanOrEqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Starfall", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Starfall"}, {"_type": "Num", "n": 5}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "option", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "func": {"id": "DamageAll", "_type": "Name"}}, {"_type": "Call", "func": {"id": "DamageOne", "_type": "Name"}}]}, {"id": "player", "_type": "Name"}], "func": {"attr": "choose_option", "_type": "Attribute", "value": {"attr": "agent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"id": "option", "_type": "Name"}}}}]}]}]}, "orig_code": "class Starfall(SpellCard):\n    def __init__(self):\n        super().__init__(\"Starfall\", 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) > 0\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = player.agent.choose_option([DamageAll(), DamageOne()], player)\n        option.use(player, game)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StormforgedAxe", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stormforged Axe"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class StormforgedAxe(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Stormforged Axe\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, overload=1)\n\n    def create_weapon(self, player):\n        return Weapon(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "StranglethornTiger", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Stranglethorn Tiger"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class StranglethornTiger(MinionCard):\n    def __init__(self):\n        super().__init__(\"Stranglethorn Tiger\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(5, 5, stealth=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Sunwalker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sunwalker"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Sunwalker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sunwalker\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(4, 5, divine_shield=True, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SwordOfJustice", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sword of Justice"}, {"_type": "Num", "n": 3}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 5}], "func": {"id": "Weapon", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionSummoned", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TargetSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionSummoned", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DecreaseDurability", "_type": "Name"}}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SwordOfJustice(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Sword of Justice\", 3, CHARACTER_CLASS.PALADIN, CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(1, 5, effects=[Effect(MinionSummoned(), ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), TargetSelector())), Effect(MinionSummoned(), ActionTag(DecreaseDurability(), WeaponSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SylvanasWindrunner", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sylvanas Windrunner"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Steal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SylvanasWindrunner(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sylvanas Windrunner\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, deathrattle=Deathrattle(Steal(), MinionSelector(players=EnemyPlayer(), picker=RandomPicker())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TaurenWarrior", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tauren Warrior"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TaurenWarrior(MinionCard):\n    def __init__(self):\n        super().__init__(\"Tauren Warrior\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TempleEnforcer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Temple Enforcer"}, {"_type": "Num", "n": 6}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class TempleEnforcer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Temple Enforcer\", 6, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(3)), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TheBeast", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "The Beast"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FinkleEinhorn", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TheBeast(MinionCard):\n    def __init__(self):\n        super().__init__(\"The Beast\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 7, deathrattle=Deathrattle(Summon(FinkleEinhorn()), PlayerSelector(EnemyPlayer())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TheBlackKnight", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "The Black Knight"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "taunt"}], "func": {"id": "HasStatus", "_type": "Name"}}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class TheBlackKnight(MinionCard):\n    def __init__(self):\n        super().__init__(\"The Black Knight\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(), MinionSelector(HasStatus(\"taunt\"), EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Thoughtsteal", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Thoughtsteal"}, {"_type": "Num", "n": 3}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "new_card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "cards", "_type": "Attribute", "value": {"attr": "deck", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "c"}]}, "body": {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"attr": "drawn", "_type": "Attribute", "value": {"id": "c", "_type": "Name"}}}}], "func": {"attr": "random_draw", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"test": {"id": "new_card", "_type": "Name"}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "new_card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "new_card", "_type": "Name"}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"attr": "drawn", "_type": "Attribute", "value": {"id": "new_card", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": true}}, {"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 10}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_destroyed"}, {"id": "new_card", "_type": "Name"}], "func": {"attr": "trigger", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "new_card", "_type": "Name"}], "func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "player", "_type": "Attribute", "value": {"id": "new_card", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "new_card", "_type": "Name"}], "func": {"attr": "trigger", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}]}]}]}]}]}]}, "orig_code": "class Thoughtsteal(SpellCard):\n    def __init__(self):\n        super().__init__(\"Thoughtsteal\", 3, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            new_card = game.random_draw(game.other_player.deck.cards, lambda c: not c.drawn)\n            if new_card:\n                new_card = copy.copy(new_card)\n                new_card.drawn = True\n                if len(player.hand) < 10:\n                    player.hand.append(new_card)\n                    new_card.player = player\n                    self.trigger(\"card_drawn\", new_card)\n                else:\n                    player.trigger(\"card_destroyed\", new_card)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TirionFordring", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tirion Fordring"}, {"_type": "Num", "n": 8}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "divine_shield", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Ashbringer", "_type": "Name"}}], "func": {"id": "Equip", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class TirionFordring(MinionCard):\n    def __init__(self):\n        super().__init__(\"Tirion Fordring\", 8, CHARACTER_CLASS.PALADIN, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 6, divine_shield=True, taunt=True, deathrattle=Deathrattle(Equip(Ashbringer()), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Treant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Treant"}, {"_type": "Num", "n": 1}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "_"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Treant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Treant\", 1, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Treant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Treant"}, {"_type": "Num", "n": 1}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "_"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Treant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Treant\", 1, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Treant", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Treant"}, {"_type": "Num", "n": 1}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "_"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Treant(MinionCard):\n    def __init__(self):\n        super().__init__(\"Treant\", 1, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TwilightDrake", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Twilight Drake"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class TwilightDrake(MinionCard):\n    def __init__(self):\n        super().__init__(\"Twilight Drake\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TwistingNether", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Twisting Nether"}, {"_type": "Num", "n": 8}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class TwistingNether(SpellCard):\n    def __init__(self):\n        super().__init__(\"Twisting Nether\", 8, CHARACTER_CLASS.WARLOCK, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.die(self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "UnboundElemental", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Unbound Elemental"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HasOverload", "_type": "Name"}}], "func": {"id": "CardPlayed", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "HasOverload", "_type": "Name"}}], "func": {"id": "CardPlayed", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class UnboundElemental(MinionCard):\n    def __init__(self):\n        super().__init__(\"Unbound Elemental\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, effects=[Effect(CardPlayed(HasOverload()), ActionTag(Give(ChangeAttack(1)), SelfSelector())), Effect(CardPlayed(HasOverload()), ActionTag(Give(ChangeHealth(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "UnleashTheHounds", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Unleash the Hounds"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}, "body": {"_type": "NameConstant", "value": true}}], "func": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "target": {"id": "target", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "hound", "_type": "Name"}], "value": {"_type": "Call", "func": {"attr": "Hound", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "hound", "_type": "Name"}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 1}]}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}}]}]}]}, "orig_code": "class UnleashTheHounds(SpellCard):\n    def __init__(self):\n        super().__init__(\"Unleash the Hounds\", 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        for target in hearthbreaker.targeting.find_enemy_minion_spell_target(player.game, lambda x: True):\n            hound = hearthbreaker.cards.minions.hunter.Hound()\n            hound.summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) >= 1 and len(player.minions) < 7\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "VentureCoMercenary", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Venture Co. Mercenary"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class VentureCoMercenary(MinionCard):\n    def __init__(self):\n        super().__init__(\"Venture Co. Mercenary\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 6, auras=[Aura(ManaChange(3), CardSelector(condition=IsMinion()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "VioletApprentice", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Violet Apprentice"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class VioletApprentice(MinionCard):\n    def __init__(self):\n        super().__init__(\"Violet Apprentice\", 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "VioletTeacher", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Violet Teacher"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "VioletApprentice", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class VioletTeacher(MinionCard):\n    def __init__(self):\n        super().__init__(\"Violet Teacher\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, effects=[Effect(SpellCast(), ActionTag(Summon(VioletApprentice()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "VoidTerror", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Void Terror"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "health"}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "attack"}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class VoidTerror(MinionCard):\n    def __init__(self):\n        super().__init__(\"Void Terror\", 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=(Battlecry( Give([Buff(ChangeHealth(Attribute(\"health\", MinionSelector(Adjacent())))), Buff(ChangeAttack(Attribute(\"attack\", MinionSelector(Adjacent()))))]), SelfSelector()), Battlecry(Kill(), MinionSelector(Adjacent()))))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Whelp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Whelp"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Whelp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Whelp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Whelp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Whelp"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Whelp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Whelp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WildPyromancer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wild Pyromancer"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsSpell", "_type": "Name"}}], "func": {"id": "CardUsed", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "NameConstant", "value": null}, "_type": "keyword"}, {"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class WildPyromancer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Wild Pyromancer\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(Damage(1), MinionSelector(condition=None, players=BothPlayer())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WindfuryHarpy", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Windfury Harpy"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "windfury", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class WindfuryHarpy(MinionCard):\n    def __init__(self):\n        super().__init__(\"Windfury Harpy\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, windfury=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WorthlessImp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Worthless Imp"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class WorthlessImp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Worthless Imp\", 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, False, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Wrath", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wrath"}, {"_type": "Num", "n": 2}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"name": "WrathOne", "_type": "ClassDef", "bases": [{"id": "ChoiceCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wrath 1 Damage"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "wrath", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}, {"name": "WrathThree", "_type": "ClassDef", "bases": [{"id": "ChoiceCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wrath 3 Damage"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "wrath", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "option", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "func": {"id": "WrathOne", "_type": "Name"}}, {"_type": "Call", "func": {"id": "WrathThree", "_type": "Name"}}]}, {"id": "player", "_type": "Name"}], "func": {"attr": "choose_option", "_type": "Attribute", "value": {"attr": "agent", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, {"_type": "Assign", "targets": [{"id": "wrath", "_type": "Name"}], "value": {"id": "self", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"id": "option", "_type": "Name"}}}}]}]}]}, "orig_code": "class Wrath(SpellCard):\n    def __init__(self):\n        super().__init__(\"Wrath\", 2, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        class WrathOne(ChoiceCard):\n            def __init__(self):\n                super().__init__(\"Wrath 1 Damage\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n            def use(self, player, game):\n                target.damage(player.effective_spell_damage(1), wrath)\n                player.draw()\n\n        class WrathThree(ChoiceCard):\n            def __init__(self):\n                super().__init__(\"Wrath 3 Damage\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n            def use(self, player, game):\n                target.damage(player.effective_spell_damage(3), wrath)\n\n        super().use(player, game)\n        option = game.current_player.agent.choose_option([WrathOne(), WrathThree()], player)\n        target = self.target\n        wrath = self\n        option.use(player, game)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "YoungDragonhawk", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Young Dragonhawk"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "windfury", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class YoungDragonhawk(MinionCard):\n    def __init__(self):\n        super().__init__(\"Young Dragonhawk\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, windfury=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "YoungPriestess", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Young Priestess"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class YoungPriestess(MinionCard):\n    def __init__(self):\n        super().__init__(\"Young Priestess\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[Effect(TurnEnded(), ActionTag(Give(ChangeHealth(1)), MinionSelector(picker=RandomPicker())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "YouthfulBrewmaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Youthful Brewmaster"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Bounce", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class YouthfulBrewmaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Youthful Brewmaster\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Ysera", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ysera"}, {"_type": "Num", "n": 9}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Assign", "targets": [{"id": "dream_card_list", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "EmeraldDrake", "_type": "Name"}}, {"_type": "Call", "func": {"id": "LaughingSister", "_type": "Name"}}, {"_type": "Call", "func": {"id": "Nightmare", "_type": "Name"}}, {"_type": "Call", "func": {"id": "YseraAwakens", "_type": "Name"}}, {"_type": "Call", "func": {"id": "Dream", "_type": "Name"}}]}}, {"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 12}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LIST", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "source_list", "value": {"id": "dream_card_list", "_type": "Name"}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Ysera(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ysera\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        dream_card_list = [EmeraldDrake(), LaughingSister(), Nightmare(), YseraAwakens(), Dream()]\n        return Minion(4, 12, effects=[Effect(TurnEnded(), ActionTag(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=dream_card_list)), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "YseraAwakens", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ysera Awakens"}, {"_type": "Num", "n": 2}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}], "func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "m"}]}, "body": {"op": {"_type": "Or"}, "_type": "BoolOp", "values": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"_type": "Call", "func": {"attr": "is_minion", "_type": "Attribute", "value": {"id": "m", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"attr": "name", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "m", "_type": "Name"}}}, "comparators": [{"_type": "Str", "s": "Ysera"}]}]}}, {"id": "targets", "_type": "Name"}], "func": {"id": "filter", "_type": "Name"}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 5}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class YseraAwakens(SpellCard):\n    def __init__(self):\n        super().__init__(\"Ysera Awakens\", 2, CHARACTER_CLASS.DREAM, CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.other_player.minions)\n        targets.extend(player.game.current_player.minions)\n        targets.append(player.game.other_player.hero)\n        targets.append(player.game.current_player.hero)\n        targets = filter(lambda m: not m.is_minion() or m.card.name != \"Ysera\", targets)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(5), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AxeFlinger", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Axe Flinger"}, {"_type": "Num", "n": 4}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Damaged", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AxeFlinger(MinionCard):\n    def __init__(self):\n        super().__init__(\"Axe Flinger\", 4, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 5, effects=[Effect(Damaged(), ActionTag(Damage(2), HeroSelector(EnemyPlayer())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BlackwingTechnician", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blackwing Technician"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "args": [{"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BlackwingTechnician(MinionCard):\n    def __init__(self):\n        super().__init__(\"Blackwing Technician\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=(Battlecry(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0))))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Chromaggus", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Chromaggus"}, {"_type": "Num", "n": 8}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardDrawn", "_type": "Name"}}, {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LAST_DRAWN", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "make_copy", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}]}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Chromaggus(MinionCard):\n    def __init__(self):\n        super().__init__(\"Chromaggus\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(6, 8, effects=[Effect(CardDrawn(), [ActionTag(AddCard(CardQuery(source=CARD_SOURCE.LAST_DRAWN, make_copy=True)), PlayerSelector())])])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CoreRager", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Core Rager"}, {"_type": "Num", "n": 4}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Not", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class CoreRager(MinionCard):\n    def __init__(self):\n        super().__init__(\"Core Rager\", 4, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST, battlecry=(Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]), SelfSelector(), Not(GreaterThan(Count(CardSelector()), value=0)))))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DarkIronSkulker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dark Iron Skulker"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsDamaged", "_type": "Name"}}], "func": {"id": "Not", "_type": "Name"}}, "_type": "keyword"}, {"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DarkIronSkulker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dark Iron Skulker\", 5, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE, battlecry=Battlecry(Damage(2), MinionSelector(condition=Not(IsDamaged()), players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Demonwrath", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Demonwrath"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"test": {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}, "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}]}, "orig_code": "class Demonwrath(SpellCard):\n    def __init__(self):\n        super().__init__(\"Demonwrath\", 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            if minion.card.minion_type is not MINION_TYPE.DEMON:\n                minion.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DragonConsort", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dragon Consort"}, {"_type": "Num", "n": 5}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 3}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "args": [{"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "CardPlayed", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"id": "AuraUntil", "_type": "Name"}}]}], "func": {"id": "GiveAura", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DragonConsort(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dragon Consort\", 5, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(condition=IsType(MINION_TYPE.DRAGON)), CardPlayed(IsType(MINION_TYPE.DRAGON)), False)]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DragonEgg", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dragon Egg"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Damaged", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BlackWhelp", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class DragonEgg(MinionCard):\n    def __init__(self):\n        super().__init__(\"Dragon Egg\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(Damaged(), ActionTag(Summon(BlackWhelp()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DragonsBreath", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Dragon's Breath"}, {"_type": "Num", "n": 5}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DeadMinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class DragonsBreath(SpellCard):\n    def __init__(self):\n        super().__init__(\"Dragon's Breath\", 5, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target, buffs=[Buff(ManaChange(Count(DeadMinionSelector(players=BothPlayer())), -1))])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DruidOfTheFlame", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Druid of the Flame"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameCatForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameCat", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameBirdForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameBird", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DruidOfTheFlame(MinionCard):\n    def __init__(self):\n        super().__init__(\"Druid of the Flame\", 3, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, choices=[\n            Choice(FlameCatForm(), Transform(FlameCat()), SelfSelector()),\n            Choice(FlameBirdForm(), Transform(FlameBird()), SelfSelector())\n        ])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DruidOfTheFlame", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Druid of the Flame"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameCatForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameCat", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameBirdForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameBird", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DruidOfTheFlame(MinionCard):\n    def __init__(self):\n        super().__init__(\"Druid of the Flame\", 3, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, choices=[\n            Choice(FlameCatForm(), Transform(FlameCat()), SelfSelector()),\n            Choice(FlameBirdForm(), Transform(FlameBird()), SelfSelector())\n        ])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DruidOfTheFlame", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Druid of the Flame"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameCatForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameCat", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameBirdForm", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "FlameBird", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DruidOfTheFlame(MinionCard):\n    def __init__(self):\n        super().__init__(\"Druid of the Flame\", 3, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, choices=[\n            Choice(FlameCatForm(), Transform(FlameCat()), SelfSelector()),\n            Choice(FlameBirdForm(), Transform(FlameBird()), SelfSelector())\n        ])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EmperorThaurissan", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Emperor Thaurissan"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}]}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class EmperorThaurissan(MinionCard):\n    def __init__(self):\n        super().__init__(\"Emperor Thaurissan\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 5, effects=[Effect(TurnEnded(), [ActionTag(Give(Buff(ManaChange(-1))), CardSelector())])])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FireguardDestroyer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Fireguard Destroyer"}, {"_type": "Num", "n": 4}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "RandomAmount", "_type": "Name"}}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class FireguardDestroyer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Fireguard Destroyer\", 4, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, overload=1, battlecry=Battlecry(Give(Buff(ChangeAttack(RandomAmount(1, 4)))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 6)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Flamewaker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flamewaker"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsSpell", "_type": "Name"}}], "func": {"id": "CardUsed", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": null}, {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "RandomPicker", "_type": "Name"}}], "func": {"id": "CharacterSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Flamewaker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Flamewaker\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 4, effects=[Effect(CardUsed(IsSpell()), ActionTag(Damage(1), CharacterSelector(None, EnemyPlayer(), RandomPicker(2))))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GangUp", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gang Up"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Call", "args": [{"attr": "card", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"id": "type", "_type": "Name"}}}], "func": {"attr": "put_back", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class GangUp(SpellCard):\n    def __init__(self):\n        super().__init__(\"Gang Up\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(3):\n            player.put_back(type(self.target.card)())\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GrimPatron", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Grim Patron"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Damaged", "_type": "Name"}}, {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "GrimPatron", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "health"}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}]}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class GrimPatron(MinionCard):\n    def __init__(self):\n        super().__init__(\"Grim Patron\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, effects=[Effect(Damaged(), [ActionTag(Summon(GrimPatron()), PlayerSelector(), GreaterThan(Attribute(\"health\", SelfSelector()), value=0))])])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ImpGangBoss", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Imp Gang Boss"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Damaged", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Imp", "_type": "Name"}}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ImpGangBoss(MinionCard):\n    def __init__(self):\n        super().__init__(\"Imp Gang Boss\", 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, effects=[Effect(Damaged(), ActionTag(Summon(Imp()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "LavaShock", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lava Shock"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "upcoming_overload", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "value": {"_type": "Num", "n": 0}}, {"op": {"_type": "Add"}, "target": {"attr": "mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "AugAssign", "value": {"attr": "current_overload", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"_type": "Assign", "targets": [{"attr": "current_overload", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "value": {"_type": "Num", "n": 0}}]}]}]}, "orig_code": "class LavaShock(SpellCard):\n    def __init__(self):\n        super().__init__(\"Lava Shock\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        player.upcoming_overload = 0\n        player.mana += player.current_overload\n        player.current_overload = 0\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MajordomoExecutus", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Majordomo Executus"}, {"_type": "Num", "n": 9}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Ragnaros", "_type": "Name"}}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MajordomoExecutus(MinionCard):\n    def __init__(self):\n        super().__init__(\"Majordomo Executus\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(9, 7, deathrattle=[Deathrattle(Transform(Ragnaros()), HeroSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nefarian", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nefarian"}, {"_type": "Num", "n": 9}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "character_class"}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "IsClass", "_type": "Name"}}, {"_type": "Call", "func": {"id": "IsSpell", "_type": "Name"}}]}, "_type": "keyword"}]}, {"_type": "Num", "n": 2}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Nefarian(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nefarian\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(AddCard(CardQuery(conditions=[ IsClass(Attribute(\"character_class\", HeroSelector(EnemyPlayer()))), IsSpell() ]), 2), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "QuickShot", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Quick Shot"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Call", "args": [{"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class QuickShot(SpellCard):\n    def __init__(self):\n        super().__init__(\"Quick Shot\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        if len(player.hand) == 0:\n            player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "RendBlackhand", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Rend Blackhand"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionIsNotTarget", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"id": "IsRarity", "_type": "Name"}}], "func": {"id": "And", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "args": [{"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class RendBlackhand(MinionCard):\n    def __init__(self):\n        super().__init__(\"Rend Blackhand\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=(Battlecry(Kill(), MinionSelector(And(MinionIsNotTarget(), IsRarity(CARD_RARITY.LEGENDARY)), BothPlayer(), UserPicker()), GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0))))\n\n    def create_minion(self, player):\n        return Minion(8, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Resurrect", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Resurrect"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"module": "hearthbreaker.engine", "_type": "ImportFrom", "level": 0, "names": [{"name": "card_lookup", "_type": "alias"}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Call", "args": [{"attr": "graveyard", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 0}]}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 7}]}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "card_name", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "graveyard", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "card_name", "_type": "Name"}], "func": {"id": "card_lookup", "_type": "Name"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}], "func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Resurrect(SpellCard):\n    def __init__(self):\n        super().__init__(\"Resurrect\", 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        from hearthbreaker.engine import card_lookup\n        super().use(player, game)\n        if len(player.graveyard) > 0 and len(player.minions) < 7:\n            card_name = game.random_choice(player.graveyard)\n            card = card_lookup(card_name)\n            card.summon(player, game, len(player.minions))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Revenge", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Revenge"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"attr": "health", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "comparators": [{"_type": "Num", "n": 12}]}, "_type": "If", "orelse": [{"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}], "body": [{"iter": {"id": "targets", "_type": "Name"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}]}, "orig_code": "class Revenge(SpellCard):\n    def __init__(self):\n        super().__init__(\"Revenge\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        if player.hero.health <= 12:\n            for minion in targets:\n                minion.damage(player.effective_spell_damage(3), self)\n        else:\n            for minion in targets:\n                minion.damage(player.effective_spell_damage(1), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "VolcanicDrake", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Volcanic Drake"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DeadMinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class VolcanicDrake(MinionCard):\n    def __init__(self):\n        super().__init__(\"Volcanic Drake\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, buffs=[Buff(ManaChange(Count(DeadMinionSelector(players=BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(6, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "VolcanicLumberer", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Volcanic Lumberer"}, {"_type": "Num", "n": 9}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DeadMinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}, {"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "ManaChange", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class VolcanicLumberer(MinionCard):\n    def __init__(self):\n        super().__init__(\"Volcanic Lumberer\", 9, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE, buffs=[Buff(ManaChange(Count(DeadMinionSelector(players=BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(7, 8, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Whelp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Whelp"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Whelp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Whelp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Whelp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Whelp"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Whelp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Whelp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Whelp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Whelp"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Whelp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Whelp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
