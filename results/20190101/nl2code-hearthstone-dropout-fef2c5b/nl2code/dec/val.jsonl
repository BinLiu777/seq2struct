{"tree": {"_type": "Module", "body": [{"name": "AssassinsBlade", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Assassin's Blade"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "func": {"id": "Weapon", "_type": "Name"}}}]}]}]}, "orig_code": "class AssassinsBlade(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Boulderfist Ogre"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BoulderfistOgre(MinionCard):\n    def __init__(self):\n        super().__init__(\"Boulderfist Ogre\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Deadly Poison"}, {"_type": "Num", "n": 1}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"op": {"_type": "Add"}, "target": {"attr": "base_attack", "_type": "Attribute", "value": {"attr": "weapon", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 2}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"attr": "weapon", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "NameConstant", "value": null}]}]}}]}]}]}, "orig_code": "class DeadlyPoison(SpellCard):\n    def __init__(self):\n        super().__init__(\"Deadly Poison\", 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class FireElemental(MinionCard):\n    def __init__(self):\n        super().__init__(\"Fire Elemental\", 6, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class GnomishInventor(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gnomish Inventor\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Heroic Strike"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class HeroicStrike(SpellCard):\n    def __init__(self):\n        super().__init__(\"Heroic Strike\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ironbark Protector"}, {"_type": "Num", "n": 8}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class IronbarkProtector(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ironbark Protector\", 8, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}]}]}]}, "orig_code": "class MarkOfTheWild(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mark of the Wild\", 2, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MultiShot", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Multi-Shot"}, {"_type": "Num", "n": 4}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "target", "_type": "Name"}], "func": {"attr": "remove", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}}]}]}, {"name": "can_use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 2}]}]}}]}]}]}, "orig_code": "class MultiShot(SpellCard):\n    def __init__(self):\n        super().__init__(\"Multi-Shot\", 4, CHARACTER_CLASS.HUNTER, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) >= 2\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "PowerWordShield", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Power Word: Shield"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class PowerWordShield(SpellCard):\n    def __init__(self):\n        super().__init__(\"Power Word: Shield\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.increase_health(2)\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SenjinShieldmasta", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sen'jin Shieldmasta"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SenjinShieldmasta(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sinister Strike"}, {"_type": "Num", "n": 1}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class SinisterStrike(SpellCard):\n    def __init__(self):\n        super().__init__(\"Sinister Strike\", 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Succubus"}, {"_type": "Num", "n": 2}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Discard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Succubus(MinionCard):\n    def __init__(self):\n        super().__init__(\"Succubus\", 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "War Golem"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class WarGolem(MinionCard):\n    def __init__(self):\n        super().__init__(\"War Golem\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "MinionIsNotTarget", "_type": "Name"}}, {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}], "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Kill", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TargetSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}]}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Acidmaw(MinionCard):\n    def __init__(self):\n        super().__init__(\"Acidmaw\", 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(), TargetSelector())])])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Boar(MinionCard):\n    def __init__(self):\n        super().__init__(\"Boar\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Num", "n": 2}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "choices", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "AttackMode", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TankMode", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Choice", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AnodizedRoboCub(MinionCard):\n    def __init__(self):\n        super().__init__(\"Anodized Robo Cub\", 2, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[Choice(AttackMode(), Give([Buff(ChangeAttack(1))]), SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Burrowing Mine"}, {"_type": "Num", "n": 0}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Drawn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 10}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Drawn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Discard", "_type": "Name"}, "keywords": [{"arg": "query", "value": {"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LAST_DRAWN", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}]}, "_type": "keyword"}]}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Drawn", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Draw", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}]}, "orig_code": "class BurrowingMine(SpellCard):\n    def __init__(self):\n        super().__init__(\"Burrowing Mine\", 0, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard(query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)), PlayerSelector())), Effect(Drawn(), ActionTag(Draw(), PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Crackle"}, {"_type": "Num", "n": 2}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}, {"arg": "overload", "value": {"_type": "Num", "n": 1}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 6}], "func": {"attr": "random_amount", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Crackle(SpellCard):\n    def __init__(self):\n        super().__init__(\"Crackle\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(game.random_amount(3, 6)), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class EmergencyCoolant(SpellCard):\n    def __init__(self):\n        super().__init__(\"Emergency Coolant\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "windfury", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class FlyingMachine(MinionCard):\n    def __init__(self):\n        super().__init__(\"Flying Machine\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "GoblinAutoBarber", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Num", "n": 2}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "IncreaseWeaponAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class GoblinAutoBarber(MinionCard):\n    def __init__(self):\n        super().__init__(\"Goblin Auto-Barber\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Num", "n": 3}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class IronSensei(MinionCard):\n    def __init__(self):\n        super().__init__(\"Iron Sensei\", 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MalGanis", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Immune", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MalGanis(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2), MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(), HeroSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DidDamage", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EventValue", "_type": "Name"}}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MistressOfPain(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mistress of Pain\", 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(EventValue()), HeroSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Powermace"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Weapon", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Powermace(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Powermace\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.MECH), picker=RandomPicker())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Num", "n": 4}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ScrewjankClunker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Screwjank Clunker\", 4, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SneedsOldShredder", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sneed's Old Shredder"}, {"_type": "Num", "n": 8}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"id": "IsRarity", "_type": "Name"}}, {"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}]}, "_type": "keyword"}]}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SneedsOldShredder(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"module": "hearthbreaker.cards.spells.neutral", "_type": "ImportFrom", "level": 0, "names": [{"name": "spare_part_list", "_type": "alias"}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LIST", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "source_list", "value": {"id": "spare_part_list", "_type": "Name"}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"module": "hearthbreaker.cards.spells.neutral", "_type": "ImportFrom", "level": 0, "names": [{"name": "spare_part_list", "_type": "alias"}]}, {"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LIST", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "source_list", "value": {"id": "spare_part_list", "_type": "Name"}, "_type": "keyword"}]}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Toshley(MinionCard):\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__(\"Toshley\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Warbot(MinionCard):\n    def __init__(self):\n        super().__init__(\"Warbot\", 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Deathlord"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}, {"arg": "deathrattle", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "IsMinion", "_type": "Name"}}]}, "_type": "keyword"}, {"arg": "source", "value": {"attr": "MY_DECK", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Summon", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "Deathrattle", "_type": "Name"}}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Deathlord(MinionCard):\n    def __init__(self):\n        super().__init__(\"Deathlord\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)), PlayerSelector(EnemyPlayer())))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "NerubarWeblord", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nerub'ar Weblord"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "auras", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HasBattlecry", "_type": "Name"}}], "func": {"id": "CardSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class NerubarWeblord(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(BothPlayer(), HasBattlecry()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spectral Knight"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "spell_targetable", "value": {"_type": "NameConstant", "value": false}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class SpectralKnight(MinionCard):\n    def __init__(self):\n        super().__init__(\"Spectral Knight\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Silence", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class WailingSoul(MinionCard):\n    def __init__(self):\n        super().__init__(\"Wailing Soul\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Amani Berserker"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "enrage", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Aura", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class AmaniBerserker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Amani Berserker\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Archmage Antonidas"}, {"_type": "Num", "n": 7}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"attr": "Fireball", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "func": {"id": "AddCard", "_type": "Name"}}, {"_type": "Call", "func": {"id": "PlayerSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ArchmageAntonidas(MinionCard):\n    def __init__(self):\n        super().__init__(\"Archmage Antonidas\", 7, CHARACTER_CLASS.MAGE, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(hearthbreaker.cards.Fireball()), PlayerSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bananas"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}, {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Bananas(SpellCard):\n    def __init__(self):\n        super().__init__(\"Bananas\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "DoubleAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class BlessedChampion(SpellCard):\n    def __init__(self):\n        super().__init__(\"Blessed Champion\", 5, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "CabalShadowPriest", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cabal Shadow Priest"}, {"_type": "Num", "n": 6}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Steal", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "AttackLessThanOrEqualTo", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class CabalShadowPriest(MinionCard):\n    def __init__(self):\n        super().__init__(\"Cabal Shadow Priest\", 6, CHARACTER_CLASS.PRIEST, CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Assign", "targets": [{"id": "index", "_type": "Name"}], "value": {"attr": "index", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"attr": "index", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "comparators": [{"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}], "func": {"id": "len", "_type": "Name"}}, "right": {"_type": "Num", "n": 1}}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "Add"}, "_type": "BinOp", "left": {"id": "index", "_type": "Name"}, "right": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"attr": "index", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "comparators": [{"_type": "Num", "n": 0}]}, "_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"slice": {"_type": "Index", "value": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"id": "index", "_type": "Name"}, "right": {"_type": "Num", "n": 1}}}, "_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Frozen", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class ConeOfCold(SpellCard):\n    def __init__(self):\n        super().__init__(\"Cone of Cold\", 4, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n\n        self.target.damage(player.effective_spell_damage(1), self)\n\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Taunt", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DefenderOfArgus(MinionCard):\n    def __init__(self):\n        super().__init__(\"Defender of Argus\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Give([ Buff(Taunt()), Buff(ChangeAttack(1)), Buff(ChangeHealth(1)) ]), MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Num", "n": 5}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "overload", "value": {"_type": "Num", "n": 2}, "_type": "keyword"}]}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "func": {"id": "Weapon", "_type": "Name"}, "keywords": [{"arg": "buffs", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Windfury", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Doomhammer(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Doomhammer\", 5, CHARACTER_CLASS.SHAMAN, CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "silence", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}]}]}]}, "orig_code": "class EarthShock(SpellCard):\n    def __init__(self):\n        super().__init__(\"Earth Shock\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "EyeForAnEye", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Eye for an Eye"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "character"}, {"_type": "arg", "arg": "attacker"}, {"_type": "arg", "arg": "amount"}]}, "body": [{"test": {"_type": "Call", "func": {"attr": "is_hero", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "amount", "_type": "Name"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}}}}}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_damaged"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_damaged"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class EyeForAnEye(SecretCard):\n    def __init__(self):\n        super().__init__(\"Eye for an Eye\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind(\"character_damaged\", self._reveal)\n\n    def deactivate(self, player):\n        player.unbind(\"character_damaged\", self._reveal)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flare"}, {"_type": "Num", "n": 2}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"iter": {"_type": "Call", "args": [{"id": "game", "_type": "Name"}, {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "m"}]}, "body": {"attr": "stealth", "_type": "Attribute", "value": {"id": "m", "_type": "Name"}}}], "func": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "targets": [{"attr": "stealth", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": false}}]}, {"iter": {"attr": "secrets", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "target": {"id": "secret", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}], "func": {"attr": "deactivate", "_type": "Attribute", "value": {"id": "secret", "_type": "Name"}}}}]}, {"_type": "Assign", "targets": [{"attr": "secrets", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "value": {"_type": "List"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class Flare(SpellCard):\n    def __init__(self):\n        super().__init__(\"Flare\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game, lambda m: m.stealth):\n            minion.stealth = False\n\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n\n        game.other_player.secrets = []\n        player.draw()\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Num", "n": 7}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_weapon", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 1}], "func": {"id": "Weapon", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IsHero", "_type": "Name"}}, {"_type": "Call", "func": {"id": "TargetIsMinion", "_type": "Name"}}], "func": {"id": "And", "_type": "Name"}}], "func": {"id": "CharacterAttack", "_type": "Name"}}, {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "IncreaseDurability", "_type": "Name"}}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 1}}], "func": {"id": "IncreaseWeaponAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}, {"_type": "Call", "func": {"id": "AttackCompleted", "_type": "Name"}}], "func": {"id": "BuffUntil", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}]}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Gorehowl(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Gorehowl\", 7, CHARACTER_CLASS.WARRIOR, CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(), TargetIsMinion())), [ActionTag(IncreaseDurability(), WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1), WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1), AttackCompleted())), HeroSelector())])])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "charge", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Hound(MinionCard):\n    def __init__(self):\n        super().__init__(\"Hound\", 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 4}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class InjuredBlademaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Injured Blademaster\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Knife Juggler"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "AfterAdded", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}, {"arg": "condition", "value": {"_type": "NameConstant", "value": null}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class KnifeJuggler(MinionCard):\n    def __init__(self):\n        super().__init__(\"Knife Juggler\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker(), condition=None)))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lightwell"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 5}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Heal", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsDamaged", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class Lightwell(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lightwell\", 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3), CharacterSelector(condition=IsDamaged(), picker=RandomPicker())))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mana Wyrm"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}], "func": {"id": "ActionTag", "_type": "Name"}}], "func": {"id": "Effect", "_type": "Name"}}]}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class ManaWyrm(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mana Wyrm\", 1, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "MogushanWarden", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mogu'shan Warden"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 7}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "taunt", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class MogushanWarden(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"name": "Gain2", "_type": "ClassDef", "bases": [{"id": "ChoiceCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gain 2 mana crystals"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"attr": "max_mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "comparators": [{"_type": "Num", "n": 8}]}, "_type": "If", "orelse": [{"_type": "Assign", "targets": [{"attr": "max_mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "value": {"_type": "Num", "n": 10}}, {"op": {"_type": "Add"}, "target": {"attr": "mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 2}}], "body": [{"op": {"_type": "Add"}, "target": {"attr": "max_mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 2}}, {"op": {"_type": "Add"}, "target": {"attr": "mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "AugAssign", "value": {"_type": "Num", "n": 2}}]}]}]}, {"name": "Draw3", "_type": "ClassDef", "bases": [{"id": "ChoiceCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Draw three cards"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}, {"_type": "Assign", "targets": [{"id": "option", "_type": "Name"}], "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Gain2", "_type": "Name"}}, {"_type": "Call", "func": {"id": "Draw3", "_type": "Name"}}]}, {"id": "player", "_type": "Name"}], "func": {"attr": "choose_option", "_type": "Attribute", "value": {"attr": "agent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"id": "option", "_type": "Name"}}}}]}]}]}, "orig_code": "class Nourish(SpellCard):\n    def __init__(self):\n        super().__init__(\"Nourish\", 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__(\"Gain 2 mana crystals\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__(\"Draw three cards\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Preparation"}, {"_type": "Num", "n": 0}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"_type": "Num", "n": 3}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "func": {"id": "IsSpell", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}}], "func": {"id": "AuraUntil", "_type": "Name"}}], "func": {"attr": "add_aura", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}, "orig_code": "class Preparation(SpellCard):\n    def __init__(self):\n        super().__init__(\"Preparation\", 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=IsSpell()), SpellCast()))\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Repentance"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "minion"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}], "func": {"attr": "set_health_to", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}}]}]}]}, "orig_code": "class Repentance(SecretCard):\n    def __init__(self):\n        super().__init__(\"Repentance\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind(\"minion_played\", self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind(\"minion_played\", self._reveal)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadow of Nothing"}, {"_type": "Num", "n": 0}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class ShadowOfNothing(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shadow of Nothing\", 0, CHARACTER_CLASS.PRIEST, CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Slam"}, {"_type": "Num", "n": 2}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword"}]}}]}, {"name": "use", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}, {"test": {"op": {"_type": "Or"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "comparators": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}]}, {"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}, "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}], "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "draw", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}]}]}]}]}, "orig_code": "class Slam(SpellCard):\n    def __init__(self):\n        super().__init__(\"Slam\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "NONE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Silence", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Spellbreaker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Spellbreaker\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=Battlecry(Silence(), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Taunt", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "Adjacent", "_type": "Name"}}], "func": {"id": "MinionSelector", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class SunfuryProtector(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sunfury Protector\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())), MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "LEGENDARY", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "source", "value": {"attr": "LIST", "_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "source_list", "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Devilsaur", "_type": "Name"}}, {"_type": "Call", "func": {"id": "Squirrel", "_type": "Name"}}]}, "_type": "keyword"}]}], "func": {"id": "Transform", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "RandomPicker", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class TinkmasterOverspark(MinionCard):\n    def __init__(self):\n        super().__init__(\"Tinkmaster Overspark\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "bases": [{"id": "SecretCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Vaporize"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "_reveal", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "attacker"}, {"_type": "arg", "arg": "target"}]}, "body": [{"test": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"id": "target", "_type": "Name"}, "comparators": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}, {"_type": "Call", "func": {"attr": "is_minion", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"attr": "removed", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}]}, "_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "check_delayed", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"id": "attacker", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"attr": "reveal", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}]}, {"name": "activate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "bind", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}, {"name": "deactivate", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"attr": "_reveal", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"attr": "unbind", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}}}]}]}]}, "orig_code": "class Vaporize(SecretCard):\n    def __init__(self):\n        super().__init__(\"Vaporize\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion() and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind(\"character_attack\", self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind(\"character_attack\", self._reveal)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Worgen Infiltrator"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}, "keywords": [{"arg": "stealth", "value": {"_type": "NameConstant", "value": true}, "_type": "keyword"}]}}]}]}]}, "orig_code": "class WorgenInfiltrator(MinionCard):\n    def __init__(self):\n        super().__init__(\"Worgen Infiltrator\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Num", "n": 5}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "Damage", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"_type": "Call", "func": {"id": "BothPlayer", "_type": "Name"}}, "_type": "keyword"}, {"arg": "picker", "value": {"_type": "Call", "func": {"id": "UserPicker", "_type": "Name"}}, "_type": "keyword"}]}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "args": [{"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class BlackwingCorruptor(MinionCard):\n    def __init__(self):\n        super().__init__(\"Blackwing Corruptor\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), CharacterSelector(players=BothPlayer(), picker=UserPicker()), GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeAttack", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 3}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}]}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "health"}, {"_type": "Call", "args": [{"_type": "Call", "func": {"id": "EnemyPlayer", "_type": "Name"}}], "func": {"id": "HeroSelector", "_type": "Name"}}], "func": {"id": "Attribute", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 15}, "_type": "keyword"}]}], "func": {"id": "Not", "_type": "Name"}}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 6}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class DrakonidCrusher(MinionCard):\n    def __init__(self):\n        super().__init__(\"Drakonid Crusher\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]), SelfSelector(), Not(GreaterThan(Attribute('health', HeroSelector(EnemyPlayer())), value=15)))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": false}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class Imp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Imp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"name": "__init__", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "func": {"attr": "__init__", "_type": "Attribute", "value": {"_type": "Call", "func": {"id": "super", "_type": "Name"}}}, "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword"}, {"arg": "battlecry", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 2}], "func": {"id": "ChangeHealth", "_type": "Name"}}], "func": {"id": "Buff", "_type": "Name"}}], "func": {"id": "Give", "_type": "Name"}}, {"_type": "Call", "func": {"id": "SelfSelector", "_type": "Name"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"_type": "Call", "args": [{"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword"}]}], "func": {"id": "Count", "_type": "Name"}}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}]}], "func": {"id": "Battlecry", "_type": "Name"}}, "_type": "keyword"}]}}]}, {"name": "create_minion", "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "func": {"id": "Minion", "_type": "Name"}}}]}]}]}, "orig_code": "class TwilightWhelp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Twilight Whelp\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0))))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
