{"beams": [{"score": -0.13143889009143095, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "Destroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -0.06710052490234375, -0.000527244876138866, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0017986297607421875, -5.161762237548828e-05, -1.33514404296875e-05, -4.57763671875e-05, -0.0008258819580078125, 0.0, -0.004451628774404526, -4.076919867657125e-05, -1.9073486328125e-06, -0.000102996826171875, -2.86102294921875e-05, -4.780292510986328e-05, -7.152555099310121e-07, -2.741813204920618e-06, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -3.7475915845402596, "choice_history": [50, 111, 176, 58, 90, "Acidic", "<UNK>", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "Destroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "Acidic<UNK>Ooze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -3.642730474472046, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -0.06710052490234375, -0.000527244876138866, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0017986297607421875, -5.161762237548828e-05, -1.33514404296875e-05, -4.57763671875e-05, -0.0008258819580078125, 0.0, -0.004451628774404526, -4.076919867657125e-05, -1.9073486328125e-06, -0.000102996826171875, -2.86102294921875e-05, -4.780292510986328e-05, -7.152555099310121e-07, -2.741813204920618e-06, 0.0], "inferred_code": "class Acidic<UNK>Ooze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -3.927178256738898, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "Kill", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -3.8306171894073486, -0.00014041867689229548, -1.9073486328125e-05, -0.0005130767822265625, 0.0, 0.0, -0.03424072265625, -4.76837158203125e-05, -7.62939453125e-06, -0.001140594482421875, -0.0007171630859375, 0.0, -0.0031101128552109003, -2.765635508694686e-05, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-05, -4.398822784423828e-05, -9.536738616588991e-07, -7.152555099310121e-07, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), WeaponSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -3.9553458013648424, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "<UNK>", "Ooze", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "<UNK>Ooze", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -3.2072765827178955, -0.685012936592102, -0.0003875379916280508, -9.918212890625e-05, -5.14984130859375e-05, 0.0, 0.0, -0.0024614334106445312, -9.1552734375e-05, -1.71661376953125e-05, -0.0005645751953125, -0.000518798828125, 0.0, -0.002254846040159464, -1.8596589143271558e-05, -1.9073486328125e-06, -0.0001316070556640625, -2.09808349609375e-05, -4.780292510986328e-05, -7.152555099310121e-07, -8.344646857949556e-07, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>Ooze(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -4.033853709926689, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "<UNK>", "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "<UNK>Destroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -3.2072765827178955, -0.764043927192688, -0.0011142243165522814, -6.866455078125e-05, -2.288818359375e-05, 0.0, 0.0, -0.001300811767578125, -0.0001010894775390625, -1.71661376953125e-05, -9.5367431640625e-05, -0.0008068084716796875, 0.0, -0.0023998264223337173, -2.491462328180205e-05, -1.9073486328125e-06, -0.0001201629638671875, -2.288818359375e-05, -4.589557647705078e-05, -7.152555099310121e-07, -2.622604142743512e-06, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -5.4906846222822026, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 25, 145, 164, 30, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Destroy", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"elts": [{"args": [{"hole0": "Destroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Destroy", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "Tuple"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -4.913989067077637, -0.0001049041748046875, -0.0073642730712890625, -0.0011882781982421875, -1.9073486328125e-06, -8.7738037109375e-05, -1.9073486328125e-06, -0.0066986083984375, 0.0, -1.33514404296875e-05, -0.030490875244140625, -3.814697265625e-06, -0.027766836807131767, -0.00093405059305951, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.001911163330078125, -4.220008850097656e-05, -7.62939453125e-06, -4.38690185546875e-05, -0.0010223388671875, 0.0, -0.0043645985424518585, -5.590825094259344e-05, -1.9073486328125e-06, -0.1742849349975586, -0.0001468658447265625, -1.9073486328125e-06, -1.33514404296875e-05, -0.10364437103271484, 0.0, -0.021757125854492188, -0.037009239196777344, 0.0, -0.0808129534125328, -0.01675604097545147, -0.02415943145751953, -9.5367431640625e-06, -1.919269561767578e-05, -3.576278118089249e-07, -2.3841855067985307e-07, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=(Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())), Buff(Destroy())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -5.88522309119935, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "<UNK>", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "Destroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "<UNK> Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -5.756953716278076, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -0.06710052490234375, -0.000527244876138866, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0017986297607421875, -5.161762237548828e-05, -1.33514404296875e-05, -4.57763671875e-05, -0.0008258819580078125, 0.0, -0.004451628774404526, -4.076919867657125e-05, -1.9073486328125e-06, -0.000102996826171875, -2.86102294921875e-05, -4.780292510986328e-05, -7.152555099310121e-07, -2.741813204920618e-06, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -6.043533576647178, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Destroy", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "Destroy", "_type": "Template18"}, {"args": [{"hole0": "Destroy", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -0.06710052490234375, -0.000527244876138866, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0017986297607421875, -5.161762237548828e-05, -1.33514404296875e-05, -4.57763671875e-05, -0.0008258819580078125, 0.0, -5.778339385986328, -0.13802453875541687, -0.0003719329833984375, -1.33514404296875e-05, -1.919269561767578e-05, -9.536738616588991e-07, -2.50339189733495e-06, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(Destroy())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -6.490000707840238, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Destroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -6.124464988708496, -3.24249267578125e-05, -5.7220458984375e-06, -3.0517578125e-05, -0.0028467178344726562, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.010294276289641857, -8.296966552734375e-05, -0.03432386368513107, -0.0011014938354492188, -8.582820009905845e-05, -0.00028228759765625, -5.7220458984375e-06, -5.7220458984375e-06, -1.8596634618006647e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -3.063678741455078e-05, -5.9604562920867465e-06, -0.00010144566476810724, 0.0, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.254413604736328e-05, 0.0, -2.47955322265625e-05, 0.0, -0.00032806396484375, -3.814697265625e-06, -3.814697265625e-06, -1.5735622582724318e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.007279396057128906, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.00011444091796875, 0.0, -0.12859249114990234, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.00010311603546142578, 0.0, -7.62939453125e-06, -0.0020847320556640625, -2.6702880859375e-05, -0.13965842127799988, -0.0015730193117633462, -3.4332275390625e-05, -3.814697265625e-05, 0.0, 0.0, -0.0021810531616210938, -4.208087921142578e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.0005741119384765625, 0.0, -0.004529770463705063, -4.7444838855881244e-05, -1.9073486328125e-06, -0.00012969970703125, -2.47955322265625e-05, -4.1961669921875e-05, -5.960462772236497e-07, -2.622604142743512e-06, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Destroy(), WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -7.179587040211345, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Damaged", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "<UNK>", "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "Damaged", "_type": "Template18"}, {"args": [{"hole0": "<UNK>Destroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 3, "_type": "Template4", "hole2": "effects"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -5.224675178527832, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -9.1552734375e-05, 0.0, -0.003692626953125, 0.0, -0.0039825439453125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.0040180718060583e-05, 0.0, -0.16609764099121094, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -8.392333984375e-05, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0030405521392822266, 0.0, -3.814697265625e-06, -0.07679939270019531, 0.0, -0.09232677519321442, -1.9907896785298362e-05, -9.72747802734375e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0009860992431640625, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -0.40141963958740234, -2.47955322265625e-05, -0.8974666595458984, -0.1952156275510788, -0.00010287251643603668, -0.052257537841796875, -7.62939453125e-06, 0.0, 0.0, -0.02293682098388672, -6.103515625e-05, -1.52587890625e-05, -8.20159912109375e-05, -0.000545501708984375, 0.0, -0.0013450768310576677, -3.361691415193491e-05, -1.9073486328125e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Damaged(), ActionTag(\n            <UNK>Destroy(), WeaponSelector(EnemyPlayer())))])\n"}, {"score": -7.233873844182767, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Increase", "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "IncreaseDestroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -7.015714645385742, -0.15572163462638855, -5.316602982929908e-05, -4.38690185546875e-05, -2.288818359375e-05, 0.0, 0.0, -0.0024194717407226562, -0.00010883808135986328, -7.62939453125e-06, -7.62939453125e-05, -0.0008697509765625, 0.0, -0.0022343103773891926, -2.5629835363361053e-05, -1.9073486328125e-06, -0.0001125335693359375, -2.6702880859375e-05, -4.38690185546875e-05, -8.344646857949556e-07, -2.622604142743512e-06, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(IncreaseDestroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -7.343243061551789, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "<UNK>", "Swamp", "Ooze", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": "<UNK>SwampOoze", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -3.2072765827178955, -3.666404962539673, -0.40313881635665894, -5.614747351501137e-05, -6.67572021484375e-05, -4.1961669921875e-05, 0.0, 0.0, -0.006340980529785156, -0.0001239776611328125, -1.71661376953125e-05, -0.0009021759033203125, -0.000522613525390625, 0.0, -0.0017604213207960129, -1.2874577805632725e-05, -1.9073486328125e-06, -0.0001201629638671875, -2.09808349609375e-05, -4.57763671875e-05, -7.152555099310121e-07, -8.344646857949556e-07, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>SwampOoze(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -8.823080606200392, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Damaged", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Destroy", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Acidic Swamp Ooze", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "Damaged", "_type": "Template18"}, {"args": [{"args": [{"args": [{"hole0": "Destroy", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 3, "_type": "Template4", "hole2": "effects"}], "name": "AcidicSwampOoze", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -5.224675178527832, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -9.1552734375e-05, 0.0, -0.003692626953125, 0.0, -0.0039825439453125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.0040180718060583e-05, 0.0, -0.16609764099121094, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -8.392333984375e-05, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0030405521392822266, 0.0, -3.814697265625e-06, -0.07679939270019531, 0.0, -0.09232677519321442, -1.9907896785298362e-05, -9.72747802734375e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0009860992431640625, -1.537799835205078e-05, 0.0, -3.814697265625e-06, -1.128458023071289, -7.43865966796875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.3825869560241699, -4.303449532017112e-05, -7.62939453125e-06, -0.5705499649047852, -0.0001583099365234375, -1.52587890625e-05, 0.0, -0.04097234085202217, -0.40484189987182617, -5.53131103515625e-05, -0.007014274597167969, -2.86102294921875e-05, -0.006898245774209499, -0.015707414597272873, -0.02397918701171875, 0.0, -0.6335549354553223, -3.325939178466797e-05, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            Destroy())), SelfSelector()))])\n"}, {"score": -17.50026512145996, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -17.500158309936523], "inferred_code": "break\n"}, {"score": -20.502037048339844, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [0.0, -5.53131103515625e-05, -20.501981735229492], "inferred_code": ""}], "index": 0}
{"beams": [{"score": -0.22549232506339933, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -0.05465269088745117, 0.0, -6.4849853515625e-05, -0.00016021728515625, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000537872314453125, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0018634796142578125, 0.0, -3.814697265625e-06, -0.00165557861328125, -0.0030422210693359375, -0.000396728515625, 0.0, -0.008746147155761719, -1.52587890625e-05, -0.00186920166015625, 0.0, -0.005458950996398926, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.005672812461853027, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0008382797241210938, 0.0, -0.020391464233398438, -0.0003719329833984375, 0.0, -1.33514404296875e-05, 0.0, -0.0005130767822265625, 0.0, -0.0007228851318359375, 0.0, -0.004006385803222656, 0.0, -1.33514404296875e-05, 0.0, -0.04453694820404053, 0.0, -0.001739501953125, -3.814697265625e-06, -0.0009784698486328125, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"score": -3.46216210402595, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -3.0050086975097656, -0.002216339111328125, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0159376859664917, 0.0, -6.29425048828125e-05, -0.17955684661865234, -2.288818359375e-05, -0.000675201416015625, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.02586078643798828, 0.0, -0.16799449920654297, 0.0, -1.1444091796875e-05, -0.0072498321533203125, -0.0023441314697265625, -0.0004596710205078125, 0.0, -0.018215179443359375, -7.62939453125e-06, -0.001468658447265625, 0.0, -0.012975811958312988, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.012283563613891602, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-05, -0.0002613067626953125, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"score": -3.8314445878836096, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -3.6387572288513184, -1.9073486328125e-06, -3.814697265625e-06, -0.003673553466796875, 0.0, -0.0027008056640625, -5.7220458984375e-06, -0.0023937225341796875, -3.814697265625e-06, -3.24249267578125e-05, -0.00040435791015625, -1.9073486328125e-06, -1.9073486328125e-06, -0.000446319580078125, 0.0, -2.6702880859375e-05, 0.0, -0.0007008313550613821, 0.0, -3.814697265625e-05, 0.0, -0.08943700790405273, 0.0, -8.58306884765625e-05, -0.0001373291015625, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0005321502685546875, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -0.0018301010131835938, 0.0, -3.814697265625e-06, -0.0013990402221679688, -0.0033473968505859375, -0.0002994537353515625, 0.0, -0.0034465789794921875, -1.52587890625e-05, -0.0032567977905273438, 0.0, -0.005279660224914551, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.005295157432556152, 0.0, -1.9073486328125e-05, -1.52587890625e-05, -0.0006551742553710938, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"score": -4.283172454951867, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -0.05465269088745117, 0.0, -6.4849853515625e-05, -0.00016021728515625, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000537872314453125, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0018634796142578125, 0.0, -3.814697265625e-06, -0.00165557861328125, -0.0030422210693359375, -0.000396728515625, 0.0, -0.008746147155761719, -1.52587890625e-05, -0.00186920166015625, 0.0, -0.005458950996398926, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.005672812461853027, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0008382797241210938, 0.0, -3.926076889038086, -1.9073486328125e-06, -7.62939453125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0013179779052734375, 0.0, -0.0009560583857819438, 0.0, -1.71661376953125e-05, 0.0, -0.17587220668792725, 0.0, -0.0001735687255859375, -0.00014495849609375, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0018463134765625, 0.0, -3.814697265625e-06, -0.0018205642700195312, -0.00376129150390625, -0.0002574920654296875, 0.0, -0.0018405914306640625, -1.33514404296875e-05, -0.004947662353515625, 0.0, -0.004831433296203613, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.005433440208435059, -1.9073486328125e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.0008077621459960938, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"score": -4.787720170255355, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -0.05465269088745117, 0.0, -6.4849853515625e-05, -0.00016021728515625, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000537872314453125, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0018634796142578125, 0.0, -3.814697265625e-06, -0.00165557861328125, -0.0030422210693359375, -0.000396728515625, 0.0, -0.008746147155761719, -1.52587890625e-05, -0.00186920166015625, 0.0, -0.005458950996398926, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.005672812461853027, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0008382797241210938, 0.0, -0.020391464233398438, -0.0003719329833984375, 0.0, -1.33514404296875e-05, 0.0, -0.0005130767822265625, 0.0, -0.0007228851318359375, 0.0, -0.004006385803222656, 0.0, -1.33514404296875e-05, 0.0, -4.5977582931518555, 0.0, -0.010005950927734375, -1.71661376953125e-05, -0.001705169677734375, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.divine_shield = True\n"}, {"score": -5.215519752871344, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -3.0050086975097656, -0.002216339111328125, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0159376859664917, 0.0, -6.29425048828125e-05, -0.17955684661865234, -2.288818359375e-05, -0.000675201416015625, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.02586078643798828, 0.0, -1.9136362075805664, -6.675716122117592e-06, -2.288818359375e-05, -0.0165557861328125, -0.010313034057617188, -0.00131988525390625, 0.0, -0.0072956085205078125, -3.814697265625e-06, -0.002399444580078125, 0.0, -0.009521484375, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.01520836353302002, -1.9073486328125e-06, -1.33514404296875e-05, -6.29425048828125e-05, -0.00035572052001953125, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(self.target.\n            calculate_max_health()), self)\n"}, {"score": -5.292219128843001, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -0.05465269088745117, 0.0, -6.4849853515625e-05, -0.00016021728515625, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000537872314453125, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0018634796142578125, 0.0, -3.814697265625e-06, -0.00165557861328125, -0.0030422210693359375, -0.000396728515625, 0.0, -0.008746147155761719, -1.52587890625e-05, -0.00186920166015625, 0.0, -0.005458950996398926, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.005672812461853027, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0008382797241210938, 0.0, -0.020391464233398438, -0.0003719329833984375, 0.0, -1.33514404296875e-05, 0.0, -0.0005130767822265625, 0.0, -0.0007228851318359375, 0.0, -0.004006385803222656, 0.0, -1.33514404296875e-05, 0.0, -4.933563709259033, 0.0, -0.17764568328857422, -1.9073486328125e-05, -0.0027570724487304688, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.calculate_max_health = True\n"}, {"score": -5.313716447968503, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "Taunt", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 0, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -3.0050086975097656, -0.002216339111328125, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0159376859664917, 0.0, -6.29425048828125e-05, -1.8253812789916992, -0.000232696533203125, -0.45206618309020996, -0.002310703042894602, -1.71661376953125e-05, -0.0010223388671875, -0.00012886524200439453, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n"}, {"score": -5.891757097111579, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "0", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 0, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -3.0050086975097656, -0.002216339111328125, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0159376859664917, 0.0, -6.29425048828125e-05, -1.8253812789916992, -0.000232696533203125, -1.0333192348480225, -3.182837463100441e-05, -7.62939453125e-06, -0.0001983642578125, -2.8848648071289062e-05, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n"}, {"score": -5.958269086118392, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 19, 112, "frog", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "immune", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -0.05465269088745117, 0.0, -6.4849853515625e-05, -0.00016021728515625, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000537872314453125, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0018634796142578125, 0.0, -3.814697265625e-06, -0.00165557861328125, -0.0030422210693359375, -0.000396728515625, 0.0, -0.008746147155761719, -1.52587890625e-05, -0.00186920166015625, 0.0, -0.005458950996398926, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.005672812461853027, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0008382797241210938, 0.0, -0.020391464233398438, -0.0003719329833984375, 0.0, -1.33514404296875e-05, 0.0, -0.0005130767822265625, 0.0, -0.0007228851318359375, 0.0, -0.004006385803222656, 0.0, -1.33514404296875e-05, 0.0, -4.8042216300964355, -1.9073486328125e-06, -0.509028434753418, 0.0, -0.4667797088623047, -3.814697265625e-06], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.immune = frog\n"}, {"score": -6.123662200208351, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "0", "<EOS>", 35, 112, "self", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 0, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -4.471152305603027, 0.0, -7.62939453125e-06, -0.0005664825439453125, -2.6702880859375e-05, -1.148032307624817, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -4.220008850097656e-05, 0.0, -0.3072776794433594, -0.00011444091796875, 0.0, -0.014238357543945312, -1.9073486328125e-06, -0.031630516052246094, 0.0, -0.000530242919921875, 0.0, -0.0012218952178955078, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.08089256286621094, 0.0, -0.0003185272216796875, -5.7220458984375e-06, -0.000476837158203125, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(0, self)\n        self.target.taunt = True\n"}, {"score": -6.241843548055343, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "Taunt", "<EOS>", 35, 112, "self", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 0, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -4.471152305603027, 0.0, -7.62939453125e-06, -0.0005664825439453125, -2.6702880859375e-05, -0.7947425842285156, -0.046862244606018066, -2.288818359375e-05, 0.0, -0.000476837158203125, -1.9073486328125e-06, -0.6717920303344727, -8.0108642578125e-05, 0.0, -0.04232597351074219, 0.0, -0.066619873046875, 0.0, -0.0002574920654296875, 0.0, -0.0016137361526489258, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.07745945453643799, 0.0, -0.000331878662109375, -3.814697265625e-06, -0.0003814697265625, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(0, self)\n        self.target.taunt = True\n"}, {"score": -7.44759103335484, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "AncestralHealing", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -3.0050086975097656, -0.002216339111328125, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0159376859664917, 0.0, -6.29425048828125e-05, -0.17955684661865234, -2.288818359375e-05, -0.000675201416015625, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.02586078643798828, 0.0, -0.16799449920654297, 0.0, -1.1444091796875e-05, -0.0072498321533203125, -0.0023441314697265625, -0.0004596710205078125, 0.0, -4.017586708068848, 0.0, -0.010865211486816406, -2.3841855067985307e-07, -0.002039194107055664, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.00022411346435546875, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(target.\n            calculate_max_health()), self)\n"}, {"score": -17.368501663208008, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -17.368486404418945], "inferred_code": "break\n"}, {"score": -23.253629684448242, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -23.253616333007812], "inferred_code": ""}], "index": 1}
{"beams": [{"score": -3.7331463186834526, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -0.8587067723274231, -2.1457672119140625e-06, -0.0012502670288085938, -0.0049495697021484375, -3.0517578125e-05, -0.0003070831298828125, -0.0015382766723632812, -5.7220458984375e-05, -0.001811981201171875, -1.9073486328125e-05, -0.018118858337402344, -3.24249267578125e-05, -0.16265392303466797, 0.0, -0.00020599365234375, -8.594989776611328e-05, -0.0032216310501098633, -2.622600959512056e-06, -0.001481889747083187, -2.3841855067985307e-07, -0.020821452140808105, -8.344646857949556e-07, -0.8935983777046204, -6.16312026977539e-05, -0.0031175613403320312, -0.0012054443359375, -1.1444091796875e-05, -0.0007228851318359375, -0.0006999969482421875, -9.5367431640625e-06, -0.0020503997802734375, -3.814697265625e-06, -0.02773284912109375, -1.71661376953125e-05, -0.12137889862060547, 0.0, -0.0001697540283203125, -0.00010883808135986328, -0.002759099006652832, -2.145764938177308e-06, -0.0018780225655063987, -2.3841855067985307e-07, -0.02214634418487549, -7.152555099310121e-07, -0.8765286207199097, -4.8160552978515625e-05, -0.0005321502685546875, -0.0004940032958984375, -0.0001087188720703125, -3.814697265625e-05, -1.9073486328125e-06, -0.006089905742555857, -4.9590184062253684e-05, -0.0009136199951171875, -7.62939453125e-06, -0.000244140625, 0.0, -0.0002460479736328125, -7.62939453125e-06, -0.008702874183654785, -7.62939453125e-06, -0.002729058265686035, -2.1457672119140625e-05, -3.814697265625e-06, -0.000240325927734375, -1.33514404296875e-05, -0.02564084343612194, -3.3854863431770355e-05, -0.004810333251953125, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.000820159912109375, -0.000225067138671875, -0.00724558113142848, -0.00036549477954395115, -0.0012531280517578125, -1.9073486328125e-06, -3.0517578125e-05, -0.0035724639892578125, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.00331878662109375, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022355583496391773, -7.62939453125e-06, -0.0005464553833007812, -0.0004119873046875, -8.58306884765625e-05, 0.0, -0.0004279518034309149, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.000415802001953125, 0.0, -0.0001186131194117479, -6.29425048828125e-05, -0.001522463164292276, 0.0, -6.866455078125e-05, 0.0, -0.0011806488037109375, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0046329498291015625, -0.0007305145263671875, -0.00018310546875, -0.0037593841552734375, -4.1961669921875e-05, -8.96453857421875e-05, -0.09646224975585938, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.000553131103515625, 0.0, -0.0005534767406061292, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017757415771484375, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.01721477508544922, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008751052082516253, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07509040832519531, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022343441378325224, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.030692381655484, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -1.2068408727645874, -8.618831634521484e-05, -0.001903533935546875, -0.001071929931640625, -7.62939453125e-06, -0.0012569427490234375, -0.0005054473876953125, -1.1444091796875e-05, -0.0018482208251953125, -1.1444091796875e-05, -0.02337169647216797, -1.71661376953125e-05, -0.12395763397216797, 0.0, -0.000171661376953125, -7.2479248046875e-05, -0.002984285354614258, -2.264974000354414e-06, -0.001793503062799573, -2.3841855067985307e-07, -0.02191293239593506, -5.960462772236497e-07, -0.8825016617774963, -4.8160552978515625e-05, -0.004872322082519531, -0.0013942718505859375, -9.5367431640625e-06, -0.000576019287109375, -0.000804901123046875, -9.5367431640625e-06, -0.0022869110107421875, -3.814697265625e-06, -0.028717994689941406, -1.52587890625e-05, -0.11664390563964844, 0.0, -0.0001735687255859375, -0.00011456012725830078, -0.0030863285064697266, -2.3841830625315197e-06, -0.0018479818245396018, -2.1457672119140625e-06, -0.022739768028259277, -7.152555099310121e-07, -0.8729383945465088, -4.8041343688964844e-05, -0.000530242919921875, -0.000553131103515625, -0.0001125335693359375, -3.24249267578125e-05, -1.9073486328125e-06, -0.006208638660609722, -4.970938971382566e-05, -0.0008783340454101562, -7.62939453125e-06, -0.000244140625, 0.0, -0.000244140625, -5.7220458984375e-06, -0.0091630220413208, -7.62939453125e-06, -0.002715468406677246, -2.1457672119140625e-05, -3.814697265625e-06, -0.000240325927734375, -1.33514404296875e-05, -0.025426266714930534, -3.373566141817719e-05, -0.0048580169677734375, -7.62939453125e-06, -1.9073486328125e-06, -6.103515625e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.0008411407470703125, -0.0002231597900390625, -0.0072587886825203896, -0.0003622761578299105, -0.001247406005859375, -1.9073486328125e-06, -3.0517578125e-05, -0.003566741943359375, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033206939697265625, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022355583496391773, -7.62939453125e-06, -0.000545501708984375, -0.0004138946533203125, -8.58306884765625e-05, 0.0, -0.00042830940219573677, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.0004177093505859375, 0.0, -0.0001186131194117479, -6.29425048828125e-05, -0.0015259182546287775, 0.0, -6.866455078125e-05, 0.0, -0.0011844635009765625, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.004642486572265625, -0.000728607177734375, -0.00018310546875, -0.00376129150390625, -4.1961669921875e-05, -8.96453857421875e-05, -0.09645843505859375, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005550384521484375, 0.0, -0.0005537151591852307, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017747879028320312, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.01721477508544922, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008751052082516253, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.0750732421875, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022342251613736153, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.090729639396727, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -0.8587067723274231, -2.1457672119140625e-06, -0.0012502670288085938, -0.0049495697021484375, -3.0517578125e-05, -0.0003070831298828125, -0.0015382766723632812, -5.7220458984375e-05, -0.001811981201171875, -1.9073486328125e-05, -0.018118858337402344, -3.24249267578125e-05, -0.16265392303466797, 0.0, -0.00020599365234375, -8.594989776611328e-05, -0.0032216310501098633, -2.622600959512056e-06, -0.001481889747083187, -2.3841855067985307e-07, -0.020821452140808105, -8.344646857949556e-07, -0.8935983777046204, -6.16312026977539e-05, -0.0031175613403320312, -0.0012054443359375, -1.1444091796875e-05, -0.0007228851318359375, -0.0006999969482421875, -9.5367431640625e-06, -0.0020503997802734375, -3.814697265625e-06, -0.02773284912109375, -1.71661376953125e-05, -0.12137889862060547, 0.0, -0.0001697540283203125, -0.00010883808135986328, -0.002759099006652832, -2.145764938177308e-06, -0.0018780225655063987, -2.3841855067985307e-07, -0.02214634418487549, -7.152555099310121e-07, -1.2350424528121948, -1.2755393072438892e-05, -0.001003265380859375, -0.0006732940673828125, -0.000133514404296875, -0.000110626220703125, -1.9073486328125e-06, -0.0030600077006965876, -6.890131771797314e-05, -0.0005435943603515625, -9.5367431640625e-06, -0.0004253387451171875, 0.0, -0.0001735687255859375, -5.7220458984375e-06, -0.007594585418701172, -9.5367431640625e-06, -0.002678990364074707, -2.5391578674316406e-05, -1.9073486328125e-06, -0.00025177001953125, -1.71661376953125e-05, -0.02911984734237194, -3.40932747349143e-05, -0.004101753234863281, -9.5367431640625e-06, -1.9073486328125e-06, -6.4849853515625e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.0008144378662109375, -0.0002155303955078125, -0.0069770198315382, -0.0003783694701269269, -0.001262664794921875, -1.9073486328125e-06, -3.0517578125e-05, -0.0036067962646484375, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033388137817382812, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.002241743728518486, -7.62939453125e-06, -0.0005464553833007812, -0.0004100799560546875, -8.58306884765625e-05, 0.0, -0.00042723678052425385, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00043773651123046875, 0.0, -0.00011837470810860395, -6.29425048828125e-05, -0.0015328236622735858, 0.0, -6.67572021484375e-05, 0.0, -0.00121307373046875, -3.814697265625e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0047130584716796875, -0.0007266998291015625, -0.0001811981201171875, -0.0037736892700195312, -4.1961669921875e-05, -8.96453857421875e-05, -0.09657669067382812, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -0.0005551454378291965, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017709732055664062, -0.0007228851318359375, -4.1127201257040724e-05, -1.9073486328125e-05, -0.017210006713867188, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008752244175411761, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07502174377441406, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022345820907503366, 0.0, -2.288818359375e-05, -0.0026769638061523438, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.21567523746819, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -0.8587067723274231, -2.1457672119140625e-06, -0.0012502670288085938, -0.0049495697021484375, -3.0517578125e-05, -0.0003070831298828125, -0.0015382766723632812, -5.7220458984375e-05, -0.001811981201171875, -1.9073486328125e-05, -0.018118858337402344, -3.24249267578125e-05, -0.16265392303466797, 0.0, -0.00020599365234375, -8.594989776611328e-05, -0.0032216310501098633, -2.622600959512056e-06, -0.001481889747083187, -2.3841855067985307e-07, -0.020821452140808105, -8.344646857949556e-07, -1.3548449277877808, -3.218649908376392e-06, -0.005230903625488281, -0.0037899017333984375, -3.814697265625e-05, -0.0002422332763671875, -0.0015573501586914062, -6.67572021484375e-05, -0.0017719268798828125, -1.33514404296875e-05, -0.023607254028320312, -3.24249267578125e-05, -0.1410999298095703, 0.0, -0.000202178955078125, -0.00010311603546142578, -0.0031528472900390625, -2.50339189733495e-06, -0.0016651144251227379, -2.3841855067985307e-07, -0.01908087730407715, -7.152555099310121e-07, -0.8802655935287476, -6.16312026977539e-05, -0.000522613525390625, -0.0003719329833984375, -8.392333984375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005343174561858177, -4.6610071876784787e-05, -0.0011463165283203125, -7.62939453125e-06, -0.00023651123046875, 0.0, -0.0002460479736328125, -7.62939453125e-06, -0.009129524230957031, -7.62939453125e-06, -0.0027943849563598633, -1.9550323486328125e-05, -1.9073486328125e-06, -0.000247955322265625, -1.33514404296875e-05, -0.0258635263890028, -3.4689302992774174e-05, -0.004706382751464844, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.00079345703125, -0.000225067138671875, -0.007243733387440443, -0.00036883263965137303, -0.0012607574462890625, -1.9073486328125e-06, -3.0517578125e-05, -0.003574371337890625, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033102035522460938, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.002235320396721363, -7.62939453125e-06, -0.000545501708984375, -0.0004119873046875, -8.58306884765625e-05, 0.0, -0.0004266407049726695, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00041866302490234375, 0.0, -0.00011849391739815474, -6.29425048828125e-05, -0.0015261563239619136, 0.0, -6.866455078125e-05, 0.0, -0.001186370849609375, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0046482086181640625, -0.000728607177734375, -0.0001811981201171875, -0.0037622451782226562, -4.1961669921875e-05, -8.96453857421875e-05, -0.09648513793945312, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005550384521484375, 0.0, -0.0005538343102671206, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017747879028320312, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.017213821411132812, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008751052082516253, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07508468627929688, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022343441378325224, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.241563045962749, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -0.8587067723274231, -2.1457672119140625e-06, -0.0012502670288085938, -0.0049495697021484375, -3.0517578125e-05, -0.0003070831298828125, -0.0015382766723632812, -5.7220458984375e-05, -0.001811981201171875, -1.9073486328125e-05, -0.018118858337402344, -3.24249267578125e-05, -0.16265392303466797, 0.0, -0.00020599365234375, -8.594989776611328e-05, -0.0032216310501098633, -2.622600959512056e-06, -0.001481889747083187, -2.3841855067985307e-07, -0.020821452140808105, -8.344646857949556e-07, -1.327487826347351, -2.0265579223632812e-05, -0.015961647033691406, -0.001911163330078125, -1.9073486328125e-05, -0.0011539459228515625, -0.0021038055419921875, -3.24249267578125e-05, -0.001750946044921875, -3.814697265625e-06, -0.022248268127441406, -1.33514404296875e-05, -0.18680858612060547, 0.0, -0.0002422332763671875, -0.00013554096221923828, -0.0034095048904418945, -3.576272320060525e-06, -0.001681207912042737, -2.1457672119140625e-06, -0.02258765697479248, -8.344646857949556e-07, -0.8757633566856384, -6.16312026977539e-05, -0.0004673004150390625, -0.0005741119384765625, -0.0001010894775390625, -3.4332275390625e-05, -1.9073486328125e-06, -0.00540874432772398, -4.8278936446877196e-05, -0.0009603500366210938, -7.62939453125e-06, -0.0002346038818359375, 0.0, -0.000244140625, -7.62939453125e-06, -0.009031891822814941, -7.62939453125e-06, -0.0027053356170654297, -2.1457672119140625e-05, -3.814697265625e-06, -0.000247955322265625, -1.33514404296875e-05, -0.025235293433070183, -3.45700973412022e-05, -0.004786491394042969, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.00081634521484375, -0.000225067138671875, -0.007245534565299749, -0.0003646603145170957, -0.001255035400390625, -1.9073486328125e-06, -3.0517578125e-05, -0.003574371337890625, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033092498779296875, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.002233773935586214, -7.62939453125e-06, -0.000545501708984375, -0.0004119873046875, -8.58306884765625e-05, 0.0, -0.00042890547774732113, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00041961669921875, 0.0, -0.00011849391739815474, -6.29425048828125e-05, -0.0015260373475030065, 0.0, -6.866455078125e-05, 0.0, -0.001186370849609375, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0046482086181640625, -0.000728607177734375, -0.0001811981201171875, -0.0037622451782226562, -4.1961669921875e-05, -8.96453857421875e-05, -0.09648609161376953, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.00055694580078125, 0.0, -0.0005538343102671206, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017747879028320312, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.017213821411132812, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008751052082516253, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.0750741958618164, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022343441378325224, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.343889318872357, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -0.8587067723274231, -2.1457672119140625e-06, -0.0012502670288085938, -0.0049495697021484375, -3.0517578125e-05, -0.0003070831298828125, -0.0015382766723632812, -5.7220458984375e-05, -0.001811981201171875, -1.9073486328125e-05, -0.018118858337402344, -3.24249267578125e-05, -0.16265392303466797, 0.0, -0.00020599365234375, -8.594989776611328e-05, -0.0032216310501098633, -2.622600959512056e-06, -0.001481889747083187, -2.3841855067985307e-07, -0.020821452140808105, -8.344646857949556e-07, -0.8935983777046204, -6.16312026977539e-05, -0.0031175613403320312, -0.0012054443359375, -1.1444091796875e-05, -0.0007228851318359375, -0.0006999969482421875, -9.5367431640625e-06, -0.0020503997802734375, -3.814697265625e-06, -0.02773284912109375, -1.71661376953125e-05, -0.12137889862060547, 0.0, -0.0001697540283203125, -0.00010883808135986328, -0.002759099006652832, -2.145764938177308e-06, -0.0018780225655063987, -2.3841855067985307e-07, -0.02214634418487549, -7.152555099310121e-07, -1.485244631767273, -3.576277322281385e-06, -0.0014352798461914062, -0.0005588531494140625, -0.0001239776611328125, -4.57763671875e-05, -1.9073486328125e-06, -0.00258654891513288, -7.4027557275258e-05, -0.00046443939208984375, -7.62939453125e-06, -0.0002918243408203125, 0.0, -0.0002002716064453125, -5.7220458984375e-06, -0.009488582611083984, -1.1563301086425781e-05, -0.0029027462005615234, -2.5510787963867188e-05, -3.814697265625e-06, -0.000263214111328125, -1.71661376953125e-05, -0.030693529173731804, -3.3378044463461265e-05, -0.0040225982666015625, -9.5367431640625e-06, -1.9073486328125e-06, -6.4849853515625e-05, -2.47955322265625e-05, -1.9073486328125e-05, -0.00079345703125, -0.000213623046875, -0.006833973340690136, -0.0003871909575536847, -0.001270294189453125, -1.9073486328125e-06, -3.0517578125e-05, -0.0036067962646484375, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033245086669921875, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022498322650790215, -7.62939453125e-06, -0.0005445480346679688, -0.0004100799560546875, -8.58306884765625e-05, 0.0, -0.0004240184498485178, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00042438507080078125, 0.0, -0.00011837470810860395, -6.29425048828125e-05, -0.001523891813121736, 0.0, -6.866455078125e-05, 0.0, -0.001194000244140625, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.004657745361328125, -0.000728607177734375, -0.0001811981201171875, -0.0037631988525390625, -4.1961669921875e-05, -8.96453857421875e-05, -0.09655189514160156, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.00055694580078125, 0.0, -0.0005540726706385612, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.001773834228515625, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.017210960388183594, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008752244175411761, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07506656646728516, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022344631142914295, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.393699421064724, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -1.2068408727645874, -8.618831634521484e-05, -0.001903533935546875, -0.001071929931640625, -7.62939453125e-06, -0.0012569427490234375, -0.0005054473876953125, -1.1444091796875e-05, -0.0018482208251953125, -1.1444091796875e-05, -0.02337169647216797, -1.71661376953125e-05, -0.12395763397216797, 0.0, -0.000171661376953125, -7.2479248046875e-05, -0.002984285354614258, -2.264974000354414e-06, -0.001793503062799573, -2.3841855067985307e-07, -0.02191293239593506, -5.960462772236497e-07, -0.8825016617774963, -4.8160552978515625e-05, -0.004872322082519531, -0.0013942718505859375, -9.5367431640625e-06, -0.000576019287109375, -0.000804901123046875, -9.5367431640625e-06, -0.0022869110107421875, -3.814697265625e-06, -0.028717994689941406, -1.52587890625e-05, -0.11664390563964844, 0.0, -0.0001735687255859375, -0.00011456012725830078, -0.0030863285064697266, -2.3841830625315197e-06, -0.0018479818245396018, -2.1457672119140625e-06, -0.022739768028259277, -7.152555099310121e-07, -1.2373030185699463, -1.251697449333733e-05, -0.0008602142333984375, -0.00069427490234375, -0.0001277923583984375, -0.0001087188720703125, -1.9073486328125e-06, -0.003014827147126198, -6.925903289811686e-05, -0.0005130767822265625, -9.5367431640625e-06, -0.0004425048828125, 0.0, -0.0001659393310546875, -5.7220458984375e-06, -0.00801098346710205, -9.5367431640625e-06, -0.0026216506958007812, -2.5391578674316406e-05, -1.9073486328125e-06, -0.0002536773681640625, -1.71661376953125e-05, -0.028856752440333366, -3.45700973412022e-05, -0.0041675567626953125, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.00083160400390625, -0.0002155303955078125, -0.0070013683289289474, -0.0003763429122045636, -0.00125885009765625, -1.9073486328125e-06, -3.0517578125e-05, -0.003604888916015625, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033397674560546875, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022415057756006718, -7.62939453125e-06, -0.000545501708984375, -0.0004100799560546875, -8.58306884765625e-05, 0.0, -0.00042759437928907573, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.0004405975341796875, 0.0, -0.00011837470810860395, -6.29425048828125e-05, -0.001534609473310411, 0.0, -6.67572021484375e-05, 0.0, -0.001216888427734375, -3.814697265625e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.00472259521484375, -0.0007266998291015625, -0.0001811981201171875, -0.0037755966186523438, -4.1961669921875e-05, -8.96453857421875e-05, -0.0965738296508789, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.000568389892578125, 0.0, -0.0005552645889110863, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017709732055664062, -0.0007228851318359375, -4.1127201257040724e-05, -1.9073486328125e-05, -0.017210006713867188, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008752244175411761, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07500553131103516, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022345820907503366, 0.0, -2.288818359375e-05, -0.0026769638061523438, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.4738907429752715, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -1.2068408727645874, -8.618831634521484e-05, -0.001903533935546875, -0.001071929931640625, -7.62939453125e-06, -0.0012569427490234375, -0.0005054473876953125, -1.1444091796875e-05, -0.0018482208251953125, -1.1444091796875e-05, -0.02337169647216797, -1.71661376953125e-05, -0.12395763397216797, 0.0, -0.000171661376953125, -7.2479248046875e-05, -0.002984285354614258, -2.264974000354414e-06, -0.001793503062799573, -2.3841855067985307e-07, -0.02191293239593506, -5.960462772236497e-07, -1.2555791139602661, -1.4781950994802173e-05, -0.023088455200195312, -0.002117156982421875, -1.52587890625e-05, -0.001178741455078125, -0.0020990371704101562, -3.24249267578125e-05, -0.0018749237060546875, -3.814697265625e-06, -0.023568153381347656, -1.33514404296875e-05, -0.17445659637451172, 0.0, -0.0002422332763671875, -0.00013935565948486328, -0.0034047365188598633, -3.6954811548639555e-06, -0.0016912214923650026, -2.1457672119140625e-06, -0.022661447525024414, -8.344646857949556e-07, -0.8703394532203674, -5.3763389587402344e-05, -0.0004825592041015625, -0.0006160736083984375, -0.0001068115234375, -3.4332275390625e-05, -1.9073486328125e-06, -0.0055826702155172825, -4.851734411204234e-05, -0.000942230224609375, -7.62939453125e-06, -0.0002384185791015625, 0.0, -0.0002422332763671875, -7.62939453125e-06, -0.00944209098815918, -7.62939453125e-06, -0.0027060508728027344, -2.1457672119140625e-05, -3.814697265625e-06, -0.000247955322265625, -1.33514404296875e-05, -0.025213122367858887, -3.397406908334233e-05, -0.004809379577636719, -7.62939453125e-06, -1.9073486328125e-06, -6.103515625e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.0008296966552734375, -0.0002231597900390625, -0.007239990402013063, -0.00036334904143586755, -0.0012493133544921875, -1.9073486328125e-06, -3.0517578125e-05, -0.0035686492919921875, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033140182495117188, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022349634673446417, -7.62939453125e-06, -0.000545501708984375, -0.0004138946533203125, -8.58306884765625e-05, 0.0, -0.0004290246870368719, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00041961669921875, 0.0, -0.0001186131194117479, -6.29425048828125e-05, -0.0015266325790435076, 0.0, -6.866455078125e-05, 0.0, -0.0011882781982421875, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0046520233154296875, -0.000728607177734375, -0.0001811981201171875, -0.0037631988525390625, -4.1961669921875e-05, -8.96453857421875e-05, -0.09647941589355469, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.00055694580078125, 0.0, -0.0005538343102671206, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017747879028320312, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.017213821411132812, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008751052082516253, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07506465911865234, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022343441378325224, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.598915985293672, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -1.2068408727645874, -8.618831634521484e-05, -0.001903533935546875, -0.001071929931640625, -7.62939453125e-06, -0.0012569427490234375, -0.0005054473876953125, -1.1444091796875e-05, -0.0018482208251953125, -1.1444091796875e-05, -0.02337169647216797, -1.71661376953125e-05, -0.12395763397216797, 0.0, -0.000171661376953125, -7.2479248046875e-05, -0.002984285354614258, -2.264974000354414e-06, -0.001793503062799573, -2.3841855067985307e-07, -0.02191293239593506, -5.960462772236497e-07, -1.442215085029602, -3.218649908376392e-06, -0.0069980621337890625, -0.0045871734619140625, -3.0517578125e-05, -0.000171661376953125, -0.0016279220581054688, -5.91278076171875e-05, -0.0017681121826171875, -7.62939453125e-06, -0.0270233154296875, -2.47955322265625e-05, -0.12133121490478516, 0.0, -0.0002079010009765625, -0.00010883808135986328, -0.003270268440246582, -2.9802276912960224e-06, -0.0016049137338995934, -2.3841855067985307e-07, -0.01961684226989746, -7.152555099310121e-07, -0.8763378262519836, -5.9604644775390625e-05, -0.000522613525390625, -0.0004100799560546875, -8.58306884765625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0054545169696211815, -4.6610071876784787e-05, -0.0010623931884765625, -7.62939453125e-06, -0.0002422332763671875, 0.0, -0.0002384185791015625, -7.62939453125e-06, -0.0095747709274292, -7.62939453125e-06, -0.0027626752853393555, -1.9550323486328125e-05, -1.9073486328125e-06, -0.000247955322265625, -1.33514404296875e-05, -0.025846002623438835, -3.421248038648628e-05, -0.0047283172607421875, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.0008087158203125, -0.000225067138671875, -0.007236752193421125, -0.00036752133746631444, -0.00125885009765625, -1.9073486328125e-06, -3.0517578125e-05, -0.003570556640625, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033159255981445312, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022369856014847755, -7.62939453125e-06, -0.0005445480346679688, -0.0004119873046875, -8.58306884765625e-05, 0.0, -0.0004267598851583898, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00042057037353515625, 0.0, -0.0001186131194117479, -6.29425048828125e-05, -0.0015273469034582376, 0.0, -6.866455078125e-05, 0.0, -0.0011882781982421875, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0046558380126953125, -0.000728607177734375, -0.0001811981201171875, -0.0037631988525390625, -4.1961669921875e-05, -8.96453857421875e-05, -0.09647941589355469, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.00055694580078125, 0.0, -0.0005539535195566714, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017747879028320312, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.017213821411132812, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008751052082516253, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.0750722885131836, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022343441378325224, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.610529463746417, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -1.7441991567611694, -2.5391578674316406e-05, -0.00341033935546875, -0.0020275115966796875, -2.09808349609375e-05, -0.0009365081787109375, -0.0014944076538085938, -2.6702880859375e-05, -0.0016422271728515625, -9.5367431640625e-06, -0.017706871032714844, -1.33514404296875e-05, -0.17777729034423828, 0.0, -0.0002613067626953125, -0.00010693073272705078, -0.0034744739532470703, -3.814689989667386e-06, -0.0015805951552465558, -2.3841855067985307e-07, -0.022065162658691406, -7.152555099310121e-07, -0.8850914835929871, -6.16312026977539e-05, -0.00341033935546875, -0.0013904571533203125, -9.5367431640625e-06, -0.0005550384521484375, -0.000789642333984375, -9.5367431640625e-06, -0.002277374267578125, -3.814697265625e-06, -0.03011035919189453, -1.33514404296875e-05, -0.10423088073730469, 0.0, -0.0001735687255859375, -0.00011265277862548828, -0.003029942512512207, -2.3841830625315197e-06, -0.0018553728004917502, -2.1457672119140625e-06, -0.023183584213256836, -7.152555099310121e-07, -0.873607337474823, -4.8041343688964844e-05, -0.0005321502685546875, -0.000545501708984375, -0.0001087188720703125, -3.24249267578125e-05, -1.9073486328125e-06, -0.006051997654139996, -4.9828591727418825e-05, -0.0008640289306640625, -7.62939453125e-06, -0.000244140625, 0.0, -0.000247955322265625, -7.62939453125e-06, -0.009106636047363281, -7.62939453125e-06, -0.0027278661727905273, -2.1338462829589844e-05, -3.814697265625e-06, -0.000240325927734375, -1.33514404296875e-05, -0.025418519973754883, -3.361645576660521e-05, -0.004839897155761719, -7.62939453125e-06, -1.9073486328125e-06, -6.103515625e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.0008373260498046875, -0.0002231597900390625, -0.007246327120810747, -0.000364183506462723, -0.001247406005859375, -1.9073486328125e-06, -3.0517578125e-05, -0.0035686492919921875, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033206939697265625, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.002235201420262456, -7.62939453125e-06, -0.000545501708984375, -0.0004138946533203125, -8.58306884765625e-05, 0.0, -0.0004290246870368719, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.0004177093505859375, 0.0, -0.0001186131194117479, -6.29425048828125e-05, -0.0015256800688803196, 0.0, -6.866455078125e-05, 0.0, -0.00118255615234375, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0046405792236328125, -0.0007305145263671875, -0.00018310546875, -0.00376129150390625, -4.1961669921875e-05, -8.96453857421875e-05, -0.09646320343017578, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005550384521484375, 0.0, -0.0005537151591852307, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017747879028320312, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.017213821411132812, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008751052082516253, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07507896423339844, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022343441378325224, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.638019688672671, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -0.8587067723274231, -2.1457672119140625e-06, -0.0012502670288085938, -0.0049495697021484375, -3.0517578125e-05, -0.0003070831298828125, -0.0015382766723632812, -5.7220458984375e-05, -0.001811981201171875, -1.9073486328125e-05, -0.018118858337402344, -3.24249267578125e-05, -0.16265392303466797, 0.0, -0.00020599365234375, -8.594989776611328e-05, -0.0032216310501098633, -2.622600959512056e-06, -0.001481889747083187, -2.3841855067985307e-07, -0.020821452140808105, -8.344646857949556e-07, -1.3548449277877808, -3.218649908376392e-06, -0.005230903625488281, -0.0037899017333984375, -3.814697265625e-05, -0.0002422332763671875, -0.0015573501586914062, -6.67572021484375e-05, -0.0017719268798828125, -1.33514404296875e-05, -0.023607254028320312, -3.24249267578125e-05, -0.1410999298095703, 0.0, -0.000202178955078125, -0.00010311603546142578, -0.0031528472900390625, -2.50339189733495e-06, -0.0016651144251227379, -2.3841855067985307e-07, -0.01908087730407715, -7.152555099310121e-07, -1.3035043478012085, -2.050399598374497e-05, -0.0007991790771484375, -0.0006847381591796875, -0.0001087188720703125, -9.1552734375e-05, -1.9073486328125e-06, -0.0030015900265425444, -6.532523548230529e-05, -0.0005483627319335938, -9.5367431640625e-06, -0.0004711151123046875, 0.0, -0.000152587890625, -5.7220458984375e-06, -0.008067488670349121, -9.655952453613281e-06, -0.0026366710662841797, -2.3603439331054688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.02897333912551403, -3.671578815556131e-05, -0.004023551940917969, -9.5367431640625e-06, -1.9073486328125e-06, -6.4849853515625e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.000804901123046875, -0.0002155303955078125, -0.006993493530899286, -0.00037956153391860425, -0.001270294189453125, -1.9073486328125e-06, -3.0517578125e-05, -0.0036106109619140625, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033311843872070312, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022386510390788317, -7.62939453125e-06, -0.000545501708984375, -0.0004100799560546875, -8.58306884765625e-05, 0.0, -0.0004264024319127202, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00044155120849609375, 0.0, -0.00011837470810860395, -6.29425048828125e-05, -0.001534252311103046, 0.0, -6.67572021484375e-05, 0.0, -0.0012187957763671875, -3.814697265625e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.004726409912109375, -0.00072479248046875, -0.0001811981201171875, -0.00377655029296875, -4.1961669921875e-05, -8.96453857421875e-05, -0.09659099578857422, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.000568389892578125, 0.0, -0.0005553837982006371, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00177001953125, -0.0007228851318359375, -4.1127201257040724e-05, -1.9073486328125e-05, -0.01720905303955078, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008752244175411761, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07501697540283203, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022347010672092438, 0.0, -2.288818359375e-05, -0.0026769638061523438, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.649186135896201, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -1.2068408727645874, -8.618831634521484e-05, -0.001903533935546875, -0.001071929931640625, -7.62939453125e-06, -0.0012569427490234375, -0.0005054473876953125, -1.1444091796875e-05, -0.0018482208251953125, -1.1444091796875e-05, -0.02337169647216797, -1.71661376953125e-05, -0.12395763397216797, 0.0, -0.000171661376953125, -7.2479248046875e-05, -0.002984285354614258, -2.264974000354414e-06, -0.001793503062799573, -2.3841855067985307e-07, -0.02191293239593506, -5.960462772236497e-07, -0.8825016617774963, -4.8160552978515625e-05, -0.004872322082519531, -0.0013942718505859375, -9.5367431640625e-06, -0.000576019287109375, -0.000804901123046875, -9.5367431640625e-06, -0.0022869110107421875, -3.814697265625e-06, -0.028717994689941406, -1.52587890625e-05, -0.11664390563964844, 0.0, -0.0001735687255859375, -0.00011456012725830078, -0.0030863285064697266, -2.3841830625315197e-06, -0.0018479818245396018, -2.1457672119140625e-06, -0.022739768028259277, -7.152555099310121e-07, -1.489809274673462, -3.576277322281385e-06, -0.0012531280517578125, -0.0005359649658203125, -0.0001163482666015625, -4.38690185546875e-05, -1.9073486328125e-06, -0.002581303007900715, -7.343154720729217e-05, -0.00045299530029296875, -7.62939453125e-06, -0.00030517578125, 0.0, -0.0001964569091796875, -5.7220458984375e-06, -0.009656786918640137, -1.1563301086425781e-05, -0.0028548240661621094, -2.5510787963867188e-05, -3.814697265625e-06, -0.000263214111328125, -1.71661376953125e-05, -0.030762312933802605, -3.313963316031732e-05, -0.004061698913574219, -9.5367431640625e-06, -1.9073486328125e-06, -6.4849853515625e-05, -2.47955322265625e-05, -1.9073486328125e-05, -0.0008087158203125, -0.0002117156982421875, -0.006841706112027168, -0.00038611810305155814, -0.0012664794921875, -1.9073486328125e-06, -3.0517578125e-05, -0.003604888916015625, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033254623413085938, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.002250902820378542, -7.62939453125e-06, -0.0005445480346679688, -0.0004100799560546875, -8.58306884765625e-05, 0.0, -0.0004241376300342381, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.00042629241943359375, 0.0, -0.00011837470810860395, -6.29425048828125e-05, -0.001526034902781248, 0.0, -6.866455078125e-05, 0.0, -0.0011959075927734375, -3.814697265625e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0046672821044921875, -0.000728607177734375, -0.0001811981201171875, -0.003765106201171875, -4.1961669921875e-05, -8.96453857421875e-05, -0.09655380249023438, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005588531494140625, 0.0, -0.000554191879928112, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.001773834228515625, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.017210960388183594, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008752244175411761, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07505226135253906, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022344631142914295, 0.0, -2.288818359375e-05, -0.00267791748046875, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.657354881247585, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "card", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"n": 7, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "AnimalCompanion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -0.8587067723274231, -2.1457672119140625e-06, -0.0012502670288085938, -0.0049495697021484375, -3.0517578125e-05, -0.0003070831298828125, -0.0015382766723632812, -5.7220458984375e-05, -0.001811981201171875, -1.9073486328125e-05, -0.018118858337402344, -3.24249267578125e-05, -0.16265392303466797, 0.0, -0.00020599365234375, -8.594989776611328e-05, -0.0032216310501098633, -2.622600959512056e-06, -0.001481889747083187, -2.3841855067985307e-07, -0.020821452140808105, -8.344646857949556e-07, -1.327487826347351, -2.0265579223632812e-05, -0.015961647033691406, -0.001911163330078125, -1.9073486328125e-05, -0.0011539459228515625, -0.0021038055419921875, -3.24249267578125e-05, -0.001750946044921875, -3.814697265625e-06, -0.022248268127441406, -1.33514404296875e-05, -0.18680858612060547, 0.0, -0.0002422332763671875, -0.00013554096221923828, -0.0034095048904418945, -3.576272320060525e-06, -0.001681207912042737, -2.1457672119140625e-06, -0.02258765697479248, -8.344646857949556e-07, -1.2917321920394897, -1.6808508007670753e-05, -0.0007171630859375, -0.0008563995361328125, -0.000118255615234375, -0.0001239776611328125, -1.9073486328125e-06, -0.0028952723369002342, -6.532523548230529e-05, -0.00052642822265625, -7.62939453125e-06, -0.000461578369140625, 0.0, -0.0001430511474609375, -5.7220458984375e-06, -0.008352518081665039, -9.5367431640625e-06, -0.0025418996810913086, -2.5510787963867188e-05, -1.9073486328125e-06, -0.000263214111328125, -1.71661376953125e-05, -0.028638480231165886, -3.6477376852417365e-05, -0.004146575927734375, -9.5367431640625e-06, -1.9073486328125e-06, -6.4849853515625e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.0008258819580078125, -0.0002155303955078125, -0.007016289979219437, -0.0003765813016798347, -0.0012645721435546875, -1.9073486328125e-06, -3.0517578125e-05, -0.00360870361328125, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0033311843872070312, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022386510390788317, -7.62939453125e-06, -0.000545501708984375, -0.0004100799560546875, -8.58306884765625e-05, 0.0, -0.0004274751991033554, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.000446319580078125, 0.0, -0.00011837470810860395, -6.29425048828125e-05, -0.0015383027493953705, 0.0, -6.67572021484375e-05, 0.0, -0.00122833251953125, -3.814697265625e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.004749298095703125, -0.00072479248046875, -0.0001811981201171875, -0.003780364990234375, -4.1961669921875e-05, -8.96453857421875e-05, -0.09661674499511719, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.00057220458984375, 0.0, -0.000553834019228816, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017690658569335938, -0.0007228851318359375, -4.1127201257040724e-05, -1.9073486328125e-05, -0.017208099365234375, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008761780918575823, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07498550415039062, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022347010672092438, 0.0, -2.288818359375e-05, -0.0026769638061523438, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -16.37086296081543, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -16.370851516723633], "inferred_code": "break\n"}, {"score": -22.848690032958984, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -22.848682403564453], "inferred_code": ""}], "index": 2}
{"beams": [{"score": -0.48066213618724873, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -0.40812528133392334, -0.0017014741897583008, -0.00106048583984375, -7.43865966796875e-05, -6.29425048828125e-05, 0.0, -0.00011444091796875, -0.0001068115234375, -0.00311279296875, -7.748603820800781e-06, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004316568374633789, -2.0265579223632812e-06, -0.020989418029785156, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.9604562920867465e-06, -1.9073486328125e-06, -0.00041961669921875, 0.0, -2.47955322265625e-05, -5.91278076171875e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.555152165470645e-05, 0.0, -0.0001773834228515625, -5.7220458984375e-06, -0.0002155303955078125, 0.0, -0.004002690315246582, -4.768370445162873e-07, -0.0005512237548828125, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.00012969970703125, 0.0, -0.0007653236389160156, -1.52587890625e-05, -0.0003719329833984375, -2.288818359375e-05, -1.1444091796875e-05, -5.7220458984375e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.00067901611328125, -3.62396240234375e-05, -0.017728805541992188, -1.9073486328125e-06, -0.0001865616359282285, 0.0, -0.0001678466796875, -0.000743865966796875, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0011655092239379883, 0.0, -0.0001506805419921875, -5.7220458984375e-06, -0.0005931854248046875, -0.0009708404541015625, -0.00035858154296875, -0.0008402552339248359, -4.768360213347478e-06, 0.0, -0.0001125335693359375, -0.00029659271240234375, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -1.2912153312009025, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -1.128252387046814, -0.0002804994583129883, -0.000560760498046875, -8.58306884765625e-05, -4.9591064453125e-05, 0.0, -2.09808349609375e-05, -6.67572021484375e-05, -0.0047969818115234375, -9.655952453613281e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004928112030029297, -2.0265579223632812e-06, -0.11160659790039062, -6.103515625e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.392333984375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.841247457283316e-06, -1.9073486328125e-06, -0.0004329681396484375, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.6702880859375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.555152165470645e-05, 0.0, -0.0001735687255859375, -5.7220458984375e-06, -0.000217437744140625, 0.0, -0.004071354866027832, -4.768370445162873e-07, -0.0005550384521484375, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.0001277923583984375, 0.0, -0.0007615089416503906, -1.52587890625e-05, -0.0003681182861328125, -2.288818359375e-05, -1.1444091796875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.0006771087646484375, -3.62396240234375e-05, -0.01776123046875, -1.9073486328125e-06, -0.0001865616359282285, 0.0, -0.0001697540283203125, -0.000743865966796875, -3.814697265625e-06, -5.340576171875e-05, 0.0, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.001177072525024414, 0.0, -0.000152587890625, -5.7220458984375e-06, -0.0005970001220703125, -0.000972747802734375, -0.00035858154296875, -0.0008369192946702242, -4.768360213347478e-06, 0.0, -0.0001125335693359375, -0.0002956390380859375, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.033117721277129, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -1.128252387046814, -0.0002804994583129883, -0.000560760498046875, -8.58306884765625e-05, -4.9591064453125e-05, 0.0, -2.09808349609375e-05, -6.67572021484375e-05, -0.0047969818115234375, -9.655952453613281e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004928112030029297, -2.0265579223632812e-06, -2.350313186645508, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -5.006785613659304e-06, -1.9073486328125e-06, -0.00029754638671875, 0.0, -2.47955322265625e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9008591051679105e-05, 0.0, -0.003070831298828125, -7.2479248046875e-05, -0.0008258819580078125, 0.0, -0.0031286475714296103, -1.6689286894688848e-06, -0.0010547637939453125, -1.33514404296875e-05, -1.9073486328125e-05, 0.0, -0.0001678466796875, 0.0, -0.0006132125854492188, -1.52587890625e-05, -0.0003452301025390625, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-05, -7.62939453125e-06, -0.000202178955078125, 0.0, -9.5367431640625e-06, 0.0, -0.0006732940673828125, -3.24249267578125e-05, -0.016008377075195312, -1.9073486328125e-06, -0.0001840581971919164, 0.0, -7.05718994140625e-05, -0.000278472900390625, -5.7220458984375e-06, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, 0.0, -5.53131103515625e-05, 0.0, -0.0011307001113891602, 0.0, -0.0001678466796875, -5.7220458984375e-06, -0.000576019287109375, -0.0009365081787109375, -0.0003528594970703125, -0.0008522870484739542, -5.125986263010418e-06, 0.0, -0.0001049041748046875, -0.00030612945556640625, -1.3470649719238281e-05, -0.44636058807373047, -1.71661376953125e-05, -0.00023651123046875, 0.0, -0.0007588863372802734, -1.4185905456542969e-05, -0.04097938537597656, 0.0, -0.00023651123046875, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0017604827880859375, 0.0, -0.003716707229614258, 0.0, -0.0013930127024650574, 0.0, -7.2479248046875e-05, -0.000392913818359375, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0002307891845703125, 0.0, -0.00017034965276252478, -1.1920928244535389e-07, -0.0030536651611328125, -7.62939453125e-06, -0.00060272216796875, -0.00081634521484375, -0.0004367828369140625, -0.0009578441386111081, -4.768360213347478e-06, 0.0, -0.0001392364501953125, -0.000263214111328125, -1.537799835205078e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.580923851993276, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -0.40812528133392334, -0.0017014741897583008, -0.00106048583984375, -7.43865966796875e-05, -6.29425048828125e-05, 0.0, -0.00011444091796875, -0.0001068115234375, -0.00311279296875, -7.748603820800781e-06, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004316568374633789, -2.0265579223632812e-06, -0.020989418029785156, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.9604562920867465e-06, -1.9073486328125e-06, -0.00041961669921875, 0.0, -2.47955322265625e-05, -5.91278076171875e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.555152165470645e-05, 0.0, -0.0001773834228515625, -5.7220458984375e-06, -0.0002155303955078125, 0.0, -0.004002690315246582, -4.768370445162873e-07, -0.0005512237548828125, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.00012969970703125, 0.0, -0.0007653236389160156, -1.52587890625e-05, -0.0003719329833984375, -2.288818359375e-05, -1.1444091796875e-05, -5.7220458984375e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.00067901611328125, -3.62396240234375e-05, -4.114703178405762, -2.1457672119140625e-06, -0.00014400460349861532, 0.0, -0.000255584716796875, -0.00238800048828125, -3.814697265625e-06, -3.0517578125e-05, 0.0, -3.814697265625e-05, 0.0, -6.103515625e-05, 0.0, -0.002286076545715332, 0.0, -0.000148773193359375, -7.62939453125e-06, -0.0008258819580078125, -0.001239776611328125, -0.0003814697265625, -0.0007924792007543147, -5.245195097813848e-06, 0.0, -0.0001277923583984375, -0.00029087066650390625, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.889616940683922, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -4.593234062194824, -2.09808349609375e-05, -8.940656698541716e-06, -0.00040030479431152344, -8.105902816168964e-05, 0.0, -2.861018856492592e-06, 0.0, -0.2573896646499634, -2.288818359375e-05, -0.001407623291015625, -5.14984130859375e-05, -3.0517578125e-05, 0.0, -0.00022125244140625, -9.34600830078125e-05, -0.0003337860107421875, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0006357431411743164, -2.0265579223632812e-06, -0.0021457672119140625, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -4.887576324108522e-06, -1.9073486328125e-06, -0.000362396240234375, 0.0, -2.6702880859375e-05, -5.7220458984375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -3.0517578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.292891728458926e-05, 0.0, -0.000194549560546875, -7.62939453125e-06, -0.0002689361572265625, 0.0, -0.0051184892654418945, -5.960462772236497e-07, -0.000598907470703125, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.0001373291015625, 0.0, -0.0007481575012207031, -1.52587890625e-05, -0.0003662109375, -2.288818359375e-05, -1.1444091796875e-05, -5.7220458984375e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.00067901611328125, -3.62396240234375e-05, -0.017780303955078125, -1.9073486328125e-06, -0.00018668084521777928, 0.0, -0.000156402587890625, -0.0007266998291015625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0011513233184814453, 0.0, -0.000148773193359375, -5.7220458984375e-06, -0.0005893707275390625, -0.000965118408203125, -0.00035858154296875, -0.0008422817336395383, -4.887569048150908e-06, 0.0, -0.0001125335693359375, -0.0002956390380859375, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.022177284363032, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -0.40812528133392334, -0.0017014741897583008, -0.00106048583984375, -7.43865966796875e-05, -6.29425048828125e-05, 0.0, -0.00011444091796875, -0.0001068115234375, -0.00311279296875, -7.748603820800781e-06, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004316568374633789, -2.0265579223632812e-06, -4.034051895141602, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -5.006785613659304e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -2.86102294921875e-05, -1.52587890625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.698203312931582e-05, 0.0, -0.0030775070190429688, -7.62939453125e-05, -0.000823974609375, 0.0, -0.0030168292578309774, -1.6689286894688848e-06, -0.00104522705078125, -1.33514404296875e-05, -1.9073486328125e-05, 0.0, -0.000164031982421875, 0.0, -0.0006113052368164062, -1.52587890625e-05, -0.0003452301025390625, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-05, -7.62939453125e-06, -0.000202178955078125, 0.0, -9.5367431640625e-06, 0.0, -0.0006732940673828125, -3.24249267578125e-05, -0.015943527221679688, -1.9073486328125e-06, -0.0001841774064814672, 0.0, -7.05718994140625e-05, -0.000274658203125, -5.7220458984375e-06, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, 0.0, -5.340576171875e-05, 0.0, -0.0011343955993652344, 0.0, -0.0001659393310546875, -5.7220458984375e-06, -0.0005741119384765625, -0.0009365081787109375, -0.0003528594970703125, -0.0008553846273571253, -5.125986263010418e-06, 0.0, -0.0001049041748046875, -0.00030612945556640625, -1.3470649719238281e-05, -0.4742870330810547, -1.52587890625e-05, -0.000247955322265625, 0.0, -0.0007886886596679688, -1.4185905456542969e-05, -0.038430213928222656, 0.0, -0.0002384185791015625, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0017442703247070312, 0.0, -0.0037043094635009766, 0.0, -0.0013909852132201195, 0.0, -7.2479248046875e-05, -0.0003910064697265625, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0002288818359375, 0.0, -0.000170230443472974, -1.1920928244535389e-07, -0.003002166748046875, -7.62939453125e-06, -0.000598907470703125, -0.0008144378662109375, -0.00043487548828125, -0.0009620148921385407, -4.768360213347478e-06, 0.0, -0.0001392364501953125, -0.000263214111328125, -1.537799835205078e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.389489708300545, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -1.128252387046814, -0.0002804994583129883, -0.000560760498046875, -8.58306884765625e-05, -4.9591064453125e-05, 0.0, -2.09808349609375e-05, -6.67572021484375e-05, -0.0047969818115234375, -9.655952453613281e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004928112030029297, -2.0265579223632812e-06, -0.11160659790039062, -6.103515625e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.392333984375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.841247457283316e-06, -1.9073486328125e-06, -0.0004329681396484375, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.6702880859375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.555152165470645e-05, 0.0, -0.0001735687255859375, -5.7220458984375e-06, -0.000217437744140625, 0.0, -0.004071354866027832, -4.768370445162873e-07, -0.0005550384521484375, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.0001277923583984375, 0.0, -0.0007615089416503906, -1.52587890625e-05, -0.0003681182861328125, -2.288818359375e-05, -1.1444091796875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.0006771087646484375, -3.62396240234375e-05, -4.112730979919434, -2.1457672119140625e-06, -0.00014591195213142782, 0.0, -0.0002574920654296875, -0.0023670196533203125, -3.814697265625e-06, -3.0517578125e-05, 0.0, -3.814697265625e-05, 0.0, -6.103515625e-05, 0.0, -0.002331972122192383, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0008296966552734375, -0.0012416839599609375, -0.0003814697265625, -0.0007883081561885774, -5.245195097813848e-06, 0.0, -0.0001277923583984375, -0.00029087066650390625, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.6664309812131535, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "WARLOCK"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -5.502580165863037, -5.7220458984375e-06, -0.00058746337890625, -0.0001354217529296875, -4.9591064453125e-05, 0.0, -1.1444091796875e-05, -7.05718994140625e-05, -0.0014820098876953125, -7.748603820800781e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0006052255630493164, -2.0265579223632812e-06, -0.11604881286621094, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -9.72747802734375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.722038622479886e-06, -1.9073486328125e-06, -0.000438690185546875, 0.0, -2.288818359375e-05, -6.866455078125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.555152165470645e-05, 0.0, -0.0001697540283203125, -5.7220458984375e-06, -0.000213623046875, 0.0, -0.003921627998352051, -4.768370445162873e-07, -0.0005512237548828125, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.0001316070556640625, 0.0, -0.0007576942443847656, -1.52587890625e-05, -0.0003681182861328125, -2.288818359375e-05, -1.1444091796875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.000675201416015625, -3.62396240234375e-05, -0.017747879028320312, -1.9073486328125e-06, -0.0001865616359282285, 0.0, -0.000171661376953125, -0.0007495880126953125, -3.814697265625e-06, -5.340576171875e-05, 0.0, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0011742115020751953, 0.0, -0.000152587890625, -5.7220458984375e-06, -0.000598907470703125, -0.000972747802734375, -0.00035858154296875, -0.0008362044463865459, -4.887569048150908e-06, 0.0, -0.0001125335693359375, -0.0002956390380859375, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.0007586680386, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"n": 2, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -1.128252387046814, -0.0002804994583129883, -0.000560760498046875, -8.58306884765625e-05, -4.9591064453125e-05, 0.0, -2.09808349609375e-05, -6.67572021484375e-05, -0.0047969818115234375, -9.655952453613281e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004928112030029297, -2.0265579223632812e-06, -2.350313186645508, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -5.006785613659304e-06, -1.9073486328125e-06, -0.00029754638671875, 0.0, -2.47955322265625e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9008591051679105e-05, 0.0, -0.003070831298828125, -7.2479248046875e-05, -0.0008258819580078125, 0.0, -0.0031286475714296103, -1.6689286894688848e-06, -0.0010547637939453125, -1.33514404296875e-05, -1.9073486328125e-05, 0.0, -0.0001678466796875, 0.0, -0.0006132125854492188, -1.52587890625e-05, -0.0003452301025390625, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-05, -7.62939453125e-06, -0.000202178955078125, 0.0, -9.5367431640625e-06, 0.0, -0.0006732940673828125, -3.24249267578125e-05, -0.016008377075195312, -1.9073486328125e-06, -0.0001840581971919164, 0.0, -7.05718994140625e-05, -0.000278472900390625, -5.7220458984375e-06, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, 0.0, -5.53131103515625e-05, 0.0, -0.0011307001113891602, 0.0, -0.0001678466796875, -5.7220458984375e-06, -0.000576019287109375, -0.0009365081787109375, -0.0003528594970703125, -0.0008522870484739542, -5.125986263010418e-06, 0.0, -0.0001049041748046875, -0.00030612945556640625, -1.3470649719238281e-05, -1.0382490158081055, -4.57763671875e-05, -0.018405914306640625, -0.3397388458251953, -1.33514404296875e-05, 0.0, -0.0055713653564453125, -3.814697265625e-05, -0.037270545959472656, 0.0, -0.034897446632385254, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.10576438903808594, 0.0, -3.814697265625e-05, -0.3578224182128906, -7.62939453125e-06, -0.5314140319824219, -2.3841855067985307e-07, 0.0, -3.814697265625e-06, -0.0011898279190063477, -3.576278118089249e-07], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        self.target.damage(2, self)\n"}, {"score": -6.14881906442001, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -4.593234062194824, -2.09808349609375e-05, -8.940656698541716e-06, -0.00040030479431152344, -8.105902816168964e-05, 0.0, -2.861018856492592e-06, 0.0, -1.5070425271987915, -1.9073486328125e-06, -0.000774383544921875, -7.62939453125e-06, -3.814697265625e-05, 0.0, -8.7738037109375e-05, -7.2479248046875e-05, -0.0010013580322265625, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.0006414651870727539, -2.0265579223632812e-06, -0.012195587158203125, -8.20159912109375e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -6.866455078125e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -4.887576324108522e-06, -1.9073486328125e-06, -0.0003643035888671875, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, -1.9073486328125e-05, -1.33514404296875e-05, -3.0517578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.292891728458926e-05, 0.0, -0.0001811981201171875, -7.62939453125e-06, -0.000263214111328125, 0.0, -0.004826664924621582, -4.768370445162873e-07, -0.0005931854248046875, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.0001392364501953125, 0.0, -0.0007519721984863281, -1.52587890625e-05, -0.000362396240234375, -2.288818359375e-05, -1.1444091796875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.0006809234619140625, -3.62396240234375e-05, -0.017774581909179688, -1.9073486328125e-06, -0.00018668084521777928, 0.0, -0.0001583099365234375, -0.0007266998291015625, -3.814697265625e-06, -5.340576171875e-05, 0.0, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0011562108993530273, 0.0, -0.000148773193359375, -5.7220458984375e-06, -0.000591278076171875, -0.0009670257568359375, -0.00035858154296875, -0.0008385872934013605, -4.887569048150908e-06, 0.0, -0.0001125335693359375, -0.0002956390380859375, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.211031825595477, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -6.055592060089111, -1.728534698486328e-05, -0.007221221923828125, -3.0517578125e-05, -6.866455078125e-05, 0.0, -5.7220458984375e-06, -7.2479248046875e-05, -0.003490447998046875, -1.3470649719238281e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004564523696899414, -1.1920928244535389e-07, -0.09897041320800781, -7.82012939453125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.9604562920867465e-06, -1.9073486328125e-06, -0.00043487548828125, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.555152165470645e-05, 0.0, -0.000171661376953125, -5.7220458984375e-06, -0.00020599365234375, 0.0, -0.004166722297668457, -4.768370445162873e-07, -0.000553131103515625, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.0001316070556640625, 0.0, -0.0007615089416503906, -1.52587890625e-05, -0.0003681182861328125, -2.288818359375e-05, -1.1444091796875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.0006771087646484375, -3.62396240234375e-05, -0.017751693725585938, -1.9073486328125e-06, -0.0001865616359282285, 0.0, -0.000171661376953125, -0.0007495880126953125, -3.814697265625e-06, -5.340576171875e-05, 0.0, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0011751651763916016, 0.0, -0.000152587890625, -5.7220458984375e-06, -0.000598907470703125, -0.000972747802734375, -0.00035858154296875, -0.0008362044463865459, -4.887569048150908e-06, 0.0, -0.0001125335693359375, -0.0002956390380859375, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.315694415105469, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -1.128252387046814, -0.0002804994583129883, -0.000560760498046875, -8.58306884765625e-05, -4.9591064453125e-05, 0.0, -2.09808349609375e-05, -6.67572021484375e-05, -0.0047969818115234375, -9.655952453613281e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004928112030029297, -2.0265579223632812e-06, -2.350313186645508, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -5.006785613659304e-06, -1.9073486328125e-06, -0.00029754638671875, 0.0, -2.47955322265625e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9008591051679105e-05, 0.0, -0.003070831298828125, -7.2479248046875e-05, -0.0008258819580078125, 0.0, -0.0031286475714296103, -1.6689286894688848e-06, -0.0010547637939453125, -1.33514404296875e-05, -1.9073486328125e-05, 0.0, -0.0001678466796875, 0.0, -0.0006132125854492188, -1.52587890625e-05, -0.0003452301025390625, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-05, -7.62939453125e-06, -0.000202178955078125, 0.0, -9.5367431640625e-06, 0.0, -0.0006732940673828125, -3.24249267578125e-05, -0.016008377075195312, -1.9073486328125e-06, -0.0001840581971919164, 0.0, -7.05718994140625e-05, -0.000278472900390625, -5.7220458984375e-06, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, 0.0, -5.53131103515625e-05, 0.0, -0.0011307001113891602, 0.0, -0.0001678466796875, -5.7220458984375e-06, -0.000576019287109375, -0.0009365081787109375, -0.0003528594970703125, -0.0008522870484739542, -5.125986263010418e-06, 0.0, -0.0001049041748046875, -0.00030612945556640625, -1.3470649719238281e-05, -1.0382490158081055, -4.57763671875e-05, -0.018405914306640625, -0.3397388458251953, -1.33514404296875e-05, 0.0, -0.0055713653564453125, -3.814697265625e-05, -0.037270545959472656, 0.0, -0.034897446632385254, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.10576438903808594, 0.0, -3.814697265625e-05, -1.2038803100585938, -7.62939453125e-05, -0.0013546380214393139, -1.7881377516459906e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -1.52587890625e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.5199962276807355, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template2", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "target", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneExplosion", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -0.40812528133392334, -0.0017014741897583008, -0.00106048583984375, -7.43865966796875e-05, -6.29425048828125e-05, 0.0, -0.00011444091796875, -0.0001068115234375, -0.00311279296875, -7.748603820800781e-06, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004316568374633789, -2.0265579223632812e-06, -0.020989418029785156, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.9604562920867465e-06, -1.9073486328125e-06, -0.00041961669921875, 0.0, -2.47955322265625e-05, -5.91278076171875e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.555152165470645e-05, 0.0, -0.0001773834228515625, -5.7220458984375e-06, -0.0002155303955078125, 0.0, -6.03969669342041, -2.3841855067985307e-07, -0.0001659393310546875, -7.62939453125e-06, -0.00046443939208984375, 0.0, -0.000850677490234375, 0.0, -0.002048969268798828, -2.872943878173828e-05, -0.0003719329833984375, -2.47955322265625e-05, -5.7220458984375e-06, -7.05718994140625e-05, -1.1444091796875e-05, -0.0001506805419921875, 0.0, -1.1444091796875e-05, 0.0, -0.0003795623779296875, -3.24249267578125e-05, -0.01955413818359375, -1.9073486328125e-06, -0.00017630949150770903, 0.0, -0.0001506805419921875, -0.0007457733154296875, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -3.4332275390625e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0012537240982055664, 0.0, -0.00016021728515625, -7.62939453125e-06, -0.000640869140625, -0.0010738372802734375, -0.0003566741943359375, -0.0007567224092781544, -6.556489552167477e-06, 0.0, -0.0001087188720703125, -0.0002899169921875, -1.1563301086425781e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for target in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -15.261207580566406, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -15.261177062988281], "inferred_code": "break\n"}, {"score": -22.67953109741211, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -22.679502487182617], "inferred_code": ""}], "index": 3}
{"beams": [{"score": -0.2000471768015899, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole3": "FREE", "hole0": "Arcane Intellect", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.024340510368347168, -3.266334533691406e-05, -0.0002796649932861328, -2.3841855067985307e-07, -4.57763671875e-05, -2.47955322265625e-05, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -3.62396240234375e-05, -7.82012939453125e-05, -1.2397762475302443e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.121924626408145e-05, -1.2397762475302443e-05, -0.024034500122070312, -1.71661376953125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.741813204920618e-06, -6.198883056640625e-06, -6.67572021484375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.801417031150777e-05, -1.1801719665527344e-05, -0.000690460205078125, -9.5367431640625e-06, -0.0001392364501953125, -9.5367431640625e-06, -0.021147608757019043, -8.702239938429557e-06, -1.9073486328125e-05, -0.000118255615234375, -0.00213623046875, -1.9073486328125e-06, -0.0012739417143166065, -3.814689989667386e-06, -8.0108642578125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.00022207203437574208, -7.62939453125e-06, -0.0031118392944335938, -3.814697265625e-06, -0.008337738923728466, 0.0, -5.7220458984375e-05, -0.0009403228759765625, -4.1961669921875e-05, -0.0001316070556640625, -0.0034465789794921875, -3.814697265625e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -0.0009418558911420405, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -2.7573465325365802, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template2", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -2.3587522506713867, -0.0004901885986328125, -3.3378546504536644e-06, -0.0003267217834945768, -1.1444026313256472e-05, 0.0, -2.980231556648505e-06, 0.0, -0.3356952667236328, -0.00019085407257080078, -2.6702880859375e-05, -0.000152587890625, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -2.09808349609375e-05, -9.775159924174659e-06, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.0384783056215383e-05, -9.894368304230738e-06, -0.018926620483398438, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.099440846199286e-06, -6.079673767089844e-06, -7.2479248046875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.8133377782069147e-05, -1.1801719665527344e-05, -0.0004634857177734375, -9.5367431640625e-06, -0.0001735687255859375, -9.5367431640625e-06, -0.02087116241455078, -8.22540732769994e-06, -2.09808349609375e-05, -0.000110626220703125, -0.00150299072265625, -1.9073486328125e-06, -0.0012834796216338873, -3.933898824470816e-06, -7.2479248046875e-05, -6.103515625e-05, -1.9073486328125e-06, -0.000232442092965357, -7.62939453125e-06, -0.003231048583984375, -3.814697265625e-06, -0.008197321556508541, 0.0, -5.340576171875e-05, -0.0009593963623046875, -5.340576171875e-05, -0.000133514404296875, -0.0035495758056640625, -3.814697265625e-06, 0.0, -0.0002536773681640625, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.000955206633079797, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -4.544486472531716, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole3": "FREE", "hole0": "Arcane Intellect", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.024340510368347168, -3.266334533691406e-05, -0.0002796649932861328, -2.3841855067985307e-07, -4.57763671875e-05, -2.47955322265625e-05, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -3.62396240234375e-05, -7.82012939453125e-05, -1.2397762475302443e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.121924626408145e-05, -1.2397762475302443e-05, -0.024034500122070312, -1.71661376953125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.741813204920618e-06, -6.198883056640625e-06, -6.67572021484375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.801417031150777e-05, -1.1801719665527344e-05, -0.000690460205078125, -9.5367431640625e-06, -0.0001392364501953125, -9.5367431640625e-06, -4.367794513702393, -2.264974000354414e-06, -2.6702880859375e-05, -4.00543212890625e-05, -0.0002079010009765625, -1.9073486328125e-06, -0.0007964072283357382, -1.311301275563892e-06, -0.0001659393310546875, -4.57763671875e-05, -1.9073486328125e-06, -0.00023780409537721425, -9.5367431640625e-06, -0.0024881362915039062, -5.7220458984375e-06, -0.008949057199060917, 0.0, -6.29425048828125e-05, -0.0010519027709960938, -4.76837158203125e-05, -0.000133514404296875, -0.0035228729248046875, -3.814697265625e-06, 0.0, -0.00026702880859375, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0009331537876278162, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n"}, {"score": -4.560008450781474, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template2", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -2.3587522506713867, -0.0004901885986328125, -3.3378546504536644e-06, -0.0003267217834945768, -1.1444026313256472e-05, 0.0, -2.980231556648505e-06, 0.0, -2.1260480880737305, -3.4332275390625e-05, -1.52587890625e-05, -0.000232696533203125, -3.4332275390625e-05, 0.0, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -7.152556463552173e-06, 0.0, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.4318689611391164e-05, -1.0967249181703664e-05, -0.03156280517578125, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.218649908376392e-06, -6.079673767089844e-06, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.8133377782069147e-05, -1.1801719665527344e-05, -0.000484466552734375, -9.5367431640625e-06, -0.000179290771484375, -9.5367431640625e-06, -0.02059948444366455, -8.4638240878121e-06, -2.09808349609375e-05, -0.0001087188720703125, -0.0014286041259765625, -1.9073486328125e-06, -0.0012768021551892161, -4.0531076592742465e-06, -7.43865966796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.00023446862178388983, -7.62939453125e-06, -0.0032606124877929688, -3.814697265625e-06, -0.008188762702047825, 0.0, -5.340576171875e-05, -0.00096893310546875, -5.14984130859375e-05, -0.0001316070556640625, -0.003589630126953125, -3.814697265625e-06, 0.0, -0.0002536773681640625, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0009550874819979072, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -4.75372016331913, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole3": "FREE", "hole0": "Arcane Intellect", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.024340510368347168, -3.266334533691406e-05, -0.0002796649932861328, -2.3841855067985307e-07, -4.57763671875e-05, -2.47955322265625e-05, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -3.62396240234375e-05, -7.82012939453125e-05, -1.2397762475302443e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.121924626408145e-05, -1.2397762475302443e-05, -4.571267127990723, -0.04935264587402344, -1.9073486328125e-06, -3.814697265625e-06, -0.0001468658447265625, -2.09808349609375e-05, 0.0, -0.0002288818359375, 0.0, -4.887569048150908e-06, -3.933904736186378e-06, -0.0001201629638671875, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -2.396105628577061e-05, -1.5497207641601562e-05], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"score": -5.017966070158863, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "3", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole3": "FREE", "hole0": "Arcane Intellect", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.024340510368347168, -3.266334533691406e-05, -0.0002796649932861328, -2.3841855067985307e-07, -4.57763671875e-05, -2.47955322265625e-05, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -3.62396240234375e-05, -7.82012939453125e-05, -1.2397762475302443e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.121924626408145e-05, -1.2397762475302443e-05, -0.024034500122070312, -1.71661376953125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.741813204920618e-06, -6.198883056640625e-06, -6.67572021484375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.801417031150777e-05, -1.1801719665527344e-05, -0.000690460205078125, -9.5367431640625e-06, -0.0001392364501953125, -9.5367431640625e-06, -0.021147608757019043, -8.702239938429557e-06, -1.9073486328125e-05, -0.000118255615234375, -0.00213623046875, -1.9073486328125e-06, -0.0012739417143166065, -3.814689989667386e-06, -8.0108642578125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.00022207203437574208, -7.62939453125e-06, -0.0031118392944335938, -3.814697265625e-06, -4.817313194274902, 0.0, -7.2479248046875e-05, -0.006756782531738281, -0.0001201629638671875, -4.38690185546875e-05, -0.0064067840576171875, -5.7220458984375e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -0.0011067218147218227, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 3):\n            player.draw()\n"}, {"score": -5.065646274763381, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole3": "FREE", "hole0": "Arcane Intellect", "_type": "Template3", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -4.8909196853637695, -3.814697265625e-06, -0.002039790153503418, -4.768370445162873e-07, -6.4849853515625e-05, -2.6702880859375e-05, -3.814697265625e-05, 0.0, -3.24249267578125e-05, -3.24249267578125e-05, -7.05718994140625e-05, -1.5377991076093167e-05, 0.0, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -2.15768777707126e-05, -1.2636180144909304e-05, -0.02143096923828125, -1.52587890625e-05, 0.0, -5.7220458984375e-05, -3.0517578125e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.9802317840221804e-06, -6.4373016357421875e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.7894961021956988e-05, -1.1801719665527344e-05, -0.0005588531494140625, -9.5367431640625e-06, -0.00014495849609375, -9.5367431640625e-06, -0.021161675453186035, -8.4638240878121e-06, -2.09808349609375e-05, -0.000118255615234375, -0.002162933349609375, -1.9073486328125e-06, -0.0012794253416359425, -3.933898824470816e-06, -7.82012939453125e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.00022517093748319894, -7.62939453125e-06, -0.0031328201293945312, -3.814697265625e-06, -0.008299773558974266, 0.0, -5.53131103515625e-05, -0.000926971435546875, -4.38690185546875e-05, -0.000133514404296875, -0.003429412841796875, -3.814697265625e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -0.0009444783790968359, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -5.194818211786064, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template2", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -2.3587522506713867, -0.0004901885986328125, -3.3378546504536644e-06, -0.0003267217834945768, -1.1444026313256472e-05, 0.0, -2.980231556648505e-06, 0.0, -2.7507314682006836, -1.33514404296875e-05, -4.9591064453125e-05, -0.0001373291015625, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -8.82148651726311e-06, 0.0, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.372264498262666e-05, -1.0967249181703664e-05, -0.041690826416015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.099440846199286e-06, -6.079673767089844e-06, -7.62939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.8133377782069147e-05, -1.1801719665527344e-05, -0.0004863739013671875, -9.5367431640625e-06, -0.0001773834228515625, -9.5367431640625e-06, -0.02069687843322754, -8.4638240878121e-06, -2.09808349609375e-05, -0.0001087188720703125, -0.001438140869140625, -1.9073486328125e-06, -0.0012691724114120007, -4.0531076592742465e-06, -7.43865966796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.00023387267719954252, -7.62939453125e-06, -0.0032567977905273438, -3.814697265625e-06, -0.008188433945178986, 0.0, -5.340576171875e-05, -0.00096893310546875, -5.340576171875e-05, -0.0001316070556640625, -0.0035724639892578125, -3.814697265625e-06, 0.0, -0.0002536773681640625, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.000955206633079797, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -5.632483195876873, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Intellect", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Intellect", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -5.251080513000488, -5.340576171875e-05, -1.5974044799804688e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -8.58306884765625e-05, -2.1457672119140625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -0.000270843505859375, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -7.033342626527883e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.0003261566162109375, -7.521823135903105e-05, -8.988380432128906e-05, -7.867782187531702e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.145764938177308e-06, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.33514404296875e-05, -8.7738037109375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -0.023090600967407227, 0.0, -2.288818359375e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0035724639892578125, 0.0, -0.003589630126953125, 0.0, -0.0020542144775390625, -4.76837158203125e-05, -6.866455078125e-05, -3.826618194580078e-05, -3.814697265625e-06, -5.91278076171875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -5.340576171875e-05, -7.62939453125e-06, -0.0006201267242431641, -8.463848644169047e-06, -0.10963606834411621, -1.6689286894688848e-06, -0.007068634033203125, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -3.0517578125e-05, -2.288818359375e-05, -1.7523716451250948e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.225440979003906e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00030076460097916424, -8.225420970120467e-06, -0.18772220611572266, -7.62939453125e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.741813204920618e-06, -3.933906555175781e-06, -6.866455078125e-05, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.6226029149256647e-05, -1.1801719665527344e-05, -0.0013294219970703125, -7.62939453125e-06, -0.000133514404296875, -9.5367431640625e-06, -0.019731760025024414, -8.821448318485636e-06, -1.9073486328125e-05, -0.0001049041748046875, -0.0008907318115234375, -1.9073486328125e-06, -0.0012301900424063206, -3.6954811548639555e-06, -8.0108642578125e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.00023339726612903178, -7.62939453125e-06, -0.003307342529296875, -3.814697265625e-06, -0.008228816092014313, 0.0, -6.103515625e-05, -0.0010929107666015625, -4.38690185546875e-05, -0.000118255615234375, -0.003753662109375, -3.814697265625e-06, 0.0, -0.0002574920654296875, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0009352988563477993, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -5.642968910158409, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole3": "FREE", "hole0": "Arcane Intellect", "_type": "Template3", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -5.470024108886719, -5.7220458984375e-06, -0.0006115436553955078, -1.1920928244535389e-07, -6.103515625e-05, -3.4332275390625e-05, -4.57763671875e-05, 0.0, -3.4332275390625e-05, -3.24249267578125e-05, -7.82012939453125e-05, -1.6212459740927443e-05, 0.0, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.990794771700166e-05, -1.2755388524965383e-05, -0.021215438842773438, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -3.0517578125e-05, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, 0.0, -2.9802317840221804e-06, -6.556510470545618e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.7894961021956988e-05, -1.1801719665527344e-05, -0.0005397796630859375, -9.5367431640625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.021100521087646484, -8.4638240878121e-06, -2.09808349609375e-05, -0.000118255615234375, -0.00209808349609375, -1.9073486328125e-06, -0.0012757304357364774, -3.814689989667386e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.00022517093748319894, -7.62939453125e-06, -0.0031328201293945312, -3.814697265625e-06, -0.008275010623037815, 0.0, -5.53131103515625e-05, -0.0009307861328125, -4.38690185546875e-05, -0.000133514404296875, -0.003437042236328125, -3.814697265625e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -0.0009448359487578273, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -5.870475400491209, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "WARLOCK", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template2", "hole2": "WARLOCK"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -2.3587522506713867, -0.0004901885986328125, -3.3378546504536644e-06, -0.0003267217834945768, -1.1444026313256472e-05, 0.0, -2.980231556648505e-06, 0.0, -3.434238910675049, 0.0, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, 0.0, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -7.6293927122605965e-06, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.8014177587465383e-05, -1.1205666851310525e-05, -0.033896446228027344, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -6.198883056640625e-06, -7.62939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.6226029149256647e-05, -1.1801719665527344e-05, -0.00049591064453125, -9.5367431640625e-06, -0.00017547607421875, -9.5367431640625e-06, -0.020764589309692383, -8.4638240878121e-06, -2.09808349609375e-05, -0.0001087188720703125, -0.001438140869140625, -1.9073486328125e-06, -0.0012735832715407014, -4.0531076592742465e-06, -7.43865966796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.00023351512209046632, -7.62939453125e-06, -0.0032529830932617188, -3.814697265625e-06, -0.008192522451281548, 0.0, -5.340576171875e-05, -0.000965118408203125, -5.340576171875e-05, -0.0001316070556640625, -0.0035686492919921875, -3.814697265625e-06, 0.0, -0.0002536773681640625, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0009553258423693478, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -8.299915843160406, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "player", "<EOS>", "<UNK>", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "cards", "cards", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole3": "FREE", "hole0": "Arcane Intellect", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "cardscards", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "<UNK>", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.024340510368347168, -3.266334533691406e-05, -0.0002796649932861328, -2.3841855067985307e-07, -4.57763671875e-05, -2.47955322265625e-05, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -3.62396240234375e-05, -7.82012939453125e-05, -1.2397762475302443e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.121924626408145e-05, -1.2397762475302443e-05, -0.024034500122070312, -1.71661376953125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.741813204920618e-06, -6.198883056640625e-06, -6.67572021484375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.801417031150777e-05, -1.1801719665527344e-05, -0.000690460205078125, -9.5367431640625e-06, -0.0001392364501953125, -9.5367431640625e-06, -0.021147608757019043, -8.702239938429557e-06, -1.9073486328125e-05, -0.000118255615234375, -0.00213623046875, -1.9073486328125e-06, -0.0012739417143166065, -3.814689989667386e-06, -8.0108642578125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.00022207203437574208, -7.62939453125e-06, -0.0031118392944335938, -3.814697265625e-06, -0.008337738923728466, 0.0, -5.7220458984375e-05, -0.0009403228759765625, -4.1961669921875e-05, -0.0001316070556640625, -5.692638397216797, -0.000148773193359375, -1.9073486328125e-06, -0.16245746612548828, -0.000270843505859375, -0.010155081748962402, -1.2278556823730469e-05, -0.344480037689209, 0.0, -0.3732576370239258, -0.0034198760986328125, -6.29425048828125e-05, -0.5706233978271484, 0.0, -0.5875531435012817, -0.00012635743769351393, -0.0001354217529296875, -4.76837158203125e-05, -0.0001983642578125, -0.03306841850280762, -0.32582807540893555, -5.1616480050142854e-05], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.<UNK>(Buff(cardscards()))\n"}, {"score": -9.172798278871923, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 181, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole3": "FREE", "hole0": "Arcane Intellect", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneIntellect", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.024340510368347168, -3.266334533691406e-05, -0.0002796649932861328, -2.3841855067985307e-07, -4.57763671875e-05, -2.47955322265625e-05, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -3.62396240234375e-05, -7.82012939453125e-05, -1.2397762475302443e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.121924626408145e-05, -1.2397762475302443e-05, -4.864472389221191, -0.0032749176025390625, 0.0, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.006789251638111e-06, -5.9604644775390625e-06, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -2.586840491858311e-05, -1.3709068298339844e-05, -0.9624471664428711, -1.9073486328125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.04292738437652588, -3.576272320060525e-06, -1.1444091796875e-05, -0.0001659393310546875, -0.0012054443359375, -1.9073486328125e-06, -0.0010268541518598795, -2.0265558760002023e-06, -0.0003795623779296875, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001566350692883134, -7.62939453125e-06, -0.00225830078125, -5.7220458984375e-06, -0.012534810230135918, 0.0, -0.000232696533203125, -0.0030841827392578125, -1.33514404296875e-05, -0.0001163482666015625, -0.003101348876953125, -3.814697265625e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -0.0009218318737111986, 0.0, -1.1351318359375, 0.0, -5.7220458984375e-06, -0.015249252319335938, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0005561113357543945, 0.0, -0.0008306465460918844, 0.0, -0.9456758499145508, 0.0, -5.7220458984375e-06, -0.026943206787109375, -3.814697265625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -0.001240849494934082, 0.0, -0.0008915580110624433, 0.0, -0.641606330871582, 0.0, -3.814697265625e-06, -0.015178680419921875, -5.7220458984375e-06, 0.0, -0.00043487548828125, -1.9073486328125e-06, -0.0016738176345825195, 0.0, -0.0008795141475275159, 0.0, -0.33135318756103516, 0.0, -3.814697265625e-06, -0.020357131958007812, -5.7220458984375e-06, 0.0, -0.000591278076171875, -1.9073486328125e-06, -0.0015641450881958008, 0.0, -0.0009359015966765583, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n        player.draw()\n        player.draw()\n        player.draw()\n        player.draw()\n"}, {"score": -15.993468284606934, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -15.993447303771973], "inferred_code": "break\n"}, {"score": -22.87857437133789, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -22.878557205200195], "inferred_code": ""}], "index": 4}
{"beams": [{"score": -0.405282589501752, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Arcane Missiles", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -0.03322124481201172, -7.62939453125e-06, -0.0006122589111328125, 0.0, -0.000263214111328125, -1.1444091796875e-05, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.73532485961914e-05, 0.0, -0.0010395050048828125, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000263214111328125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001983642578125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0022344589233398438, -8.392333984375e-05, -0.001613616943359375, -0.000102996826171875, -0.002178788185119629, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0005817413330078125, -0.0028076171875, 0.0, -0.00022971619910094887, -3.0517578125e-05, -0.003082275390625, -0.0011997222900390625, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.0029430389404296875, -0.011730888858437538, -6.19888032815652e-06, -0.011959075927734375, -0.000133514404296875, -0.0002803802490234375, -0.0002899169921875, -0.00159454345703125, -8.7738037109375e-05, -0.0019561052322387695, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023603439331054688, 0.0, -0.0022444725036621094, -9.942054748535156e-05, -0.0029172897338867188, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003814697265625, -2.86102294921875e-05, 0.0, -0.0006694793701171875, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.0007801055908203125, -1.1920928244535389e-07, -0.0053538978099823, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000722050666809082, -9.5367431640625e-06, -0.013411521911621094, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024433135986328125, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007945060729980469, -1.9073486328125e-06, -0.05441582202911377, -2.1457672119140625e-06, -0.001149293384514749, -3.099436753473128e-06, -0.0032520294189453125, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007114410400390625, 0.0, -0.002819061279296875, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.005232572555541992, -5.7220458984375e-06, -0.006648063659667969, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.025267601013183594, -0.0001506805419921875, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.005325436592102051, -8.344646857949556e-07, -0.0021371841430664062, -2.86102294921875e-05, -2.09808349609375e-05, -0.02841949462890625, -0.000476837158203125, -0.0023129615001380444, -1.9073486328125e-06, -0.0037136077880859375, -0.0010051727294921875, -0.00045680999755859375, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -2.9190995275654075, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template2", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -2.3543100357055664, -0.0015125274658203125, -3.5762212064582855e-05, -0.0001854838919825852, -0.00014006163110025227, 0.0, -1.1920528777409345e-06, 0.0, -0.3249472379684448, -8.96453857421875e-05, -0.0002994537353515625, -0.00011444091796875, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -7.092952728271484e-05, 0.0, -0.0016651153564453125, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -1.919269561767578e-05, -0.000240325927734375, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0002002716064453125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -2.8014183044433594e-05, -1.9073486328125e-06, -0.001262664794921875, -7.05718994140625e-05, -0.0024461746215820312, -8.392333984375e-05, -0.0018705128459259868, -1.1920928244535389e-07, -1.33514404296875e-05, -0.000576019287109375, -0.0025339126586914062, 0.0, -0.00022280204575508833, -2.86102294921875e-05, -0.0029354095458984375, -0.001148223876953125, 0.0, -0.000209808349609375, -1.9073486328125e-06, -0.0019054412841796875, -0.002994537353515625, -0.011887529864907265, -6.19888032815652e-06, -0.011578559875488281, -0.00012969970703125, -0.000278472900390625, -0.0002880096435546875, -0.0016460418701171875, -8.7738037109375e-05, -0.0019494295120239258, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023670196533203125, 0.0, -0.002234935760498047, -0.00010514259338378906, -0.0029306411743164062, -3.24249267578125e-05, -7.62939453125e-06, -0.00122833251953125, -0.0003833770751953125, -2.86102294921875e-05, 0.0, -0.00067138671875, 0.0, -0.001262664794921875, -1.71661376953125e-05, -0.000782012939453125, -1.1920928244535389e-07, -0.005342215299606323, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.0007163286209106445, -9.5367431640625e-06, -0.013425827026367188, -5.7220458984375e-06, -5.7220458984375e-06, -0.002437591552734375, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007961273193359375, -1.9073486328125e-06, -0.05441486835479736, -2.1457672119140625e-06, -0.0011482213158160448, -3.099436753473128e-06, -0.0032749176025390625, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.000713348388671875, 0.0, -0.0028247833251953125, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.005312681198120117, -5.7220458984375e-06, -0.0066547393798828125, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.025162696838378906, -0.000148773193359375, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.005330204963684082, -8.344646857949556e-07, -0.00213623046875, -2.86102294921875e-05, -2.09808349609375e-05, -0.02841949462890625, -0.000476837158203125, -0.0023110536858439445, -1.9073486328125e-06, -0.0037136077880859375, -0.0010051727294921875, -0.000457763671875, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -3.663047637337371, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Arcane Missiles", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -0.03322124481201172, -7.62939453125e-06, -0.0006122589111328125, 0.0, -0.000263214111328125, -1.1444091796875e-05, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.73532485961914e-05, 0.0, -0.0010395050048828125, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000263214111328125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001983642578125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0022344589233398438, -8.392333984375e-05, -0.001613616943359375, -0.000102996826171875, -0.002178788185119629, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0005817413330078125, -0.0028076171875, 0.0, -0.00022971619910094887, -3.0517578125e-05, -0.003082275390625, -0.0011997222900390625, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.0029430389404296875, -0.011730888858437538, -6.19888032815652e-06, -0.011959075927734375, -0.000133514404296875, -0.0002803802490234375, -0.0002899169921875, -0.00159454345703125, -8.7738037109375e-05, -0.0019561052322387695, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023603439331054688, 0.0, -0.0022444725036621094, -9.942054748535156e-05, -0.0029172897338867188, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003814697265625, -2.86102294921875e-05, 0.0, -0.0006694793701171875, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.0007801055908203125, -1.1920928244535389e-07, -0.0053538978099823, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000722050666809082, -9.5367431640625e-06, -0.013411521911621094, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024433135986328125, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007945060729980469, -1.9073486328125e-06, -3.3141117095947266, -7.152555099310121e-07, -0.002008067909628153, -2.50339189733495e-06, -0.0012454986572265625, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.00041294097900390625, 0.0, -0.002079010009765625, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -0.000244140625, 0.0, -0.006376147270202637, -5.7220458984375e-06, -0.0066699981689453125, -1.728534698486328e-05, -1.9073486328125e-06, -4.00543212890625e-05, -1.1444091796875e-05, -0.0003426074981689453, 0.0, -0.024031639099121094, -0.00014495849609375, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00538480281829834, -8.344646857949556e-07, -0.002178192138671875, -2.86102294921875e-05, -2.09808349609375e-05, -0.028783798217773438, -0.000469207763671875, -0.002356475219130516, -1.9073486328125e-06, -0.0036449432373046875, -0.0009918212890625, -0.00044918060302734375, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.current_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -3.996307944271713, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "3", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Arcane Missiles", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -0.03322124481201172, -7.62939453125e-06, -0.0006122589111328125, 0.0, -0.000263214111328125, -1.1444091796875e-05, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.73532485961914e-05, 0.0, -0.0010395050048828125, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000263214111328125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001983642578125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0022344589233398438, -8.392333984375e-05, -0.001613616943359375, -0.000102996826171875, -0.002178788185119629, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0005817413330078125, -0.0028076171875, 0.0, -0.00022971619910094887, -3.0517578125e-05, -0.003082275390625, -0.0011997222900390625, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.0029430389404296875, -0.011730888858437538, -6.19888032815652e-06, -0.011959075927734375, -0.000133514404296875, -0.0002803802490234375, -0.0002899169921875, -0.00159454345703125, -8.7738037109375e-05, -0.0019561052322387695, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023603439331054688, 0.0, -0.0022444725036621094, -9.942054748535156e-05, -0.0029172897338867188, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003814697265625, -2.86102294921875e-05, 0.0, -0.0006694793701171875, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.0007801055908203125, -1.1920928244535389e-07, -0.0053538978099823, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000722050666809082, -9.5367431640625e-06, -0.013411521911621094, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024433135986328125, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007945060729980469, -1.9073486328125e-06, -0.05441582202911377, -2.1457672119140625e-06, -0.001149293384514749, -3.099436753473128e-06, -0.0032520294189453125, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007114410400390625, 0.0, -0.002819061279296875, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.005232572555541992, -5.7220458984375e-06, -0.006648063659667969, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.025267601013183594, -0.0001506805419921875, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.005325436592102051, -8.344646857949556e-07, -0.0021371841430664062, -2.86102294921875e-05, -2.09808349609375e-05, -3.608017921447754, -0.000152587890625, -0.017610972747206688, -1.2397729733493179e-05, -5.14984130859375e-05, -0.0010051727294921875, -0.0005617141723632812, 0.0], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -4.07018360742066, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Missiles", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Missiles", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -3.7108001708984375, -0.00014495849609375, -2.8014183044433594e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -0.003261566162109375, -1.9073486328125e-06, -9.5367431640625e-06, -7.43865966796875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.000469207763671875, 0.0, -4.1961669921875e-05, -0.0001239776611328125, -6.4849853515625e-05, -1.3112935448589269e-05, -7.069110870361328e-05, -1.3708974620385561e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -2.3841766960686073e-07, -7.152555099310121e-07, -0.0178070068359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -0.01100611686706543, -1.9073486328125e-06, -0.0001201629638671875, 0.0, -6.103515625e-05, 0.0, -7.2479248046875e-05, 0.0, -0.0004520416259765625, 0.0, -0.0005664825439453125, -3.0517578125e-05, -3.814697265625e-05, -9.5367431640625e-06, -4.1961669921875e-05, -0.0005435943603515625, -0.0019054412841796875, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0002117156982421875, -7.62939453125e-06, -0.00096893310546875, -3.814697265625e-06, -0.06268799304962158, -3.933906555175781e-06, -0.0010662078857421875, -1.52587890625e-05, -0.000133514404296875, 0.0, -3.814697265625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.0021178722381591797, 0.0, -0.0196380615234375, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.9604644775390625e-06, -1.919269561767578e-05, -0.000286102294921875, 0.0, -2.288818359375e-05, -3.814697265625e-06, -0.0001678466796875, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.00209808349609375, -7.43865966796875e-05, -0.002414703369140625, -9.72747802734375e-05, -0.002283811569213867, -1.1920928244535389e-07, -1.1444091796875e-05, -0.000522613525390625, -0.001708984375, 0.0, -0.0002331732539460063, -2.86102294921875e-05, -0.0029087066650390625, -0.0009822845458984375, 0.0, -0.0002350807044422254, -1.9073486328125e-06, -0.0018901824951171875, -0.0030727386474609375, -0.011598089709877968, -6.19888032815652e-06, -0.011937141418457031, -0.0001277923583984375, -0.0002460479736328125, -0.0002841949462890625, -0.001338958740234375, -8.7738037109375e-05, -0.002072453498840332, -2.6702880859375e-05, -1.1444091796875e-05, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.00231170654296875, 0.0, -0.0022711753845214844, -9.739398956298828e-05, -0.0028734207153320312, -3.0517578125e-05, -7.62939453125e-06, -0.0012569427490234375, -0.00038909912109375, -2.86102294921875e-05, 0.0, -0.0006771087646484375, 0.0, -0.0012683868408203125, -1.71661376953125e-05, -0.0007781982421875, -1.1920928244535389e-07, -0.0053469836711883545, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.000110626220703125, 0.0, -0.0007134675979614258, -9.5367431640625e-06, -0.013422012329101562, -5.7220458984375e-06, -5.7220458984375e-06, -0.00244140625, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -0.0012111663818359375, 0.0, -0.007930755615234375, -1.9073486328125e-06, -0.05437672138214111, -2.1457672119140625e-06, -0.0011490550823509693, -3.099436753473128e-06, -0.0033245086669921875, -4.76837158203125e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.000713348388671875, 0.0, -0.0028276443481445312, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.0053746700286865234, -5.7220458984375e-06, -0.00666046142578125, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.02461719512939453, -0.0001468658447265625, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.005338788032531738, -8.344646857949556e-07, -0.002147674560546875, -2.6702880859375e-05, -2.09808349609375e-05, -0.028379440307617188, -0.000476837158203125, -0.0023072385229170322, -1.9073486328125e-06, -0.0037250518798828125, -0.001007080078125, -0.00045680999755859375, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -4.569791990704829, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template2", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -2.3543100357055664, -0.0015125274658203125, -3.5762212064582855e-05, -0.0001854838919825852, -0.00014006163110025227, 0.0, -1.1920528777409345e-06, 0.0, -1.9718722105026245, -1.9073486328125e-06, -0.0004177093505859375, -0.000179290771484375, -0.0003948211669921875, 0.0, 0.0, -7.82012939453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -8.046627044677734e-05, 0.0, -0.005339622497558594, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -1.919269561767578e-05, -0.000240325927734375, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0002040863037109375, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -2.8014183044433594e-05, -1.9073486328125e-06, -0.0014324188232421875, -7.62939453125e-05, -0.0023632049560546875, -8.7738037109375e-05, -0.0018190144328400493, -1.1920928244535389e-07, -1.33514404296875e-05, -0.000576019287109375, -0.0022296905517578125, 0.0, -0.0002230404643341899, -2.86102294921875e-05, -0.00311279296875, -0.0010738372802734375, 0.0, -0.00021946428751107305, -1.9073486328125e-06, -0.001911163330078125, -0.0030460357666015625, -0.011758903041481972, -6.19888032815652e-06, -0.011603355407714844, -0.000125885009765625, -0.00026702880859375, -0.0002880096435546875, -0.0015840530395507812, -8.96453857421875e-05, -0.002003788948059082, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.002353668212890625, 0.0, -0.002239704132080078, -0.00010895729064941406, -0.0029287338256835938, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003871917724609375, -2.86102294921875e-05, 0.0, -0.0006732940673828125, 0.0, -0.001262664794921875, -1.71661376953125e-05, -0.000782012939453125, -1.1920928244535389e-07, -0.005338162183761597, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.0007172822952270508, -9.5367431640625e-06, -0.013414382934570312, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024394989013671875, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007965087890625, -1.9073486328125e-06, -0.05441772937774658, -2.1457672119140625e-06, -0.0011484595015645027, -3.099436753473128e-06, -0.0032749176025390625, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007162094116210938, 0.0, -0.0028257369995117188, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.0052831172943115234, -5.7220458984375e-06, -0.006646156311035156, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.02505779266357422, -0.000148773193359375, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.005325436592102051, -8.344646857949556e-07, -0.0021343231201171875, -2.86102294921875e-05, -2.09808349609375e-05, -0.028375625610351562, -0.0004787445068359375, -0.0023129615001380444, -1.9073486328125e-06, -0.0037097930908203125, -0.0010051727294921875, -0.000457763671875, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -4.635628081859039, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Arcane Missiles", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "hero", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -0.03322124481201172, -7.62939453125e-06, -0.0006122589111328125, 0.0, -0.000263214111328125, -1.1444091796875e-05, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.73532485961914e-05, 0.0, -0.0010395050048828125, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000263214111328125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001983642578125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0022344589233398438, -8.392333984375e-05, -0.001613616943359375, -0.000102996826171875, -0.002178788185119629, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0005817413330078125, -0.0028076171875, 0.0, -0.00022971619910094887, -3.0517578125e-05, -0.003082275390625, -0.0011997222900390625, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.0029430389404296875, -0.011730888858437538, -6.19888032815652e-06, -0.011959075927734375, -0.000133514404296875, -0.0002803802490234375, -0.0002899169921875, -0.00159454345703125, -8.7738037109375e-05, -0.0019561052322387695, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023603439331054688, 0.0, -0.0022444725036621094, -9.942054748535156e-05, -0.0029172897338867188, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003814697265625, -2.86102294921875e-05, 0.0, -0.0006694793701171875, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.0007801055908203125, -1.1920928244535389e-07, -0.0053538978099823, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000722050666809082, -9.5367431640625e-06, -0.013411521911621094, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024433135986328125, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007945060729980469, -1.9073486328125e-06, -4.272326469421387, -5.364403477869928e-06, -0.014997124671936035, -1.0728830375228426e-06, -0.00165557861328125, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -0.0006313323974609375, 0.0, -0.0021209716796875, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000461578369140625, 0.0, -0.0072220563888549805, -5.7220458984375e-06, -0.006779670715332031, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.0003521442413330078, 0.0, -0.023550033569335938, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.005357980728149414, -8.344646857949556e-07, -0.0021619796752929688, -2.86102294921875e-05, -2.09808349609375e-05, -0.02880859375, -0.0004711151123046875, -0.002310936339199543, -1.9073486328125e-06, -0.003692626953125, -0.0009937286376953125, -0.00045013427734375, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.hero.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -4.858452912433194, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "1", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Arcane Missiles", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 1, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -0.03322124481201172, -7.62939453125e-06, -0.0006122589111328125, 0.0, -0.000263214111328125, -1.1444091796875e-05, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.73532485961914e-05, 0.0, -0.0010395050048828125, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000263214111328125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001983642578125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0022344589233398438, -8.392333984375e-05, -0.001613616943359375, -0.000102996826171875, -0.002178788185119629, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0005817413330078125, -0.0028076171875, 0.0, -0.00022971619910094887, -3.0517578125e-05, -0.003082275390625, -0.0011997222900390625, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.0029430389404296875, -4.45339298248291, -1.311301275563892e-06, -0.02021312713623047, -0.00023365020751953125, -0.000213623046875, -0.00041961669921875, -0.001354217529296875, -0.0001125335693359375, -0.0017186403274536133, -4.38690185546875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -0.0020570755004882812, 0.0, -0.0021070241928100586, -9.167194366455078e-05, -0.002750396728515625, -3.4332275390625e-05, -7.62939453125e-06, -0.0013103485107421875, -0.000354766845703125, -2.6702880859375e-05, 0.0, -0.0007171630859375, 0.0, -0.0012569427490234375, -1.71661376953125e-05, -0.0007534027099609375, -1.1920928244535389e-07, -0.005518406163901091, 0.0, -0.0005550384521484375, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001201629638671875, 0.0, -0.0006459951400756836, -9.5367431640625e-06, -0.013373374938964844, -5.7220458984375e-06, -5.7220458984375e-06, -0.002288818359375, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -0.0012416839599609375, 0.0, -0.007817268371582031, -1.9073486328125e-06, -0.05424320697784424, -2.1457672119140625e-06, -0.0011426210403442383, -3.099436753473128e-06, -0.00385284423828125, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -0.0007104873657226562, 0.0, -0.0028924942016601562, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00030517578125, 0.0, -0.006455183029174805, -5.7220458984375e-06, -0.006984710693359375, -1.3470649719238281e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.027246475219726562, -0.0002384185791015625, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.005409359931945801, -7.152555099310121e-07, -0.0020933151245117188, -2.6702880859375e-05, -2.09808349609375e-05, -0.028299331665039062, -0.00046539306640625, -0.002299610059708357, -1.9073486328125e-06, -0.003887176513671875, -0.0010356903076171875, -0.00045680999755859375, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(1)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -5.036899834300783, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Arcane Missiles", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -0.03322124481201172, -7.62939453125e-06, -0.0006122589111328125, 0.0, -0.000263214111328125, -1.1444091796875e-05, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.73532485961914e-05, 0.0, -0.0010395050048828125, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000263214111328125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001983642578125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0022344589233398438, -8.392333984375e-05, -0.001613616943359375, -0.000102996826171875, -0.002178788185119629, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0005817413330078125, -0.0028076171875, 0.0, -0.00022971619910094887, -3.0517578125e-05, -0.003082275390625, -0.0011997222900390625, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.0029430389404296875, -0.011730888858437538, -6.19888032815652e-06, -0.011959075927734375, -0.000133514404296875, -0.0002803802490234375, -0.0002899169921875, -0.00159454345703125, -8.7738037109375e-05, -0.0019561052322387695, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023603439331054688, 0.0, -0.0022444725036621094, -9.942054748535156e-05, -0.0029172897338867188, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003814697265625, -2.86102294921875e-05, 0.0, -0.0006694793701171875, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.0007801055908203125, -1.1920928244535389e-07, -0.0053538978099823, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000722050666809082, -9.5367431640625e-06, -0.013411521911621094, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024433135986328125, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007945060729980469, -1.9073486328125e-06, -0.05441582202911377, -2.1457672119140625e-06, -0.001149293384514749, -3.099436753473128e-06, -0.0032520294189453125, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007114410400390625, 0.0, -0.002819061279296875, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.005232572555541992, -5.7220458984375e-06, -0.006648063659667969, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -4.144885063171387, -1.52587890625e-05, -1.52587890625e-05, -0.00048065185546875, -0.001312255859375, -0.004625439643859863, -1.1920928244535389e-07, -0.0076904296875, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0002269744873046875, 0.0, -0.5337071418762207, -7.62939453125e-06, -0.007191658020019531, -1.1563301086425781e-05, -1.9073486328125e-06, -0.0003681182861328125, -1.33514404296875e-05, -0.0004036426544189453, 0.0], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target = game.random_choice(targets)\n"}, {"score": -5.097192259982279, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Arcane Missiles", "_type": "Template3", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -4.722956657409668, 0.0, -0.0028162002563476562, 0.0, -0.0002536773681640625, -1.33514404296875e-05, -0.000118255615234375, 0.0, -1.9073486328125e-06, -0.000110626220703125, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.288818359375e-05, -6.914138793945312e-05, 0.0, -0.001399993896484375, -4.76837158203125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000270843505859375, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0002117156982421875, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0021419525146484375, -7.82012939453125e-05, -0.0016412734985351562, -0.0001010894775390625, -0.002156972885131836, -1.1920928244535389e-07, -1.33514404296875e-05, -0.000583648681640625, -0.00274658203125, 0.0, -0.00022983540839049965, -3.0517578125e-05, -0.003093719482421875, -0.001190185546875, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.00295257568359375, -0.011727074161171913, -6.19888032815652e-06, -0.01192474365234375, -0.0001316070556640625, -0.000278472900390625, -0.0002899169921875, -0.0015974044799804688, -8.7738037109375e-05, -0.0019608736038208008, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023603439331054688, 0.0, -0.0022454261779785156, -9.942054748535156e-05, -0.0029144287109375, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003814697265625, -2.86102294921875e-05, 0.0, -0.0006694793701171875, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.0007801055908203125, -1.1920928244535389e-07, -0.005353778600692749, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000722050666809082, -9.5367431640625e-06, -0.013410568237304688, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024433135986328125, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007946968078613281, -1.9073486328125e-06, -0.05441772937774658, -2.1457672119140625e-06, -0.00114917429164052, -3.099436753473128e-06, -0.0032501220703125, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007114410400390625, 0.0, -0.0028200149536132812, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.005226850509643555, -5.7220458984375e-06, -0.006646156311035156, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.025269508361816406, -0.0001506805419921875, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.005325436592102051, -8.344646857949556e-07, -0.00213623046875, -2.86102294921875e-05, -2.09808349609375e-05, -0.028406143188476562, -0.000476837158203125, -0.002312961034476757, -1.9073486328125e-06, -0.003711700439453125, -0.0010051727294921875, -0.000457763671875, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -5.725171587790747, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Arcane Missiles", "_type": "Template3", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -0.03322124481201172, -7.62939453125e-06, -0.0006122589111328125, 0.0, -0.000263214111328125, -1.1444091796875e-05, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.73532485961914e-05, 0.0, -0.0010395050048828125, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000263214111328125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001983642578125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0022344589233398438, -8.392333984375e-05, -0.001613616943359375, -0.000102996826171875, -0.002178788185119629, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0005817413330078125, -0.0028076171875, 0.0, -0.00022971619910094887, -3.0517578125e-05, -0.003082275390625, -0.0011997222900390625, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.0029430389404296875, -0.011730888858437538, -6.19888032815652e-06, -0.011959075927734375, -0.000133514404296875, -0.0002803802490234375, -0.0002899169921875, -0.00159454345703125, -8.7738037109375e-05, -0.0019561052322387695, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023603439331054688, 0.0, -0.0022444725036621094, -9.942054748535156e-05, -0.0029172897338867188, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003814697265625, -2.86102294921875e-05, 0.0, -0.0006694793701171875, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.0007801055908203125, -1.1920928244535389e-07, -0.0053538978099823, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000722050666809082, -9.5367431640625e-06, -0.013411521911621094, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024433135986328125, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007945060729980469, -1.9073486328125e-06, -0.05441582202911377, -2.1457672119140625e-06, -0.001149293384514749, -3.099436753473128e-06, -0.0032520294189453125, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007114410400390625, 0.0, -0.002819061279296875, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.005232572555541992, -5.7220458984375e-06, -0.006648063659667969, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -4.144885063171387, -1.52587890625e-05, -1.52587890625e-05, -0.00048065185546875, -0.001312255859375, -0.004625439643859863, -1.1920928244535389e-07, -0.0076904296875, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0002269744873046875, 0.0, -1.0044302940368652, -9.775161743164062e-06, -0.1786947250366211, -9.5367431640625e-06, -4.38690185546875e-05, -0.021353721618652344, -0.000293731689453125, -1.9073486328125e-05, 0.0, -0.0011043548583984375, 0.0, -0.0016918182373046875, -3.814697265625e-06, -0.00113677978515625, -1.1920928244535389e-07, -0.021185152232646942, 0.0], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target = copy.copy(game.other_player.minions)\n"}, {"score": -5.749228912196116, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template2", "hole2": "<UNK>"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -2.3543100357055664, -0.0015125274658203125, -3.5762212064582855e-05, -0.0001854838919825852, -0.00014006163110025227, 0.0, -1.1920528777409345e-06, 0.0, -3.150665044784546, 0.0, -0.0005283355712890625, -0.000164031982421875, -0.0002651214599609375, 0.0, 0.0, -0.0001850128173828125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -0.000133514404296875, -1.9073486328125e-06, -1.9073486328125e-05, -9.381771087646484e-05, 0.0, -0.006037712097167969, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -1.919269561767578e-05, -0.0002536773681640625, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -0.00020599365234375, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -2.8014183044433594e-05, -1.9073486328125e-06, -0.001560211181640625, -8.20159912109375e-05, -0.002361297607421875, -9.34600830078125e-05, -0.0018945931224152446, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0005702972412109375, -0.0019521713256835938, 0.0, -0.00022518623154610395, -2.86102294921875e-05, -0.00325775146484375, -0.0010128021240234375, 0.0, -0.00023102758859749883, -1.9073486328125e-06, -0.0019130706787109375, -0.003086090087890625, -0.011613110080361366, -6.19888032815652e-06, -0.011615753173828125, -0.0001239776611328125, -0.000255584716796875, -0.000286102294921875, -0.0015087127685546875, -9.1552734375e-05, -0.0020552873611450195, -2.86102294921875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -6.4849853515625e-05, 0.0, -0.0023374557495117188, 0.0, -0.002242565155029297, -0.00011086463928222656, -0.0029239654541015625, -3.24249267578125e-05, -7.62939453125e-06, -0.0012416839599609375, -0.00038909912109375, -2.86102294921875e-05, 0.0, -0.000675201416015625, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.000782012939453125, -1.1920928244535389e-07, -0.005331963300704956, 0.0, -0.00054168701171875, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.0007191896438598633, -9.5367431640625e-06, -0.013409614562988281, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024394989013671875, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007966995239257812, -1.9073486328125e-06, -0.05441772937774658, -2.1457672119140625e-06, -0.0011485785944387317, -3.099436753473128e-06, -0.0032930374145507812, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007162094116210938, 0.0, -0.0028247833251953125, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.000274658203125, 0.0, -0.005274534225463867, -5.7220458984375e-06, -0.0066432952880859375, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.024936676025390625, -0.000148773193359375, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0053206682205200195, -8.344646857949556e-07, -0.0021343231201171875, -2.86102294921875e-05, -2.09808349609375e-05, -0.028383255004882812, -0.0004787445068359375, -0.002312961034476757, -1.9073486328125e-06, -0.0037078857421875, -0.0010051727294921875, -0.000457763671875, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.<UNK>,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -5.7689997728681135, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template2", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "append", "value": {"id": "targets", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneMissiles", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -2.3543100357055664, -0.0015125274658203125, -3.5762212064582855e-05, -0.0001854838919825852, -0.00014006163110025227, 0.0, -1.1920528777409345e-06, 0.0, -3.1710851192474365, -3.814697265625e-06, -0.000423431396484375, -7.05718994140625e-05, -0.0001888275146484375, 0.0, 0.0, -0.00011444091796875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -8.428096771240234e-05, 0.0, -0.00582122802734375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -1.919269561767578e-05, -0.0002422332763671875, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00020599365234375, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -2.8014183044433594e-05, -1.9073486328125e-06, -0.001491546630859375, -7.82012939453125e-05, -0.0023431777954101562, -8.96453857421875e-05, -0.0018293856410309672, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0005702972412109375, -0.00203704833984375, 0.0, -0.00022315967362374067, -2.86102294921875e-05, -0.0031909942626953125, -0.0010318756103515625, 0.0, -0.00022721289133187383, -1.9073486328125e-06, -0.0019130706787109375, -0.003070831298828125, -0.01169751025736332, -6.19888032815652e-06, -0.011620521545410156, -0.000125885009765625, -0.0002593994140625, -0.000286102294921875, -0.0015382766723632812, -9.1552734375e-05, -0.0020362138748168945, -2.86102294921875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -6.4849853515625e-05, 0.0, -0.0023431777954101562, 0.0, -0.002242565155029297, -0.00010895729064941406, -0.002925872802734375, -3.24249267578125e-05, -7.62939453125e-06, -0.001239776611328125, -0.00038909912109375, -2.86102294921875e-05, 0.0, -0.0006732940673828125, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.000782012939453125, -1.1920928244535389e-07, -0.00533410906791687, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000718235969543457, -9.5367431640625e-06, -0.013410568237304688, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024394989013671875, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007966041564941406, -1.9073486328125e-06, -0.05441868305206299, -2.1457672119140625e-06, -0.0011485785944387317, -3.099436753473128e-06, -0.0032825469970703125, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007162094116210938, 0.0, -0.0028257369995117188, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.005277395248413086, -5.7220458984375e-06, -0.006644248962402344, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.02498340606689453, -0.000148773193359375, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0053244829177856445, -8.344646857949556e-07, -0.0021352767944335938, -2.86102294921875e-05, -2.09808349609375e-05, -0.028367996215820312, -0.0004787445068359375, -0.002312961034476757, -1.9073486328125e-06, -0.0037078857421875, -0.0010051727294921875, -0.000457763671875, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -15.532716751098633, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -15.532693862915039], "inferred_code": "break\n"}, {"score": -22.67180824279785, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -22.671789169311523], "inferred_code": ""}], "index": 5}
{"beams": [{"score": -0.03003203857097958, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -0.0052433013916015625, -3.814697265625e-06, -6.103515625e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -0.0015010833740234375, -7.867813110351562e-06, -0.0053375959396362305, -0.00010502338409423828, -0.0025043487548828125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.000247955322265625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0003211498260498047, 0.0, -3.814697265625e-06, -0.000377655029296875, -0.0001316070556640625, -0.0016275644302368164, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.717487096668819, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -5.6963605880737305, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000827789306640625, 0.0, -0.0055389404296875, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.58306884765625e-05, -1.71661376953125e-05, -0.0016078948974609375, -7.867813110351562e-06, -0.005316615104675293, -0.00010502338409423828, -0.00249481201171875, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0002460479736328125, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0003211498260498047, 0.0, -3.814697265625e-06, -0.000377655029296875, -0.0001316070556640625, -0.0016275644302368164, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.986691117169009, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -0.0052433013916015625, -3.814697265625e-06, -6.103515625e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -0.0015010833740234375, -7.867813110351562e-06, -5.961690902709961, 0.0, -0.0017414093017578125, -0.000820159912109375, -3.814697265625e-06, 0.0, -0.0003795623779296875, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0003638267517089844, 0.0, -3.814697265625e-06, -0.000400543212890625, -0.0001659393310546875, -0.0019137859344482422, 0.0, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.028242349506954, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -6.00350284576416, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.0049285888671875, 0.0, -0.0050048828125, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, -0.0012149810791015625, -5.9604644775390625e-06, -0.005941033363342285, -0.00010311603546142578, -0.0024261474609375, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -0.0002422332763671875, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0003170967102050781, 0.0, -3.814697265625e-06, -0.00037384033203125, -0.0001316070556640625, -0.0016199350357055664, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.205004811169246, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -5.3491716384887695, -1.9073486328125e-06, -6.866455078125e-05, -0.0002576112747192383, -1.9073486328125e-05, -5.53131103515625e-05, -0.0001163482666015625, -3.814697265625e-06, 0.0, -3.814697265625e-05, 0.0, -0.00019073486328125, -1.52587890625e-05, -0.012617111206054688, -7.867813110351562e-06, -0.010335564613342285, -7.450580596923828e-05, -0.0030078887939453125, -6.67572021484375e-05, -0.008482098579406738, 0.0, -0.0019044876098632812, -0.0016880035400390625, -7.43865966796875e-05, -0.000152587890625, -7.62939453125e-06, -0.0006656646728515625, 0.0, -0.0028696060180664062, -0.0001850128173828125, -0.0003871917724609375, -0.0005741119384765625, -0.0019779205322265625, -0.000476837158203125, -8.96453857421875e-05, 0.0, -0.1329050064086914, 0.0, -0.0037107467651367188, 0.0, -0.1468944549560547, 0.0, -0.000423431396484375, -0.11542224884033203, -1.33514404296875e-05, -0.06517505645751953, -0.0018291473388671875, -1.52587890625e-05, 0.0, -0.0005435943603515625, -1.9073486328125e-06, -0.000640869140625, 0.0, -0.0026397705078125, -4.38690185546875e-05, -0.0104522705078125, -0.0005168914794921875, -1.52587890625e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.0014734268188476562, 0.0, -0.3041175603866577, -1.9073486328125e-06, -0.0074558258056640625, -0.0001506805419921875, -0.00011444091796875, 0.0, -0.000164031982421875, 0.0, -0.000186920166015625, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -0.0002917051315307617, 0.0, -5.7220458984375e-06, -0.000362396240234375, -0.0001068115234375, -0.0014594793319702148, -1.1920928244535389e-07, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health ==\n            target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.311828017117122, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -6.290519714355469, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.002361297607421875, 0.0, -0.004268646240234375, -1.9073486328125e-06, -3.4332275390625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -1.71661376953125e-05, -0.00115203857421875, -5.9604644775390625e-06, -0.005773186683654785, -0.00010502338409423828, -0.002483367919921875, -0.00016021728515625, -5.7220458984375e-06, 0.0, -0.0002498626708984375, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0003172159194946289, 0.0, -3.814697265625e-06, -0.00037384033203125, -0.0001316070556640625, -0.0016275644302368164, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.448351025463687, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -0.0052433013916015625, -3.814697265625e-06, -6.103515625e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -0.0015010833740234375, -7.867813110351562e-06, -6.399619102478027, 0.0, -0.024301528930664062, -0.000606536865234375, -3.814697265625e-06, 0.0, -0.002044677734375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00036203861236572266, 0.0, -3.814697265625e-06, -0.0003986358642578125, -0.0001201629638671875, -0.0016890764236450195, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.450582265736202, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -0.0052433013916015625, -3.814697265625e-06, -6.103515625e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -0.0015010833740234375, -7.867813110351562e-06, -0.0053375959396362305, -0.00010502338409423828, -0.0025043487548828125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.000247955322265625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0003211498260498047, 0.0, -3.814697265625e-06, -0.000377655029296875, -0.0001316070556640625, -6.42219877243042, -1.1920928244535389e-07, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.558766960980009, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "target", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "target", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -0.0052433013916015625, -3.814697265625e-06, -6.103515625e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -6.525729179382324, -2.3841855067985307e-07, -0.009297490119934082, -1.9073486328125e-06, -0.002346038818359375, -0.000209808349609375, -5.7220458984375e-06, 0.0, -0.001003265380859375, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.00029790401458740234, 0.0, -1.9073486328125e-06, -0.000392913818359375, -0.000133514404296875, -0.0016542673110961914, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.target.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -7.226751327396968, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "EPIC", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -7.2025861740112305, 0.0, -0.0008544921875, -5.7220458984375e-06, -0.000152587890625, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -0.001316070556640625, -7.867813110351562e-06, -0.005093574523925781, -9.357929229736328e-05, -0.0025157928466796875, -0.0001697540283203125, -7.62939453125e-06, 0.0, -0.0002384185791015625, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0003230571746826172, 0.0, -3.814697265625e-06, -0.0003814697265625, -0.0001316070556640625, -0.0016275644302368164, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -7.332958476467489, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -0.0052433013916015625, -3.814697265625e-06, -6.103515625e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -0.0015010833740234375, -7.867813110351562e-06, -0.0053375959396362305, -0.00010502338409423828, -6.414053916931152, -0.0002288818359375, -1.71661376953125e-05, 0.0, -0.0003452301025390625, -5.14984130859375e-05, -0.0004291534423828125, -6.19888032815652e-06, 0.0, -7.62939453125e-06, -3.063678741455078e-05, -5.733966827392578e-05, -1.9073486328125e-06, -0.0012979507446289062, -4.422664278536104e-05, -0.004889488220214844, -3.814697265625e-06, -3.814697265625e-06, -8.0108642578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.000148773193359375, -1.9073486328125e-06, -2.074240182992071e-05, -1.537799835205078e-05, -0.0002269744873046875, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.00014889240264892578, -2.86102294921875e-05, -0.00020599365234375, -6.103515625e-05, -0.00823211669921875, -0.0003871917724609375, -0.03757403790950775, -2.3841855067985307e-07, -5.14984130859375e-05, -5.7220458984375e-06, -0.00055694580078125, -0.025381088256835938, -3.814697265625e-06, -1.52587890625e-05, -8.392333984375e-05, -1.52587890625e-05, -0.0011749267578125, 0.0, -0.0057822465896606445, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.7715911865234375, -1.9073486328125e-06, -5.7220458984375e-06, -0.0032110214233398438, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -0.004548072814941406, -5.352497100830078e-05, -0.0005741119384765625, -4.57763671875e-05, -0.0002307891845703125, -0.026209743693470955, -6.794917680963408e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -7.95263743807719, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -7.922090530395508, -0.000453948974609375, -0.005186681170016527, -2.145764938177308e-06, -0.000820159912109375, -3.24249267578125e-05, -3.0517578125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -1.4066696166992188e-05, -0.010431170463562012, -5.7220458984375e-06, -0.0023708343505859375, -7.62939453125e-06, -8.7738037109375e-05, -0.00021374225616455078, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -0.00018310546875, -1.52587890625e-05, -0.00087738037109375, -9.655952453613281e-06, -0.002981424331665039, -0.00025391578674316406, -0.0026264190673828125, -0.0001621246337890625, -7.62939453125e-06, 0.0, -0.0003108978271484375, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0003113746643066406, 0.0, -3.814697265625e-06, -0.0003795623779296875, -0.0001354217529296875, -0.0016696453094482422, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, 1, CHARACTER_CLASS.HUNTER,\n            target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -8.070910200337572, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaneShot", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -0.0052433013916015625, -3.814697265625e-06, -6.103515625e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -0.0015010833740234375, -7.867813110351562e-06, -0.0053375959396362305, -0.00010502338409423828, -6.414053916931152, -0.0002288818359375, -1.71661376953125e-05, 0.0, -0.0003452301025390625, -5.14984130859375e-05, -0.0004291534423828125, -6.19888032815652e-06, 0.0, -7.62939453125e-06, -3.063678741455078e-05, -5.733966827392578e-05, -1.9073486328125e-06, -0.0012979507446289062, -4.422664278536104e-05, -0.004889488220214844, -3.814697265625e-06, -3.814697265625e-06, -8.0108642578125e-05, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.000148773193359375, -1.9073486328125e-06, -2.074240182992071e-05, -1.537799835205078e-05, -0.0002269744873046875, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.00014889240264892578, -2.86102294921875e-05, -0.00020599365234375, -6.103515625e-05, -0.00823211669921875, -0.0003871917724609375, -0.03757403790950775, -2.3841855067985307e-07, -5.14984130859375e-05, -5.7220458984375e-06, -0.00055694580078125, -0.025381088256835938, -3.814697265625e-06, -1.52587890625e-05, -8.392333984375e-05, -1.52587890625e-05, -0.0011749267578125, 0.0, -0.0057822465896606445, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.6877040863037109, -3.814697265625e-06, -7.43865966796875e-05, -0.62677001953125, -3.814697265625e-06, -0.229874849319458, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -6.711483001708984e-05, -2.861022494471399e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(2, self)\n"}, {"score": -15.902667045593262, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -15.902644157409668], "inferred_code": "break\n"}, {"score": -22.27635383605957, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -22.276342391967773], "inferred_code": ""}], "index": 6}
{"beams": [{"score": -0.07634250205739335, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -0.004195190500468016, -2.0265579223632812e-06, -0.000576019287109375, 0.0, -0.00128936767578125, -5.7220458984375e-06, 0.0, -0.000202178955078125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1444091796875e-05, 0.0, -0.005741119384765625, -7.82012939453125e-05, -0.0001163482666015625, -1.33514404296875e-05, -0.000823974609375, -8.20159912109375e-05, 0.0, -0.0021211709827184677, -0.0006849765777587891, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.6689286894688848e-06, -8.940656698541716e-06, -4.76837158203125e-05, -7.62939453125e-06, -0.0032024383544921875, -1.1920928244535389e-07], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -3.6086873494295375, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Arcanite", " ", "Reaper", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -3.084841728210449, -2.09808349609375e-05, -1.5616416931152344e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.000301361083984375, -2.86102294921875e-05, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.0007292054360732436, -3.695487976074219e-05, -9.775161743164062e-06, 0.0, -0.00045013427734375, -3.0517578125e-05, 0.0, -0.0001995364436879754, -6.186962127685547e-05, -2.741813204920618e-06, -0.0020885467529296875, -5.7220458984375e-06, -2.09808349609375e-05, -0.0027954576071351767, -1.4781842764932662e-05, -9.1552734375e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -0.0005352494772523642, -3.576278118089249e-07, -0.5088472366333008, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.5735626220703125e-05, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -2.6702880859375e-05, -3.2782554626464844e-05, -2.0265579223632812e-06, -5.7220458984375e-05, -9.5367431640625e-06, -0.0006198883056640625, -0.0002117156982421875, 0.0, -7.82012939453125e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0001049041748046875, -1.1920928244535389e-07, -0.000560760498046875, -0.000202178955078125, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0022256087977439165, -0.0008544921875, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -8.4638240878121e-06, -3.3378546504536644e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0018274784088134766, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -4.4253388129381435, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Arcanite", " ", "Reaper", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "DREAM", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -3.084841728210449, -2.09808349609375e-05, -1.5616416931152344e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.000301361083984375, -2.86102294921875e-05, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.0007292054360732436, -3.695487976074219e-05, -9.775161743164062e-06, 0.0, -0.00045013427734375, -3.0517578125e-05, 0.0, -0.0001995364436879754, -6.186962127685547e-05, -2.741813204920618e-06, -0.0020885467529296875, -5.7220458984375e-06, -2.09808349609375e-05, -0.0027954576071351767, -1.4781842764932662e-05, -9.1552734375e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -0.0005352494772523642, -3.576278118089249e-07, -1.3254661560058594, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.1682510375976562e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -2.288818359375e-05, -2.9206275939941406e-05, -2.0265579223632812e-06, -6.67572021484375e-05, -9.5367431640625e-06, -0.0006198883056640625, -0.0002231597900390625, 0.0, -7.82012939453125e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -9.918212890625e-05, -1.1920928244535389e-07, -0.00058746337890625, -0.0001926422119140625, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0022266816813498735, -0.0008535385131835938, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -8.4638240878121e-06, -3.3378546504536644e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0018236637115478516, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -4.73634585976572, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -4.668473720550537, 0.0, -0.005735273007303476, -3.814697265625e-06, -0.00139617919921875, -1.9073486328125e-06, -0.0013370513916015625, -3.814697265625e-06, 0.0, -0.0001125335693359375, -3.814697265625e-06, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0077457427978515625, -7.43865966796875e-05, -9.72747802734375e-05, -1.33514404296875e-05, -0.00026702880859375, -6.866455078125e-05, 0.0, -0.001803513732738793, -0.0004769563674926758, -1.52587890625e-05, -7.62939453125e-06, 0.0, -4.0531076592742465e-06, -4.0531076592742465e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.0011560916900634766, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -5.8185230879186065, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -0.004195190500468016, -2.0265579223632812e-06, -0.000576019287109375, 0.0, -0.00128936767578125, -5.7220458984375e-06, 0.0, -0.000202178955078125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1444091796875e-05, 0.0, -0.005741119384765625, -7.82012939453125e-05, -0.0001163482666015625, -1.33514404296875e-05, -0.000823974609375, -8.20159912109375e-05, 0.0, -0.0021211709827184677, -0.0006849765777587891, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.6689286894688848e-06, -8.940656698541716e-06, -4.76837158203125e-05, -7.62939453125e-06, -5.7453694343566895, -1.3709068298339844e-05], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 5)\n"}, {"score": -6.046116315828094, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Arcanite", " ", "Reaper", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -3.084841728210449, -2.09808349609375e-05, -1.5616416931152344e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.000301361083984375, -2.86102294921875e-05, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.0007292054360732436, -3.695487976074219e-05, -9.775161743164062e-06, 0.0, -0.00045013427734375, -3.0517578125e-05, 0.0, -0.0001995364436879754, -6.186962127685547e-05, -2.741813204920618e-06, -0.0020885467529296875, -5.7220458984375e-06, -2.09808349609375e-05, -0.0027954576071351767, -1.4781842764932662e-05, -9.1552734375e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -0.0005352494772523642, -3.576278118089249e-07, -2.9463367462158203, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -2.9087066650390625e-05, -2.0265579223632812e-06, -7.2479248046875e-05, -1.1444091796875e-05, -0.0006122589111328125, -0.0001964569091796875, 0.0, -8.392333984375e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0001354217529296875, -1.1920928244535389e-07, -0.0004749298095703125, -0.0002384185791015625, -6.67572021484375e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0022151335142552853, -0.0008792877197265625, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -8.34461570775602e-06, -3.2186455882765586e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0017969608306884766, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -6.140175905682661, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -6.065685272216797, -5.9604644775390625e-06, -0.0019092559814453125, 0.0, -0.002735137939453125, -5.7220458984375e-06, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.005634307861328125, -7.82012939453125e-05, -0.00011444091796875, -1.33514404296875e-05, -0.0006580352783203125, -7.62939453125e-05, 0.0, -0.001996145350858569, -0.0006344318389892578, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.9073468138230965e-06, -9.775113539944869e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032405853271484375, -1.1920928244535389e-07], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -6.263674324446519, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Arcanite", " ", "Reaper", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -3.084841728210449, -2.09808349609375e-05, -1.5616416931152344e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.000301361083984375, -2.86102294921875e-05, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.0007292054360732436, -3.695487976074219e-05, -9.775161743164062e-06, 0.0, -0.00045013427734375, -3.0517578125e-05, 0.0, -0.0001995364436879754, -6.186962127685547e-05, -2.741813204920618e-06, -0.0020885467529296875, -5.7220458984375e-06, -2.09808349609375e-05, -0.0027954576071351767, -1.4781842764932662e-05, -9.1552734375e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -0.0005352494772523642, -3.576278118089249e-07, -3.163834571838379, 0.0, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -2.3365020751953125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -1.1444091796875e-05, -0.000621795654296875, -0.000213623046875, 0.0, -7.82012939453125e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0001010894775390625, -1.1920928244535389e-07, -0.0005931854248046875, -0.0001888275146484375, -6.103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00223228195682168, -0.0008554458618164062, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -8.34461570775602e-06, -3.3378546504536644e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.001810312271118164, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -6.943211036909474, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Random", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Random", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -0.004195190500468016, -2.0265579223632812e-06, -0.000576019287109375, 0.0, -0.00128936767578125, -5.7220458984375e-06, 0.0, -0.000202178955078125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1444091796875e-05, 0.0, -0.005741119384765625, -7.82012939453125e-05, -0.0001163482666015625, -1.33514404296875e-05, -0.000823974609375, -8.20159912109375e-05, 0.0, -6.866258144378662, -0.0031083819922059774, -0.00136566162109375, -0.00029754638671875, -5.7220458984375e-06, -9.536738616588991e-07, -6.914126061019488e-06, -8.7738037109375e-05, -0.0002956390380859375, -0.0015393495559692383, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Random(5, 2)\n"}, {"score": -7.395564551379373, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -7.320551872253418, 0.0, -0.0013370513916015625, -1.9073486328125e-06, -0.004158139228820801, -9.5367431640625e-06, 0.0, -0.0002288818359375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.00508880615234375, -8.20159912109375e-05, -0.0001125335693359375, -1.1444091796875e-05, -0.000682830810546875, -8.392333984375e-05, 0.0, -0.002049221657216549, -0.0006792545318603516, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.6689286894688848e-06, -8.940656698541716e-06, -4.76837158203125e-05, -7.62939453125e-06, -0.0032749176025390625, -1.1920928244535389e-07], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -8.173727709268967, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "5", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 5, "_type": "Template4", "hole2": "charge"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -0.004195190500468016, -2.0265579223632812e-06, -7.507174491882324, -1.52587890625e-05, -6.437280717364047e-06, -6.4373016357421875e-06, -0.00927269458770752, 0.0, -0.585284948348999, -1.1920928244535389e-07, -0.000118255615234375, -0.0001125335693359375, -0.010435104370117188, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 2, charge=True)\n"}, {"score": -8.391046809264104, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "Arcanite", "<EOS>", "summon", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "summon", "value": {"hole0": "Arcanite", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -0.004195190500468016, -2.0265579223632812e-06, -0.000576019287109375, 0.0, -0.00128936767578125, -5.7220458984375e-06, 0.0, -0.000202178955078125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1444091796875e-05, 0.0, -5.178422927856445, -0.6768951416015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.013724327087402344, -2.86102294921875e-05, -0.01979679800570011, -8.833051106194034e-05, -0.015789151191711426, 0.0, -5.340576171875e-05, -3.4332275390625e-05, 0.0, -4.839864413952455e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001187443733215332, -1.1444091796875e-05, -0.0229034423828125, -3.814697265625e-05, -0.00035858154296875, 0.0, -0.43588531017303467, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.016125991940498352, -2.3841855067985307e-07, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.445722758769989, -2.741813204920618e-06, -0.005698204040527344, -5.7220458984375e-06, -0.008308769203722477, 0.0, -7.05718994140625e-05, -0.0128173828125, -7.05718994140625e-05, -0.0005474090576171875, 0.0, -0.001010894775390625, -0.0042400360107421875, -0.02943897247314453, -1.52587890625e-05, -0.05186505243182182, -0.038450274616479874, -0.06327500194311142, -1.9073486328125e-06, -1.2816696166992188, -1.9073486328125e-05, 0.0, -0.00014114378427620977, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0028036832809448242, -9.5367431640625e-06], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        super().use(player, game)\n        for i in range(0, 2):\n            Arcanite().summon(player, game)\n"}, {"score": -11.044003069050255, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "Arcanite", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 35, 112, "Minion", "<EOS>", 30, 88, 19, 112, "Aura", "<EOS>", 164, 46, 135, "Weapon", "<UNK>", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "Minion", "_type": "Name"}, {"args": [{"hole0": "Weapon<UNK>", "_type": "Template18"}, {"n": 2, "_type": "Num"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"hole0": "Arcanite", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ArcaniteReaper", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -0.004195190500468016, -2.0265579223632812e-06, -0.000576019287109375, 0.0, -0.00128936767578125, -5.7220458984375e-06, 0.0, -0.000202178955078125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1444091796875e-05, 0.0, -5.178422927856445, -0.6768951416015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.013724327087402344, -2.86102294921875e-05, -0.01979679800570011, -8.833051106194034e-05, -0.015789151191711426, 0.0, -5.340576171875e-05, -3.4332275390625e-05, 0.0, -4.839864413952455e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001187443733215332, -1.1444091796875e-05, -0.0229034423828125, -3.814697265625e-05, -0.00035858154296875, 0.0, -0.43588531017303467, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.016125991940498352, -2.3841855067985307e-07, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.445722758769989, -2.741813204920618e-06, -0.005698204040527344, -5.7220458984375e-06, -0.008308769203722477, 0.0, -7.05718994140625e-05, -0.0128173828125, -7.05718994140625e-05, -0.0005474090576171875, 0.0, -0.001010894775390625, -0.0042400360107421875, -0.02943897247314453, -1.52587890625e-05, -0.05186505243182182, -0.038450274616479874, -0.06327500194311142, -1.9073486328125e-06, -0.6801328659057617, -0.0010623931884765625, 0.0, -0.0037937164306640625, 0.0, -0.000110626220703125, 0.0, -0.5135636329650879, -0.013109207153320312, -0.08342647552490234, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -0.6223740577697754, -5.543231964111328e-05, -0.016481399536132812, -0.5457391738891602, -8.20159912109375e-05, -0.1305793672800064, -0.7090363502502441, -7.390730024781078e-05, -0.20323753356933594, -1.9073486328125e-06, -0.41467440128326416, 0.0], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        super().use(player, game)\n        for i in range(0, 2):\n            Arcanite().summon(player, Minion, Aura(Weapon<UNK>(), 2))\n"}, {"score": -17.27995491027832, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -17.27992820739746], "inferred_code": "break\n"}, {"score": -22.87913703918457, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -22.879114151000977], "inferred_code": ""}], "index": 7}
{"beams": [{"score": -0.6439596818821514, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -0.021592259407043457, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.5699729919433594, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -0.00067901611328125, -4.57763671875e-05, -0.002766251564025879, -1.9073486328125e-06, -0.0006084442138671875, -0.03891754150390625, -1.9073486328125e-06, 0.0, -0.00025177001953125, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.005530714988708496, 0.0, -2.6702880859375e-05, -0.00038242340087890625, 0.0, -0.0002843141555786133, -7.62939453125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -1.4762196945087993, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -0.021592259407043457, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.8393745422363281, -5.7220458984375e-06, -8.392333984375e-05, -6.4849853515625e-05, 0.0, -1.71661376953125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.71661376953125e-05, -0.0031299591064453125, -1.71661376953125e-05, -0.002669811248779297, -1.9073486328125e-06, -0.0003223419189453125, -0.0002155303955078125, -0.0047607421875, 0.0, -0.000774383544921875, -0.0003662109375, -1.9073486328125e-05, -9.1552734375e-05, -3.814697265625e-06, -0.000576019287109375, 0.0, -0.0010194778442382812, -0.00061798095703125, -0.0004215240478515625, -0.0009212493896484375, -0.0002613067626953125, -0.000286102294921875, -0.0001220703125, 0.0, -0.0049152374267578125, 0.0, -0.0014133453369140625, 0.0, -0.00866401195526123, 0.0, -0.0007486343383789062, -0.26526927947998047, -0.00037288665771484375, -0.00029754638671875, -0.0001277923583984375, -9.5367431640625e-06, 0.0, -0.007811546325683594, 0.0, -0.0007810592651367188, 0.0, -0.004291057586669922, -1.9073486328125e-06, -0.013285636901855469, -0.0005664825439453125, -9.5367431640625e-06, 0.0, -0.0036745071411132812, 0.0, -0.0001697540283203125, 0.0, -0.2634444236755371, 0.0, -0.0029659271240234375, -0.008605003356933594, -3.814697265625e-05, 0.0, -0.0001049041748046875, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.007586956024169922, 0.0, -0.0001087188720703125, -6.866455078125e-05, 0.0, -0.00018990039825439453, -9.5367431640625e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -2.8319856332676494, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -0.021592259407043457, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.8393745422363281, -5.7220458984375e-06, -8.392333984375e-05, -6.4849853515625e-05, 0.0, -1.71661376953125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.71661376953125e-05, -0.0031299591064453125, -1.71661376953125e-05, -0.002669811248779297, -1.9073486328125e-06, -0.0003223419189453125, -0.0002155303955078125, -0.0047607421875, 0.0, -0.000774383544921875, -0.0003662109375, -1.9073486328125e-05, -9.1552734375e-05, -3.814697265625e-06, -0.000576019287109375, 0.0, -0.0010194778442382812, -0.00061798095703125, -0.0004215240478515625, -0.0009212493896484375, -0.0002613067626953125, -0.000286102294921875, -0.0001220703125, 0.0, -0.0049152374267578125, 0.0, -0.0014133453369140625, 0.0, -0.00866401195526123, 0.0, -0.0007486343383789062, -0.26526927947998047, -0.00037288665771484375, -0.00029754638671875, -0.0001277923583984375, -9.5367431640625e-06, 0.0, -0.007811546325683594, 0.0, -0.0007810592651367188, 0.0, -0.004291057586669922, -1.9073486328125e-06, -0.013285636901855469, -0.0005664825439453125, -9.5367431640625e-06, 0.0, -0.0036745071411132812, 0.0, -0.0001697540283203125, 0.0, -1.6197409629821777, 0.0, -0.0038595199584960938, -0.00634002685546875, -3.24249267578125e-05, 0.0, -0.0002231597900390625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.008252263069152832, 0.0, -0.0001220703125, -0.0001049041748046875, 0.0, -0.00020325183868408203, -7.62939453125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -2.9531000064747417, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -0.021592259407043457, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.8393745422363281, -5.7220458984375e-06, -8.392333984375e-05, -6.4849853515625e-05, 0.0, -1.71661376953125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.71661376953125e-05, -0.0031299591064453125, -1.71661376953125e-05, -0.002669811248779297, -1.9073486328125e-06, -0.0003223419189453125, -0.0002155303955078125, -0.0047607421875, 0.0, -0.000774383544921875, -0.0003662109375, -1.9073486328125e-05, -9.1552734375e-05, -3.814697265625e-06, -0.000576019287109375, 0.0, -0.0010194778442382812, -0.00061798095703125, -0.0004215240478515625, -0.0009212493896484375, -0.0002613067626953125, -0.000286102294921875, -0.0001220703125, 0.0, -0.0049152374267578125, 0.0, -0.0014133453369140625, 0.0, -0.00866401195526123, 0.0, -0.0007486343383789062, -1.688960075378418, -1.52587890625e-05, -0.0030832290649414062, -0.0001544952392578125, -2.6702880859375e-05, 0.0, -0.0064182281494140625, 0.0, -0.0004520416259765625, 0.0, -0.004411935806274414, -3.814697265625e-06, -0.014568328857421875, -0.000499725341796875, -1.1444091796875e-05, 0.0, -0.005251884460449219, 0.0, -0.0001583099365234375, 0.0, -0.313045859336853, 0.0, -0.003063201904296875, -0.008429527282714844, -3.62396240234375e-05, 0.0, -0.000110626220703125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.007591366767883301, 0.0, -0.000110626220703125, -7.62939453125e-05, 0.0, -0.00018227100372314453, -9.5367431640625e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -4.094037454022654, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -0.021592259407043457, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.8393745422363281, -5.7220458984375e-06, -8.392333984375e-05, -6.4849853515625e-05, 0.0, -1.71661376953125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.71661376953125e-05, -0.0031299591064453125, -1.71661376953125e-05, -0.002669811248779297, -1.9073486328125e-06, -0.0003223419189453125, -0.0002155303955078125, -0.0047607421875, 0.0, -0.000774383544921875, -0.0003662109375, -1.9073486328125e-05, -9.1552734375e-05, -3.814697265625e-06, -0.000576019287109375, 0.0, -0.0010194778442382812, -0.00061798095703125, -0.0004215240478515625, -0.0009212493896484375, -0.0002613067626953125, -0.000286102294921875, -0.0001220703125, 0.0, -0.0049152374267578125, 0.0, -0.0014133453369140625, 0.0, -0.00866401195526123, 0.0, -0.0007486343383789062, -1.688960075378418, -1.52587890625e-05, -0.0030832290649414062, -0.0001544952392578125, -2.6702880859375e-05, 0.0, -0.0064182281494140625, 0.0, -0.0004520416259765625, 0.0, -0.004411935806274414, -3.814697265625e-06, -0.014568328857421875, -0.000499725341796875, -1.1444091796875e-05, 0.0, -0.005251884460449219, 0.0, -0.0001583099365234375, 0.0, -1.4540780782699585, 0.0, -0.0040416717529296875, -0.0064868927001953125, -3.24249267578125e-05, 0.0, -0.0002346038818359375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.008270978927612305, 0.0, -0.0001239776611328125, -0.0001220703125, 0.0, -0.00019085407257080078, -7.62939453125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -4.188719551457652, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 124, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0"}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -0.021592259407043457, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.5699729919433594, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -0.00067901611328125, -4.57763671875e-05, -0.002766251564025879, -1.9073486328125e-06, -0.0006084442138671875, -3.4082441329956055, -7.05718994140625e-05, 0.0, -0.0001354217529296875, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.18171846866607666, 0.0], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die()\n"}, {"score": -5.305138151540049, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -4.36478328704834, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.0003910064697265625, 0.0, -0.8869390487670898, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -0.0006847381591796875, -4.1961669921875e-05, -0.0026956796646118164, -1.9073486328125e-06, -0.0006160736083984375, -0.03999805450439453, -1.9073486328125e-06, 0.0, -0.00025177001953125, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.005554556846618652, 0.0, -2.6702880859375e-05, -0.00038242340087890625, 0.0, -0.00028717517852783203, -7.62939453125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.5156244443791, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -4.36478328704834, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.0003910064697265625, 0.0, -0.5351743698120117, -3.814697265625e-06, -7.82012939453125e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-05, -8.96453857421875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.4849853515625e-05, -1.52587890625e-05, -0.003383636474609375, -1.71661376953125e-05, -0.002655506134033203, -1.9073486328125e-06, -0.000377655029296875, -0.0002040863037109375, -0.004801750183105469, 0.0, -0.000751495361328125, -0.000354766845703125, -1.9073486328125e-05, -9.1552734375e-05, -3.814697265625e-06, -0.0005779266357421875, 0.0, -0.0010128021240234375, -0.00061798095703125, -0.0004177093505859375, -0.000926971435546875, -0.0002613067626953125, -0.0002841949462890625, -0.0001220703125, 0.0, -0.0049114227294921875, 0.0, -0.0014181137084960938, 0.0, -0.008660197257995605, 0.0, -0.0007457733154296875, -0.2655067443847656, -0.0003719329833984375, -0.00029754638671875, -0.0001277923583984375, -9.5367431640625e-06, 0.0, -0.007846832275390625, 0.0, -0.0007848739624023438, 0.0, -0.004298686981201172, -1.9073486328125e-06, -0.013223648071289062, -0.0005664825439453125, -9.5367431640625e-06, 0.0, -0.0036840438842773438, 0.0, -0.00016880035400390625, 0.0, -0.2633814811706543, 0.0, -0.00296783447265625, -0.008605003356933594, -3.814697265625e-05, 0.0, -0.0001049041748046875, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.007585048675537109, 0.0, -0.0001087188720703125, -6.866455078125e-05, 0.0, -0.00018990039825439453, -9.5367431640625e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.316562335385569, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -5.603343963623047, -1.52587890625e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0005340576171875, 0.0, -0.6594104766845703, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -0.0006008148193359375, -4.1961669921875e-05, -0.0027576684951782227, -1.9073486328125e-06, -0.000621795654296875, -0.04031085968017578, -1.9073486328125e-06, 0.0, -0.000255584716796875, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.005569934844970703, 0.0, -2.6702880859375e-05, -0.0003795623779296875, 0.0, -0.0002804994583129883, -7.62939453125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.736472289456614, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 124, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "bounce", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0"}], "name": "Assassinate", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -0.021592259407043457, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.5699729919433594, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -0.00067901611328125, -4.57763671875e-05, -0.002766251564025879, -1.9073486328125e-06, -0.0006084442138671875, -3.4082441329956055, -7.05718994140625e-05, 0.0, -0.0001354217529296875, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.729471206665039, 0.0], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"score": -11.768677115414903, "choice_history": [50, 111, 176, 59, 93, 14, 86, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>"], "model_output": {"body": [{"value": {"func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.900994300842285, -0.0019779205322265625, -0.07795143127441406, -1.66021728515625, -0.00012969970703125, 0.0, -0.09534454345703125, -0.001415252685546875, -1.6570065781706944e-05, -1.52587890625e-05, -0.03057098388671875, 0.0], "inferred_code": "super().__init__()\n"}, {"score": -13.650656670331955, "choice_history": [50, 111, 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.900994300842285, -0.0019779205322265625, -3.4073171615600586, -0.08188438415527344, -0.25813576579093933, -0.0003032684326171875], "inferred_code": "self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -15.084600687026978, "choice_history": [50, 111, 176, 59, 93, 24, 144, "3", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.900994300842285, -0.0019779205322265625, -3.4073171615600586, -0.08188438415527344, -1.6921942234039307, -0.0001888275146484375], "inferred_code": "self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -15.911497116088867, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -15.911453247070312], "inferred_code": "break\n"}, {"score": -23.298311233520508, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -23.298269271850586], "inferred_code": ""}], "index": 8}
{"beams": [{"score": -0.39129997223822954, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -0.03737151622772217, 0.0, -0.022535324096679688, -0.00016021728515625, -0.001491546630859375, 0.0, -0.00032806396484375, -0.0002651214599609375, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0009222030639648438, -0.0005168914794921875, -0.0015811920166015625, -0.0009098052978515625, -0.0010929107666015625, -0.0014801025390625, -8.392333984375e-05, 0.0, -0.0042934417724609375, 0.0, -0.0014438629150390625, 0.0, -0.010663032531738281, 0.0, -0.0002460479736328125, -0.14925003051757812, -9.5367431640625e-06, -0.0027256011962890625, -0.0005550384521484375, -1.1444091796875e-05, 0.0, -0.00025177001953125, -1.9073486328125e-06, -0.0005645751953125, 0.0, -0.006284594535827637, -3.814697265625e-06, -0.00873565673828125, -0.000270843505859375, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.001789093017578125, 0.0, -0.06008172035217285, 0.0, -0.047580718994140625, -0.0003681182861328125, -2.6702880859375e-05, 0.0, -0.0001010894775390625, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001226663589477539, 0.0, -3.814697265625e-06, -0.0005207061767578125, -0.0002193450927734375, -1.6450869225081988e-05, -9.536738616588991e-07, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -2.443044433299619, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -0.03737151622772217, 0.0, -0.022535324096679688, -0.00016021728515625, -0.001491546630859375, 0.0, -0.00032806396484375, -0.0002651214599609375, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0009222030639648438, -0.0005168914794921875, -0.0015811920166015625, -0.0009098052978515625, -0.0010929107666015625, -0.0014801025390625, -8.392333984375e-05, 0.0, -0.0042934417724609375, 0.0, -0.0014438629150390625, 0.0, -0.010663032531738281, 0.0, -0.0002460479736328125, -2.2024898529052734, -0.0032711029052734375, -0.0011425018310546875, -0.000446319580078125, -5.7220458984375e-06, 0.0, -0.000263214111328125, -1.9073486328125e-06, -0.000690460205078125, 0.0, -0.006058692932128906, -3.814697265625e-06, -0.00957489013671875, -0.0002803802490234375, -2.86102294921875e-05, 0.0, -6.103515625e-05, -1.9073486328125e-06, -0.0015287399291992188, 0.0, -0.05212807655334473, 0.0, -0.05197334289550781, -0.000354766845703125, -3.0517578125e-05, 0.0, -0.000102996826171875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001207590103149414, 0.0, -3.814697265625e-06, -0.0005340576171875, -0.0002155303955078125, -1.633166175452061e-05, -9.536738616588991e-07, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.363546142285699, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -0.03737151622772217, 0.0, -0.022535324096679688, -0.00016021728515625, -0.001491546630859375, 0.0, -0.00032806396484375, -0.0002651214599609375, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0009222030639648438, -0.0005168914794921875, -0.0015811920166015625, -0.0009098052978515625, -0.0010929107666015625, -0.0014801025390625, -8.392333984375e-05, 0.0, -0.0042934417724609375, 0.0, -0.0014438629150390625, 0.0, -0.010663032531738281, 0.0, -0.0002460479736328125, -0.14925003051757812, -9.5367431640625e-06, -0.0027256011962890625, -0.0005550384521484375, -1.1444091796875e-05, 0.0, -0.00025177001953125, -1.9073486328125e-06, -0.0005645751953125, 0.0, -0.006284594535827637, -3.814697265625e-06, -0.00873565673828125, -0.000270843505859375, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.001789093017578125, 0.0, -3.0715067386627197, -3.814697265625e-06, -0.0073451995849609375, -0.00147247314453125, -1.33514404296875e-05, 0.0, -0.00016021728515625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0001367330551147461, 0.0, -3.814697265625e-06, -0.00043487548828125, -0.0002040863037109375, -1.5616407836205326e-05, -1.0728830375228426e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.299041399659799, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -3.968097448348999, 0.0, -0.0011577606201171875, -7.2479248046875e-05, -0.002895355224609375, 0.0, -0.00063323974609375, -0.000293731689453125, -2.288818359375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0003070831298828125, 0.0, -0.0010576248168945312, -0.000553131103515625, -0.0015583038330078125, -0.00091552734375, -0.0010318756103515625, -0.0008697509765625, -0.0001163482666015625, 0.0, -0.0051288604736328125, 0.0, -0.0015935897827148438, 0.0, -0.009079813957214355, 0.0, -0.000247955322265625, -0.15161895751953125, -9.5367431640625e-06, -0.00295257568359375, -0.0005779266357421875, -1.1444091796875e-05, 0.0, -0.0002231597900390625, -1.9073486328125e-06, -0.0006237030029296875, 0.0, -0.0065765380859375, -3.814697265625e-06, -0.00847625732421875, -0.00026702880859375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.001743316650390625, 0.0, -0.05704140663146973, 0.0, -0.04581451416015625, -0.0003566741943359375, -2.6702880859375e-05, 0.0, -0.0001068115234375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001226663589477539, 0.0, -3.814697265625e-06, -0.0005168914794921875, -0.00022125244140625, -1.6450869225081988e-05, -9.536738616588991e-07, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.<UNK>, filter_func=lambda\n            target: target.health == target.calculate_max_health() and\n            target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.835865864357501, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 7, 163, 36, 114, "Null", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "IsNot"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -0.03737151622772217, 0.0, -0.022535324096679688, -0.00016021728515625, -0.001491546630859375, 0.0, -0.00032806396484375, -0.0002651214599609375, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0009222030639648438, -0.0005168914794921875, -0.0015811920166015625, -0.0009098052978515625, -0.0010929107666015625, -0.0014801025390625, -8.392333984375e-05, 0.0, -0.0042934417724609375, 0.0, -0.0014438629150390625, 0.0, -0.010663032531738281, 0.0, -0.0002460479736328125, -4.167701721191406, -9.34600830078125e-05, -0.017867088317871094, -0.0003604888916015625, -0.00020527835295069963, -1.9073486328125e-06, -0.3371858596801758, -0.01917266845703125, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.08304023742675781, 0.0, -0.038106322288513184, 0.0, -0.05859565734863281, -0.00029754638671875, -5.7220458984375e-06, -1.9073486328125e-06, -0.000667572021484375, 0.0, -9.930133819580078e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00012898443674203008, 0.0, -3.814697265625e-06, -0.000301361083984375, -0.0002498626708984375, -2.3722594050923362e-05, -1.1920922133867862e-06, -1.9073486328125e-06, 0.0, -5.14984130859375e-05, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health is not Null and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.916551889758765, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -0.03737151622772217, 0.0, -0.022535324096679688, -0.00016021728515625, -0.001491546630859375, 0.0, -0.00032806396484375, -0.0002651214599609375, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0009222030639648438, -0.0005168914794921875, -0.0015811920166015625, -0.0009098052978515625, -0.0010929107666015625, -0.0014801025390625, -8.392333984375e-05, 0.0, -0.0042934417724609375, 0.0, -0.0014438629150390625, 0.0, -0.010663032531738281, 0.0, -0.0002460479736328125, -0.14925003051757812, -9.5367431640625e-06, -0.0027256011962890625, -0.0005550384521484375, -1.1444091796875e-05, 0.0, -0.00025177001953125, -1.9073486328125e-06, -0.0005645751953125, 0.0, -0.006284594535827637, -3.814697265625e-06, -0.00873565673828125, -0.000270843505859375, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.001789093017578125, 0.0, -0.06008172035217285, 0.0, -3.076418876647949, -2.6702880859375e-05, -0.0003871917724609375, 0.0, -1.33514404296875e-05, -5.91278076171875e-05, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, 0.0, -7.43865966796875e-05, 0.0, 0.0, -0.0009480714797973633, 0.0, -0.0038738250732421875, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -8.0108642578125e-05, -5.7220458984375e-06, -8.22540732769994e-06, -7.62939453125e-06, -0.00020599365234375, 0.0, -6.4849853515625e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.075599670410156e-05, 0.0, -0.059447288513183594, -0.0001010894775390625, -0.2619304656982422, -0.005181312561035156, -0.011213181540369987, -2.1457672119140625e-06, -0.0006313323974609375, -3.814697265625e-06, -7.62939453125e-05, -0.0021190643310546875, -7.62939453125e-06, 0.0, -6.103515625e-05, 0.0, -0.3163614273071289, 0.0, -0.03560280799865723, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.20732593536376953, 0.0, -1.1444091796875e-05, -0.5833950042724609, -1.9073486328125e-06, -0.008131558075547218, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, -2.3841855067985307e-07], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(2, self)\n"}, {"score": -5.11798585386417, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -4.847434997558594, -0.0001277923583984375, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.62396240234375e-05, -0.0005283355712890625, -1.9073486328125e-06, -0.033128976821899414, 0.0, -0.00909423828125, -0.19779682159423828, 0.0, 0.0, -0.01276397705078125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.939338684082031e-05, 0.0, -3.814697265625e-06, -0.002567291259765625, -0.0001392364501953125, -2.121925172104966e-05, -4.768370445162873e-07, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.1482097303613585, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -0.03737151622772217, 0.0, -0.022535324096679688, -0.00016021728515625, -0.001491546630859375, 0.0, -0.00032806396484375, -0.0002651214599609375, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0009222030639648438, -0.0005168914794921875, -0.0015811920166015625, -0.0009098052978515625, -0.0010929107666015625, -0.0014801025390625, -8.392333984375e-05, 0.0, -0.0042934417724609375, 0.0, -0.0014438629150390625, 0.0, -0.010663032531738281, 0.0, -0.0002460479736328125, -0.14925003051757812, -9.5367431640625e-06, -0.0027256011962890625, -0.0005550384521484375, -1.1444091796875e-05, 0.0, -0.00025177001953125, -1.9073486328125e-06, -0.0005645751953125, 0.0, -0.006284594535827637, -3.814697265625e-06, -0.00873565673828125, -0.000270843505859375, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.001789093017578125, 0.0, -0.06008172035217285, 0.0, -3.076418876647949, -2.6702880859375e-05, -0.0003871917724609375, 0.0, -1.33514404296875e-05, -5.91278076171875e-05, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, 0.0, -7.43865966796875e-05, 0.0, 0.0, -0.0009480714797973633, 0.0, -0.0038738250732421875, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -8.0108642578125e-05, -5.7220458984375e-06, -8.22540732769994e-06, -7.62939453125e-06, -0.00020599365234375, 0.0, -6.4849853515625e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.075599670410156e-05, 0.0, -0.059447288513183594, -0.0001010894775390625, -0.2619304656982422, -0.005181312561035156, -0.011213181540369987, -2.1457672119140625e-06, -0.0006313323974609375, -3.814697265625e-06, -7.62939453125e-05, -0.0021190643310546875, -7.62939453125e-06, 0.0, -6.103515625e-05, 0.0, -0.3163614273071289, 0.0, -0.03560280799865723, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.20732593536376953, 0.0, -1.1444091796875e-05, -0.8224754333496094, -4.9591064453125e-05, -0.0009630045969970524, 0.0, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.962502608014219, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -0.03737151622772217, 0.0, -0.022535324096679688, -0.00016021728515625, -0.001491546630859375, 0.0, -0.00032806396484375, -0.0002651214599609375, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0009222030639648438, -0.0005168914794921875, -0.0015811920166015625, -0.0009098052978515625, -0.0010929107666015625, -0.0014801025390625, -8.392333984375e-05, 0.0, -0.0042934417724609375, 0.0, -0.0014438629150390625, 0.0, -0.010663032531738281, 0.0, -0.0002460479736328125, -0.14925003051757812, -9.5367431640625e-06, -0.0027256011962890625, -0.0005550384521484375, -1.1444091796875e-05, 0.0, -0.00025177001953125, -1.9073486328125e-06, -0.0005645751953125, 0.0, -0.006284594535827637, -3.814697265625e-06, -4.771063804626465, -0.001911163330078125, -4.9591064453125e-05, 0.0, -0.0038890838623046875, 0.0, -0.06818103790283203, 0.0, -0.12471389770507812, 0.0, -0.00020599365234375, -0.2822694778442383, -3.814697265625e-06, -0.4176158905029297, -0.000274658203125, -6.866455078125e-05, 0.0, -0.0001697540283203125, -3.814697265625e-06, -0.0026721954345703125, 0.0, -0.007603168487548828, -7.62939453125e-06, -0.006359100341796875, -0.002628326416015625, -3.814697265625e-06, 0.0, -0.000339508056640625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00012362003326416016, 0.0, -3.814697265625e-06, -0.00078582763671875, -0.0001811981201171875, -1.752376374497544e-05, -9.536738616588991e-07, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.health ==\n            target.calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.752348909095289, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 124, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0"}], "name": "Backstab", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -4.847434997558594, -0.0001277923583984375, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.62396240234375e-05, -0.0005283355712890625, -1.9073486328125e-06, -0.033128976821899414, 0.0, -0.00909423828125, -1.755478858947754, -3.814697265625e-05, 0.0, -0.0007114410400390625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.09152591228485107, 0.0], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage()\n"}, {"score": -12.75862130522728, "choice_history": [50, 111, 176, 59, 93, 24, 144, "0", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 0, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.880821228027344, -0.12590885162353516, -2.2353124618530273, -0.08671283721923828, -0.4294142425060272, -0.00040209293365478516], "inferred_code": "self.target.damage(player.effective_spell_damage(0), self)\n"}, {"score": -14.180290341377258, "choice_history": [50, 111, 176, 59, 93, 24, 144, "3", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.880821228027344, -0.12590885162353516, -2.2353124618530273, -0.08671283721923828, -1.8513964414596558, -8.893013000488281e-05], "inferred_code": "self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -14.383258819580078, "choice_history": [50, 111, 176, 59, 93, 24, 144, "2", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.880821228027344, -0.12590885162353516, -2.2353124618530273, -0.08671283721923828, -2.0544071197509766, -4.673004150390625e-05], "inferred_code": "self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -15.546194076538086, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -15.546144485473633], "inferred_code": "break\n"}, {"score": -21.8974666595459, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -21.897422790527344], "inferred_code": ""}], "index": 9}
{"beams": [{"score": -0.13952631727318732, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -0.0055915117263793945, -1.1920928244535389e-07, -0.00078582763671875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.0001316053094342351, -9.536738616588991e-07, -0.004763603210449219, -1.33514404296875e-05, 0.0, -0.000217437744140625, -4.9591064453125e-05, -3.0517578125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.000707334722392261, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000682949845213443, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005155086517333984, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009980201721191406, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.060642361640930176, -4.00543212890625e-05, -1.9073486328125e-06, -0.000102996826171875, -4.38690185546875e-05, -0.0009628236293792725, -0.00023090839385986328], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -3.2529251076326844, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -0.0055915117263793945, -1.1920928244535389e-07, -0.00078582763671875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.0001316053094342351, -9.536738616588991e-07, -0.004763603210449219, -1.33514404296875e-05, 0.0, -0.000217437744140625, -4.9591064453125e-05, -3.0517578125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.000707334722392261, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000682949845213443, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005155086517333984, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009980201721191406, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -3.173579216003418, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0006692111492156982, -0.0011199712753295898], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n"}, {"score": -3.6468003964097377, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -3.5421853065490723, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -0.01528167724609375, -1.1444091796875e-05, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013935565948486328, -3.349781036376953e-05, -0.005914807319641113, -1.1920928244535389e-07, -0.00077056884765625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.67572021484375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.00013172451872378588, -9.536738616588991e-07, -0.00478363037109375, -1.33514404296875e-05, 0.0, -0.0002155303955078125, -5.14984130859375e-05, -3.0517578125e-05, -1.33514404296875e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0007088835118338466, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.0006847379845567048, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005153179168701172, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009978413581848145, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.06063282489776611, -4.00543212890625e-05, -1.9073486328125e-06, -0.000102996826171875, -4.38690185546875e-05, -0.0009629130363464355, -0.00023090839385986328], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -5.167437115973918, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 30, 88, 19, 112, "Spell", "Damage", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "SpellDamage", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -0.0055915117263793945, -1.1920928244535389e-07, -0.00078582763671875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.0001316053094342351, -9.536738616588991e-07, -0.004763603210449219, -1.33514404296875e-05, 0.0, -0.000217437744140625, -4.9591064453125e-05, -3.0517578125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.000707334722392261, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000682949845213443, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005155086517333984, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009980201721191406, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -4.1989850997924805, -1.9073486328125e-06, -4.57763671875e-05, -0.004446983337402344, -1.71661376953125e-05, -0.000232696533203125, 0.0, -0.002928614616394043, -8.738032192923129e-05, -0.0003719329833984375, -0.6607332229614258, -4.00543212890625e-05, -0.0002117156982421875, -4.1961669921875e-05, -0.08662176132202148, -0.01483154296875, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.12019461393356323, 0.0], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.add_buff(Buff(SpellDamage(1)))\n"}, {"score": -5.184441505100978, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -4.415918350219727, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -0.0002117156982421875, -1.7762184143066406e-05, -0.006228208541870117, -1.1920928244535389e-07, -0.010568618774414062, -1.9073486328125e-06, -0.0021619796752929688, 0.0, -0.0033578872680664062, -0.000301361083984375, -1.9073486328125e-06, -0.000217437744140625, -5.7220458984375e-06, -0.0031080245971679688, 0.0, -0.0006504058837890625, -0.000377655029296875, -0.0001583099365234375, -0.0017604827880859375, -0.000823974609375, -2.09808349609375e-05, -0.10477447509765625, 0.0, -0.22913551330566406, 0.0, -0.0030736923217773438, 0.0, -0.042079292237758636, -1.9073486328125e-06, -3.814697265625e-05, -0.16379547119140625, -0.0001697540283203125, -0.0031328201293945312, -0.0012226104736328125, -5.7220458984375e-06, 0.0, -0.011738777160644531, -5.7220458984375e-06, -0.00665283203125, -1.1920928244535389e-07, -0.011502981185913086, -1.1444091796875e-05, -0.011117935180664062, -0.000682830810546875, 0.0, -1.9073486328125e-06, -0.0031642913818359375, 0.0, -0.0021467208862304688, -2.3841855067985307e-07, -0.021436572074890137, 0.0, -0.005207061767578125, 0.0, -4.57763671875e-05, 0.0, -9.5367431640625e-06, -4.57763671875e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -1.1444091796875e-05, -8.225440979003906e-06, 0.0, -4.5299078919924796e-05, -3.576278118089249e-07, -0.006626129150390625, -9.5367431640625e-06, 0.0, -0.0002288818359375, -1.9073486328125e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.0007755170809105039, -9.655952453613281e-06, -0.000125885009765625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.072883515007561e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0006893872050568461, -1.1920928244535389e-07, -0.00012969970703125, -0.0001430511474609375, -9.5367431640625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.82012939453125e-05, -3.0517578125e-05, -6.4849853515625e-05, -5.340576171875e-05, 0.0, -3.576272865757346e-05, -1.1920928244535389e-07, -4.589557647705078e-05, -2.3841855067985307e-07, -0.005274415016174316, -5.7220458984375e-06, -9.5367431640625e-06, -6.67572021484375e-05, -1.9073486328125e-05, -0.0010015368461608887, -0.0009357929229736328, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000270843505859375, -0.000232696533203125, -0.00016021728515625, 0.0, -9.036060509970412e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.06105244159698486, -4.00543212890625e-05, -1.9073486328125e-06, -0.000102996826171875, -4.57763671875e-05, -0.0009598135948181152, -0.00023090839385986328], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -5.223991425997731, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "<UNK>", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -0.0055915117263793945, -1.1920928244535389e-07, -0.00078582763671875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.0001316053094342351, -9.536738616588991e-07, -0.004763603210449219, -1.33514404296875e-05, 0.0, -0.000217437744140625, -4.9591064453125e-05, -3.0517578125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.000707334722392261, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000682949845213443, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005155086517333984, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009980201721191406, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -4.1989850997924805, -1.9073486328125e-06, -4.57763671875e-05, -0.004446983337402344, -1.71661376953125e-05, -0.000232696533203125, 0.0, -0.002928614616394043, -8.738032192923129e-05, -0.0003719329833984375, -0.728785514831543, -1.9073486328125e-06, -0.13385646045207977, -0.07672858983278275], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score": -6.145088790616583, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -6.008302688598633, -0.000164031982421875, -7.82012939453125e-05, 0.0, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, 0.0, -1.537799835205078e-05, -3.886222839355469e-05, -3.814697265625e-06, -0.00012338075612206012, -7.152555099310121e-07, -0.007815361022949219, -1.33514404296875e-05, 0.0, -0.000171661376953125, -3.62396240234375e-05, -3.4332275390625e-05, -9.5367431640625e-06, -5.340576171875e-05, -3.814697265625e-06, -0.0007553343893960118, -7.867813110351562e-06, -0.0001010894775390625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -0.0006767510203644633, -1.1920928244535389e-07, -0.0001659393310546875, -0.000217437744140625, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.4332275390625e-05, -6.103515625e-05, -4.38690185546875e-05, 0.0, -3.373617073521018e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005156040191650391, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009958744049072266, -0.0009233951568603516, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002155303955078125, -0.0001659393310546875, 0.0, -8.821484516374767e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.061046719551086426, -4.1961669921875e-05, -1.9073486328125e-06, -0.000102996826171875, -4.57763671875e-05, -0.0009589791297912598, -0.00023090839385986328], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -6.760246781078088, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -3.5421853065490723, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -0.01528167724609375, -1.1444091796875e-05, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013935565948486328, -3.349781036376953e-05, -0.005914807319641113, -1.1920928244535389e-07, -0.00077056884765625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.67572021484375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.00013172451872378588, -9.536738616588991e-07, -0.00478363037109375, -1.33514404296875e-05, 0.0, -0.0002155303955078125, -5.14984130859375e-05, -3.0517578125e-05, -1.33514404296875e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0007088835118338466, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.0006847379845567048, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005153179168701172, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009978413581848145, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -3.173617362976074, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0006692111492156982, -0.0011199712753295898], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n"}, {"score": -6.827049891874495, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "BEAST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "BEAST", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -6.691718101501465, -5.054472785559483e-05, -0.0002002716064453125, 0.0, -1.9073486328125e-05, 0.0, -8.0108642578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -3.933906555175781e-06, 0.0, 0.0, -1.537799835205078e-05, -3.1113624572753906e-05, -3.814697265625e-06, -0.000138877410790883, -7.152555099310121e-07, -0.006687164306640625, -1.33514404296875e-05, 0.0, -0.00019073486328125, -7.05718994140625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -5.340576171875e-05, -3.814697265625e-06, -0.0007005404331721365, -7.867813110351562e-06, -0.0001010894775390625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.0006849764031358063, -1.1920928244535389e-07, -0.0001773834228515625, -0.000213623046875, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005141735076904297, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.000993967056274414, -0.0009176731109619141, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.00023651123046875, -0.000217437744140625, -0.0001659393310546875, 0.0, -8.940693078329787e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.06072056293487549, -4.00543212890625e-05, -1.9073486328125e-06, -0.000102996826171875, -4.38690185546875e-05, -0.0009608864784240723, -0.00023090839385986328], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -6.863215873402062, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -0.0055915117263793945, -1.1920928244535389e-07, -0.00078582763671875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.0001316053094342351, -9.536738616588991e-07, -0.004763603210449219, -1.33514404296875e-05, 0.0, -0.000217437744140625, -4.9591064453125e-05, -3.0517578125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.000707334722392261, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000682949845213443, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -6.720064640045166, 0.0, -1.33514404296875e-05, -0.00011444091796875, -3.62396240234375e-05, -0.0008734762668609619, -6.306171417236328e-05, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.000194549560546875, -0.000324249267578125, -0.00018310546875, 0.0, -0.00012779232929460704, -2.503394853192731e-06, -4.76837158203125e-05, -2.3841855067985307e-07, -0.07022881507873535, -3.62396240234375e-05, -1.9073486328125e-06, -0.000118255615234375, -4.57763671875e-05, -0.0009548068046569824, -0.00022518634796142578], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"score": -6.877912244576109, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -0.0055915117263793945, -1.1920928244535389e-07, -0.00078582763671875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.0001316053094342351, -9.536738616588991e-07, -6.602499961853027, -0.000232696533203125, -1.71661376953125e-05, -3.814697265625e-05, -0.0001468658447265625, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0019546032417565584, -7.748603820800781e-06, -0.0001068115234375, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -9.059905096364673e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0007081030053086579, -1.1920928244535389e-07, -0.001251220703125, -3.814697265625e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -0.000118255615234375, -8.392333984375e-05, -2.6702880859375e-05, 0.0, -3.290169115643948e-05, -2.3841855067985307e-07, -3.254413604736328e-05, -4.768370445162873e-07, -0.014284968376159668, -1.9073486328125e-06, -5.7220458984375e-06, -0.000125885009765625, -5.340576171875e-05, -0.001071155071258545, -0.00045228004455566406, -0.000133514404296875, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.011615753173828125, -0.0007114410400390625, -0.000270843505859375, 0.0, -7.68899917602539e-05, -4.768370445162873e-07, -4.38690185546875e-05, -2.3841855067985307e-07, -0.08409333229064941, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001354217529296875, -4.00543212890625e-05, -0.0010272562503814697, -0.00017940998077392578, -0.0002536773681640625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.004451751708984375, -0.00037384033203125, -0.000263214111328125, -1.9073486328125e-06, -0.00012671947479248047, -2.1457672119140625e-06, -4.57763671875e-05, -2.3841855067985307e-07, -0.08710122108459473, -1.33514404296875e-05, -1.9073486328125e-06, -0.000156402587890625, -4.57763671875e-05, -0.0009901821613311768, -0.00018131732940673828], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"score": -7.07347819745425, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "The", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfTheKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -6.9349565505981445, -9.07141511561349e-05, -3.576278118089249e-07, -2.288818359375e-05, 0.0, 0.0, -3.570457920432091e-07, -8.261200127890334e-05, -1.1920928244535389e-07, -0.00017547607421875, -8.58306884765625e-05, 0.0, -1.2040138244628906e-05, 0.0, -1.9073486328125e-06, -0.000225067138671875, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-05, -0.0007457733154296875, -2.86102294921875e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017176616529468447, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020668754586949944, -8.344646857949556e-07, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.133843008778058e-05, -0.0001823746133595705, -0.03265522047877312, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001125335693359375, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.017780303955078125, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -0.005596280097961426, -1.1920928244535389e-07, -0.0007915496826171875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -3.063678741455078e-05, -4.088878631591797e-05, -3.814697265625e-06, -0.00013208211748860776, -9.536738616588991e-07, -0.00470733642578125, -1.33514404296875e-05, 0.0, -0.000217437744140625, -4.9591064453125e-05, -3.0517578125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0007086452678777277, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000682949845213443, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005155086517333984, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009980201721191406, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.060604214668273926, -4.00543212890625e-05, -1.9073486328125e-06, -0.000102996826171875, -4.38690185546875e-05, -0.0009628534317016602, -0.00023090839385986328], "inferred_code": "class BlessingOfTheKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -7.181970650358046, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -7.070671558380127, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -0.02179241180419922, -1.9073486328125e-05, -1.1444091796875e-05, -4.57763671875e-05, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00012791156768798828, -3.552436828613281e-05, -0.006021738052368164, -1.1920928244535389e-07, -0.0007781982421875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.00013148610014468431, -9.536738616588991e-07, -0.0047855377197265625, -1.33514404296875e-05, 0.0, -0.0002155303955078125, -5.340576171875e-05, -3.0517578125e-05, -1.33514404296875e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.0007142447866499424, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000686764542479068, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005152225494384766, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.000997781753540039, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.06063568592071533, -4.00543212890625e-05, -1.9073486328125e-06, -0.000102996826171875, -4.38690185546875e-05, -0.0009629130363464355, -0.00023090839385986328], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -16.837003707885742, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -16.836992263793945], "inferred_code": "break\n"}, {"score": -22.286056518554688, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -22.286048889160156], "inferred_code": ""}], "index": 10}
{"beams": [{"score": -0.0850729143803548, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009621739387512207, 0.0, -0.0040435791015625, -0.0009136199951171875, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -0.011319157667458057, 0.0, -7.2479248046875e-05, -0.0003108978271484375, -0.0002155303955078125, -0.003830322064459324, -3.24249267578125e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -5.140770592037363, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -5.050403594970703, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -6.103515625e-05, -3.814697265625e-06, -0.00070953369140625, 0.0, -0.05388164520263672, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -8.7738037109375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001316070556640625, -3.0517578125e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009611248970031738, 0.0, -0.004039764404296875, -0.000926971435546875, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -0.011320111341774464, 0.0, -7.2479248046875e-05, -0.0003108978271484375, -0.000217437744140625, -0.0038504665717482567, -3.24249267578125e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -5.3817274666016175, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -3.309427261352539, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -6.67572021484375e-05, -2.6702880859375e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00104522705078125, -1.1444091796875e-05, -0.000171661376953125, -2.7894973754882812e-05, -0.015575528144836426, 0.0, -0.4156360626220703, -7.62939453125e-06, -0.0026645660400390625, 0.0, -0.0026950836181640625, -0.0001010894775390625, -7.62939453125e-06, -0.00014495849609375, -3.814697265625e-06, -0.00034046173095703125, 0.0, -0.0005207061767578125, -0.00031280517578125, -0.0001239776611328125, -0.004187583923339844, -0.0005474090576171875, -6.29425048828125e-05, -0.7403316497802734, 0.0, -0.5250730514526367, 0.0, -0.003956794738769531, 0.0, -0.027637572959065437, 0.0, -0.0020246505737304688, -0.0675811767578125, -0.0001316070556640625, -0.02534770965576172, -0.0024013519287109375, -3.814697265625e-06, 0.0, -0.007178306579589844, 0.0, -0.00013446807861328125, -1.1920928244535389e-07, -0.0070230960845947266, -5.14984130859375e-05, -0.015615463256835938, -0.0003757476806640625, 0.0, -1.9073486328125e-06, -0.0007343292236328125, 0.0, -8.7738037109375e-05, 0.0, -0.05217278003692627, -1.9073486328125e-06, -0.026508331298828125, -0.002044677734375, -0.0001621246337890625, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -9.560585021972656e-05, 0.0, -0.06595516204833984, -2.3841855067985307e-07, -2.09808349609375e-05, -0.00115203857421875, -0.0010166168212890625, -0.037255171686410904, -0.0004634857177734375], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -5.836043218858308, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -5.6661376953125, 0.0, -0.09694480895996094, -0.0005168914794921875, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -1.3589859008789062e-05, 0.0, -0.013159383088350296, -1.1920928244535389e-07, -0.0001010894775390625, -0.0002288818359375, -0.0002651214599609375, -0.0039091878570616245, -3.24249267578125e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -6.0142391680364895, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 14, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_attack", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -3.309427261352539, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -6.67572021484375e-05, -2.6702880859375e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00104522705078125, -1.1444091796875e-05, -0.000171661376953125, -2.7894973754882812e-05, -0.015575528144836426, 0.0, -0.4156360626220703, -7.62939453125e-06, -0.0026645660400390625, 0.0, -0.0026950836181640625, -0.0001010894775390625, -7.62939453125e-06, -0.00014495849609375, -3.814697265625e-06, -0.00034046173095703125, 0.0, -0.0005207061767578125, -0.00031280517578125, -0.0001239776611328125, -0.004187583923339844, -0.0005474090576171875, -6.29425048828125e-05, -0.6497831344604492, -0.03713798522949219, -1.9073486328125e-06, 0.0, -0.008451461791992188, 0.0, -6.29425048828125e-05, 0.0, -0.05824995040893555, -1.1920928244535389e-07, -0.0005731582641601562, -1.1035938262939453, -4.38690185546875e-05, -0.21581554412841797, -0.00091552734375, -3.814697265625e-06, 0.0, -0.03440380096435547, 0.0, -0.00011539459228515625, -1.1920928244535389e-07, -0.011799097061157227, -1.52587890625e-05, -0.012324333190917969, -0.0003986358642578125, -1.9073486328125e-06, 0.0, -0.0021839141845703125, 0.0, -7.534027099609375e-05, 0.0, -0.04451179504394531, -1.9073486328125e-06, -0.0077037811279296875, -0.0010547637939453125, -0.0001220703125, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -5.352497100830078e-05, 0.0, -0.03285073861479759, -2.0265579223632812e-06, -2.47955322265625e-05, -0.000545501708984375, -0.0001964569091796875, -0.021797960624098778, -0.0002307891845703125], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -6.353468218128903, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -6.261552810668945, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.7738037109375e-05, -5.7220458984375e-06, -0.000682830810546875, 0.0, -0.055800437927246094, -7.62939453125e-06, -1.9073486328125e-06, -8.392333984375e-05, -8.20159912109375e-05, -4.9591064453125e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000118255615234375, -3.0517578125e-05, -8.7738037109375e-05, -3.898143768310547e-05, -0.00934898853302002, 0.0, -0.0039272308349609375, -0.000926971435546875, -5.7220458984375e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -0.011296865530312061, 0.0, -7.43865966796875e-05, -0.0003108978271484375, -0.000217437744140625, -0.00385332852602005, -3.24249267578125e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -6.460250355545185, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 14, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_attack", "<EOS>", 160, 4, 163, 37, 117, "0", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 0, "_type": "Num"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -3.309427261352539, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -2.47955322265625e-05, -6.67572021484375e-05, -2.6702880859375e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00104522705078125, -1.1444091796875e-05, -0.000171661376953125, -2.7894973754882812e-05, -0.015575528144836426, 0.0, -0.4156360626220703, -7.62939453125e-06, -0.0026645660400390625, 0.0, -0.0026950836181640625, -0.0001010894775390625, -7.62939453125e-06, -0.00014495849609375, -3.814697265625e-06, -0.00034046173095703125, 0.0, -0.0005207061767578125, -0.00031280517578125, -0.0001239776611328125, -0.004187583923339844, -0.0005474090576171875, -6.29425048828125e-05, -0.6497831344604492, -0.03713798522949219, -1.9073486328125e-06, 0.0, -0.008451461791992188, 0.0, -6.29425048828125e-05, 0.0, -0.05824995040893555, -1.1920928244535389e-07, -0.0005731582641601562, -1.3036127090454102, -0.0001964569091796875, -0.00228118896484375, -9.5367431640625e-06, -0.10841438919305801, -0.000331878662109375, -0.13397216796875, -0.0021038055419921875, -1.9073486328125e-06, 0.0, -0.2398967742919922, 0.0, -0.00028324127197265625, -1.1920928244535389e-07, -0.040963172912597656, 0.0, -0.006282806396484375, -0.0009365081787109375, -9.1552734375e-05, 0.0, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -4.00543212890625e-05, -0.00014710426330566406, 0.0, -0.03420686721801758, -1.1920928244535389e-07, -2.09808349609375e-05, -0.000247955322265625, -0.0001544952392578125, -0.06198390945792198, -0.0006313323974609375], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 0 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -6.460868031959755, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 1, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009621739387512207, 0.0, -0.0040435791015625, -0.0009136199951171875, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -0.011319157667458057, 0.0, -7.2479248046875e-05, -0.0003108978271484375, -0.0002155303955078125, -6.3796539306640625, -3.933906555175781e-06], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n"}, {"score": -6.487419685125126, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -5.789809226989746, -0.000171661376953125, -0.6232395172119141, -0.000415802001953125, -1.33514404296875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.3470649719238281e-05, 0.0, -0.013773917220532894, 0.0, -3.814697265625e-05, -0.0005702972412109375, -0.000225067138671875, -0.004413294140249491, -3.4332275390625e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -6.524056992735488, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_temp_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009621739387512207, 0.0, -0.0040435791015625, -0.0009136199951171875, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -6.4458842277526855, 0.0, -2.86102294921875e-05, -0.0008869171142578125, -0.0021457672119140625, -0.00580983143299818, -9.5367431640625e-06], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n"}, {"score": -6.5921871850822455, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009621739387512207, 0.0, -5.556779861450195, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -1.52587890625e-05, -2.0265579223632812e-06, 0.0, 0.0, -0.0012493133544921875, -3.0517578125e-05, -3.814697265625e-06, -0.000950932502746582, -4.768370445162873e-07, -0.3666677474975586, -5.7220458984375e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.1961669921875e-05, -1.33514404296875e-05, -3.0517578125e-05, -0.0002079010009765625, 0.0, -8.034706115722656e-05, -7.62939453125e-06, -0.00041961669921875, 0.0, -0.0001583099365234375, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001177072525024414, -2.0265579223632812e-06, -0.0004940032958984375, -5.7220458984375e-06, -5.7220458984375e-06, -2.86102294921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00010824203491210938, -5.7220458984375e-06, -0.00013935565948486328, 0.0, -0.06378602981567383, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.62396240234375e-05, -0.06717002391815186, -9.5367431640625e-05, -0.001834869384765625, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002288818359375, -5.14984130859375e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0032913684844970703, -8.20159912109375e-05, -0.0001049041748046875, 0.0, -0.24184131622314453, -5.7220458984375e-06, -1.9073486328125e-06, -3.4332275390625e-05, -4.9591064453125e-05, -0.2200782150030136, -0.0002498626708984375], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.change_attack(3)\n"}, {"score": -6.696939976196511, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 4, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009621739387512207, 0.0, -0.0040435791015625, -0.0009136199951171875, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -0.011319157667458057, 0.0, -7.2479248046875e-05, -0.0003108978271484375, -0.0002155303955078125, -6.615659236907959, -7.05718994140625e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n"}, {"score": -6.997289169821663, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009621739387512207, 0.0, -0.0040435791015625, -0.0009136199951171875, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -6.908026218414307, 0.0, -5.91278076171875e-05, -0.001361846923828125, -0.0008449554443359375, -0.01769144833087921, -1.3470649719238281e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(3)\n"}, {"score": -7.001885429266615, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009621739387512207, 0.0, -0.0040435791015625, -0.0009136199951171875, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -6.896543025970459, -1.9073486328125e-06, -7.62939453125e-06, -0.01684284210205078, -0.0016307830810546875, -0.017542343586683273, -2.47955322265625e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n"}, {"score": -21.780908584594727, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -21.780885696411133], "inferred_code": ""}], "index": 11}
{"beams": [{"score": -0.05170495352964366, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "FREE", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -0.001468658447265625, 0.0, -0.0006898641586303711, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00034356117248535156, -0.00027382373809814453, -0.0003299713134765625, -0.0002899169921875, -0.0008595855324529111, -1.1920928244535389e-07, -1.9669332687044516e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -3.9019149063737473, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Bloodfen", " ", "Raptor", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -3.1135902404785156, 0.0, -9.5367431640625e-06, -4.57763671875e-05, -7.43865966796875e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -4.52994936495088e-06, -2.0265579223632812e-06, -3.933906555175781e-06, 0.0, -0.03851032257080078, -2.47955322265625e-05, -1.1444091796875e-05, -0.00010013079008786008, -4.982948303222656e-05, -3.40932747349143e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -2.455709909554571e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.0002595186233520508, 0.0, -0.0006448030471801758, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -7.62939453125e-06, -0.7102727890014648, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0001310110092163086, -7.62939453125e-06, -0.03600025177001953, -3.24249267578125e-05, -0.00039801449747756124, -3.576278118089249e-07, -3.313964043627493e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -3.9462657848219465, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Bloodfen", " ", "Raptor", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 36, 113, "False", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "LEGENDARY", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -3.1135902404785156, 0.0, -9.5367431640625e-06, -4.57763671875e-05, -7.43865966796875e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -4.52994936495088e-06, -2.0265579223632812e-06, -3.933906555175781e-06, 0.0, -0.03851032257080078, -2.47955322265625e-05, -1.1444091796875e-05, -0.00010013079008786008, -4.982948303222656e-05, -3.40932747349143e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -2.455709909554571e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.0002595186233520508, 0.0, -0.0006448030471801758, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00019073486328125, -7.62939453125e-06, -0.7858200073242188, 0.0, -0.000476837158203125, -5.7220458984375e-06, -6.961821782169864e-05, -9.5367431640625e-06, -0.004475593566894531, -2.86102294921875e-05, -0.000325431814417243, -5.960462772236497e-07, -2.5987261324189603e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, True)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -6.862552562769871, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -6.812689781188965, 0.0, -0.00026166439056396484, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00044095516204833984, -0.0003167390823364258, -0.0003204345703125, -0.0001926422119140625, -0.0008863768307492137, -1.1920928244535389e-07, -1.9788536519627087e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -7.286394579678415, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "1", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "FREE", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 1, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -0.001468658447265625, 0.0, -0.0006898641586303711, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00034356117248535156, -0.00027382373809814453, -0.0003299713134765625, -0.0002899169921875, -7.235562801361084, -2.3841855067985307e-07, -5.960443559160922e-06, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n"}, {"score": -7.674630369333144, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "FREE", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "ForceTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.520059585571289, -0.0672004297375679, -0.0464201495051384, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -9.402632713317871e-05, -7.867811291362159e-06, -8.344646857949556e-07, -7.43865966796875e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00012302398681640625, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, 0.0, -0.036037445068359375, -5.340576171875e-05, -6.437280717364047e-06, -4.76837158203125e-05, -1.1920928244535389e-07, 0.0, -7.748603820800781e-06, 0.0, -0.00148773193359375, 0.0, -0.0006231069564819336, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00034165382385253906, -0.00027000904083251953, -0.0003185272216796875, -0.0002841949462890625, -0.0009124833741225302, -1.1920928244535389e-07, -2.0980607587262057e-05, 0.0], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -7.975193517824174, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "<UNK>", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "FREE", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "Bloodfen<UNK>", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -7.923853397369385, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -0.001468658447265625, 0.0, -0.0006898641586303711, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00034356117248535156, -0.00027382373809814453, -0.0003299713134765625, -0.0002899169921875, -0.0008595855324529111, -1.1920928244535389e-07, -1.9669332687044516e-05, 0.0], "inferred_code": "class Bloodfen<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -8.704381074566726, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "FREE", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -0.001468658447265625, 0.0, -0.0006898641586303711, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00034356117248535156, -0.00027382373809814453, -8.342588424682617, -4.9591064453125e-05, -0.0003737073275260627, 0.0, -6.806498277001083e-05, 0.0, -0.310386061668396, 0.0, -0.000492095947265625, -9.5367431640625e-06, -0.0001964569091796875, -1.1444091796875e-05], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True)\n"}, {"score": -8.704497810859259, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 67, 129, "3", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template12", "hole2": "taunt"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -8.296720504760742, -0.1428365707397461, -0.0010629362659528852, -9.679794311523438e-05, -0.0003094521234743297, 0.0, -0.2555614709854126, 0.0, -0.0002613067626953125, -9.5367431640625e-06, -0.0001316070556640625, -5.7220458984375e-06, -0.005347251892089844, -4.76837158203125e-05, -0.0007673141662962735, -1.1920928244535389e-07, -6.210603896761313e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        return Minion(3, 2, taunt=True)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -8.852378932631346, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "FREE", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -0.001468658447265625, 0.0, -0.0006898641586303711, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -8.79841136932373, -2.6702880859375e-05, -0.0012664794921875, -0.00147247314453125, -0.001582607626914978, -1.1920928244535389e-07, -3.0874714866513386e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -8.917458401106579, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "FREE", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "FREE", "hole2": "FREE", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -0.001468658447265625, 0.0, -8.544209480285645, 0.0, -0.32145214080810547, 0.0, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0005573034286499023, -0.0006649494171142578, -0.00029754638671875, -0.00057220458984375, -0.0008238580194301903, -1.1920928244535389e-07, -1.6689156836946495e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, FREE=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -8.948208791334274, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "FREE", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bloodfen Raptor", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -0.001468658447265625, 0.0, -0.0006898641586303711, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00034356117248535156, -0.00027382373809814453, -0.0003299713134765625, -0.0002899169921875, -8.89733600616455, -1.1920928244535389e-07, -4.7086505219340324e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -10.07318628302027, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 67, 129, "3", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 20, 113, "True", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template12", "hole2": "HUNTER"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template5"}], "name": "BloodfenRaptor", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -8.296720504760742, -0.1428365707397461, -0.0010629362659528852, -9.679794311523438e-05, -0.0003094521234743297, 0.0, -1.6230770349502563, 0.0, -0.0013170242309570312, -1.1444091796875e-05, -0.000308990478515625, -1.9073486328125e-06, -0.005481719970703125, -3.814697265625e-05, -0.0005864815320819616, -1.1920928244535389e-07, -5.9721991419792175e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        return Minion(3, 2, HUNTER=True)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -17.767253875732422, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -17.767227172851562], "inferred_code": "break\n"}, {"score": -22.728229522705078, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -22.728206634521484], "inferred_code": ""}], "index": 12}
{"beams": [{"score": -0.12241576905943674, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -0.014947056770324707, -2.110004425048828e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-05, -0.034299254417419434, -1.9073486328125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"score": -3.5950578329702623, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 62, 98, 15, 91, 11, 81, 11, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 2, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "test": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "_type": "If"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -3.027052879333496, -0.0008106231689453125, -0.0003204345703125, -2.86102294921875e-05, -7.43865966796875e-05, 0.0, -0.012338638305664062, -9.5367431640625e-06, -0.00040435791015625, 0.0, -0.013615608215332031, 0.0, -0.0035512447357177734, -3.7550900742644444e-05, -0.00952911376953125, -4.00543212890625e-05, -2.6702880859375e-05, -0.24411869049072266, -2.09808349609375e-05, -0.0014028549194335938, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.0005884170532226562, 0.0, -0.07950210571289062, 0.0, -0.0001316070556640625, -0.002544403076171875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000756382942199707, -2.3364829758065753e-05, -0.04456436634063721, -4.017353057861328e-05, -1.9073486328125e-06, -4.00543212890625e-05, -4.76837158203125e-05, -0.13433682918548584, -3.814697265625e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.card.minion_type == MINION_TYPE.TOTEM:\n                minion.change_temp_attack(3)\n"}, {"score": -4.03663932080962, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -0.014947056770324707, -2.110004425048828e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-05, -3.9485228061676025, -1.9073486328125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}, {"score": -4.68767486806609, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -0.014947056770324707, -2.110004425048828e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-05, -4.599560260772705, 0.0], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(1)\n"}, {"score": -4.975719439798915, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 62, 98, 15, 91, 11, 81, 11, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 7, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "test": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "IsNot"}], "_type": "Compare", "comparators": [{"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "_type": "If"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -3.027052879333496, -0.0008106231689453125, -0.0003204345703125, -2.86102294921875e-05, -7.43865966796875e-05, 0.0, -0.012338638305664062, -9.5367431640625e-06, -0.00040435791015625, 0.0, -0.013615608215332031, 0.0, -0.0035512447357177734, -3.7550900742644444e-05, -0.00952911376953125, -4.00543212890625e-05, -2.6702880859375e-05, -1.6376876831054688, -2.288818359375e-05, -0.03546714782714844, -3.814697265625e-06, -0.000102996826171875, -1.1444091796875e-05, -0.0008764266967773438, 0.0, -0.06203937530517578, 0.0, -0.000110626220703125, -0.0011310577392578125, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0008660554885864258, -2.1219102563918568e-05, -0.03717339038848877, -5.733966827392578e-05, -3.814697265625e-06, -3.4332275390625e-05, -4.57763671875e-05, -0.1131889820098877, -3.814697265625e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.card.minion_type is not MINION_TYPE.TOTEM:\n                minion.change_temp_attack(3)\n"}, {"score": -6.654301869712064, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -5.439155578613281, -1.9073486328125e-06, -1.9073486328125e-06, -0.08333873748779297, -3.814697265625e-06, -0.0031890869140625, -1.9073486328125e-06, -0.010882019996643066, -0.001634836196899414, -0.000682830810546875, -0.27590370178222656, -3.814697265625e-06, -0.7658916711807251, -0.000583767774514854], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score": -7.202889311272877, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "deathrattle", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 0, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -0.014947056770324707, -2.110004425048828e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-05, -7.114772796630859, -1.9073486328125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(0)\n"}, {"score": -7.213273274857777, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "Spell", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "Spell", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -6.9827399253845215, -1.52587890625e-05, -0.06014060974121094, -0.0665884017944336, -0.001251220703125, -0.029511570930480957, 0.0], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.Spell(3)\n"}, {"score": -7.262963402230518, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -7.167363166809082, -5.7220458984375e-06, -5.7220458984375e-06, -0.0014190673828125, -5.7220458984375e-05, -0.021082401275634766, -3.814697265625e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_attack(3)\n"}, {"score": -7.288245069939869, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -0.014947056770324707, -2.110004425048828e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-05, -7.200128555297852, -1.9073486328125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(6)\n"}, {"score": -7.397091853610611, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 57], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"_type": "Break"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -7.378117561340332], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            break\n"}, {"score": -7.3979693233558095, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -5.76686429977417, 0.0, -0.0063800811767578125, -1.33514404296875e-05, -3.814697265625e-05, -0.000598907470703125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -9.167194366455078e-05, -0.000438690185546875, -0.10651206970214844, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012035369873046875, -0.0008869171142578125, -0.4038306176662445, -1.1920928244535389e-07, -0.18010425567626953, -5.53131103515625e-05, -0.8578940629959106, 0.0], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -7.557440030534046, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "Turn", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template1", "hole2": "SHAMAN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "Turn", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Bloodlust", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -7.242218494415283, -0.00588226318359375, -0.004913330078125, -0.2125558853149414, -0.00098419189453125, -0.017859578132629395, 0.0], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.Turn(3)\n"}, {"score": -16.075090408325195, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -16.075037002563477], "inferred_code": "break\n"}, {"score": -24.931081771850586, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -4.76837158203125e-05, -24.931028366088867], "inferred_code": ""}], "index": 13}
{"beams": [{"score": -0.04687546764350259, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -0.03623056411743164, 0.0, -0.000362396240234375, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -1.8477374396752566e-05, -2.3841855067985307e-07, -0.0033549065701663494, 0.0, -0.0001316070556640625, -1.1444091796875e-05, -8.20159912109375e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -4.0161278146655945, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -4.003756046295166, 0.0, -0.0009860992431640625, -7.62939453125e-06, -2.0265579223632812e-06, 0.0, -2.0027102436870337e-05, -3.576278118089249e-07, -0.0044296965934336185, 0.0, -0.0001430511474609375, -1.71661376953125e-05, -8.7738037109375e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -4.332605590715943, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -4.320648670196533, 0.0, -0.0004634857177734375, -5.7220458984375e-06, -2.1457672119140625e-06, -1.1920928244535389e-07, -1.7046881112037227e-05, -1.1920928244535389e-07, -0.004534720443189144, 0.0, -0.00017547607421875, -1.1444091796875e-05, -6.866455078125e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -5.777183683519517, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Bluegill", " ", "Warrior", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.699492454528809, -5.7220458984375e-06, -2.6702880859375e-05, -0.0001354217529296875, -9.34600830078125e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.027406692504882812, -8.7738037109375e-05, -3.814697265625e-06, -0.00010716339602367952, -0.00010502338409423828, -3.194808232365176e-05, -0.00012969970703125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004409547836985439, 0.0, -1.71661376953125e-05, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00019538386550266296, -2.1457672119140625e-06, -0.00043860217556357384, 0.0, -0.0001888275146484375, 0.0, -9.5367431640625e-06, 0.0, -0.0010461807250976562, -5.7220458984375e-06, -0.00015461444854736328, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -8.6188294517342e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5854835510253906e-05, 0.0, -0.0001468658447265625, 0.0, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.03802013397216797, -1.9073486328125e-06, -0.000751495361328125, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.6212405171245337e-05, -1.1920928244535389e-07, -0.005183934234082699, 0.0, -0.00012969970703125, -1.1444091796875e-05, -7.43865966796875e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -6.1242777021866175, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "taunt"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -0.03623056411743164, 0.0, -0.000362396240234375, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -1.8477374396752566e-05, -2.3841855067985307e-07, -6.080766677856445, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, taunt=True)\n"}, {"score": -7.171175351511202, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "Kill", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "Kill", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -7.159451961517334, 0.0, -0.000469207763671875, -9.5367431640625e-06, -2.622604142743512e-06, -1.1920928244535389e-07, -1.8119771993951872e-05, -2.3841855067985307e-07, -0.004295706283301115, 0.0, -0.000141143798828125, -1.52587890625e-05, -9.34600830078125e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.Kill)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -7.805882087562594, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "HUNTER"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -0.03623056411743164, 0.0, -0.000362396240234375, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -1.8477374396752566e-05, -2.3841855067985307e-07, -7.735023498535156, 0.0, -0.0274810791015625, -7.62939453125e-06, -7.43865966796875e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, HUNTER=True)\n"}, {"score": -7.9122011702882915, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "1", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Bluegill Warrior", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 1, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.21101188659668, -0.000125885009765625, -2.7656173188006505e-05, -0.00014221668243408203, -1.8358125089434907e-05, -1.9073486328125e-06, -0.00010263919830322266, -1.1920928244535389e-07, -0.00012290262384340167, 0.0, -0.124237060546875, -6.866455078125e-05, -0.00058746337890625, -7.62939453125e-06, 0.0, -0.0001049041748046875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0001316070556640625, -4.768370445162873e-07, -6.29425048828125e-05, -0.0002346038818359375, -0.0004901885986328125, -0.0001506805419921875, -4.00543212890625e-05, -0.00012969970703125, 0.0, -0.009805320762097836, -1.33514404296875e-05, -0.0003757476806640625, -0.00019073486328125, -5.7220458984375e-06, -1.1920928244535389e-07, -9.536738616588991e-07, -0.000316619873046875, -1.9073486328125e-06, -0.01927351951599121, -1.1920928244535389e-07, -0.002666473388671875, -1.9073486328125e-06, -0.0001201629638671875, -0.0035867691040039062, 0.0, -3.4332275390625e-05, -1.9073486328125e-05, -0.00011277198791503906, 0.0, -7.05718994140625e-05, -0.0001621246337890625, -0.5360220670700073, 0.0, -4.9591064453125e-05, -5.7220458984375e-06, -6.35385513305664e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, taunt=True)\n"}, {"score": -8.041002553337847, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "ForceTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -7.507333278656006, -0.20249804854393005, -0.28695783019065857, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.1734664440155029e-07, -3.218650817871094e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, -7.62939453125e-06, -1.1801719665527344e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -0.0030231475830078125, -3.24249267578125e-05, -5.483612312673358e-06, -0.0001595020294189453, -2.706050690903794e-05, 0.0, -0.0001932227605720982, 0.0, -9.930133819580078e-05, 0.0, -0.0002321003848919645, -1.9073486328125e-06, -0.0001068115234375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -0.036069393157958984, 0.0, -0.00035858154296875, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -2.0623139789677225e-05, -2.3841855067985307e-07, -0.003026723163202405, 0.0, -0.0001316070556640625, -1.33514404296875e-05, -8.392333984375e-05, 0.0], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -8.172170995532696, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -8.12509536743164, -0.0017117006937041879, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, 0.0, -1.6331669030478224e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0004978179931640625, -5.7220458984375e-06, -1.1801719665527344e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -0.0031757354736328125, -3.0517578125e-05, -5.364403477869928e-06, -0.0001595020294189453, -2.694129761948716e-05, 0.0, -0.00019965891260653734, 0.0, -9.930133819580078e-05, 0.0, -0.00022840488236397505, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -0.03623628616333008, 0.0, -0.0003528594970703125, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -2.0384723029565066e-05, -2.3841855067985307e-07, -0.003172158496454358, 0.0, -0.00012969970703125, -1.1444091796875e-05, -8.392333984375e-05, 0.0], "inferred_code": "class BluegillTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -8.237777820394726, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "health", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "health", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -8.221927642822266, 0.0, -0.0005855560302734375, -9.5367431640625e-06, -2.622604142743512e-06, -1.1920928244535389e-07, -2.4437791580567136e-05, -1.1920928244535389e-07, -0.008322834968566895, 0.0, -0.00012969970703125, -1.33514404296875e-05, -8.392333984375e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.health)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -8.278932084463541, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "enrage", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "enrage", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Bluegill Warrior", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -8.266946792602539, 0.0, -0.00090789794921875, -7.62939453125e-06, -2.1457672119140625e-06, -1.1920928244535389e-07, -1.9311853975523263e-05, -2.3841855067985307e-07, -0.004139183554798365, 0.0, -0.00014495849609375, -9.5367431640625e-06, -7.62939453125e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.enrage)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -9.368469002979921, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Bluegill Warrior", "_type": "Template1", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "BluegillWarrior", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.21101188659668, -0.000125885009765625, -2.7656173188006505e-05, -0.00014221668243408203, -1.8358125089434907e-05, -1.9073486328125e-06, -0.00010263919830322266, -1.1920928244535389e-07, -0.00012290262384340167, 0.0, -2.1521596908569336, -3.24249267578125e-05, -6.318092346191406e-06, -1.1920928244535389e-07, -6.663650856353343e-05, -2.3841855067985307e-07, -0.00303304148837924, 0.0, -3.814697265625e-05, -9.5367431640625e-06, -7.450580596923828e-05, -1.9073486328125e-06], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -17.902719497680664, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -17.902667999267578], "inferred_code": "break\n"}, {"score": -21.690996170043945, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-3.814697265625e-06, -2.6702880859375e-05, -21.69096565246582], "inferred_code": ""}], "index": 14}
{"beams": [{"score": -0.06816060173739658, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -0.0008080961415544152, 0.0, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, -3.4332275390625e-05, -8.976459503173828e-05, -1.9073486328125e-06, -0.00013744831085205078, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.67572021484375e-05, -0.000164031982421875, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.000118255615234375, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001049041748046875, 0.0, -8.96453857421875e-05, 0.0, -0.034737586975097656, -1.9073486328125e-06, -0.00075531005859375, -1.1444091796875e-05, -6.74694892950356e-05, -1.1920928244535389e-07, -1.073625753633678e-06, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -3.6871305075605534, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -0.0008080961415544152, 0.0, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, -3.4332275390625e-05, -8.976459503173828e-05, -1.9073486328125e-06, -0.00013744831085205078, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.67572021484375e-05, -0.000164031982421875, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.000118255615234375, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001049041748046875, 0.0, -8.96453857421875e-05, 0.0, -3.654242515563965, 0.0, -0.000148773193359375, -1.33514404296875e-05, -0.0001363609917461872, -2.3841855067985307e-07, -3.57701355824247e-06, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -3.879144259194156, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Boar", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole0": 1, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -3.6535158157348633, -5.7220458984375e-05, -1.9073486328125e-06, -0.0002498626708984375, -0.00131988525390625, -0.0009295940399169922, -1.1444091796875e-05, -9.775161743164062e-06, 0.0, -0.016679763793945312, -0.00757598876953125, -0.009784698486328125, -2.2053474822314456e-05, 0.0, -0.0069332122802734375, -2.47955322265625e-05, -0.13423067331314087, 0.0, -0.001522064208984375, -2.6702880859375e-05, -0.00018310546875, 0.0, -3.814697265625e-05, -1.33514404296875e-05, -0.0004311800003051758, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001678466796875, -0.000141143798828125, -4.1961669921875e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.000125885009765625, 0.0, -0.013498306274414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0006809234619140625, 0.0, -0.014977455139160156, 0.0, -0.000759124755859375, -7.62939453125e-06, -0.0002193450927734375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000415802001953125, -7.05718994140625e-05, -0.00011217594146728516, -1.9073486328125e-06, -1.9073486328125e-05, -0.002536773681640625, -4.76837158203125e-05, -3.0517578125e-05, -0.0012617111206054688, -0.0025224685668945312, -0.0038474644534289837, -1.7404405298293568e-05, -0.002699662698432803, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"score": -5.387073339845664, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -0.0008080961415544152, 0.0, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, -3.4332275390625e-05, -8.976459503173828e-05, -1.9073486328125e-06, -0.00013744831085205078, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.67572021484375e-05, -0.000164031982421875, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.000118255615234375, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001049041748046875, 0.0, -8.96453857421875e-05, 0.0, -5.354042053222656, 0.0, -0.00031280517578125, -1.52587890625e-05, -0.0001163388806162402, -3.576278118089249e-07, -7.160015229601413e-07, -2.3841855067985307e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.875335046490811, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole0": 1, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -3.6535158157348633, -5.7220458984375e-05, -1.9073486328125e-06, -0.0002498626708984375, -0.00131988525390625, -0.0009295940399169922, -1.1444091796875e-05, -9.775161743164062e-06, 0.0, -0.016679763793945312, -0.00757598876953125, -0.009784698486328125, -2.2053474822314456e-05, 0.0, -0.0069332122802734375, -2.47955322265625e-05, -2.1147687435150146, 0.0, -0.002017974853515625, -0.000194549560546875, -0.0001277923583984375, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.000667572021484375, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000186920166015625, -6.103515625e-05, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.000152587890625, 0.0, -0.027832984924316406, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0006427764892578125, 0.0, -0.015612602233886719, 0.0, -0.00067901611328125, -7.62939453125e-06, -0.0002193450927734375, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004177093505859375, -6.866455078125e-05, -0.00011610984802246094, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025177001953125, -4.9591064453125e-05, -3.0517578125e-05, -0.0012483596801757812, -0.0024814605712890625, -0.003916813060641289, -1.7165990357170813e-05, -0.0027097680140286684, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"score": -7.53444830985471, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole0": 1, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -0.0008080961415544152, 0.0, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, -3.4332275390625e-05, -8.976459503173828e-05, -1.9073486328125e-06, -0.00013744831085205078, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.67572021484375e-05, -0.000164031982421875, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.000118255615234375, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001049041748046875, 0.0, -8.96453857421875e-05, 0.0, -0.034737586975097656, -1.9073486328125e-06, -7.454838752746582, -4.38690185546875e-05, -0.0003566741943359375, -5.7220458984375e-06, -3.814697265625e-06, -0.0002765655517578125, -0.0001125335693359375, -7.748603820800781e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0028896331787109375, -7.43865966796875e-05, -3.24249267578125e-05, -0.0012807846069335938, -0.0020351409912109375, -0.002647233894094825, -1.764281842042692e-05, -0.0024811236653476954, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"score": -7.74577531420298, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -7.669455528259277, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -4.9591064453125e-05, -0.0001316070556640625, -4.601478576660156e-05, -3.814697265625e-06, -0.00017189979553222656, 0.0, -3.4332275390625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00011265277862548828, -0.000247955322265625, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.000152587890625, 0.0, -6.29425048828125e-05, -3.62396240234375e-05, -0.0001239776611328125, -1.52587890625e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001201629638671875, 0.0, -8.392333984375e-05, 0.0, -0.04365062713623047, -1.9073486328125e-06, -0.0007266998291015625, -1.1444091796875e-05, -7.033045403659344e-05, -1.1920928244535389e-07, -5.968067853245884e-07, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.900541841516727, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "Kill", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "Kill", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -0.0008080961415544152, 0.0, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, -3.4332275390625e-05, -8.976459503173828e-05, -1.9073486328125e-06, -0.00013744831085205078, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.67572021484375e-05, -0.000164031982421875, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.000118255615234375, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001049041748046875, 0.0, -8.96453857421875e-05, 0.0, -7.867672920227051, 0.0, -0.000118255615234375, -2.288818359375e-05, -0.00013934395974501967, -2.3841855067985307e-07, -2.504173608031124e-06, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.Kill)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -8.017754369468506, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "COMMON", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "COMMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -0.0008080961415544152, 0.0, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, -3.4332275390625e-05, -8.976459503173828e-05, -1.9073486328125e-06, -0.00013744831085205078, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.67572021484375e-05, -0.000164031982421875, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.000118255615234375, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001049041748046875, 0.0, -8.96453857421875e-05, 0.0, -7.984769821166992, 0.0, -0.0002307891845703125, -7.62939453125e-06, -0.00015793490456417203, -2.3841855067985307e-07, -2.265460352646187e-06, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -8.04730455073009, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -0.0008080961415544152, 0.0, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, -3.4332275390625e-05, -8.976459503173828e-05, -1.9073486328125e-06, -0.00013744831085205078, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.67572021484375e-05, -0.000164031982421875, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.000118255615234375, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001049041748046875, 0.0, -8.96453857421875e-05, 0.0, -8.014402389526367, -9.5367431640625e-06, -6.103515625e-05, -1.52587890625e-05, -0.00022873206762596965, -2.3841855067985307e-07, -1.6690901247784495e-06, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -8.683343995155603, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Boar", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 36, 113, "False", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -3.6535158157348633, -5.7220458984375e-05, -1.9073486328125e-06, -0.0002498626708984375, -0.00131988525390625, -0.0009295940399169922, -1.1444091796875e-05, -9.775161743164062e-06, 0.0, -0.016679763793945312, -0.00757598876953125, -0.009784698486328125, -2.2053474822314456e-05, 0.0, -0.0069332122802734375, -2.47955322265625e-05, -0.13423067331314087, 0.0, -0.001522064208984375, -2.6702880859375e-05, -0.00018310546875, 0.0, -3.814697265625e-05, -1.33514404296875e-05, -0.0004311800003051758, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001678466796875, -0.000141143798828125, -4.1961669921875e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.000125885009765625, 0.0, -4.378640174865723, -0.000217437744140625, -4.1961669921875e-05, 0.0, -0.4686250686645508, -9.5367431640625e-06, -0.000400140299461782, -1.1920928244535389e-07, -1.0490477507119067e-05, 0.0], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, True)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -8.92987695388669, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -3.6535158157348633, -5.7220458984375e-05, -1.9073486328125e-06, -0.0002498626708984375, -0.00131988525390625, -0.0009295940399169922, -1.1444091796875e-05, -9.775161743164062e-06, 0.0, -4.194423675537109, -0.0011806488037109375, -0.000225067138671875, -4.768370445162873e-07, -3.933906555175781e-06, -0.0001220703125, -1.1444091796875e-05, -0.004653638228774071, 0.0, -0.0003528594970703125, -7.62939453125e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.00011265277862548828, -3.814697265625e-06, -0.00015461444854736328, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -0.000102996826171875, -2.86102294921875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0001125335693359375, 0.0, -1.0704431533813477, -9.5367431640625e-06, -0.00036119474680162966, -2.3841855067985307e-07, -4.768423423229251e-06, 0.0], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -9.396624658751762, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -9.37049388885498, -9.5367431640625e-06, -0.00096893310546875, -4.1961669921875e-05, -0.0003510713577270508, -3.814697265625e-06, -3.814697265625e-05, 0.0, -0.023263931274414062, -8.96453857421875e-05, -0.0001891850697575137, -7.152555099310121e-07, 2.3840948415454477e-07, 0.0], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -10.336223934406682, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "Boar", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -10.32839584350586, -5.7220458984375e-06, 0.0, -0.00067901611328125, -8.0108642578125e-05, -0.00015461444854736328, -3.814697265625e-05, -0.00012600421905517578, 0.0, -0.005298614501953125, -2.6702880859375e-05, -9.572505223331973e-05, -7.152555099310121e-07, 2.3840902940719388e-07, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__()\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -20.67945671081543, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -0.00014495849609375, -20.679298400878906], "inferred_code": ""}], "index": 15}
{"beams": [{"score": -1.645024544636783, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "<UNK>", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.6272567510604858, -6.103515625e-05, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.0108642578125e-05, -5.7220458984375e-06, -5.412101745605469e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.7363065481185913, 0.0, -3.814697265625e-06, -0.0076389312744140625, -1.9073486328125e-05, -7.82012939453125e-05, 0.0, -0.00040161609649658203, -0.0001157522201538086, -0.0001430511474609375, -0.008707046508789062, -3.814697265625e-06, -0.024165987968444824, -0.011186289601027966], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score": -1.8179283925174445, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.6272567510604858, -6.103515625e-05, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.0108642578125e-05, -5.7220458984375e-06, -5.412101745605469e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.7522710561752319, -1.9073486328125e-06, -5.7220458984375e-06, -0.000118255615234375, -7.62939453125e-06, -0.2090824842453003, -0.000186920166015625], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n"}, {"score": -1.9006164084030956, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "<UNK>", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.8145068883895874, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.00011527538299560547, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.803229570388794, 0.0, -5.7220458984375e-06, -0.0076694488525390625, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -0.00041306018829345703, -0.0001157522201538086, -0.0001468658447265625, -0.009801864624023438, -3.814697265625e-06, -0.02409346215426922, -0.011529176495969296], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score": -2.0218752809642524, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.8145068883895874, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.00011527538299560547, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.6909735202789307, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.2871014475822449, -0.000156402587890625], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_attack(4)\n"}, {"score": -3.1661947556613654, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.8145068883895874, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.00011527538299560547, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.6909735202789307, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -5.7220458984375e-06, -1.4315468072891235, -3.0517578125e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_attack(2)\n"}, {"score": -3.3305645772098273, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.6272567510604858, -6.103515625e-05, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.0108642578125e-05, -5.7220458984375e-06, -5.412101745605469e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.7522710561752319, -1.9073486328125e-06, -5.7220458984375e-06, -0.000118255615234375, -7.62939453125e-06, -1.7218655347824097, -4.00543212890625e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(2)\n"}, {"score": -4.337204815897223, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "<UNK>", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -3.0197339057922363, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.3356223404407501, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.8262503147125244, 0.0, -5.7220458984375e-06, -0.007760047912597656, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.00041687488555908203, -0.00011754035949707031, -0.0001506805419921875, -0.00995635986328125, -3.814697265625e-06, -0.024516845121979713, -0.011513937264680862], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score": -4.341063765886304, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "<UNK>", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -3.6082053184509277, 0.0, -7.62939453125e-06, -0.07359886169433594, -3.4332275390625e-05, -2.6702880859375e-05, 0.0, -0.0005555152893066406, -3.0875205993652344e-05, -0.000179290771484375, -0.013027191162109375, -3.814697265625e-06, -0.026660582050681114, -0.01661663129925728, -1.9073486328125e-05, -1.9073486328125e-05, -4.38690185546875e-05, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0008029937744140625, -4.57763671875e-05, -8.58306884765625e-05, -1.52587890625e-05, -0.0004988908767700195, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.054688096046447754, -1.9073486328125e-06, -7.62939453125e-06, -0.0001087188720703125, -9.5367431640625e-06, -0.44499731063842773, -8.20159912109375e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.change_attack(4)\n"}, {"score": -4.385363120663044, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -3.0197339057922363, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.3356223404407501, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.6623852252960205, -1.9073486328125e-06, -3.814697265625e-06, -0.00012969970703125, -7.62939453125e-06, -0.26621344685554504, -0.0001697540283203125], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(2)\n        self.target.change_attack(4)\n"}, {"score": -4.48489618681657, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.6272567510604858, -6.103515625e-05, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.0108642578125e-05, -5.7220458984375e-06, -5.412101745605469e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -3.5290071964263916, -2.09808349609375e-05, -3.814697265625e-06, -0.0002613067626953125, -5.7220458984375e-06, -0.09925882518291473, -8.392333984375e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -4.806438196527836, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.8145068883895874, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.00011527538299560547, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.649303674697876, -2.09808349609375e-05, -3.814697265625e-06, -0.000194549560546875, -3.814697265625e-06, -0.11329987645149231, -7.2479248046875e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n"}, {"score": -4.971058158281323, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "<UNK>", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -3.6082053184509277, 0.0, -7.62939453125e-06, -0.07359886169433594, -3.4332275390625e-05, -2.6702880859375e-05, 0.0, -0.0005555152893066406, -3.0875205993652344e-05, -0.000179290771484375, -0.013027191162109375, -3.814697265625e-06, -0.026660582050681114, -0.01661663129925728, -1.9073486328125e-05, -1.9073486328125e-05, -4.38690185546875e-05, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0008029937744140625, -4.57763671875e-05, -8.58306884765625e-05, -1.52587890625e-05, -0.0004988908767700195, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.054688096046447754, -1.9073486328125e-06, -7.62939453125e-06, -0.0001087188720703125, -9.5367431640625e-06, -1.0750489234924316, -2.47955322265625e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.change_attack(2)\n"}, {"score": -5.204008001911518, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "6", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Charge", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -4.466000080108643, -0.0001068115234375, -0.0001506805419921875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -5.7220458984375e-06, -0.00017774105072021484, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.3333570957183838, -1.9073486328125e-06, -3.814697265625e-06, -0.0002040863037109375, -7.62939453125e-06, -0.17495542764663696, -0.0001392364501953125], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(6)\n        self.target.change_attack(4)\n"}, {"score": -13.881769746541977, "choice_history": [50, 111, 176, 59, 93, 24, 144, "3", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -10.617096900939941, -0.04779815673828125, -3.029686450958252, -0.11679935455322266, -0.03620991110801697, -0.03417515754699707], "inferred_code": "self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -23.165590286254883, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [0.0, -1.9073486328125e-06, -23.16558837890625], "inferred_code": ""}], "index": 16}
{"beams": [{"score": -0.04014577388510787, "choice_history": [50, 111, 176, 58, 90, "Chillwind", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "ChillwindYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03442776948213577, -0.00038842763751745224, -3.933906555175781e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-07, -0.0001621246337890625, -3.814697265625e-05, -6.103515625e-05, -0.0013580322265625, -0.000102996826171875, -0.00018130090029444546, -3.0994415283203125e-05, -6.437280717364047e-06, -1.71661376953125e-05, -0.0002377025957684964, 0.0, -3.2901763916015625e-05, 0.0, -0.0006847381591796875, -0.0009975433349609375, -8.630000229459256e-05, -1.1920928244535389e-07, -0.001204364001750946, -7.152555099310121e-07], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -3.9355191404199488, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "ForceTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.470824718475342, -0.09737497568130493, -0.36189785599708557, -2.47955322265625e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.0728836059570312e-06, -0.0002574920654296875, -2.6702880859375e-05, -0.0001049041748046875, -0.00121307373046875, -0.0001201629638671875, -0.00020859450160060078, -3.8623809814453125e-05, -6.198863957251888e-06, -1.33514404296875e-05, -0.00023972924100235105, 0.0, -3.8623809814453125e-05, 0.0, -0.0007114410400390625, -0.00099945068359375, -8.641955355415121e-05, -1.1920928244535389e-07, -0.0012137703597545624, -7.152555099310121e-07], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -4.766668231946134, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "ForceTankYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.470824718475342, -0.09737497568130493, -1.192749261856079, -5.340576171875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -5.662441253662109e-07, -0.00023853778839111328, -4.017353057861328e-05, -8.58306884765625e-05, -0.00130462646484375, -0.0001277923583984375, -0.00020668754586949944, -3.0994415283203125e-05, -6.6756979322235566e-06, -2.6702880859375e-05, -0.00033032914507202804, 0.0, -3.3020973205566406e-05, 0.0, -0.0006618499755859375, -0.0010547637939453125, -0.00010048389958683401, -1.1920928244535389e-07, -0.00126531976275146, -7.152555099310121e-07], "inferred_code": "class ForceTankYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -6.081904649527239, "choice_history": [50, 111, 176, 58, 90, "Force", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "ForceYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.470824718475342, -2.6056249141693115, -2.562989539001137e-05, -1.9073486328125e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-07, -0.000240325927734375, -3.0517578125e-05, -8.0108642578125e-05, -0.001285552978515625, -0.0001354217529296875, -0.00022587609419133514, -3.6716461181640625e-05, -5.960446742392378e-06, -1.52587890625e-05, -0.0002403253602096811, 0.0, -3.8623809814453125e-05, 0.0, -0.0006580352783203125, -0.00102996826171875, -9.10680100787431e-05, -1.1920928244535389e-07, -0.0011706691002473235, -8.344646857949556e-07], "inferred_code": "class ForceYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -7.572979715166177, "choice_history": [50, 111, 176, 58, 90, "Chillwind", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole0": 4, "_type": "Template5"}], "name": "ChillwindYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03442776948213577, -0.00038842763751745224, -3.933906555175781e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-07, -0.0001621246337890625, -3.814697265625e-05, -6.103515625e-05, -0.0013580322265625, -0.000102996826171875, -0.00018130090029444546, -3.0994415283203125e-05, -6.437280717364047e-06, -1.71661376953125e-05, -0.0002377025957684964, 0.0, -3.2901763916015625e-05, 0.0, -0.0006847381591796875, -0.0009975433349609375, -8.630000229459256e-05, -1.1920928244535389e-07, -7.53403902053833, 0.0], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n"}, {"score": -7.606314308485821, "choice_history": [50, 111, 176, 58, 90, "Chillwind", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 69, 137, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template2", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "ChillwindYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03442776948213577, -0.00038842763751745224, -3.933906555175781e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-07, -0.0001621246337890625, -3.814697265625e-05, -6.103515625e-05, -7.53558349609375, -0.015369415283203125, -0.006377819459885359, -7.736682891845703e-05, -1.7881377516459906e-06, -0.000194549560546875, -0.000979996402747929, 0.0, -0.00010406970977783203, 0.0, -0.011301040649414062, -0.0008602142333984375, -2.2530293790623546e-05, -8.344646857949556e-07, -0.00023446061823051423, -2.264974000354414e-06], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -7.699450266060687, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "<UNK>Yeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -7.693732261657715, -0.00038842763751745224, -3.933906555175781e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-07, -0.0001621246337890625, -3.814697265625e-05, -6.103515625e-05, -0.0013580322265625, -0.000102996826171875, -0.00018130090029444546, -3.0994415283203125e-05, -6.437280717364047e-06, -1.71661376953125e-05, -0.0002377025957684964, 0.0, -3.2901763916015625e-05, 0.0, -0.0006847381591796875, -0.0009975433349609375, -8.630000229459256e-05, -1.1920928244535389e-07, -0.001204364001750946, -7.152555099310121e-07], "inferred_code": "class <UNK>Yeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -7.901710196773585, "choice_history": [50, 111, 176, 58, 90, "Chillwind", "<UNK>", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "Chillwind<UNK>", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03442776948213577, -7.861814022064209, -2.2649765014648438e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -5.662441253662109e-07, -0.0001735687255859375, -4.00543212890625e-05, -9.72747802734375e-05, -0.001430511474609375, -0.0001010894775390625, -0.00013255194062367082, -2.8967857360839844e-05, -7.033323527139146e-06, -1.9073486328125e-05, -0.00022315868409350514, 0.0, -3.0875205993652344e-05, 0.0, -0.0008983612060546875, -0.000946044921875, -7.736059342278168e-05, -1.1920928244535389e-07, -0.0011291138362139463, -7.152555099310121e-07], "inferred_code": "class Chillwind<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -7.960525300798501, "choice_history": [50, 111, 176, 58, 90, "Chillwind", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "ChillwindYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03442776948213577, -0.00038842763751745224, -3.933906555175781e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-07, -0.0001621246337890625, -3.814697265625e-05, -6.103515625e-05, -0.0013580322265625, -0.000102996826171875, -0.00018130090029444546, -3.0994415283203125e-05, -6.437280717364047e-06, -1.71661376953125e-05, -0.0002377025957684964, 0.0, -3.2901763916015625e-05, 0.0, -0.0006847381591796875, -0.0009975433349609375, -8.630000229459256e-05, -1.1920928244535389e-07, -7.921584606170654, 0.0], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -8.010633276517744, "choice_history": [50, 111, 176, 58, 90, "MECH", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "MECHYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -8.001541137695312, -0.0035912867169827223, -4.410743713378906e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -7.748603820800781e-07, -0.0003148317337036133, -4.208087921142578e-05, -5.53131103515625e-05, -0.001522064208984375, -0.00011444091796875, -0.0002047805901383981, -3.2901763916015625e-05, -7.033323527139146e-06, -1.52587890625e-05, -0.00022745042224414647, 0.0, -3.4809112548828125e-05, 0.0, -0.0005664825439453125, -0.0010738372802734375, -9.154433791991323e-05, -1.1920928244535389e-07, -0.0010698135010898113, -8.344646857949556e-07], "inferred_code": "class MECHYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -8.166107223545453, "choice_history": [50, 111, 176, 58, 90, "Chillwind", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 4, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Chillwind Yeti", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "ChillwindYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03442776948213577, -0.00038842763751745224, -3.933906555175781e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-07, -0.0001621246337890625, -3.814697265625e-05, -6.103515625e-05, -8.048238754272461, -1.9073486328125e-05, -4.291534423828125e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -7.43865966796875e-05, -1.52587890625e-05, -0.011167526245117188, -8.392333984375e-05, -2.407998726994265e-05, -6.496906280517578e-05, -3.814697265625e-06, 0.0, -0.000560251995921135, 0.0, -0.00045013427734375, 0.0, -0.0021914243698120117, 0.0, -8.392333984375e-05, 0.0, -7.62939453125e-06, 0.0, -5.53131103515625e-05, 0.0, -0.05612480640411377, -9.5367431640625e-06, -8.7738037109375e-05, -0.000270843505859375, -0.008903910405933857, 0.0, -0.0023627053014934063, -5.960462772236497e-07], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -8.223255491750933, "choice_history": [50, 111, 176, 58, 90, "Chillwind", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 71, 139, "4", "<EOS>", "5", "<EOS>", "stealth", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "stealth"}], "name": "ChillwindYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03442776948213577, -0.00038842763751745224, -3.933906555175781e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-07, -0.0001621246337890625, -3.814697265625e-05, -6.103515625e-05, -0.0013580322265625, -0.000102996826171875, -0.00018130090029444546, -3.0994415283203125e-05, -6.437280717364047e-06, -1.71661376953125e-05, -0.0002377025957684964, 0.0, -3.2901763916015625e-05, 0.0, -7.697096824645996, -0.00019073486328125, -0.00010156575444852933, -6.556489552167477e-06, -0.002309146337211132, -9.536738616588991e-07, -0.48221492767333984, -1.1444091796875e-05, -0.0031223297119140625, -5.53131103515625e-05, -0.0009737014770507812, 0.0], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, stealth=True)\n"}, {"score": -8.333732491925836, "choice_history": [50, 111, 176, 58, 90, "Tank", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "TankYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -8.328388214111328, -5.483506538439542e-05, -7.748596544843167e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-07, -0.000213623046875, -3.24249267578125e-05, -7.05718994140625e-05, -0.001224517822265625, -0.00012969970703125, -0.0002109781780745834, -3.0994415283203125e-05, -6.6756979322235566e-06, -1.52587890625e-05, -0.000240563545958139, 0.0, -3.8504600524902344e-05, 0.0, -0.0006656646728515625, -0.0010166168212890625, -8.88033100636676e-05, -1.1920928244535389e-07, -0.0011670970125123858, -8.344646857949556e-07], "inferred_code": "class TankYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -8.546457862298773, "choice_history": [50, 111, 176, 58, 90, "PIRATE", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template5"}], "name": "PIRATEYeti", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -8.541084289550781, -3.77887008653488e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.0728836059570312e-06, -0.0001888275146484375, -3.24249267578125e-05, -5.91278076171875e-05, -0.0013599395751953125, -0.000118255615234375, -0.00019262365822214633, -3.2901763916015625e-05, -6.079655122448457e-06, -1.71661376953125e-05, -0.00023198056442197412, 0.0, -3.4809112548828125e-05, 0.0, -0.000667572021484375, -0.0009860992431640625, -8.761121716815978e-05, -1.1920928244535389e-07, -0.0011960299452766776, -8.344646857949556e-07], "inferred_code": "class PIRATEYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -21.330934524536133, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -21.330913543701172], "inferred_code": ""}], "index": 17}
{"beams": [{"score": -1.0450118149893228, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Claw", "_type": "Template3", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -0.29608166217803955, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.29425048828125e-05, -0.0023635104298591614, -7.62939453125e-06, -0.0008678436279296875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00045871734619140625, 0.0, -0.00046539306640625, 0.0, -0.0007123947143554688, 0.0, -0.0004386875662021339, -5.960446742392378e-06, -0.21822965145111084, -5.7220458984375e-06, -1.9073486328125e-06, -0.004459381103515625, -6.866455078125e-05, -0.006466329097747803, -3.24249267578125e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"score": -1.5238574387967958, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Claw", "_type": "Template2", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.9838628768920898, -0.0004425048828125, -7.557583012385294e-05, -7.843971252441406e-05, -0.001113414647988975, -3.576278118089249e-07, -0.00038313856930471957, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0001850128173828125, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001430511474609375, -0.0001926422119140625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0022192001342773438, -4.1961669921875e-05, -5.7220458984375e-06, -0.0013916492462158203, -2.3841855067985307e-07, -0.0019884109497070312, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003204345703125, -1.9073486328125e-06, -5.877017247257754e-05, -0.0001697540283203125, -0.0002460479736328125, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.000873565673828125, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.00025391578674316406, -1.1444091796875e-05, -0.0066165924072265625, -0.001132965087890625, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00018787384033203125, 0.0, -5.340576171875e-05, 0.0, -0.0015459060668945312, 0.0, -0.0004251002974342555, -8.344646857949556e-07, -0.2841082811355591, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.29425048828125e-05, -0.0022835731506347656, -5.7220458984375e-06, -0.0005817413330078125, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00044727325439453125, 0.0, -0.0004596710205078125, 0.0, -0.0007123947143554688, 0.0, -0.00044417125172913074, -5.960446742392378e-06, -0.21914613246917725, -5.7220458984375e-06, -1.9073486328125e-06, -0.0043849945068359375, -6.67572021484375e-05, -0.005987673997879028, -3.24249267578125e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"score": -2.3915258006459794, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Claw", "_type": "Template3", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -1.6500893831253052, -1.9073486328125e-06, -2.86102294921875e-05, -0.000293731689453125, -7.82012939453125e-05, -0.002246268093585968, -5.7220458984375e-06, -0.000457763671875, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004911422729492188, 0.0, -0.000431060791015625, 0.0, -0.0007839202880859375, 0.0, -0.0004765951889567077, -5.8412379075889476e-06, -0.21210241317749023, -3.814697265625e-06, -3.814697265625e-06, -0.003753662109375, -6.29425048828125e-05, -0.005931735038757324, -2.288818359375e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n"}, {"score": -2.6774401034491007, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Claw", "_type": "Template3", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -0.29608166217803955, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.29425048828125e-05, -0.0023635104298591614, -7.62939453125e-06, -0.0008678436279296875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00045871734619140625, 0.0, -0.00046539306640625, 0.0, -0.0007123947143554688, 0.0, -0.0004386875662021339, -5.960446742392378e-06, -1.8533614873886108, -3.4332275390625e-05, 0.0, -0.000110626220703125, -4.9591064453125e-05, -0.008101999759674072, -3.4332275390625e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"score": -2.925723941043117, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Claw", "_type": "Template2", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.9838628768920898, -0.0004425048828125, -7.557583012385294e-05, -7.843971252441406e-05, -0.001113414647988975, -3.576278118089249e-07, -0.00038313856930471957, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0001850128173828125, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001430511474609375, -0.0001926422119140625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0022192001342773438, -4.1961669921875e-05, -5.7220458984375e-06, -0.0013916492462158203, -2.3841855067985307e-07, -0.0019884109497070312, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003204345703125, -1.9073486328125e-06, -5.877017247257754e-05, -0.0001697540283203125, -0.0002460479736328125, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.000873565673828125, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.00025391578674316406, -1.1444091796875e-05, -0.0066165924072265625, -0.001132965087890625, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00018787384033203125, 0.0, -5.340576171875e-05, 0.0, -0.0015459060668945312, 0.0, -0.0004251002974342555, -8.344646857949556e-07, -1.6929818391799927, -1.9073486328125e-06, -2.86102294921875e-05, -0.0002994537353515625, -7.82012939453125e-05, -0.0022210851311683655, -5.7220458984375e-06, -0.0003223419189453125, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -0.00048160552978515625, 0.0, -0.0004291534423828125, 0.0, -0.0007781982421875, 0.0, -0.0004813637351617217, -5.722029527532868e-06, -0.21327447891235352, -3.814697265625e-06, -3.814697265625e-06, -0.0036487579345703125, -6.103515625e-05, -0.005502462387084961, -2.288818359375e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n"}, {"score": -3.150374168390073, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Claw", "_type": "Template2", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.9838628768920898, -0.0004425048828125, -7.557583012385294e-05, -7.843971252441406e-05, -0.001113414647988975, -3.576278118089249e-07, -0.00038313856930471957, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0001850128173828125, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001430511474609375, -0.0001926422119140625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0022192001342773438, -4.1961669921875e-05, -5.7220458984375e-06, -0.0013916492462158203, -2.3841855067985307e-07, -0.0019884109497070312, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003204345703125, -1.9073486328125e-06, -5.877017247257754e-05, -0.0001697540283203125, -0.0002460479736328125, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.000873565673828125, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.00025391578674316406, -1.1444091796875e-05, -0.0066165924072265625, -0.001132965087890625, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00018787384033203125, 0.0, -5.340576171875e-05, 0.0, -0.0015459060668945312, 0.0, -0.0004251002974342555, -8.344646857949556e-07, -0.2841082811355591, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.29425048828125e-05, -0.0022835731506347656, -5.7220458984375e-06, -0.0005817413330078125, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00044727325439453125, 0.0, -0.0004596710205078125, 0.0, -0.0007123947143554688, 0.0, -0.00044417125172913074, -5.960446742392378e-06, -1.8484529256820679, -3.4332275390625e-05, 0.0, -0.000110626220703125, -4.76837158203125e-05, -0.007460534572601318, -3.62396240234375e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"score": -4.059094424665602, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Claw", "_type": "Template3", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -1.6500893831253052, -1.9073486328125e-06, -2.86102294921875e-05, -0.000293731689453125, -7.82012939453125e-05, -0.002246268093585968, -5.7220458984375e-06, -0.000457763671875, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004911422729492188, 0.0, -0.000431060791015625, 0.0, -0.0007839202880859375, 0.0, -0.0004765951889567077, -5.8412379075889476e-06, -1.882432460784912, -3.24249267578125e-05, 0.0, -9.5367431640625e-05, -4.9591064453125e-05, -0.0068114399909973145, -2.86102294921875e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(2)\n"}, {"score": -4.585664124205806, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Claw", "_type": "Template2", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.9838628768920898, -0.0004425048828125, -7.557583012385294e-05, -7.843971252441406e-05, -0.001113414647988975, -3.576278118089249e-07, -0.00038313856930471957, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0001850128173828125, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001430511474609375, -0.0001926422119140625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0022192001342773438, -4.1961669921875e-05, -5.7220458984375e-06, -0.0013916492462158203, -2.3841855067985307e-07, -0.0019884109497070312, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003204345703125, -1.9073486328125e-06, -5.877017247257754e-05, -0.0001697540283203125, -0.0002460479736328125, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.000873565673828125, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.00025391578674316406, -1.1444091796875e-05, -0.0066165924072265625, -0.001132965087890625, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00018787384033203125, 0.0, -5.340576171875e-05, 0.0, -0.0015459060668945312, 0.0, -0.0004251002974342555, -8.344646857949556e-07, -1.6929818391799927, -1.9073486328125e-06, -2.86102294921875e-05, -0.0002994537353515625, -7.82012939453125e-05, -0.0022210851311683655, -5.7220458984375e-06, -0.0003223419189453125, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -0.00048160552978515625, 0.0, -0.0004291534423828125, 0.0, -0.0007781982421875, 0.0, -0.0004813637351617217, -5.722029527532868e-06, -1.8759446144104004, -3.24249267578125e-05, 0.0, -9.5367431640625e-05, -4.76837158203125e-05, -0.006306827068328857, -3.0517578125e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(2)\n"}, {"score": -5.07949023444192, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Claw", "_type": "Template3", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -4.026000022888184, 0.0, -0.0071315765380859375, -0.0001010894775390625, -1.9073486328125e-06, -0.00011444091796875, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.0001392364501953125, -8.594989776611328e-05, -0.0031322240829467773, -4.172325134277344e-06, -7.62939453125e-06, -0.0050983428955078125, -6.866455078125e-05, -4.6329572796821594e-05, -7.510169325541938e-06, -4.57763671875e-05, -9.5367431640625e-06, -0.002557039260864258, -2.3841855067985307e-07, -0.07126808166503906, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001010894775390625, 0.0, -0.0001010894775390625, 0.0, -0.0025712251663208008, 0.0, -0.0008404219406656921, -4.410734163684538e-06, -0.4303246736526489, -3.814697265625e-06, -5.7220458984375e-06, -0.008175849914550781, -0.000141143798828125, -0.0069635361433029175, -1.9073486328125e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.increase_armor(2)\n"}, {"score": -5.574303534375304, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Claw", "_type": "Template2", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.9838628768920898, -0.0004425048828125, -7.557583012385294e-05, -7.843971252441406e-05, -0.001113414647988975, -3.576278118089249e-07, -0.00038313856930471957, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0001850128173828125, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001430511474609375, -0.0001926422119140625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0022192001342773438, -4.1961669921875e-05, -5.7220458984375e-06, -0.0013916492462158203, -2.3841855067985307e-07, -0.0019884109497070312, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003204345703125, -1.9073486328125e-06, -5.877017247257754e-05, -0.0001697540283203125, -0.0002460479736328125, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.000873565673828125, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.00025391578674316406, -1.1444091796875e-05, -0.0066165924072265625, -0.001132965087890625, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00018787384033203125, 0.0, -5.340576171875e-05, 0.0, -0.0015459060668945312, 0.0, -0.0004251002974342555, -8.344646857949556e-07, -4.028717041015625, 0.0, -0.0073375701904296875, -0.000102996826171875, -1.9073486328125e-06, -0.00011444091796875, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.0001373291015625, -8.976459503173828e-05, -0.0031055212020874023, -4.172325134277344e-06, -7.62939453125e-06, -0.0050449371337890625, -6.866455078125e-05, -4.724040627479553e-05, -7.390960945485858e-06, -4.57763671875e-05, -9.5367431640625e-06, -0.002561807632446289, -2.3841855067985307e-07, -0.06905746459960938, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, 0.0, -9.918212890625e-05, 0.0, -0.0028287172317504883, 0.0, -0.0008778534247539937, -4.410734163684538e-06, -0.43338119983673096, -3.814697265625e-06, -5.7220458984375e-06, -0.008501052856445312, -0.000141143798828125, -0.006619513034820557, -1.9073486328125e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.increase_armor(2)\n"}, {"score": -5.826692824549838, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Claw", "_type": "Template3", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -4.026000022888184, 0.0, -0.0071315765380859375, -0.0001010894775390625, -1.9073486328125e-06, -0.00011444091796875, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.0001392364501953125, -8.594989776611328e-05, -0.0031322240829467773, -4.172325134277344e-06, -7.62939453125e-06, -0.0050983428955078125, -6.866455078125e-05, -4.6329572796821594e-05, -7.510169325541938e-06, -4.57763671875e-05, -9.5367431640625e-06, -0.002557039260864258, -2.3841855067985307e-07, -0.07126808166503906, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001010894775390625, 0.0, -0.0001010894775390625, 0.0, -0.0025712251663208008, 0.0, -0.0008404219406656921, -4.410734163684538e-06, -1.1863242387771606, -9.918212890625e-05, 0.0, -0.0003032684326171875, -9.1552734375e-05, -0.005993366241455078, -2.47955322265625e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.change_temp_attack(2)\n"}, {"score": -6.086281504787621, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Claw", "_type": "Template3", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -0.29608166217803955, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.29425048828125e-05, -0.0023635104298591614, -7.62939453125e-06, -0.0008678436279296875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00045871734619140625, 0.0, -0.00046539306640625, 0.0, -0.0007123947143554688, 0.0, -0.0004386875662021339, -5.960446742392378e-06, -4.954741477966309, -3.814697265625e-06, -6.29425048828125e-05, -0.03626060485839844, -5.340576171875e-05, -0.27880463004112244, -3.576278118089249e-07, 0.0, -0.000141143798828125, -0.0004634857177734375, -1.9073486328125e-06], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.094375450143218, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "remove", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "Claw", "_type": "Template3", "hole2": "DRUID"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "remove", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Claw", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -5.352868556976318, -3.814697265625e-06, -0.0023651123046875, -0.0025119781494140625, -0.0001220703125, -0.000413358211517334, -3.814697265625e-06, -0.0004711151123046875, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004291534423828125, 0.0, -0.000614166259765625, 0.0, -0.0007191896438598633, 0.0, -0.0004296273400541395, -6.9141146923357155e-06, -0.20820558071136475, -5.7220458984375e-06, -3.814697265625e-06, -0.00431060791015625, -6.67572021484375e-05, -0.006537288427352905, -3.24249267578125e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.remove(2)\n        player.hero.increase_armor(2)\n"}, {"score": -16.211261749267578, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -16.211244583129883], "inferred_code": "break\n"}, {"score": -22.9335880279541, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [0.0, -1.52587890625e-05, -22.93357276916504], "inferred_code": ""}], "index": 18}
{"beams": [{"score": -0.8398397199939964, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -0.11294042319059372, -1.4185804502631072e-05, -0.0027823448181152344, -1.52587890625e-05, -6.29425048828125e-05, -0.005523681640625, -0.0002384185791015625, -0.04516412317752838, -5.125986263010418e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.63724099972751e-05, -1.1920928244535389e-07, -0.001461029052734375, -6.29425048828125e-05, -0.0019321441650390625, 0.0, 0.0, -0.0006046295166015625, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009090898674912751, -3.576278118089249e-07, -0.01137542724609375, -0.000400543212890625, -0.000102996826171875, -0.012612342834472656, -0.0001621246337890625, -8.7738037109375e-05, -0.0027990341186523438, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00128173828125, 0.0, -0.00025999543140642345, -3.62396240234375e-05, -0.0024967193603515625, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.00012969970703125, -7.62939453125e-06, -3.337840098538436e-05, -1.52587890625e-05, -0.00116729736328125, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.00304410420358181, -0.00010716361430240795, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010288238525390625, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -0.07719802856445312, -6.198883056640625e-06, -9.072665125131607e-05, 0.0, -0.0002231597900390625, -0.01488494873046875, -6.866455078125e-05, -0.0002498626708984375, -3.814697265625e-06, -0.1290571242570877, -1.9073486328125e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -2.832870074374604, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 1, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -0.11294042319059372, -1.4185804502631072e-05, -0.0027823448181152344, -1.52587890625e-05, -6.29425048828125e-05, -0.005523681640625, -0.0002384185791015625, -0.04516412317752838, -5.125986263010418e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.63724099972751e-05, -1.1920928244535389e-07, -0.001461029052734375, -6.29425048828125e-05, -0.0019321441650390625, 0.0, 0.0, -0.0006046295166015625, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009090898674912751, -3.576278118089249e-07, -0.01137542724609375, -0.000400543212890625, -0.000102996826171875, -0.012612342834472656, -0.0001621246337890625, -8.7738037109375e-05, -0.0027990341186523438, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00128173828125, 0.0, -0.00025999543140642345, -3.62396240234375e-05, -0.0024967193603515625, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.00012969970703125, -7.62939453125e-06, -3.337840098538436e-05, -1.52587890625e-05, -0.00116729736328125, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.00304410420358181, -0.00010716361430240795, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010288238525390625, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -0.07719802856445312, -6.198883056640625e-06, -9.072665125131607e-05, 0.0, -0.0002231597900390625, -0.01488494873046875, -6.866455078125e-05, -0.0002498626708984375, -3.814697265625e-06, -2.122089385986328, 0.0], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"score": -3.095440205967215, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "3", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -2.3801510334014893, -1.9073486328125e-06, -0.0091705322265625, -0.000148773193359375, -5.91278076171875e-05, -0.00336456298828125, -0.0008544921875, -2.47955322265625e-05, -0.001966585638001561, -5.7220458984375e-06, -0.0012903213500976562, 0.0, -9.5367431640625e-06, -3.0517578125e-05, -0.000316619873046875, 0.0, -0.0168760996311903, -4.9591064453125e-05, -0.0013132095336914062, -5.733966827392578e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.33514404296875e-05, -0.03002750314772129, -5.7220458984375e-06, -7.43865966796875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0001068115234375, -8.0108642578125e-05, -5.7220458984375e-05, 0.0, -0.0020927044097334146, -2.264974000354414e-06, -0.016231060028076172, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.00153280736412853, -7.62939453125e-06, -0.0015544891357421875, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -1.33514404296875e-05, -9.5367431640625e-05, -9.918212890625e-05, 0.0, -0.10125862061977386, -1.2755313036905136e-05, -0.002966165542602539, -1.9073486328125e-05, -6.103515625e-05, -0.0055103302001953125, -0.0002346038818359375, -0.04368197172880173, -4.768360213347478e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.613399141817354e-05, -1.1920928244535389e-07, -0.00146484375, -6.29425048828125e-05, -0.001953125, 0.0, 0.0, -0.00060272216796875, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009100435418076813, -3.576278118089249e-07, -0.011475563049316406, -0.0004024505615234375, -0.000102996826171875, -0.012623786926269531, -0.0001621246337890625, -8.7738037109375e-05, -0.0027923583984375, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.001293182373046875, 0.0, -0.00025999543140642345, -3.62396240234375e-05, -0.00249481201171875, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.00012969970703125, -7.62939453125e-06, -3.337840098538436e-05, -1.52587890625e-05, -0.00116729736328125, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.003043031319975853, -0.00010716361430240795, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010286331176757812, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -0.07720184326171875, -6.198883056640625e-06, -9.084492921829224e-05, 0.0, -0.0002231597900390625, -0.014886856079101562, -6.866455078125e-05, -0.0002498626708984375, -3.814697265625e-06, -0.12903805077075958, -1.9073486328125e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -3.232870219929211, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -2.3092989921569824, 0.0, -0.03869807720184326, -7.62939453125e-06, -9.5367431640625e-06, -4.9591064453125e-05, 0.0, -0.0013769622892141342, -7.62939453125e-06, -0.0061397552490234375, -9.5367431640625e-06, -0.08122825622558594, 0.0, -3.814697265625e-06, -0.0004825592041015625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.000125885009765625, 0.0, 0.0, -0.000860571744851768, -5.960462772236497e-07, -0.13367843627929688, -0.0010280609130859375, -0.0001125335693359375, -0.014265060424804688, -0.0001373291015625, -7.43865966796875e-05, -0.001953125, -0.00018310546875, -9.5367431640625e-06, -1.71661376953125e-05, 0.0, -0.0019121170043945312, 0.0, -0.0002757310576271266, -3.4332275390625e-05, -0.0022945404052734375, 0.0, -7.82012939453125e-05, -6.29425048828125e-05, 0.0, -4.971027374267578e-05, -2.47955322265625e-05, -0.0001277923583984375, -7.62939453125e-06, -3.3259195333812386e-05, -1.33514404296875e-05, -0.0011348724365234375, -0.000179290771484375, -9.5367431640625e-05, -3.814697265625e-06, -0.0002117156982421875, 0.0, -0.0029692635871469975, -0.00010537565685808659, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010318756103515625, 0.0, -0.00029980798717588186, -6.67572021484375e-05, -0.07782936096191406, -6.198883056640625e-06, -9.084492921829224e-05, 0.0, -0.0002193450927734375, -0.01483917236328125, -6.866455078125e-05, -0.0002460479736328125, -3.814697265625e-06, -0.1309526562690735, -1.9073486328125e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -3.4856416866589157, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -2.725123405456543, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.82012939453125e-05, 0.0, 0.0, -3.24249267578125e-05, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0019042481435462832, -5.960462772236497e-07, -0.0006275177001953125, -0.00016021728515625, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0007686614990234375, 0.0, -5.173549288883805e-05, 0.0, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -0.0001850128173828125, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -8.20159912109375e-05, -1.33514404296875e-05, -0.00012563963537104428, -3.814697265625e-06, -0.0009031295776367188, -0.0003452301025390625, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011176514672115445, -1.1920928244535389e-07, -6.103515625e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003795623779296875, 0.0, -0.0025966311804950237, -8.70227722771233e-06, -0.0011206865310668945, -1.52587890625e-05, -1.1444091796875e-05, -0.0003223419189453125, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022199630737304688, 0.0, -0.0011963844299316406, -0.0001010894775390625, -0.008291244506835938, -5.7220458984375e-06, -4.5895460061728954e-05, 0.0, -0.0025339126586914062, -9.1552734375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004199981689453125, -4.172325134277344e-06, -1.52587890625e-05, -9.918212890625e-05, -0.012255668640136719, -2.288818359375e-05, -0.005958475638180971, -2.384185791015625e-06, -0.0038967132568359375, -0.001434326171875, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019713401794433594, -7.62939453125e-06, -0.10831840336322784, 0.0, -0.0091094970703125, -4.57763671875e-05, -0.000141143798828125, -0.0074558258056640625, -0.0006189346313476562, -1.52587890625e-05, -0.001460587722249329, -9.5367431640625e-06, -0.0004215240478515625, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015975115820765495, -5.91278076171875e-05, -0.0013301372528076172, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029939526692032814, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.340576171875e-05, 0.0, -0.0017120700795203447, -2.622600959512056e-06, -0.016438603401184082, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.001546273473650217, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -0.11305852979421616, -1.4185804502631072e-05, -0.0027823448181152344, -1.52587890625e-05, -6.29425048828125e-05, -0.0055217742919921875, -0.0002384185791015625, -0.04517364501953125, -5.125986263010418e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.63724099972751e-05, -1.1920928244535389e-07, -0.001461029052734375, -6.29425048828125e-05, -0.0019321441650390625, 0.0, 0.0, -0.0006046295166015625, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009090898674912751, -3.576278118089249e-07, -0.011374473571777344, -0.000400543212890625, -0.000102996826171875, -0.012613296508789062, -0.0001621246337890625, -8.7738037109375e-05, -0.0027990341186523438, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00128173828125, 0.0, -0.00025999543140642345, -3.62396240234375e-05, -0.0024967193603515625, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.00012969970703125, -7.62939453125e-06, -3.337840098538436e-05, -1.52587890625e-05, -0.00116729736328125, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.00304410420358181, -0.00010716361430240795, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010288238525390625, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -0.07719993591308594, -6.198883056640625e-06, -9.072665125131607e-05, 0.0, -0.0002231597900390625, -0.01488494873046875, -6.866455078125e-05, -0.0002498626708984375, -3.814697265625e-06, -0.1290571242570877, -1.9073486328125e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -3.9123991726087652, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -0.11294042319059372, -1.4185804502631072e-05, -0.0027823448181152344, -1.52587890625e-05, -6.29425048828125e-05, -0.005523681640625, -0.0002384185791015625, -0.04516412317752838, -5.125986263010418e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.63724099972751e-05, -1.1920928244535389e-07, -0.001461029052734375, -6.29425048828125e-05, -0.0019321441650390625, 0.0, 0.0, -0.0006046295166015625, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009090898674912751, -3.576278118089249e-07, -0.01137542724609375, -0.000400543212890625, -0.000102996826171875, -0.012612342834472656, -0.0001621246337890625, -8.7738037109375e-05, -0.0027990341186523438, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00128173828125, 0.0, -0.00025999543140642345, -3.62396240234375e-05, -0.0024967193603515625, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.00012969970703125, -7.62939453125e-06, -3.337840098538436e-05, -1.52587890625e-05, -0.00116729736328125, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.00304410420358181, -0.00010716361430240795, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010288238525390625, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -2.623462677001953, -1.060962586052483e-05, -9.918212890625e-05, 0.0, -0.0002498626708984375, -0.03550910949707031, -6.866455078125e-05, -0.01603412628173828, -3.814697265625e-06, -0.6189058423042297, 0.0], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.current_player.\n            minions) >= 2\n"}, {"score": -3.9890869989922493, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "3", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -0.11294042319059372, -1.4185804502631072e-05, -0.0027823448181152344, -1.52587890625e-05, -6.29425048828125e-05, -0.005523681640625, -0.0002384185791015625, -3.186152458190918, -1.025196434056852e-05, -5.7220458984375e-06, -1.52587890625e-05, -8.034706115722656e-05, -2.0265579223632812e-06, -0.0017309188842773438, -6.67572021484375e-05, -0.0030307769775390625, 0.0, 0.0, -0.00063323974609375, -1.1444091796875e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0010157822398468852, -3.576278118089249e-07, -0.012937545776367188, -0.0005054473876953125, -7.82012939453125e-05, -0.017900466918945312, -0.000148773193359375, -0.0001068115234375, -0.0022106170654296875, -0.00019073486328125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0026521682739257812, 0.0, -0.00026500222156755626, -3.814697265625e-05, -0.002391815185546875, 0.0, -7.43865966796875e-05, -7.2479248046875e-05, 0.0, -4.208087921142578e-05, -2.47955322265625e-05, -0.0001277923583984375, -7.62939453125e-06, -3.421284782234579e-05, -1.52587890625e-05, -0.00115203857421875, -0.0001697540283203125, -9.1552734375e-05, -3.814697265625e-06, -0.0002117156982421875, 0.0, -0.002913352567702532, -0.00010668682807590812, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010244369506835938, 0.0, -0.00029980798717588186, -6.67572021484375e-05, -0.07755661010742188, -6.198883056640625e-06, -9.084492921829224e-05, 0.0, -0.000225067138671875, -0.015046119689941406, -7.05718994140625e-05, -0.00025177001953125, -3.814697265625e-06, -0.12782829999923706, -1.9073486328125e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -4.080752253358277, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 1, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -0.11294042319059372, -1.4185804502631072e-05, -0.0027823448181152344, -1.52587890625e-05, -6.29425048828125e-05, -0.005523681640625, -0.0002384185791015625, -0.04516412317752838, -5.125986263010418e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.63724099972751e-05, -1.1920928244535389e-07, -0.001461029052734375, -6.29425048828125e-05, -0.0019321441650390625, 0.0, 0.0, -0.0006046295166015625, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009090898674912751, -3.576278118089249e-07, -0.01137542724609375, -0.000400543212890625, -0.000102996826171875, -0.012612342834472656, -0.0001621246337890625, -8.7738037109375e-05, -0.0027990341186523438, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00128173828125, 0.0, -0.00025999543140642345, -3.62396240234375e-05, -0.0024967193603515625, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.00012969970703125, -7.62939453125e-06, -3.337840098538436e-05, -1.52587890625e-05, -0.00116729736328125, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.00304410420358181, -0.00010716361430240795, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010288238525390625, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -2.623462677001953, -1.060962586052483e-05, -9.918212890625e-05, 0.0, -0.0002498626708984375, -0.03550910949707031, -6.866455078125e-05, -0.01603412628173828, -3.814697265625e-06, -0.7872589230537415, 0.0], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.current_player.\n            minions) >= 1\n"}, {"score": -4.980952035873578, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -3.8178863525390625, -9.918212890625e-05, -1.33514404296875e-05, 0.0, -0.19894564151763916, -6.4849853515625e-05, -0.013451099395751953, -1.9073486328125e-06, -0.074403777718544, 0.0, -0.0002675054711289704, 0.0, -0.007815361022949219, -7.2479248046875e-05, -5.91278076171875e-05, 0.0, -0.00674283504486084, -2.1457672119140625e-06, -2.288818359375e-05, -0.00014495849609375, -0.0075473785400390625, -3.24249267578125e-05, -0.005558510310947895, -4.291534423828125e-06, -0.002712249755859375, -0.0015964508056640625, -5.7220458984375e-06, -0.0001802444166969508, -5.7220458984375e-05, -0.02170562744140625, -7.62939453125e-06, -0.1764976531267166, 0.0, -0.008831024169921875, -4.38690185546875e-05, -0.000133514404296875, -0.0073299407958984375, -0.0006694793701171875, -1.52587890625e-05, -0.0015281103551387787, -9.5367431640625e-06, -0.00045013427734375, 0.0, -9.5367431640625e-06, -5.340576171875e-05, -0.0002689361572265625, 0.0, -0.015030739828944206, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.52587890625e-05, -0.030442113056778908, -5.7220458984375e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.20159912109375e-05, -7.05718994140625e-05, -5.340576171875e-05, 0.0, -0.0018853291403502226, -2.50339189733495e-06, -0.01677870750427246, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015219608321785927, -7.62939453125e-06, -0.001857757568359375, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -0.000102996826171875, 0.0, -0.1108471155166626, -1.3947389561508317e-05, -0.0028252601623535156, -1.71661376953125e-05, -6.103515625e-05, -0.00551605224609375, -0.00023651123046875, -0.044926974922418594, -5.125986263010418e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.63724099972751e-05, -1.1920928244535389e-07, -0.001461029052734375, -6.29425048828125e-05, -0.0019245147705078125, 0.0, 0.0, -0.0006046295166015625, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009100435418076813, -3.576278118089249e-07, -0.011374473571777344, -0.000400543212890625, -0.000102996826171875, -0.012630462646484375, -0.0001621246337890625, -8.7738037109375e-05, -0.0027980804443359375, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00128173828125, 0.0, -0.00026190278003923595, -3.62396240234375e-05, -0.0024967193603515625, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.00012969970703125, -7.62939453125e-06, -3.337840098538436e-05, -1.52587890625e-05, -0.00116729736328125, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.00304410420358181, -0.00010716361430240795, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010288238525390625, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -0.07719802856445312, -6.198883056640625e-06, -9.072665125131607e-05, 0.0, -0.0002231597900390625, -0.01488494873046875, -6.866455078125e-05, -0.0002498626708984375, -3.814697265625e-06, -0.1290542632341385, -1.9073486328125e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -5.2103136169743465, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 1, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -2.3092989921569824, 0.0, -0.03869807720184326, -7.62939453125e-06, -9.5367431640625e-06, -4.9591064453125e-05, 0.0, -0.0013769622892141342, -7.62939453125e-06, -0.0061397552490234375, -9.5367431640625e-06, -0.08122825622558594, 0.0, -3.814697265625e-06, -0.0004825592041015625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.000125885009765625, 0.0, 0.0, -0.000860571744851768, -5.960462772236497e-07, -0.13367843627929688, -0.0010280609130859375, -0.0001125335693359375, -0.014265060424804688, -0.0001373291015625, -7.43865966796875e-05, -0.001953125, -0.00018310546875, -9.5367431640625e-06, -1.71661376953125e-05, 0.0, -0.0019121170043945312, 0.0, -0.0002757310576271266, -3.4332275390625e-05, -0.0022945404052734375, 0.0, -7.82012939453125e-05, -6.29425048828125e-05, 0.0, -4.971027374267578e-05, -2.47955322265625e-05, -0.0001277923583984375, -7.62939453125e-06, -3.3259195333812386e-05, -1.33514404296875e-05, -0.0011348724365234375, -0.000179290771484375, -9.5367431640625e-05, -3.814697265625e-06, -0.0002117156982421875, 0.0, -0.0029692635871469975, -0.00010537565685808659, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010318756103515625, 0.0, -0.00029980798717588186, -6.67572021484375e-05, -0.07782936096191406, -6.198883056640625e-06, -9.084492921829224e-05, 0.0, -0.0002193450927734375, -0.01483917236328125, -6.866455078125e-05, -0.0002460479736328125, -3.814697265625e-06, -2.108397960662842, 0.0], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"score": -5.276396158838885, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -4.572768211364746, -0.0030431747436523438, -0.000141143798828125, 0.0, -0.002919173566624522, -1.1444091796875e-05, -0.0036307573318481445, -5.7220458984375e-06, -4.38690185546875e-05, -0.0002269744873046875, -1.52587890625e-05, -6.67572021484375e-05, -1.9073486328125e-05, -0.041980743408203125, 0.0, -0.0007680654525756836, -0.000171661376953125, -0.009797453880310059, -9.5367431640625e-06, -5.9246900491416454e-05, 0.0, -0.15444183349609375, -0.012483596801757812, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.003918647766113281, 0.0, -0.0025356519035995007, -3.218649908376392e-06, -0.0003070831298828125, 0.0, -0.0001277923583984375, -0.021968841552734375, -0.0002536773681640625, -0.011427201330661774, -1.6689286894688848e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.4001808166503906e-05, -1.1920928244535389e-07, -0.0006771087646484375, -0.0001087188720703125, -0.0016269683837890625, 0.0, 0.0, -0.00052642822265625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0008521078270860016, -4.768370445162873e-07, -0.015415191650390625, -0.0003719329833984375, -0.0001125335693359375, -0.012135505676269531, -0.0001659393310546875, -8.96453857421875e-05, -0.0029478073120117188, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00115966796875, 0.0, -0.00026190278003923595, -3.62396240234375e-05, -0.0024852752685546875, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.971027374267578e-05, -2.47955322265625e-05, -0.0001316070556640625, -7.62939453125e-06, -3.373602157807909e-05, -1.33514404296875e-05, -0.0011692047119140625, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.0030517345294356346, -0.00010692521755117923, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010293960571289062, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -0.07720565795898438, -6.198883056640625e-06, -9.084492921829224e-05, 0.0, -0.00022125244140625, -0.0148468017578125, -6.866455078125e-05, -0.000247955322265625, -3.814697265625e-06, -0.12937553226947784, -1.9073486328125e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -7.1571442229956475, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "2", "<EOS>", 171, 49, 152, "windfury", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "remove", "value": {"id": "minions", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 2, "_type": "Num"}], "keywords": [{"arg": "windfury", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Cleave", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -0.11294042319059372, -1.4185804502631072e-05, -0.0027823448181152344, -1.52587890625e-05, -6.29425048828125e-05, -0.005523681640625, -0.0002384185791015625, -0.04516412317752838, -5.125986263010418e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.63724099972751e-05, -1.1920928244535389e-07, -0.001461029052734375, -6.29425048828125e-05, -0.0019321441650390625, 0.0, 0.0, -0.0006046295166015625, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009090898674912751, -3.576278118089249e-07, -0.01137542724609375, -0.000400543212890625, -0.000102996826171875, -4.696409225463867, -0.14183807373046875, -0.13780593872070312, 0.0, -0.00809358712285757, -7.62939453125e-06, -1.9073486328125e-05, -0.0014972686767578125, -1.9073486328125e-06, -0.02738155610859394, 0.0, -4.76837158203125e-05, -3.814697265625e-06, -0.008135609328746796, -1.9073486328125e-06, -0.17302417755126953, -0.053742408752441406, -9.5367431640625e-06, -1.1434773206710815, -1.52587890625e-05, -0.18106460571289062, -0.0022125244140625, -0.0001239776611328125, -6.29425048828125e-05], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return Weapon(2, 2, windfury=True)\n"}, {"score": -13.865806579589844, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -13.86545181274414], "inferred_code": "break\n"}, {"score": -15.548689041284888, "choice_history": [50, 111, 176, 59, 93, 24, 144, "2", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -13.862222671508789, -0.2715187072753906, -1.2699365615844727, -0.10059833526611328, -0.04404071345925331, -1.7285345165873878e-05], "inferred_code": "self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -19.787221908569336, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.91278076171875e-05, -0.0002155303955078125, -19.78694725036621], "inferred_code": ""}], "index": 19}
{"beams": [{"score": -0.3749689818942201, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -0.04553031921386719, -5.7220458984375e-06, -0.008663177490234375, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047016143798828125, -1.1444091796875e-05, -0.0007162094116210938, -3.814697265625e-06, -0.11233901977539062, 0.0, -0.012793421745300293, -3.814697265625e-06, -0.10356307029724121, -9.5367431640625e-06, -0.0012018283596262336, -6.794906312279636e-06, -0.0006666183471679688, 0.0, -4.1961669921875e-05, -0.0006771087646484375, -0.0007152557373046875, -0.0001158695959020406, -8.344646857949556e-07, 0.0, -0.000438690185546875, -1.728534698486328e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -2.6366998805421176, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -0.04553031921386719, -5.7220458984375e-06, -0.008663177490234375, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047016143798828125, -1.1444091796875e-05, -0.0007162094116210938, -3.814697265625e-06, -2.252473831176758, -3.814697265625e-06, -0.0005435943603515625, 0.0, -0.02742183208465576, -1.9073486328125e-06, -0.08658015727996826, -5.7220458984375e-06, -0.0014584752498194575, -2.861018856492592e-06, -0.12321257591247559, -1.4305104514278355e-06, -0.0006656646728515625, 0.0, -3.0517578125e-05, -0.0007228851318359375, -0.0006256103515625, -0.00011217410065000877, -1.0728830375228426e-06, 0.0, -0.0004444122314453125, -1.3470649719238281e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.hero.damage(player.effective_spell_damage(2),\n            self)\n"}, {"score": -2.7423949359793696, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "hero", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -0.04553031921386719, -5.7220458984375e-06, -0.008663177490234375, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047016143798828125, -1.1444091796875e-05, -0.0007162094116210938, -3.814697265625e-06, -0.11233901977539062, 0.0, -0.012793421745300293, -3.814697265625e-06, -2.450289487838745, -1.585470999998506e-05, -0.022311925888061523, -8.344646857949556e-07, -0.0002288818359375, 0.0, -3.62396240234375e-05, -0.0007038116455078125, -0.0006046295166015625, -0.00015258196799550205, -5.960462772236497e-07, -1.9073486328125e-06, -0.000522613525390625, -1.1444091796875e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.hero.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.6681988984500933, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -3.3418092727661133, -2.3841855067985307e-07, -0.0009819269180297852, 0.0, -0.000885009765625, -0.010919570922851562, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.0002591586671769619, -1.1920928244535389e-07, -0.0012416839599609375, 0.0, -0.0002040863037109375, -0.0006542205810546875, -0.000213623046875, -0.0003633059386629611, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005397796630859375, -6.29425048828125e-05, 0.0, -0.0418701171875, -5.7220458984375e-06, -0.008825302124023438, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047588348388671875, -1.1444091796875e-05, -0.0007190704345703125, -3.814697265625e-06, -0.11236763000488281, 0.0, -0.013152837753295898, -3.814697265625e-06, -0.10309672355651855, -7.62939453125e-06, -0.0012150455731898546, -6.6756979322235566e-06, -0.0006618499755859375, 0.0, -4.1961669921875e-05, -0.0006771087646484375, -0.0007171630859375, -0.00011563119187485427, -8.344646857949556e-07, 0.0, -0.0004405975341796875, -1.728534698486328e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.925091232454534, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -3.1346168518066406, -1.52587890625e-05, -0.000377655029296875, -1.9073486328125e-06, -0.001494765281677246, -3.933904736186378e-06, -0.6332054138183594, -0.0001010894775390625, -0.0001697540283203125, 0.0, -3.814697265625e-05, 0.0, -0.0002942085266113281, -2.09808349609375e-05, -0.0005761384963989258, -1.9073486328125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -0.00011444091796875, -0.00038051605224609375, -7.62939453125e-06, -0.00054168701171875, 0.0, -0.000194549560546875, -1.1444091796875e-05, -0.0398789644241333, -2.86102294921875e-05, -0.010734914802014828, 0.0, -0.0002307891845703125, -0.011714935302734375, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001430511474609375, 0.0, -0.0001705855829641223, -1.1920928244535389e-07, -0.0011444091796875, 0.0, -0.0001697540283203125, -0.0006160736083984375, -0.00023651123046875, -0.0003677124623209238, -2.145764938177308e-06, -1.9073486328125e-06, -0.0003910064697265625, -6.4849853515625e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.111538177693447, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -3.1346168518066406, -1.52587890625e-05, -0.000377655029296875, -1.9073486328125e-06, -0.001494765281677246, -3.933904736186378e-06, -0.7619771957397461, -4.38690185546875e-05, -0.06406497955322266, -9.5367431640625e-06, -0.000171661376953125, 0.0, -0.005736351013183594, -3.814697265625e-06, -0.010490655899047852, -1.52587890625e-05, -0.022826146334409714, 0.0, -3.24249267578125e-05, -0.001636505126953125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.0027790069580078125, 0.0, -0.00017654089606367052, -1.1920928244535389e-07, -0.015913963317871094, 0.0, -0.000118255615234375, -0.0007266998291015625, -0.000274658203125, -0.0004512517189141363, -2.9802276912960224e-06, -3.814697265625e-06, -0.000514984130859375, -6.103515625e-05, -1.9073486328125e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.946654161415864, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -4.575328350067139, 0.0, -0.001964569091796875, -0.0015239715576171875, 0.0, -7.62939453125e-06, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, -0.000202178955078125, 0.0, -0.00013613695045933127, 0.0, -0.001438140869140625, 0.0, -0.000133514404296875, -0.0006694793701171875, -0.0002727508544921875, -0.0007013427675701678, -2.861018856492592e-06, -3.814697265625e-06, -0.0005283355712890625, -4.76837158203125e-05, -1.9073486328125e-06, -0.05200767517089844, -5.7220458984375e-06, -0.0067596435546875, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047397613525390625, -1.1444091796875e-05, -0.0006933212280273438, -3.814697265625e-06, -0.1210031509399414, 0.0, -0.011835694313049316, -3.814697265625e-06, -0.10313677787780762, -9.5367431640625e-06, -0.0011776578612625599, -6.6756979322235566e-06, -0.0006513595581054688, 0.0, -4.00543212890625e-05, -0.000682830810546875, -0.0007190704345703125, -0.00011575039388844743, -8.344646857949556e-07, 0.0, -0.0004405975341796875, -1.728534698486328e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.hero):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.06344567535384, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 24, 144, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"hole0": 4, "_type": "Template9"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -0.04553031921386719, -5.7220458984375e-06, -4.857733726501465, -7.82012939453125e-05, -0.07314535975456238, -2.0265558760002023e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(4), self)\n"}, {"score": -5.119662455648452, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -0.04553031921386719, -5.7220458984375e-06, -0.008663177490234375, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047016143798828125, -1.1444091796875e-05, -0.0007162094116210938, -3.814697265625e-06, -0.11233901977539062, 0.0, -0.012793421745300293, -3.814697265625e-06, -4.845494747161865, -1.1920928244535389e-07, -0.0007090936996974051, -7.629365427419543e-06, -0.00246429443359375, 0.0, -9.1552734375e-05, -0.0017452239990234375, -0.0008640289306640625, -0.00012051749945385382, -5.960462772236497e-07, 0.0, -0.0006389617919921875, -1.1563301086425781e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.current_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.162140930847407, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -0.04553031921386719, -5.7220458984375e-06, -0.008663177490234375, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047016143798828125, -1.1444091796875e-05, -0.0007162094116210938, -3.814697265625e-06, -2.252473831176758, -3.814697265625e-06, -0.0005435943603515625, 0.0, -0.02742183208465576, -1.9073486328125e-06, -0.08658015727996826, -5.7220458984375e-06, -0.0014584752498194575, -2.861018856492592e-06, -2.6363275051116943, 0.0, -0.012883305549621582, 0.0, -2.6702880859375e-05, -0.00081634521484375, -0.0006809234619140625, -0.00011753829312510788, -7.152555099310121e-07, 0.0, -0.00040435791015625, -1.3470649719238281e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage.damage(player.effective_spell_damage(\n            2), self)\n"}, {"score": -5.416767607296229, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template1", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "hero", "value": {"attr": "hero", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Consecration", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -0.04553031921386719, -5.7220458984375e-06, -0.008663177490234375, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047016143798828125, -1.1444091796875e-05, -0.0007162094116210938, -3.814697265625e-06, -2.252473831176758, -3.814697265625e-06, -0.0005435943603515625, 0.0, -0.02742183208465576, -1.9073486328125e-06, -2.659081220626831, -4.410734163684538e-06, -0.02126610092818737, -8.344646857949556e-07, -0.31118690967559814, -5.960462772236497e-07, -0.00047206878662109375, 0.0, -2.6702880859375e-05, -0.000728607177734375, -0.0006122589111328125, -0.00015234357852023095, -7.152555099310121e-07, 0.0, -0.0003986358642578125, -1.1444091796875e-05, -1.9073486328125e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.hero.hero.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -14.543883562058909, "choice_history": [50, 111, 176, 59, 93, 24, 144, "4", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 4, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -12.131711959838867, -0.8397960662841797, -1.3099899291992188, -0.035233497619628906, -0.22691667079925537, -0.000199198693735525], "inferred_code": "self.target.damage(player.effective_spell_damage(4), self)\n"}, {"score": -14.768867492675781, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -14.768831253051758], "inferred_code": "break\n"}, {"score": -15.970617651695648, "choice_history": [50, 111, 176, 59, 93, 24, 144, "2", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -12.131711959838867, -0.8397960662841797, -1.3099899291992188, -0.035233497619628906, -1.6538164615631104, -3.3497566619189456e-05], "inferred_code": "self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -23.443256378173828, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -23.443222045898438], "inferred_code": ""}], "index": 20}
{"beams": [{"score": -0.06473754350187022, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 7, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -0.03715009614825249, 0.0, -0.00080108642578125, 0.0, -0.00037801265716552734, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0013217926025390625, -5.7220458984375e-06, -0.0002956390380859375, -2.86102294921875e-05, -0.0022081895731389523, -7.677078247070312e-05, -0.007792545948177576, -2.3841855067985307e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -3.4311174657577155, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "9", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 9, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -3.4034132957458496, -2.3841855067985307e-07, -0.0003719329833984375, 0.0, -0.0002448558807373047, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0014476776123046875, -7.62939453125e-06, -0.000301361083984375, -2.86102294921875e-05, -0.0023936107754707336, -8.058547973632812e-05, -0.008140960708260536, -2.3841855067985307e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -5.311596996290028, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 7, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "ForceTankHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.133512020111084, -0.055935751646757126, -0.05562431737780571, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -4.112720489501953e-06, -9.655952453613281e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.004718780517578125, -3.814697265625e-06, -1.7404556274414062e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -0.00208282470703125, -3.4332275390625e-05, -1.3708974620385561e-05, -0.00019729137420654297, -1.1920928244535389e-07, 0.0, -0.04572996124625206, 0.0, -0.0008411407470703125, 0.0, -0.00039899349212646484, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0013275146484375, -5.7220458984375e-06, -0.000293731689453125, -2.6702880859375e-05, -0.0022871673572808504, -7.474422454833984e-05, -0.008134603500366211, -2.3841855067985307e-07], "inferred_code": "class ForceTankHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -5.496890456919566, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 7, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -0.03715009614825249, 0.0, -0.00080108642578125, 0.0, -0.00037801265716552734, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0013217926025390625, -5.7220458984375e-06, -0.0002956390380859375, -2.86102294921875e-05, -0.0022081895731389523, -7.677078247070312e-05, -5.439945697784424, 0.0], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 1)\n"}, {"score": -5.565278407434533, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Core Hound", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.44706916809082, -0.00019073486328125, -0.0016374287661165, -4.780292510986328e-05, -2.5987286790041253e-05, -2.288818359375e-05, -0.09528420865535736, 0.0, -4.9591064453125e-05, 0.0, -0.012287139892578125, -4.57763671875e-05, -9.48860906646587e-05, -3.993508289568126e-05, -0.0006341167027130723, -2.3841855067985307e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -6.396199321265151, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Core", " ", "Hound", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -6.344452857971191, -5.7220458984375e-06, -7.62939453125e-05, -0.030000686645507812, -0.0001659393310546875, -5.7220458984375e-06, -5.7220458984375e-06, -2.6702880859375e-05, -6.794924956921022e-06, 0.0, -2.8848648071289062e-05, 0.0, -0.0008983612060546875, -5.7220458984375e-06, -5.7220458984375e-06, -0.001553520211018622, -0.00019085407257080078, -1.9907789464923553e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.004154322203248739, -1.1086422091466375e-05, -6.4849853515625e-05, 0.0, -0.0001811981201171875, 0.0, -0.0001246929168701172, -2.0265579223632812e-06, -0.0002479552640579641, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.0001138448715209961, -1.9073486328125e-06, -0.0002841949462890625, -1.9073486328125e-05, -0.0006903410539962351, -0.00015330124006140977, -0.00013934719027020037, -1.1920928244535389e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -6.43905722539963, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "Hound", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 0, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -6.410534381866455, 0.0, -0.00026702880859375, 0.0, -0.00043332576751708984, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0013027191162109375, -5.7220458984375e-06, -0.00029754638671875, -2.86102294921875e-05, -0.0025675827637314796, -8.225440979003906e-05, -0.00885897595435381, -2.3841855067985307e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 0, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -6.776693590722054, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "1", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 7, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 1, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -0.03715009614825249, 0.0, -0.00080108642578125, 0.0, -0.00037801265716552734, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0013217926025390625, -5.7220458984375e-06, -0.0002956390380859375, -2.86102294921875e-05, -6.720221519470215, 0.0, -0.001812272472307086, 0.0], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 5)\n"}, {"score": -6.946531379633534, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 7, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -0.03715009614825249, 0.0, -0.00080108642578125, 0.0, -0.00037801265716552734, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -6.864743232727051, -2.288818359375e-05, -0.000274658203125, -5.340576171875e-05, -0.007364204153418541, -8.809566497802734e-05, -0.02097650244832039, -3.576278118089249e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -7.033229655624346, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 5, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -7.005997180938721, 0.0, -0.0002193450927734375, 0.0, -0.00023889541625976562, 0.0, -2.09808349609375e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.001483917236328125, -5.7220458984375e-06, -0.000324249267578125, -3.0517578125e-05, -0.0021795229986310005, -8.07046890258789e-05, -0.007992429658770561, -2.3841855067985307e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 5, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -7.291031272654429, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 7, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -0.03715009614825249, 0.0, -0.00080108642578125, 0.0, -0.00037801265716552734, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0013217926025390625, -5.7220458984375e-06, -0.0002956390380859375, -2.86102294921875e-05, -0.0022081895731389523, -7.677078247070312e-05, -7.234086513519287, 0.0], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 3)\n"}, {"score": -7.346537144354436, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "9", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 7, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 9, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -0.03715009614825249, 0.0, -0.00080108642578125, 0.0, -0.00037801265716552734, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0013217926025390625, -5.7220458984375e-06, -0.0002956390380859375, -2.86102294921875e-05, -0.0022081895731389523, -7.677078247070312e-05, -7.289559364318848, -3.3020900445990264e-05], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 9)\n"}, {"score": -7.377788991602721, "choice_history": [50, 111, 176, 58, 90, "Core", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 7, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Core Hound", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -6.98541784286499, -0.33121922612190247, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.043081283569336e-06, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.003200531005859375, -1.9073486328125e-06, -1.537799835205078e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -0.0020923614501953125, -3.4332275390625e-05, -1.1324817933200393e-05, -0.00018596649169921875, -1.1920928244535389e-07, 0.0, -0.035637807101011276, 0.0, -0.0008029937744140625, 0.0, -0.00038182735443115234, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.001316070556640625, -5.7220458984375e-06, -0.0002899169921875, -2.86102294921875e-05, -0.0021937969140708447, -7.486343383789062e-05, -0.008008714765310287, -2.3841855067985307e-07], "inferred_code": "class CoreTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -8.046169252403331, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Core", " ", "Hound", "<EOS>", "9", "<EOS>", "ALL", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 9, "hole0": "Core Hound", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole0": 9, "_type": "Template5"}], "name": "CoreHound", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.44706916809082, -0.00019073486328125, -0.0016374287661165, -4.780292510986328e-05, -2.5987286790041253e-05, -2.288818359375e-05, -2.5566208362579346, -1.7881377516459906e-06, -9.34600830078125e-05, 0.0, -0.03191184997558594, -8.20159912109375e-05, -7.986703712958843e-05, -4.3749765609391034e-05, -0.000492812367156148, -3.576278118089249e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -20.43017578125, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -20.430110931396484], "inferred_code": ""}], "index": 21}
{"beams": [{"score": -0.7624193195254634, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "add_effect", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}]}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.5230417251586914, -0.008267402648925781, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.06517958641052246, 0.0, -0.0011968612670898438, -0.0062408447265625, -7.62939453125e-05, -0.0014591217041015625, -1.9073486328125e-06, -0.001415252685546875, 0.0, -5.53131103515625e-05, -0.0034809112548828125, -0.0011653900146484375, -4.1961669921875e-05, 0.0, -0.02191162109375, -0.006537675857543945, -3.814697265625e-06, -0.0027456283569335938, -1.52587890625e-05, -3.62396240234375e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.00193023681640625, -5.7220458984375e-06, -0.028557658195495605, -5.53131103515625e-05, 0.0, -4.1961669921875e-05, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -5.352497100830078e-05, -7.05718994140625e-05, 0.0, -0.0002689361572265625, -0.015865325927734375, 0.0, -0.0010755062103271484, -2.1457672119140625e-06, -0.00041961669921875, -1.9073486328125e-06, -0.0019969940185546875, -3.4332275390625e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -3.9519816402242256, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.9051618576049805, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0001773834228515625, -3.814697265625e-06, 0.0, -0.0001850128173828125, 0.0, -0.3126049041748047, -0.000125885009765625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -4.529942543740617e-06, 0.0, -0.0002307891845703125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.061226844787597656, 0.0, -5.7220458984375e-06, -0.008195877075195312, -1.9073486328125e-06, -0.000102996826171875, -5.91278076171875e-05, -1.9073486328125e-06, -0.0024509429931640625, 0.0, -0.00029397010803222656, 0.0, -2.288818359375e-05, 0.0, -0.512601375579834, 0.0, -0.000133514404296875, -0.3073711395263672, -2.86102294921875e-05, -0.000278472900390625, -1.9073486328125e-06, -0.0010623931884765625, 0.0, -5.340576171875e-05, -0.21642780303955078, -0.0021495819091796875, -5.53131103515625e-05, 0.0, -0.0016031265258789062, -0.00810551643371582, -1.9073486328125e-06, -0.000713348388671875, -1.1444091796875e-05, -4.38690185546875e-05, -0.00030231475830078125, 0.0, -0.0018215179443359375, -1.1444091796875e-05, -0.05328011512756348, -0.00011444091796875, 0.0, -6.4849853515625e-05, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -0.00014126300811767578, -6.866455078125e-05, 0.0, -0.0002269744873046875, -0.0076198577880859375, 0.0, -0.0011690855026245117, -2.1457672119140625e-06, -0.000354766845703125, -1.9073486328125e-06, -0.002452850341796875, -2.86102294921875e-05, 0.0, -0.004521369934082031, -4.76837158203125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.011911392211914062, -7.2479248046875e-05, -0.000217437744140625, 0.0, -0.00044536590576171875, 0.0, -6.67572021484375e-05, 0.0, -0.326068639755249, 0.0, -0.00028228759765625, -0.21213436126708984, -4.57763671875e-05, -0.00026702880859375, -1.9073486328125e-06, -0.0008392333984375, 0.0, -5.340576171875e-05, -0.13649368286132812, -0.002483367919921875, -4.00543212890625e-05, 0.0, -0.0027027130126953125, -0.0072356462478637695, -1.9073486328125e-06, -0.0009937286376953125, -1.1444091796875e-05, -4.1961669921875e-05, -0.000370025634765625, 0.0, -0.0026416778564453125, -9.5367431640625e-06, -0.05528247356414795, -8.392333984375e-05, 0.0, -4.9591064453125e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -9.167194366455078e-05, -7.43865966796875e-05, 0.0, -0.000263214111328125, -0.009748458862304688, 0.0, -0.0011597871780395508, -2.1457672119140625e-06, -0.000308990478515625, -1.9073486328125e-06, -0.002338409423828125, -2.86102294921875e-05, 0.0, -0.0048675537109375, -4.76837158203125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.011766433715820312, -7.62939453125e-05, -0.000213623046875, 0.0, -0.00046062469482421875, 0.0, -6.29425048828125e-05, 0.0, -0.3075253963470459, 0.0, -0.000293731689453125, -0.1746501922607422, -4.57763671875e-05, -0.000263214111328125, -1.9073486328125e-06, -0.000812530517578125, 0.0, -5.340576171875e-05, -0.10050106048583984, -0.0024566650390625, -4.00543212890625e-05, 0.0, -0.0044879913330078125, -0.007183194160461426, -1.9073486328125e-06, -0.0012950897216796875, -1.33514404296875e-05, -4.1961669921875e-05, -0.0004177093505859375, 0.0, -0.0031681060791015625, -7.62939453125e-06, -0.058341383934020996, -7.62939453125e-05, 0.0, -4.76837158203125e-05, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -8.785724639892578e-05, -7.43865966796875e-05, 0.0, -0.000270843505859375, -0.010345458984375, 0.0, -0.0011494159698486328, -2.1457672119140625e-06, -0.00030517578125, -1.9073486328125e-06, -0.0023822784423828125, -2.86102294921875e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -4.086722827330334, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "add_effect", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}]}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -3.366480827331543, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000972747802734375, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000102996826171875, -3.814697265625e-05, -2.86102294921875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010068058967590332, -1.9073486328125e-05, -0.5231294631958008, -0.008417129516601562, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.06508612632751465, 0.0, -0.0011730194091796875, -0.0063419342041015625, -7.62939453125e-05, -0.0014400482177734375, -1.9073486328125e-06, -0.0014209747314453125, 0.0, -5.53131103515625e-05, -0.0034637451171875, -0.0011653900146484375, -4.1961669921875e-05, 0.0, -0.021650314331054688, -0.006536722183227539, -3.814697265625e-06, -0.002735137939453125, -1.52587890625e-05, -3.62396240234375e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.001926422119140625, -5.7220458984375e-06, -0.028524279594421387, -5.53131103515625e-05, 0.0, -4.1961669921875e-05, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -5.352497100830078e-05, -7.05718994140625e-05, 0.0, -0.0002689361572265625, -0.015851974487304688, 0.0, -0.0010755062103271484, -2.1457672119140625e-06, -0.00041961669921875, -1.9073486328125e-06, -0.0019989013671875, -3.4332275390625e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -4.615842438116772, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Current", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "add_effect", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "CurrentPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}]}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.5230417251586914, -0.008267402648925781, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.06517958641052246, 0.0, -0.0011968612670898438, -0.0062408447265625, -7.62939453125e-05, -0.0014591217041015625, -1.9073486328125e-06, -0.001415252685546875, 0.0, -5.53131103515625e-05, -0.0034809112548828125, -0.0011653900146484375, -4.1961669921875e-05, 0.0, -0.02191162109375, -0.006537675857543945, -3.814697265625e-06, -0.0027456283569335938, -1.52587890625e-05, -3.62396240234375e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.00193023681640625, -5.7220458984375e-06, -3.8788821697235107, -1.71661376953125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -6.115436553955078e-05, -7.82012939453125e-05, 0.0, -0.000335693359375, -0.018766403198242188, 0.0, -0.001112818717956543, -2.1457672119140625e-06, -0.0004558563232421875, -1.9073486328125e-06, -0.0021152496337890625, -3.24249267578125e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -4.901575422659619, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "add_buff", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}]}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.5230417251586914, -0.008267402648925781, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.6784427165985107, 0.0, -0.0011844635009765625, -0.4915018081665039, -3.62396240234375e-05, -0.0001087188720703125, -1.9073486328125e-06, -0.05311870574951172, 0.0, -4.9591064453125e-05, -0.006618499755859375, -0.0018024444580078125, -3.62396240234375e-05, 0.0, -0.010190963745117188, -0.00723874568939209, -1.9073486328125e-06, -0.0026416778564453125, -1.52587890625e-05, -3.814697265625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.001811981201171875, -5.7220458984375e-06, -0.027002811431884766, -5.91278076171875e-05, 0.0, -4.76837158203125e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -5.352497100830078e-05, -6.866455078125e-05, 0.0, -0.000274658203125, -0.015254974365234375, 0.0, -0.001073598861694336, -2.1457672119140625e-06, -0.00041961669921875, -1.9073486328125e-06, -0.0019702911376953125, -3.4332275390625e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -5.135418033962019, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 40, 127, "5", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 5, "_type": "Template10"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.9051618576049805, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0001773834228515625, -3.814697265625e-06, 0.0, -0.0001850128173828125, 0.0, -0.3126049041748047, -0.000125885009765625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -4.529942543740617e-06, 0.0, -0.0002307891845703125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.061226844787597656, 0.0, -5.7220458984375e-06, -0.008195877075195312, -1.9073486328125e-06, -0.000102996826171875, -5.91278076171875e-05, -1.9073486328125e-06, -0.0024509429931640625, 0.0, -0.00029397010803222656, 0.0, -2.288818359375e-05, 0.0, -2.2360663414001465, 0.0, -8.96453857421875e-05, -0.2581291198730469, -0.013246536254882812, -0.026431679725646973, -0.00039386749267578125, -0.0021572113037109375, -0.0001068115234375, -0.0050106048583984375, -0.00139617919921875, -3.814697265625e-06, 0.0, -0.0005159378051757812, -1.9073486328125e-06, -0.002803802490234375, 0.0, -0.0008053779602050781, 0.0, -3.4332275390625e-05, 0.0, -0.3367120027542114, 0.0, -0.0003643035888671875, -0.1511068344116211, -4.00543212890625e-05, -0.0005035400390625, -1.9073486328125e-06, -0.00072479248046875, 0.0, -6.4849853515625e-05, -0.02508544921875, -0.0028095245361328125, -4.00543212890625e-05, 0.0, -0.0011434555053710938, -0.007177591323852539, -1.9073486328125e-06, -0.000713348388671875, -1.1444091796875e-05, -4.1961669921875e-05, -0.00024318695068359375, 0.0, -0.001697540283203125, -1.1444091796875e-05, -0.04653656482696533, -0.000110626220703125, 0.0, -4.38690185546875e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.00010693073272705078, -7.2479248046875e-05, 0.0, -0.000209808349609375, -0.00975799560546875, 0.0, -0.0011423826217651367, -2.1457672119140625e-06, -0.0003643035888671875, -1.9073486328125e-06, -0.0022373199462890625, -2.86102294921875e-05, 0.0, -0.005168914794921875, -4.57763671875e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.012624740600585938, -7.2479248046875e-05, -0.0002117156982421875, 0.0, -0.0004444122314453125, 0.0, -6.67572021484375e-05, 0.0, -0.33526790142059326, 0.0, -0.000274658203125, -0.1438770294189453, -4.57763671875e-05, -0.0002613067626953125, -1.9073486328125e-06, -0.000865936279296875, 0.0, -5.340576171875e-05, -0.05817985534667969, -0.0023937225341796875, -4.00543212890625e-05, 0.0, -0.0020999908447265625, -0.007169842720031738, -1.9073486328125e-06, -0.000885009765625, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003337860107421875, 0.0, -0.0023326873779296875, -9.5367431640625e-06, -0.05176889896392822, -8.7738037109375e-05, 0.0, -4.57763671875e-05, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -9.167194366455078e-05, -7.2479248046875e-05, 0.0, -0.0002593994140625, -0.009973526000976562, 0.0, -0.0011577606201171875, -2.1457672119140625e-06, -0.000316619873046875, -1.9073486328125e-06, -0.00229644775390625, -3.0517578125e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeHealth(5)))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -5.304942226772077, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 36, 114, "Null", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "game", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"attr": "check_delayed", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.9051618576049805, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0001773834228515625, -3.814697265625e-06, 0.0, -0.0001850128173828125, 0.0, -0.3126049041748047, -0.000125885009765625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -4.529942543740617e-06, 0.0, -0.0002307891845703125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.061226844787597656, 0.0, -5.7220458984375e-06, -0.008195877075195312, -1.9073486328125e-06, -0.000102996826171875, -5.91278076171875e-05, -1.9073486328125e-06, -0.0024509429931640625, 0.0, -0.00029397010803222656, 0.0, -2.288818359375e-05, 0.0, -0.512601375579834, 0.0, -0.000133514404296875, -0.3073711395263672, -2.86102294921875e-05, -0.000278472900390625, -1.9073486328125e-06, -0.0010623931884765625, 0.0, -5.340576171875e-05, -0.21642780303955078, -0.0021495819091796875, -5.53131103515625e-05, 0.0, -0.0016031265258789062, -0.00810551643371582, -1.9073486328125e-06, -0.000713348388671875, -1.1444091796875e-05, -4.38690185546875e-05, -0.00030231475830078125, 0.0, -0.0018215179443359375, -1.1444091796875e-05, -0.05328011512756348, -0.00011444091796875, 0.0, -6.4849853515625e-05, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -0.00014126300811767578, -6.866455078125e-05, 0.0, -0.0002269744873046875, -0.0076198577880859375, 0.0, -0.0011690855026245117, -2.1457672119140625e-06, -0.000354766845703125, -1.9073486328125e-06, -0.002452850341796875, -2.86102294921875e-05, 0.0, -0.004521369934082031, -4.76837158203125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.011911392211914062, -7.2479248046875e-05, -0.000217437744140625, 0.0, -0.00044536590576171875, 0.0, -6.67572021484375e-05, 0.0, -2.067901372909546, 0.0, -0.0008478164672851562, -0.19890117645263672, -0.0045413970947265625, -0.0008296966552734375, 0.0, -0.0006618499755859375, -1.9073486328125e-06, -7.05718994140625e-05, -0.24583053588867188, -5.7220458984375e-06, 0.0, -0.2200632095336914, 0.0, -0.0576859712600708, 0.0, -0.011694073677062988, -0.00012409687042236328], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.die(Null)\n        game.check_delayed()\n"}, {"score": -5.3924866661325765, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 40, 127, "5", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 5, "_type": "Template10"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.9051618576049805, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0001773834228515625, -3.814697265625e-06, 0.0, -0.0001850128173828125, 0.0, -0.3126049041748047, -0.000125885009765625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -4.529942543740617e-06, 0.0, -0.0002307891845703125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.061226844787597656, 0.0, -5.7220458984375e-06, -0.008195877075195312, -1.9073486328125e-06, -0.000102996826171875, -5.91278076171875e-05, -1.9073486328125e-06, -0.0024509429931640625, 0.0, -0.00029397010803222656, 0.0, -2.288818359375e-05, 0.0, -0.512601375579834, 0.0, -0.000133514404296875, -0.3073711395263672, -2.86102294921875e-05, -0.000278472900390625, -1.9073486328125e-06, -0.0010623931884765625, 0.0, -5.340576171875e-05, -0.21642780303955078, -0.0021495819091796875, -5.53131103515625e-05, 0.0, -0.0016031265258789062, -0.00810551643371582, -1.9073486328125e-06, -0.000713348388671875, -1.1444091796875e-05, -4.38690185546875e-05, -0.00030231475830078125, 0.0, -0.0018215179443359375, -1.1444091796875e-05, -0.05328011512756348, -0.00011444091796875, 0.0, -6.4849853515625e-05, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -0.00014126300811767578, -6.866455078125e-05, 0.0, -0.0002269744873046875, -0.0076198577880859375, 0.0, -0.0011690855026245117, -2.1457672119140625e-06, -0.000354766845703125, -1.9073486328125e-06, -0.002452850341796875, -2.86102294921875e-05, 0.0, -0.004521369934082031, -4.76837158203125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.011911392211914062, -7.2479248046875e-05, -0.000217437744140625, 0.0, -0.00044536590576171875, 0.0, -6.67572021484375e-05, 0.0, -0.326068639755249, 0.0, -0.00028228759765625, -2.003582000732422, -0.0067615509033203125, -0.029151676222682, -0.00016224384307861328, -0.0034770965576171875, -9.918212890625e-05, -0.007960319519042969, -0.0012912750244140625, -5.7220458984375e-06, 0.0, -0.005965232849121094, -7.62939453125e-06, -0.00098419189453125, 0.0, -0.0006291866302490234, 0.0, -3.4332275390625e-05, 0.0, -0.2759772539138794, 0.0, -0.0003528594970703125, -0.13097286224365234, -3.4332275390625e-05, -0.0003948211669921875, -1.9073486328125e-06, -0.000728607177734375, 0.0, -6.29425048828125e-05, -0.0233306884765625, -0.0026645660400390625, -4.00543212890625e-05, 0.0, -0.001148223876953125, -0.0070803165435791016, -1.9073486328125e-06, -0.000720977783203125, -1.1444091796875e-05, -4.1961669921875e-05, -0.0002651214599609375, 0.0, -0.0017566680908203125, -1.1444091796875e-05, -0.049981117248535156, -0.0001068115234375, 0.0, -4.1961669921875e-05, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -9.548664093017578e-05, -7.43865966796875e-05, 0.0, -0.000225067138671875, -0.010349273681640625, 0.0, -0.0011568069458007812, -2.1457672119140625e-06, -0.000347137451171875, -1.9073486328125e-06, -0.0021915435791015625, -2.86102294921875e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Buff(ChangeHealth(5)))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -5.434435463313825, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.9051618576049805, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0001773834228515625, -3.814697265625e-06, 0.0, -0.0001850128173828125, 0.0, -0.3126049041748047, -0.000125885009765625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -4.529942543740617e-06, 0.0, -0.0002307891845703125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.061226844787597656, 0.0, -5.7220458984375e-06, -0.008195877075195312, -1.9073486328125e-06, -0.000102996826171875, -5.91278076171875e-05, -1.9073486328125e-06, -0.0024509429931640625, 0.0, -0.00029397010803222656, 0.0, -2.288818359375e-05, 0.0, -1.5360875129699707, 0.0, -0.0001811981201171875, -0.5036325454711914, 0.0, -0.0001983642578125, -3.814697265625e-06, -0.06007099151611328, -1.9073486328125e-06, -2.09808349609375e-05, -0.14328575134277344, -9.5367431640625e-06, 0.0, -0.026403427124023438, -1.9073486328125e-06, -0.000545501708984375, 0.0, -0.007947087287902832, 0.0, -7.2479248046875e-05, 0.0, -1.0446622371673584, 0.0, -0.0006561279296875, 0.0, -1.9073486328125e-06, -0.007961273193359375, -1.9073486328125e-06, -3.814697265625e-06, -0.0010881423950195312, -1.9073486328125e-06, -0.008342742919921875, 0.0, -6.508827209472656e-05, 0.0, -4.9591064453125e-05, 0.0, -0.5584139823913574, 0.0, -7.2479248046875e-05, -0.08961296081542969, -4.9591064453125e-05, -0.0005702972412109375, -1.9073486328125e-06, -0.0011196136474609375, 0.0, -7.43865966796875e-05, -0.00829315185546875, -0.002048492431640625, -6.67572021484375e-05, 0.0, -0.00144195556640625, -0.007405519485473633, -1.9073486328125e-06, -0.0006923675537109375, -9.5367431640625e-06, -4.1961669921875e-05, -0.00027370452880859375, 0.0, -0.0017299652099609375, -1.1444091796875e-05, -0.046999335289001465, -0.000110626220703125, 0.0, -4.57763671875e-05, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.00014126300811767578, -6.67572021484375e-05, 0.0, -0.000213623046875, -0.009546279907226562, 0.0, -0.001119375228881836, -2.1457672119140625e-06, -0.0003871917724609375, -1.9073486328125e-06, -0.002437591552734375, -2.86102294921875e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.die()\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -5.600395059947736, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 40, 127, "5", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 5, "_type": "Template10"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.9051618576049805, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0001773834228515625, -3.814697265625e-06, 0.0, -0.0001850128173828125, 0.0, -0.3126049041748047, -0.000125885009765625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -4.529942543740617e-06, 0.0, -0.0002307891845703125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.061226844787597656, 0.0, -5.7220458984375e-06, -0.008195877075195312, -1.9073486328125e-06, -0.000102996826171875, -5.91278076171875e-05, -1.9073486328125e-06, -0.0024509429931640625, 0.0, -0.00029397010803222656, 0.0, -2.288818359375e-05, 0.0, -0.512601375579834, 0.0, -0.000133514404296875, -2.5196971893310547, -0.00809478759765625, -0.03344833850860596, -0.0002442598342895508, -0.002719879150390625, -0.0001087188720703125, -0.005623817443847656, -0.0012493133544921875, -5.7220458984375e-06, 0.0, -0.0006742477416992188, -5.7220458984375e-06, -0.0052547454833984375, 0.0, -0.0007177591323852539, 0.0, -3.4332275390625e-05, 0.0, -0.27954697608947754, 0.0, -0.000331878662109375, -0.1276531219482422, -3.62396240234375e-05, -0.000408172607421875, -1.9073486328125e-06, -0.00074005126953125, 0.0, -6.4849853515625e-05, -0.028116226196289062, -0.0026950836181640625, -4.38690185546875e-05, 0.0, -0.0011758804321289062, -0.0071260929107666016, -1.9073486328125e-06, -0.0007266998291015625, -1.1444091796875e-05, -4.38690185546875e-05, -0.00025844573974609375, 0.0, -0.0017375946044921875, -1.1444091796875e-05, -0.04986286163330078, -0.00011444091796875, 0.0, -4.38690185546875e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.00010883808135986328, -7.2479248046875e-05, 0.0, -0.0002079010009765625, -0.009838104248046875, 0.0, -0.0011490583419799805, -2.1457672119140625e-06, -0.0003643035888671875, -1.9073486328125e-06, -0.00223541259765625, -2.86102294921875e-05, 0.0, -0.0051250457763671875, -4.57763671875e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.012637138366699219, -7.43865966796875e-05, -0.0002117156982421875, 0.0, -0.00044536590576171875, 0.0, -6.67572021484375e-05, 0.0, -0.3351019620895386, 0.0, -0.000274658203125, -0.14219284057617188, -4.57763671875e-05, -0.0002613067626953125, -1.9073486328125e-06, -0.000865936279296875, 0.0, -5.340576171875e-05, -0.05585670471191406, -0.002391815185546875, -4.00543212890625e-05, 0.0, -0.0020799636840820312, -0.007167935371398926, -1.9073486328125e-06, -0.0008831024169921875, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003337860107421875, 0.0, -0.0023288726806640625, -9.5367431640625e-06, -0.0518871545791626, -8.7738037109375e-05, 0.0, -4.57763671875e-05, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -9.357929229736328e-05, -7.2479248046875e-05, 0.0, -0.0002593994140625, -0.00998687744140625, 0.0, -0.0011587142944335938, -2.1457672119140625e-06, -0.000316619873046875, -1.9073486328125e-06, -0.0022945404052734375, -3.0517578125e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Buff(ChangeHealth(5)))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -5.612151122455366, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 36, 114, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_effect", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.9051618576049805, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0001773834228515625, -3.814697265625e-06, 0.0, -0.0001850128173828125, 0.0, -0.3126049041748047, -0.000125885009765625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -4.529942543740617e-06, 0.0, -0.0002307891845703125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.061226844787597656, 0.0, -5.7220458984375e-06, -0.008195877075195312, -1.9073486328125e-06, -0.000102996826171875, -5.91278076171875e-05, -1.9073486328125e-06, -0.0024509429931640625, 0.0, -0.00029397010803222656, 0.0, -2.288818359375e-05, 0.0, -0.512601375579834, 0.0, -0.000133514404296875, -0.3073711395263672, -2.86102294921875e-05, -0.000278472900390625, -1.9073486328125e-06, -0.0010623931884765625, 0.0, -5.340576171875e-05, -0.21642780303955078, -0.0021495819091796875, -5.53131103515625e-05, 0.0, -0.0016031265258789062, -0.00810551643371582, -1.9073486328125e-06, -0.000713348388671875, -1.1444091796875e-05, -4.38690185546875e-05, -0.00030231475830078125, 0.0, -0.0018215179443359375, -1.1444091796875e-05, -0.05328011512756348, -0.00011444091796875, 0.0, -6.4849853515625e-05, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -0.00014126300811767578, -6.866455078125e-05, 0.0, -0.0002269744873046875, -0.0076198577880859375, 0.0, -0.0011690855026245117, -2.1457672119140625e-06, -0.000354766845703125, -1.9073486328125e-06, -0.002452850341796875, -2.86102294921875e-05, 0.0, -0.004521369934082031, -4.76837158203125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.011911392211914062, -7.2479248046875e-05, -0.000217437744140625, 0.0, -0.00044536590576171875, 0.0, -6.67572021484375e-05, 0.0, -0.326068639755249, 0.0, -0.00028228759765625, -0.21213436126708984, -4.57763671875e-05, -0.00026702880859375, -1.9073486328125e-06, -0.0008392333984375, 0.0, -5.340576171875e-05, -0.13649368286132812, -0.002483367919921875, -4.00543212890625e-05, 0.0, -0.0027027130126953125, -0.0072356462478637695, -1.9073486328125e-06, -0.0009937286376953125, -1.1444091796875e-05, -4.1961669921875e-05, -0.000370025634765625, 0.0, -0.0026416778564453125, -9.5367431640625e-06, -0.05528247356414795, -8.392333984375e-05, 0.0, -4.9591064453125e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -9.167194366455078e-05, -7.43865966796875e-05, 0.0, -0.000263214111328125, -0.009748458862304688, 0.0, -0.0011597871780395508, -2.1457672119140625e-06, -0.000308990478515625, -1.9073486328125e-06, -0.002338409423828125, -2.86102294921875e-05, 0.0, -0.0048675537109375, -4.76837158203125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.011766433715820312, -7.62939453125e-05, -0.000213623046875, 0.0, -0.00046062469482421875, 0.0, -6.29425048828125e-05, 0.0, -2.1610982418060303, 0.0, -0.0008687973022460938, -0.1691293716430664, -0.0046443939208984375, -0.000843048095703125, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.die(Null)\n"}, {"score": -5.771668529883129, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.5230417251586914, -0.008267402648925781, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -5.155953884124756, 0.0, -0.0001583099365234375, -0.014682769775390625, -3.814697265625e-06, -0.0006113052368164062, -1.9073486328125e-06], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.893023944273693, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 124, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "bounce", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0"}], "name": "Corruption", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.5230417251586914, -4.9439544677734375, -2.6702880859375e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.3571814298629761, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"score": -15.090912818908691, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -15.090899467468262], "inferred_code": "break\n"}, {"score": -23.989730834960938, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -23.989717483520508], "inferred_code": ""}], "index": 22}
{"beams": [{"score": -0.014770504631762549, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template4", "hole2": "spell_damage"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -0.011338472366333008, -0.0012569427490234375, -0.000446319580078125, -2.288818359375e-05, -0.0003305660211481154, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -5.944613094458582, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "effects"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -4.60299015045166, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0003871917724609375, -5.7220458984375e-06, 0.0, -0.002253293991088867, -3.576278118089249e-07, -3.814697265625e-05, -0.4342460632324219, -0.0371246337890625, -8.96453857421875e-05, -1.9073486328125e-06, -0.024045109748840332, -0.7013366222381592, -3.2901763916015625e-05, -0.0002899169921875, -0.0001010894775390625, -5.7220458984375e-06, -0.0006710290908813477, -1.9073486328125e-05, -1.9073486328125e-05, 0.0, -0.06992268562316895, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, -0.0002899169921875, 0.0, -0.00014495849609375, -0.0009517669677734375, 0.0, -4.9591064453125e-05, -5.7220458984375e-06, -0.02889477089047432, -2.34842264035251e-05, -3.814697265625e-06, -0.02496051788330078, -8.7738037109375e-05, -0.013142832554876804, 0.0, -0.0001087188720703125, 0.0, -0.0008710622787475586, -2.6941299438476562e-05, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnStarted(player=BothPlayer()\n            ), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -6.057676855468962, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Minion", "Died", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": "MinionDied", "_type": "Template18"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "effects"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -4.60299015045166, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0003871917724609375, -5.7220458984375e-06, 0.0, -0.002253293991088867, -3.576278118089249e-07, -3.814697265625e-05, -1.0462255477905273, -7.62939453125e-06, -0.2080058753490448, -0.10654199123382568, -5.006789251638111e-06, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.075597851420753e-05, -0.00021958351135253906, 0.0, -0.0001163482666015625, -0.0008487701416015625, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.04954883083701134, -3.099440800724551e-05, -3.814697265625e-06, -0.01806926727294922, -8.96453857421875e-05, -0.019059428945183754, 0.0, -0.0001735687255859375, 0.0, -0.0014663934707641602, -2.682209014892578e-05, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(MinionDied(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -7.171836130338015, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Used", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnUsed", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "effects"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -4.60299015045166, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0003871917724609375, -5.7220458984375e-06, 0.0, -0.002253293991088867, -3.576278118089249e-07, -3.814697265625e-05, -0.4342460632324219, -0.0371246337890625, -8.96453857421875e-05, -1.9073486328125e-06, -0.024045109748840332, -1.9327046871185303, -0.0006338357925415039, -0.0018167495727539062, -9.1552734375e-05, -1.9073486328125e-06, -0.007470369338989258, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -0.05631554126739502, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, -0.00030517578125, 0.0, -0.00014495849609375, -0.001056671142578125, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -0.030899154022336006, -2.360343569307588e-05, -3.814697265625e-06, -0.024209022521972656, -9.1552734375e-05, -0.01226843148469925, 0.0, -0.0001163482666015625, 0.0, -0.0009111166000366211, -2.6941299438476562e-05, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnUsed(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -7.874943487308649, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "spell_damage", "Is", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template4", "hole2": "spell_damageIs"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -0.011338472366333008, -7.793145179748535, -0.05003011226654053, -0.018479347229003906, -2.86102294921875e-05, -0.0005464497371576726, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damageIs=1)\n"}, {"score": -8.196600420404756, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Damaged", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "effects"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -4.60299015045166, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0003871917724609375, -5.7220458984375e-06, 0.0, -0.002253293991088867, -3.576278118089249e-07, -3.814697265625e-05, -0.4342460632324219, -0.0371246337890625, -8.96453857421875e-05, -1.9073486328125e-06, -0.024045109748840332, -2.396989583969116, -8.583057933719829e-06, -0.003940582275390625, -0.0004444122314453125, -2.288818359375e-05, -0.12132203578948975, -8.0108642578125e-05, -5.91278076171875e-05, 0.0, -0.5091880559921265, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.491474151611328e-05, -0.0002613067626953125, 0.0, -0.0001087188720703125, -0.00093841552734375, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.02063594199717045, -2.4080271032289602e-05, -3.814697265625e-06, -0.026177406311035156, -8.58306884765625e-05, -0.012627726420760155, 0.0, -0.0001087188720703125, 0.0, -0.0008453130722045898, -2.6941299438476562e-05, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnDamaged(player=EnemyPlayer(\n            )), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -8.323327964166019, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Minion", "Selector", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": "MinionSelector", "_type": "Template18"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "effects"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -4.60299015045166, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.0003871917724609375, -5.7220458984375e-06, 0.0, -0.002253293991088867, -3.576278118089249e-07, -3.814697265625e-05, -1.0462255477905273, -7.62939453125e-06, -0.2080058753490448, -2.3984768390655518, -0.0001479387137806043, -3.814697265625e-06, -0.000492095947265625, -3.814697265625e-06, -4.00543212890625e-05, -1.2874602361989673e-05, -0.00015842914581298828, 0.0, -5.7220458984375e-05, -0.00037384033203125, -1.9073486328125e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.0321478545665741, -2.574919562903233e-05, -3.814697265625e-06, -0.009516716003417969, -8.392333984375e-05, -0.0187990739941597, 0.0, -0.0001316070556640625, 0.0, -0.001383662223815918, -2.682209014892578e-05, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(MinionSelector(), ActionTag(\n            Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -8.35927587393558, "choice_history": [50, 111, 176, 58, 90, "Force", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template4", "hole2": "spell_damage"}], "name": "ForceMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -7.697253704071045, -0.6456298232078552, -5.876856448594481e-05, -1.9073486328125e-06, 0.0, 0.0, -2.3818574845790863e-07, -1.7642974853515625e-05, -2.0265579223632812e-06, -0.0001277923583984375, -0.0002841949462890625, -9.1552734375e-05, -1.8358061424805783e-05, -2.1696090698242188e-05, -6.4373016357421875e-06, 0.0, -3.6954863844584906e-06, 0.0, -3.4332275390625e-05, 0.0, -0.000141143798828125, -2.6702880859375e-05, -5.960462772236497e-07, -1.1920928244535389e-07, -3.814689534920035e-06, 0.0, -0.013414740562438965, -0.001320958137512207, -0.0004119873046875, -2.288818359375e-05, -0.00032925454434007406, 0.0], "inferred_code": "class ForceMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -8.566351315196009, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template4", "hole2": "spell_damage"}], "name": "ForceTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -7.697253704071045, -0.7726476788520813, -0.07934495061635971, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.442432312614983e-05, -2.0265579223632812e-06, -0.00011444091796875, -0.000476837158203125, -0.0001430511474609375, -1.549708758830093e-05, -2.1696090698242188e-05, -6.4373016357421875e-06, 0.0, -3.8146954466355965e-06, 0.0, -3.230571746826172e-05, 0.0, -0.000152587890625, -2.6702880859375e-05, -7.152555099310121e-07, -1.1920928244535389e-07, -3.814689534920035e-06, 0.0, -0.013949871063232422, -0.001328587532043457, -0.000408172607421875, -2.288818359375e-05, -0.00032567823654972017, 0.0], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -8.591434281519085, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 69, 137, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template2", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template4", "hole2": "spell_damage"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -8.577718734741211, -0.000576019287109375, -0.0003873551613651216, -4.994868868379854e-05, -3.099436753473128e-06, -7.62939453125e-06, -2.741813204920618e-06, 0.0, -7.784366607666016e-05, 0.0, -0.000705718994140625, -0.000408172607421875, -2.3841855067985307e-07, -1.1920928244535389e-07, -7.033319889160339e-06, -1.1920928244535389e-07, -0.005696892738342285, -0.0043108463287353516, -0.0002307891845703125, -2.47955322265625e-05, -0.00039756164187565446, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -8.809983609264911, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 117, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 5, "_type": "Num"}, "hole0": 1, "_type": "Template4", "hole2": "spell_damage"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -0.011338472366333008, -0.0012569427490234375, -0.000446319580078125, -2.288818359375e-05, -8.795528411865234, -1.52587890625e-05], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=5)\n"}, {"score": -9.000467656200946, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 11, 81, 19, 112, "spare_part_list", "<EOS>", "MURLOC", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"attr": "MURLOC", "value": {"id": "spare_part_list", "_type": "Name"}, "_type": "Attribute"}, "hole0": 1, "_type": "Template4", "hole2": "spell_damage"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -0.011338472366333008, -0.0012569427490234375, -8.201349258422852, -0.000675201416015625, -0.0009517669677734375, -5.7220458984375e-06, -0.2965221405029297, 0.0, -0.48699092864990234, -1.9073486328125e-06], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=spare_part_list.MURLOC)\n"}, {"score": -9.223847265608804, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template1", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template4", "hole2": "MAGE"}], "name": "DalaranMage", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -9.210217475891113, -1.919269561767578e-05, -0.011560440063476562, -2.6702880859375e-05, -0.0006481383461505175, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, MAGE=1)\n"}, {"score": -18.884035110473633, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -18.883996963500977], "inferred_code": "break\n"}, {"score": -22.029224395751953, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-05, 0.0, -22.029205322265625], "inferred_code": ""}], "index": 23}
{"beams": [{"score": -0.4271675512568365, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.3136638402938843, -1.9073486328125e-06, -9.5367431640625e-05, -0.05634307861328125, 0.0, -0.000102996826171875, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-05, -6.103515625e-05, 0.0, -0.008815407752990723, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -2.403493922567087, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.0581061840057373, -2.3841855067985307e-07, -0.0001697540283203125, -0.09473514556884766, -0.0014324188232421875, -0.0017490386962890625, -0.0002193450927734375, -0.003028894541785121, -1.9073486328125e-06, -0.015227317810058594, -0.04149341583251953, -0.0004425048828125, -1.9073486328125e-06, 0.0, -0.000274658203125, -9.5367431640625e-05, -0.0001811981201171875, 0.0, -0.00024700164794921875, 0.0, -4.017353057861328e-05, 0.0, -0.13811039924621582, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n"}, {"score": -3.151499522514733, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.8984673023223877, -2.3841855067985307e-07, -0.00036907196044921875, -0.02037525177001953, -0.0010700225830078125, -0.0004177093505859375, -9.918212890625e-05, -0.0045841895043849945, 0.0, -0.016823768615722656, -0.030191421508789062, -0.000274658203125, -1.9073486328125e-06, 0.0, -0.0007152557373046875, -6.67572021484375e-05, -0.000278472900390625, 0.0, -0.0002613067626953125, 0.0, -3.635883331298828e-05, 0.0, -0.12952959537506104, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -4.176800809465462, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "calculate_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -3.7780373096466064, -1.1920928244535389e-07, -0.013361930847167969, -0.08229637145996094, -0.0018157958984375, -0.0061931610107421875, -0.0001659393310546875, -0.012261694297194481, 0.0, -0.029109954833984375, -0.025197982788085938, -0.000392913818359375, -1.9073486328125e-06, 0.0, -0.00064849853515625, -0.0002193450927734375, -0.000316619873046875, 0.0, -0.000125885009765625, 0.0, -3.826618194580078e-05, 0.0, -0.17868006229400635, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack(1 - self.target.calculate_attack())\n"}, {"score": -4.302022019066037, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.3136638402938843, -1.9073486328125e-06, -9.5367431640625e-05, -3.6527605056762695, -0.005911827087402344, -0.01389312744140625, -0.000186920166015625, -0.002745412290096283, 0.0, -0.015104293823242188, -0.10915851593017578, -0.000415802001953125, 0.0, 0.0, -0.000392913818359375, -9.34600830078125e-05, -0.0002689361572265625, 0.0, -0.00039005279541015625, 0.0, -3.635883331298828e-05, 0.0, -0.13896572589874268, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1 - self.target.calculate_attack())\n"}, {"score": -4.318150894381226, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -3.9197890758514404, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000148773193359375, 0.0, -0.000423431396484375, -1.71661376953125e-05, -9.5367431640625e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.00026702880859375, -4.780292510986328e-05, -0.0011993646621704102, 0.0, -0.004650115966796875, -0.00682830810546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023555755615234375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.3127481937408447, -1.9073486328125e-06, -9.5367431640625e-05, -0.05644798278808594, 0.0, -0.000102996826171875, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-05, -6.103515625e-05, 0.0, -0.008808732032775879, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -5.316810028292359, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 124, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "<UNK>", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0"}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -5.087745666503906, -6.103515625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.19010138511657715, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"score": -5.335026399828614, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -4.93015718460083, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.0001125335693359375, 0.0, -0.0004558563232421875, -1.1444091796875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.00028228759765625, -4.780292510986328e-05, -0.0011975765228271484, 0.0, -0.004634857177734375, -0.0068187713623046875, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.3191782236099243, -1.9073486328125e-06, -9.72747802734375e-05, -0.05648517608642578, 0.0, -0.000102996826171875, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-05, -6.103515625e-05, 0.0, -0.008839249610900879, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -5.401677475907, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 1, "_type": "Num"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.0581061840057373, -2.3841855067985307e-07, -0.0001697540283203125, -3.246211051940918, -0.000911712646484375, -0.04834148287773132, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score": -5.655236856676758, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 35, 112, "temp_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "temp_attack", "_type": "Name"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.3136638402938843, -1.9073486328125e-06, -9.5367431640625e-05, -3.724574089050293, 0.0, -1.5689455270767212, -1.9073486328125e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(temp_attack)\n"}, {"score": -5.878361003138238, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -5.283440113067627, -1.1920928244535389e-07, -0.0001697540283203125, -0.05366992950439453, 0.0, -0.49314403533935547, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.104608877692456, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"n": 1, "_type": "Num"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.0581061840057373, -2.3841855067985307e-07, -0.0001697540283203125, -0.09473514556884766, -0.0014324188232421875, -0.0017490386962890625, -0.0002193450927734375, -0.003028894541785121, -1.9073486328125e-06, -0.015227317810058594, -3.877838134765625, -0.0006580352783203125, -0.0035052921157330275, -1.1920928244535389e-07], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - 1)\n"}, {"score": -6.435024873944222, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "<UNK>", "_type": "Name"}]}], "name": "DivineSpirit", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.0581061840057373, -2.3841855067985307e-07, -0.0001697540283203125, -3.0815963745117188, 0.0, -1.2472100257873535, -5.245203283266164e-06], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(<UNK>)\n"}, {"score": -16.425704956054688, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -16.425689697265625], "inferred_code": "break\n"}, {"score": -23.34174156188965, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -23.34173011779785], "inferred_code": ""}], "index": 24}
{"beams": [{"score": -0.02923232301021983, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 4, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -0.006843585520982742, -1.1920928244535389e-07, -3.826618194580078e-05, 0.0, -0.0008807182312011719, 0.0, -0.0001049041748046875, -3.814697265625e-06, -1.1444091796875e-05, -0.0001125335693359375, -0.00024509301874786615, 0.0, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -0.0007171630859375, -1.9073486328125e-06, -0.0005867335712537169, -0.005068567581474781, -0.00019073486328125, -0.00051116943359375, -3.814697265625e-06, -0.003493126016110182, -0.001839515520259738, -0.00022004345373716205, -0.0001220703125, 0.0, -1.3828277587890625e-05, -7.152556463552173e-06, -5.7220458984375e-06, -4.76837158203125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -5.640077971184262, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 2, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -5.62086820602417, -2.3841855067985307e-07, -4.398822784423828e-05, 0.0, -0.0005123615264892578, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -0.00021827103046234697, 0.0, -0.0002346038818359375, -1.71661376953125e-05, 0.0, -0.000213623046875, 0.0, -0.0006179335759952664, -0.0033452841453254223, -0.0001392364501953125, -0.0002651214599609375, -3.814697265625e-06, -0.0033245752565562725, -0.0017126771854236722, -0.00023219974536914378, -0.0001277923583984375, 0.0, -1.3828277587890625e-05, -7.390974587906385e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.047681851585189, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dragonling", " ", "Mechanic", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -4.9601593017578125, -7.62939453125e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0001678466796875, -1.9073486328125e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.00013637542724609375, -4.88758041683468e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00025868418742902577, -2.3841855067985307e-07, -1.9073486328125e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -3.063656549784355e-05, -1.3232214769232087e-05, -0.0010448682587593794, 0.0, -0.0003147125244140625, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00013208389282226562, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.0029926300048828125, -0.0004062652587890625, -1.71661376953125e-05, -0.00016295909881591797, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.007397651672363281, 0.0, -1.0524673461914062, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -9.548664093017578e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -0.000408172607421875, -0.0003362823335919529, 0.0, -3.62396240234375e-05, -0.000278472900390625, 0.0, -0.0011119842529296875, 0.0, -0.0007112609455361962, -0.0007855190197005868, -0.0001277923583984375, -0.0001068115234375, -9.5367431640625e-06, -0.014672722667455673, -0.0020296568982303143, -0.00020800343190785497, -9.918212890625e-05, 0.0, -1.3828277587890625e-05, -1.1682508556987159e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Summon(MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.121183778959811, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "Mechanical", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 0, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -6.099487781524658, -6.675497570540756e-05, -4.220008850097656e-05, 0.0, -0.0006271600723266602, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -0.00024199398467317224, 0.0, -0.0002193450927734375, -1.52587890625e-05, 0.0, -0.0006113052368164062, -1.9073486328125e-06, -0.0006170073756948113, -0.004855882376432419, -0.0001735687255859375, -0.0004138946533203125, -3.814697265625e-06, -0.0034397300332784653, -0.0017996991518884897, -0.00022826771601103246, -0.000125885009765625, 0.0, -1.3828277587890625e-05, -7.271765298355604e-06, -5.7220458984375e-06, -4.76837158203125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.2637230993396, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 4, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"hole0": "Dragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -0.006843585520982742, -1.1920928244535389e-07, -3.826618194580078e-05, 0.0, -0.0008807182312011719, 0.0, -0.0001049041748046875, -3.814697265625e-06, -1.1444091796875e-05, -0.0001125335693359375, -0.00024509301874786615, 0.0, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -0.0007171630859375, -1.9073486328125e-06, -0.0005867335712537169, -0.005068567581474781, -0.00019073486328125, -0.00051116943359375, -3.814697265625e-06, -5.769786357879639, -0.4685066342353821, -0.0018520355224609375, 0.0, -5.316734313964844e-05, -6.31808916295995e-06, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-05, -1.5497195136049413e-06, -1.1920928244535389e-07, -4.0531158447265625e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Dragonling()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.298727268523912, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dragonling", " ", "Mechanic", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -4.9601593017578125, -7.62939453125e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0001678466796875, -1.9073486328125e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.00013637542724609375, -4.88758041683468e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00025868418742902577, -2.3841855067985307e-07, -1.9073486328125e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -3.063656549784355e-05, -1.3232214769232087e-05, -0.0010448682587593794, 0.0, -0.0003147125244140625, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00013208389282226562, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.0029926300048828125, -0.0004062652587890625, -1.71661376953125e-05, -0.00016295909881591797, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.007397651672363281, 0.0, -1.3014335632324219, 0.0, -0.0002117156982421875, -8.58306884765625e-05, -0.0001246929168701172, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -0.0003108978271484375, -0.0007565930718556046, 0.0, -2.09808349609375e-05, -0.000255584716796875, 0.0, -0.00084686279296875, 0.0, -0.0007165419519878924, -0.0007164295529946685, -0.0001068115234375, -0.0001773834228515625, -9.5367431640625e-06, -0.01639827899634838, -0.002098440658301115, -0.00019680007244460285, -9.1552734375e-05, 0.0, -1.3828277587890625e-05, -1.1682508556987159e-05, -5.7220458984375e-06, -0.0001049041748046875, -7.62939453125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Summon(MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.42646809687794, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Mechanic", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 4, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"hole0": "MechanicalMechanic", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -0.006843585520982742, -1.1920928244535389e-07, -3.826618194580078e-05, 0.0, -0.0008807182312011719, 0.0, -0.0001049041748046875, -3.814697265625e-06, -1.1444091796875e-05, -0.0001125335693359375, -0.00024509301874786615, 0.0, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -0.0007171630859375, -1.9073486328125e-06, -0.0005867335712537169, -0.005068567581474781, -0.00019073486328125, -0.00051116943359375, -3.814697265625e-06, -0.003493126016110182, -6.380752086639404, -0.005937698297202587, -0.012554168701171875, 0.0, -2.1576881408691406e-05, -1.442432312614983e-05, 0.0, -0.0002155303955078125, -3.814697265625e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -5.9604644775390625e-06, -4.768370445162873e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.79967142293372, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dragonling", " ", "Mechanic", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -4.9601593017578125, -7.62939453125e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0001678466796875, -1.9073486328125e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.00013637542724609375, -4.88758041683468e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00025868418742902577, -2.3841855067985307e-07, -1.9073486328125e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -3.063656549784355e-05, -1.3232214769232087e-05, -0.0010448682587593794, 0.0, -0.0003147125244140625, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00013208389282226562, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.0029926300048828125, -0.0004062652587890625, -1.71661376953125e-05, -0.00016295909881591797, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.007397651672363281, 0.0, -1.8042964935302734, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -4.6253204345703125e-05, 0.0, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -0.000408172607421875, -0.0003995768493041396, 0.0, -2.288818359375e-05, -0.0002574920654296875, 0.0, -0.0008602142333984375, -1.9073486328125e-06, -0.0005904067656956613, -0.0009846605826169252, -0.0001354217529296875, -0.0001277923583984375, -9.5367431640625e-06, -0.014962885528802872, -0.0020686383359134197, -0.00021014879166614264, -9.34600830078125e-05, 0.0, -1.3828277587890625e-05, -1.1682508556987159e-05, -5.7220458984375e-06, -0.0001068115234375, -7.62939453125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Summon(MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.200041025029172, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dragonling", " ", "Mechanic", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -4.9601593017578125, -7.62939453125e-06, -3.814697265625e-06, -5.14984130859375e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0001678466796875, -1.9073486328125e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.00013637542724609375, -4.88758041683468e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00025868418742902577, -2.3841855067985307e-07, -1.9073486328125e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -3.063656549784355e-05, -1.3232214769232087e-05, -0.0010448682587593794, 0.0, -0.0003147125244140625, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00013208389282226562, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.0029926300048828125, -0.0004062652587890625, -1.71661376953125e-05, -0.00016295909881591797, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.007397651672363281, 0.0, -2.202408790588379, 0.0, -3.814697265625e-06, -9.918212890625e-05, -6.723403930664062e-05, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0002384185791015625, -0.0006423996528610587, 0.0, -2.6702880859375e-05, -0.0002689361572265625, 0.0, -0.000911712646484375, 0.0, -0.0007364507182501256, -0.0006368515896610916, -9.5367431640625e-05, -0.000125885009765625, -9.5367431640625e-06, -0.01723336987197399, -0.0020742411725223064, -0.0001941779046319425, -8.58306884765625e-05, 0.0, -1.3828277587890625e-05, -1.1682508556987159e-05, -3.814697265625e-06, -0.0001049041748046875, -7.62939453125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Summon(MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.287904400204852, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Dragonling", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 4, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"hole0": "DragonlingDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -0.006843585520982742, -1.1920928244535389e-07, -3.826618194580078e-05, 0.0, -0.0008807182312011719, 0.0, -0.0001049041748046875, -3.814697265625e-06, -1.1444091796875e-05, -0.0001125335693359375, -0.00024509301874786615, 0.0, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -0.0007171630859375, -1.9073486328125e-06, -0.0005867335712537169, -0.005068567581474781, -0.00019073486328125, -0.00051116943359375, -3.814697265625e-06, -5.769786357879639, -1.4942995309829712, -0.00010871337144635618, -0.0001010894775390625, -1.9073486328125e-06, -3.647804260253906e-05, -6.79492904964718e-06, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -2.622604142743512e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -3.576278118089249e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            DragonlingDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.53957423262311, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "Mechanical", "Mechanical", "<EOS>", 163, 37, 117, "4", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 4, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"n": 4, "_type": "Num"}], "func": {"id": "SummonMechanicalMechanical", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -0.006843585520982742, -1.1920928244535389e-07, -3.826618194580078e-05, 0.0, -0.0008807182312011719, 0.0, -0.0001049041748046875, -3.814697265625e-06, -1.1444091796875e-05, -0.0001125335693359375, -0.00024509301874786615, 0.0, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -0.0007171630859375, -1.9073486328125e-06, -0.0005867335712537169, -5.29085636138916, -0.1291632056236267, -0.35611608624458313, -0.0023345947265625, -0.0075588226318359375, -0.0014553070068359375, -1.6092675924301147, 0.0, -0.10380363464355469, 0.0, -0.021280765533447266, -2.9802317840221804e-06, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -3.933906555175781e-06, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(\n            SummonMechanicalMechanical(4), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.7006774840849275, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "Mechanic", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 0, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -7.679831027984619, -5.960462772236497e-07, -6.687638233415782e-05, 0.0, -0.00042498111724853516, 0.0, -0.00011444091796875, -1.9073486328125e-06, -1.1444091796875e-05, -5.53131103515625e-05, -0.00020241648599039763, 0.0, -0.00023651123046875, -1.71661376953125e-05, 0.0, -0.0005350112915039062, -1.9073486328125e-06, -0.0005296303424984217, -0.004322369582951069, -0.000156402587890625, -0.000392913818359375, -3.814697265625e-06, -0.0035020674113184214, -0.001876827678643167, -0.00023506133584305644, -0.000133514404296875, 0.0, -1.3828277587890625e-05, -7.271765298355604e-06, -5.7220458984375e-06, -4.9591064453125e-05, -9.5367431640625e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -5.841255187988281e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.8250118701851505, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Dragonling", "Mechanic", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 4, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"hole0": "DragonlingMechanic", "_type": "Template18"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -0.006843585520982742, -1.1920928244535389e-07, -3.826618194580078e-05, 0.0, -0.0008807182312011719, 0.0, -0.0001049041748046875, -3.814697265625e-06, -1.1444091796875e-05, -0.0001125335693359375, -0.00024509301874786615, 0.0, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -0.0007171630859375, -1.9073486328125e-06, -0.0005867335712537169, -0.005068567581474781, -0.00019073486328125, -0.00051116943359375, -3.814697265625e-06, -5.769786357879639, -2.0206332206726074, -7.962863310240209e-05, -0.0108489990234375, 0.0, -1.7523765563964844e-05, -1.5854835510253906e-05, -1.9073486328125e-06, -0.0001468658447265625, -5.7220458984375e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -5.9604644775390625e-06, -4.768370445162873e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            DragonlingMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -8.012169566675638, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "Mechanical", "Mechanical", "<EOS>", 163, 37, 117, "2", "<EOS>", 30, 87, 19, 112, "Player", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 4, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "SummonMechanicalMechanical", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Dragonling Mechanic", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "DragonlingMechanic", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -0.006843585520982742, -1.1920928244535389e-07, -3.826618194580078e-05, 0.0, -0.0008807182312011719, 0.0, -0.0001049041748046875, -3.814697265625e-06, -1.1444091796875e-05, -0.0001125335693359375, -0.00024509301874786615, 0.0, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -0.0007171630859375, -1.9073486328125e-06, -0.0005867335712537169, -5.29085636138916, -0.1291632056236267, -0.35611608624458313, -0.0023345947265625, -0.0075588226318359375, -0.0014553070068359375, -0.8214396238327026, 0.0, -0.325775146484375, -0.0074825286865234375, -3.814697265625e-06, 0.0, -1.0204341411590576, -8.344650268554688e-06, -2.86102294921875e-05, -0.002288818359375, -7.62939453125e-06, -9.5367431640625e-06, -0.015632152557373047, -7.62939453125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.013493776321411133, -1.9073486328125e-06, 0.0, -0.00028228759765625, -1.52587890625e-05, -4.410743713378906e-06, -1.1920928244535389e-07, -7.86781220085686e-06, -3.576278118089249e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(\n            SummonMechanicalMechanical(2), PlayerSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -22.542224884033203, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -22.542219161987305], "inferred_code": ""}], "index": 25}
{"beams": [{"score": -0.1617820053903074, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -0.011552810668945312, -1.9073486328125e-06, -0.0004749298095703125, -2.47955322265625e-05, -4.76837158203125e-05, 0.0, -8.96453857421875e-05, -6.103515625e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.1444091796875e-05, -3.4809112548828125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008319605840370059, -1.1920928244535389e-07, -0.0014295578002929688, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.000202178955078125, -2.86102294921875e-05, -5.3286508773453534e-05, -1.1801719665527344e-05, -0.0001697540283203125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.00052642822265625, -0.0004062652587890625, -0.0055179595947265625, -0.0014829635620117188, -0.00015794446517247707, -5.960462772236497e-07, -0.0002880096435546875, -1.9073486328125e-06, -0.014070510864257812, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.0005435943603515625, -4.57763671875e-05, -0.00563812255859375, 0.0, -0.018204808235168457, 0.0, -0.00028169091092422605, -1.1920928244535389e-07, -0.0524522066116333, 0.0, -0.000133514404296875, -0.0009212493896484375, -3.814697265625e-06, -0.0010280609130859375, -1.1444091796875e-05, -0.000835418701171875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028727054595947266, 0.0, -7.62939453125e-06, -0.0002002716064453125, -0.0003566741943359375, -0.00010662339627742767, -7.152555099310121e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.8862068322487175e-05, -3.933898824470816e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -3.3111031536266182, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -0.011552810668945312, -1.9073486328125e-06, -0.0004749298095703125, -2.47955322265625e-05, -4.76837158203125e-05, 0.0, -8.96453857421875e-05, -6.103515625e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.1444091796875e-05, -3.4809112548828125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008319605840370059, -1.1920928244535389e-07, -0.0014295578002929688, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.000202178955078125, -2.86102294921875e-05, -5.3286508773453534e-05, -1.1801719665527344e-05, -0.0001697540283203125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.00052642822265625, -0.0004062652587890625, -0.0055179595947265625, -0.0014829635620117188, -0.00015794446517247707, -5.960462772236497e-07, -0.0002880096435546875, -1.9073486328125e-06, -0.014070510864257812, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.0005435943603515625, -4.57763671875e-05, -0.00563812255859375, 0.0, -0.018204808235168457, 0.0, -0.00028169091092422605, -1.1920928244535389e-07, -3.2060909271240234, 0.0, -0.000209808349609375, -0.00171661376953125, -3.4332275390625e-05, -5.924691504333168e-05, -2.3841855067985307e-07, 0.0, -0.0002002716064453125, -2.8371809094096534e-05, -2.3841855067985307e-07], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.350169057190499, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 24, 144, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -0.011552810668945312, -1.9073486328125e-06, -0.0004749298095703125, -2.47955322265625e-05, -4.76837158203125e-05, 0.0, -8.96453857421875e-05, -6.103515625e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.1444091796875e-05, -3.4809112548828125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008319605840370059, -1.1920928244535389e-07, -0.0014295578002929688, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.000202178955078125, -2.86102294921875e-05, -5.3286508773453534e-05, -1.1801719665527344e-05, -0.0001697540283203125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.00052642822265625, -0.0004062652587890625, -0.0055179595947265625, -0.0014829635620117188, -0.00015794446517247707, -5.960462772236497e-07, -0.0002880096435546875, -1.9073486328125e-06, -4.286140441894531, -0.0001392364501953125, -0.0007099562790244818, -1.1920928244535389e-07], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.388062528632027, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -0.011552810668945312, -1.9073486328125e-06, -0.0004749298095703125, -2.47955322265625e-05, -4.76837158203125e-05, 0.0, -8.96453857421875e-05, -6.103515625e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.1444091796875e-05, -3.4809112548828125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008319605840370059, -1.1920928244535389e-07, -0.0014295578002929688, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.000202178955078125, -2.86102294921875e-05, -5.3286508773453534e-05, -1.1801719665527344e-05, -0.0001697540283203125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.00052642822265625, -0.0004062652587890625, -0.0055179595947265625, -0.0014829635620117188, -0.00015794446517247707, -5.960462772236497e-07, -0.0002880096435546875, -1.9073486328125e-06, -0.014070510864257812, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.0005435943603515625, -4.57763671875e-05, -0.00563812255859375, 0.0, -4.175325393676758, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.12507057189941406, 0.0, -0.0001125335693359375, -0.00011444091796875, -1.9073486328125e-06, -0.0001850128173828125, -2.288818359375e-05, -8.58306884765625e-05, 0.0, -2.288818359375e-05, -7.62939453125e-06, -0.0015221834182739258, 0.0, -7.62939453125e-06, -0.00040435791015625, -0.000682830810546875, -0.00010502617806196213, -7.152555099310121e-07, -3.814697265625e-06, -7.62939453125e-06, -2.0265499188099056e-05, -6.198863957251888e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.heal(player.effective_heal_power(2), self)\n"}, {"score": -4.421951854200927, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -4.2866411209106445, -5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.001422882080078125, 0.0, -0.0012874603271484375, -3.24249267578125e-05, -1.1444091796875e-05, -0.00014495849609375, 0.0, -0.000461578369140625, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -5.7220458984375e-06, -0.00208282470703125, -3.814697265625e-06, -0.01202690601348877, -1.9073486328125e-06, -0.00045013427734375, -2.288818359375e-05, -4.9591064453125e-05, 0.0, -9.1552734375e-05, -6.103515625e-05, -3.814697265625e-05, -4.649161837733118e-06, 0.0, -1.33514404296875e-05, -3.4928321838378906e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008336295140907168, -1.1920928244535389e-07, -0.0013952255249023438, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0002079010009765625, -2.6702880859375e-05, -5.364413300412707e-05, -1.1801719665527344e-05, -0.000171661376953125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.00052642822265625, -0.00040435791015625, -0.00551605224609375, -0.0014858245849609375, -0.0001579444797243923, -5.960462772236497e-07, -0.00028228759765625, -1.9073486328125e-06, -0.014116287231445312, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.000545501708984375, -4.57763671875e-05, -0.0055484771728515625, 0.0, -0.01826488971710205, 0.0, -0.00028347905026748776, -1.1920928244535389e-07, -0.05244934558868408, 0.0, -0.000133514404296875, -0.0009212493896484375, -3.814697265625e-06, -0.0010280609130859375, -1.1444091796875e-05, -0.000835418701171875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028727054595947266, 0.0, -7.62939453125e-06, -0.0002002716064453125, -0.0003566741943359375, -0.00010732375085353851, -7.152555099310121e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.8862068322487175e-05, -3.933898824470816e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -4.921643348082462, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -4.770190238952637, 0.0, -0.0015010833740234375, -0.0001068115234375, -8.58306884765625e-05, 0.0, -6.103515625e-05, -6.29425048828125e-05, -5.7220458984375e-05, -8.70227722771233e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0005823364481329918, 0.0, -0.0016002655029296875, -3.814697265625e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0002155303955078125, -2.86102294921875e-05, -5.733962098020129e-05, -9.894371032714844e-06, -0.00017547607421875, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.817413330078125e-05, -1.9073486328125e-06, -0.0005035400390625, -0.0003795623779296875, -0.0055389404296875, -0.0015506744384765625, -0.00015913652896415442, -5.960462772236497e-07, -0.00023651123046875, -1.9073486328125e-06, -0.014034271240234375, -0.00079345703125, -9.5367431640625e-06, 0.0, -0.000522613525390625, -4.57763671875e-05, -0.0056972503662109375, 0.0, -0.01852715015411377, 0.0, -0.00028359825955703855, -1.1920928244535389e-07, -0.05228149890899658, 0.0, -0.000133514404296875, -0.0009212493896484375, -3.814697265625e-06, -0.0010356903076171875, -1.1444091796875e-05, -0.0008335113525390625, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.002878427505493164, 0.0, -7.62939453125e-06, -0.0002002716064453125, -0.00035858154296875, -0.00010709278285503387, -7.152555099310121e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.8862068322487175e-05, -3.933898824470816e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -5.1960639688837205, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -5.05853271484375, -6.103515625e-05, -1.9073486328125e-06, 0.0, -9.918212890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.001705169677734375, 0.0, -0.002368927001953125, -2.09808349609375e-05, -9.5367431640625e-06, -0.000270843505859375, 0.0, -0.000743865966796875, -6.29425048828125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.0023250579833984375, -3.814697265625e-06, -0.012175679206848145, -1.9073486328125e-06, -0.0004730224609375, -2.47955322265625e-05, -4.76837158203125e-05, 0.0, -9.1552734375e-05, -6.29425048828125e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.33514404296875e-05, -3.4928321838378906e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008478154195472598, -1.1920928244535389e-07, -0.001415252685546875, -3.814697265625e-06, 0.0, -0.0001678466796875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00020599365234375, -2.86102294921875e-05, -5.352492371457629e-05, -1.1801719665527344e-05, -0.000171661376953125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.0005283355712890625, -0.00040435791015625, -0.0055179595947265625, -0.001483917236328125, -0.0001579444797243923, -5.960462772236497e-07, -0.000286102294921875, -1.9073486328125e-06, -0.014095306396484375, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.000545501708984375, -4.57763671875e-05, -0.005596160888671875, 0.0, -0.01811802387237549, 0.0, -0.00028359825955703855, -1.1920928244535389e-07, -0.0524522066116333, 0.0, -0.000133514404296875, -0.0009212493896484375, -3.814697265625e-06, -0.0010280609130859375, -1.1444091796875e-05, -0.000835418701171875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028727054595947266, 0.0, -7.62939453125e-06, -0.0002002716064453125, -0.0003566741943359375, -0.00010685622692108154, -7.152555099310121e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.8862068322487175e-05, -3.933898824470816e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -5.514566017542428, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -0.011552810668945312, -1.9073486328125e-06, -0.0004749298095703125, -2.47955322265625e-05, -4.76837158203125e-05, 0.0, -8.96453857421875e-05, -6.103515625e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.1444091796875e-05, -3.4809112548828125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008319605840370059, -1.1920928244535389e-07, -0.0014295578002929688, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.000202178955078125, -2.86102294921875e-05, -5.3286508773453534e-05, -1.1801719665527344e-05, -0.0001697540283203125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.00052642822265625, -0.0004062652587890625, -0.0055179595947265625, -0.0014829635620117188, -0.00015794446517247707, -5.960462772236497e-07, -0.0002880096435546875, -1.9073486328125e-06, -0.014070510864257812, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.0005435943603515625, -4.57763671875e-05, -5.200361251831055, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.11031842231750488, 0.0, -0.015220994129776955, -1.1920922133867862e-06, -0.011970396153628826, -2.3841855067985307e-07, -0.09080231189727783, 0.0, -0.0003108978271484375, -0.0010471343994140625, -3.814697265625e-06, -0.0007781982421875, -1.1444091796875e-05, -0.0013408660888671875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0029489994049072266, 0.0, -7.62939453125e-06, -0.000202178955078125, -0.00034332275390625, -9.01566818356514e-05, -7.152555099310121e-07, -3.814697265625e-06, -9.5367431640625e-06, -3.671630474855192e-05, -4.887569048150908e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -5.75573270572513, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Drain Life", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -5.380959510803223, -3.814697265625e-05, -1.4305038348538801e-05, -2.133846101060044e-05, -4.649161837733118e-06, 0.0, -0.06348884105682373, -2.741813204920618e-06, -0.1950359344482422, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.00012969970703125, -0.000881195068359375, -1.0371208190917969e-05, 0.0, -1.71661376953125e-05, -5.1975250244140625e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0006930827512405813, -3.576278118089249e-07, -0.0006923675537109375, -4.38690185546875e-05, 0.0, -4.1961669921875e-05, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.0001068115234375, -2.6702880859375e-05, -0.00010192394256591797, -7.987022399902344e-06, -0.0001506805419921875, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.984306335449219e-05, -1.9073486328125e-06, -0.00540924072265625, -0.0005950927734375, -0.005828857421875, -0.00140380859375, -0.00014626425399910659, -7.152555099310121e-07, -0.00045013427734375, -1.9073486328125e-06, -0.01209259033203125, -0.000553131103515625, -5.7220458984375e-06, 0.0, -0.000400543212890625, -6.4849853515625e-05, -0.008934974670410156, 0.0, -0.018800020217895508, 0.0, -0.00027453835355117917, -2.3841855067985307e-07, -0.05117630958557129, 0.0, -0.0001373291015625, -0.0009765625, -3.814697265625e-06, -0.0010166168212890625, -1.1444091796875e-05, -0.00081634521484375, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028192996978759766, 0.0, -7.62939453125e-06, -0.0002040863037109375, -0.00035858154296875, -9.466242045164108e-05, -8.344646857949556e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.910048326360993e-05, -4.0531076592742465e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -6.260539734335509, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -6.12370491027832, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -0.0012760162353515625, 0.0, -0.002147674560546875, -2.09808349609375e-05, -9.5367431640625e-06, -0.000209808349609375, 0.0, -0.0006198883056640625, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -5.91278076171875e-05, -5.7220458984375e-06, -0.0021839141845703125, -1.9073486328125e-06, -0.012531280517578125, -1.9073486328125e-06, -0.00048828125, -2.47955322265625e-05, -5.14984130859375e-05, 0.0, -9.1552734375e-05, -6.103515625e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.33514404296875e-05, -3.4928321838378906e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008376826299354434, -1.1920928244535389e-07, -0.0013942718505859375, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0002079010009765625, -2.6702880859375e-05, -5.364413300412707e-05, -1.1801719665527344e-05, -0.000171661376953125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.0005245208740234375, -0.00040435791015625, -0.0055141448974609375, -0.0014848709106445312, -0.0001579444797243923, -5.960462772236497e-07, -0.0002841949462890625, -1.9073486328125e-06, -0.014108657836914062, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.000545501708984375, -4.57763671875e-05, -0.0055599212646484375, 0.0, -0.01821911334991455, 0.0, -0.00028347905026748776, -1.1920928244535389e-07, -0.0524522066116333, 0.0, -0.000133514404296875, -0.0009212493896484375, -3.814697265625e-06, -0.0010280609130859375, -1.1444091796875e-05, -0.000835418701171875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028727054595947266, 0.0, -7.62939453125e-06, -0.0002002716064453125, -0.0003566741943359375, -0.00010732375085353851, -7.152555099310121e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.8862068322487175e-05, -3.933898824470816e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -6.312077019120181, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_temp_attack", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -0.011552810668945312, -1.9073486328125e-06, -0.0004749298095703125, -2.47955322265625e-05, -4.76837158203125e-05, 0.0, -8.96453857421875e-05, -6.103515625e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.1444091796875e-05, -3.4809112548828125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008319605840370059, -1.1920928244535389e-07, -0.0014295578002929688, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.000202178955078125, -2.86102294921875e-05, -5.3286508773453534e-05, -1.1801719665527344e-05, -0.0001697540283203125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.00052642822265625, -0.0004062652587890625, -0.0055179595947265625, -0.0014829635620117188, -0.00015794446517247707, -5.960462772236497e-07, -0.0002880096435546875, -1.9073486328125e-06, -0.014070510864257812, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.0005435943603515625, -4.57763671875e-05, -0.00563812255859375, 0.0, -0.018204808235168457, 0.0, -0.00028169091092422605, -1.1920928244535389e-07, -6.203936576843262, 0.0, -1.9073486328125e-06, -0.0003528594970703125, -5.14984130859375e-05, -0.004969164729118347, -1.9073486328125e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.change_temp_attack(2)\n"}, {"score": -6.344248184028281, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "target", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "target", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -6.186823844909668, -1.1920928244535389e-07, -0.003965973854064941, 0.0, -0.00278472900390625, -1.71661376953125e-05, -4.76837158203125e-05, 0.0, -0.0001277923583984375, -5.53131103515625e-05, -3.24249267578125e-05, -4.5299530029296875e-06, 0.0, -1.33514404296875e-05, -2.9087066650390625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0007421965710818768, -1.1920928244535389e-07, -0.0011224746704101562, -3.814697265625e-06, 0.0, -0.0001316070556640625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -6.67572021484375e-05, -2.86102294921875e-05, -4.756450653076172e-05, -9.775161743164062e-06, -0.0001678466796875, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.996227264404297e-05, -1.9073486328125e-06, -0.0007495880126953125, -0.0004482269287109375, -0.005535125732421875, -0.0014581680297851562, -0.00015424974844790995, -7.152555099310121e-07, -0.0003147125244140625, -1.9073486328125e-06, -0.01375579833984375, -0.00079345703125, -7.62939453125e-06, 0.0, -0.000438690185546875, -4.9591064453125e-05, -0.007010459899902344, 0.0, -0.019312143325805664, 0.0, -0.0002808564167935401, -1.1920928244535389e-07, -0.053735971450805664, 0.0, -0.0001373291015625, -0.000946044921875, -3.814697265625e-06, -0.0010089874267578125, -1.1444091796875e-05, -0.0008544921875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028765201568603516, 0.0, -7.62939453125e-06, -0.000202178955078125, -0.00035858154296875, -9.949877858161926e-05, -8.344646857949556e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.898127761203796e-05, -3.933898824470816e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.target.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -6.362551046072959, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DrainLife", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -6.211254119873047, 0.0, -0.0004978179931640625, -2.288818359375e-05, -0.0001087188720703125, 0.0, -4.00543212890625e-05, -4.38690185546875e-05, -2.6702880859375e-05, -4.88758041683468e-06, 0.0, -1.71661376953125e-05, -2.3126602172851562e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0006386032910086215, 0.0, -0.0015726089477539062, -3.814697265625e-06, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00023651123046875, -2.86102294921875e-05, -5.5670687288511544e-05, -1.1801719665527344e-05, -0.0001773834228515625, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.817413330078125e-05, -1.9073486328125e-06, -0.00051116943359375, -0.0003833770751953125, -0.005496978759765625, -0.0015439987182617188, -0.00015854029334150255, -5.960462772236497e-07, -0.0002384185791015625, -1.9073486328125e-06, -0.014169692993164062, -0.0007724761962890625, -9.5367431640625e-06, 0.0, -0.0005626678466796875, -4.1961669921875e-05, -0.0050411224365234375, 0.0, -0.019052624702453613, 0.0, -0.0002895587240345776, -1.1920928244535389e-07, -0.05316269397735596, 0.0, -0.000133514404296875, -0.000926971435546875, -3.814697265625e-06, -0.001033782958984375, -1.1444091796875e-05, -0.00084686279296875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.002901315689086914, 0.0, -7.62939453125e-06, -0.0001983642578125, -0.0003566741943359375, -0.00011148490011692047, -7.152555099310121e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.8862068322487175e-05, -3.933898824470816e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -16.710494995117188, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -16.710477828979492], "inferred_code": "break\n"}, {"score": -23.471288681030273, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -23.47127342224121], "inferred_code": ""}], "index": 26}
{"beams": [{"score": -0.044445254111899146, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -0.0026531219482421875, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00036072731018066406, 0.0, -7.62939453125e-06, -0.0006008148193359375, -6.866455078125e-05, -0.00033630430698394775, -9.775153557711747e-06, -0.008466720581054688, -0.0024166107177734375, -0.0001087188720703125, 0.0, -0.000858306884765625, -0.00015461444854736328, -7.62939453125e-06, -0.0009212493896484375, 0.0, -4.38690185546875e-05, -0.0005779266357421875, -4.57763671875e-05, -0.00337982177734375, -1.9073486328125e-06, -0.000156402587890625, -9.5367431640625e-05, 0.0, -0.0004329681396484375, -0.0001163482666015625, -0.0002103954611811787, -1.776205863279756e-05, -0.0009121395996771753, -2.50339189733495e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -5.320726718806775, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -5.287192344665527, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.000896453857421875, 0.0, -0.0006465911865234375, 0.0, -5.7220458984375e-06, -3.24249267578125e-05, -0.0002579689025878906, 0.0, -5.7220458984375e-06, -0.0005321502685546875, -6.866455078125e-05, -0.0003274455666542053, -7.629387255292386e-06, -0.007426261901855469, -0.0020427703857421875, -8.7738037109375e-05, 0.0, -0.0008754730224609375, -0.00013744831085205078, -7.62939453125e-06, -0.0010128021240234375, 0.0, -4.57763671875e-05, -0.0007076263427734375, -4.76837158203125e-05, -0.0030727386474609375, -1.9073486328125e-06, -0.0001506805419921875, -8.96453857421875e-05, 0.0, -0.0004367828369140625, -0.0001163482666015625, -0.0002084883744828403, -1.8119681044481695e-05, -0.0008835550397634506, -2.50339189733495e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -5.372609584795548, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -5.337386608123779, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, -6.4849853515625e-05, -0.00026226043701171875, 0.0, -0.000202178955078125, -1.71661376953125e-05, -0.00046539306640625, -0.00012600421905517578, 0.0, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0059967041015625, 0.0, -0.00093841552734375, -3.814697265625e-06, -0.0012569427490234375, 0.0, -0.00284576416015625, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -0.00038170814514160156, 0.0, -7.62939453125e-06, -0.0005970001220703125, -6.866455078125e-05, -0.0003364160656929016, -9.775153557711747e-06, -0.008588790893554688, -0.0023555755615234375, -0.0001068115234375, 0.0, -0.0008544921875, -0.00015652179718017578, -7.62939453125e-06, -0.000919342041015625, 0.0, -4.38690185546875e-05, -0.0005702972412109375, -4.57763671875e-05, -0.0034084320068359375, -1.9073486328125e-06, -0.000156402587890625, -9.5367431640625e-05, 0.0, -0.0004329681396484375, -0.0001163482666015625, -0.0002103954611811787, -1.776205863279756e-05, -0.0009130923426710069, -2.50339189733495e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -5.723975324398673, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -0.0026531219482421875, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00036072731018066406, 0.0, -7.62939453125e-06, -0.0006008148193359375, -6.866455078125e-05, -0.00033630430698394775, -9.775153557711747e-06, -5.023743629455566, -0.0002689361572265625, -0.6708439588546753, -5.459785461425781e-05, 0.0, -0.0032024383544921875, -6.866455078125e-05, -0.00010287741315551102, -2.3841830625315197e-06, -0.00016735686222091317, -2.264974000354414e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -5.810445100113604, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -0.0026531219482421875, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00036072731018066406, 0.0, -7.62939453125e-06, -0.0006008148193359375, -6.866455078125e-05, -0.00033630430698394775, -9.775153557711747e-06, -5.023743629455566, -0.0002689361572265625, -0.7382649183273315, -4.6133995056152344e-05, -3.814697265625e-06, -0.022283554077148438, -5.91278076171875e-05, -0.00012338132364675403, -6.198863957251888e-06, -0.00012361339759081602, -3.576272320060525e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -5.820404228461932, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -5.7857232093811035, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.340576171875e-05, -5.91278076171875e-05, -0.00021016597747802734, 0.0, -0.000125885009765625, -1.9073486328125e-05, -0.000637054443359375, -7.450580596923828e-05, 0.0, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.006014823913574219, 0.0, -0.0009918212890625, -3.814697265625e-06, -0.0011425018310546875, 0.0, -0.0026760101318359375, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -0.00036835670471191406, 0.0, -7.62939453125e-06, -0.0005970001220703125, -6.866455078125e-05, -0.00033482909202575684, -7.748596544843167e-06, -0.008458137512207031, -0.0023326873779296875, -0.0001068115234375, 0.0, -0.0008544921875, -0.00015461444854736328, -7.62939453125e-06, -0.0009212493896484375, 0.0, -4.38690185546875e-05, -0.0006008148193359375, -4.57763671875e-05, -0.003307342529296875, -1.9073486328125e-06, -0.000156402587890625, -9.5367431640625e-05, 0.0, -0.0004329681396484375, -0.0001163482666015625, -0.00021015707170590758, -1.788126610335894e-05, -0.0009076137794181705, -2.50339189733495e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -6.9529827994913305, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 89, 19, 112, "Character", "Selector", "<EOS>", 163, 36, 114, "Null", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -0.0026531219482421875, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00036072731018066406, 0.0, -7.62939453125e-06, -0.0006008148193359375, -6.866455078125e-05, -0.00033630430698394775, -9.775153557711747e-06, -0.008466720581054688, -6.081170082092285, -0.00237274169921875, 0.0, -0.009952545166015625, -6.866455078125e-05, 0.0, -0.0001316070556640625, -0.30595970153808594, -0.003917694091796875, -0.0001888275146484375, -1.9073486328125e-06, -0.000583648681640625, -3.62396240234375e-05, -3.814697265625e-06, -0.09856796264648438, -7.62939453125e-06, -0.008122444152832031, -1.52587890625e-05, -0.03876209259033203, -0.0001659393310546875, -1.9073486328125e-06, -0.36865806579589844, -4.38690185546875e-05, -4.231934144627303e-05, -1.1920922133867862e-06, -0.0002187283826060593, -2.9802276912960224e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -7.175051628208614, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 25, 145, 165, 30, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"elts": [{"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "Tuple"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -6.028944969177246, -0.0027923583984375, -0.04019641876220703, -0.13457107543945312, -0.0004062652587890625, -1.71661376953125e-05, -1.9073486328125e-06, -0.019451260566711426, 0.0, -3.62396240234375e-05, -0.0007266998291015625, -9.34600830078125e-05, -0.0017770342528820038, -2.6941073883790523e-05, -0.0023813247680664062, -0.0021305084228515625, -0.0005168914794921875, 0.0, -0.0012722015380859375, -9.167194366455078e-05, -3.814697265625e-06, -0.0007534027099609375, 0.0, -4.00543212890625e-05, -0.0002422332763671875, -6.866455078125e-05, -0.005279541015625, -3.814697265625e-06, -0.0001735687255859375, -9.72747802734375e-05, 0.0, -0.0002288818359375, -0.039834022521972656, -6.103515625e-05, -1.1444091796875e-05, -0.22775650024414062, 0.0, -7.62939453125e-06, -0.001499176025390625, -0.000370025634765625, -0.17338897287845612, -8.583065209677443e-06, -0.0014753341674804688, -0.0033016204833984375, -0.0019588470458984375, 0.0, -0.00171661376953125, -0.00010514259338378906, -1.9073486328125e-06, -0.0006885528564453125, 0.0, -3.24249267578125e-05, -0.0005893707275390625, -4.38690185546875e-05, -0.00395965576171875, -3.814697265625e-06, -0.00017547607421875, -0.0001220703125, 0.0, -0.0002536773681640625, -0.05059337615966797, -6.29425048828125e-05, -1.1444091796875e-05, -0.2174062728881836, 0.0, -7.62939453125e-06, -0.001556396484375, -0.000339508056640625, -0.1638142317533493, -1.0013571227318607e-05, -0.0006666183471679688, -0.0057373046875, -0.003406524658203125, 0.0, -0.0026683807373046875, -0.00011670589447021484, -1.9073486328125e-06, -0.000766754150390625, 0.0, -3.4332275390625e-05, -0.0006847381591796875, -3.4332275390625e-05, -0.0036678314208984375, -3.814697265625e-06, -0.0001678466796875, -0.0001316070556640625, 0.0, -0.0004253387451171875, -0.0001468658447265625, -0.0002499688998796046, -1.7642851162236184e-05, -0.0011957971146330237, -2.50339189733495e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())),\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())),\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -7.220431951604489, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "6", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -0.0026531219482421875, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00036072731018066406, 0.0, -7.62939453125e-06, -0.0006008148193359375, -6.866455078125e-05, -0.00033630430698394775, -9.775153557711747e-06, -0.008466720581054688, -0.0024166107177734375, -0.0001087188720703125, 0.0, -0.000858306884765625, -0.00015461444854736328, -7.62939453125e-06, -0.0009212493896484375, 0.0, -4.38690185546875e-05, -0.0005779266357421875, -4.57763671875e-05, -0.00337982177734375, -1.9073486328125e-06, -0.000156402587890625, -9.5367431640625e-05, 0.0, -0.0004329681396484375, -0.0001163482666015625, -0.0002103954611811787, -1.776205863279756e-05, -7.176900386810303, -9.536738616588991e-07], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 4)\n"}, {"score": -7.34301773326046, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -0.0026531219482421875, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00036072731018066406, 0.0, -7.62939453125e-06, -0.0006008148193359375, -6.866455078125e-05, -0.00033630430698394775, -9.775153557711747e-06, -0.008466720581054688, -0.0024166107177734375, -0.0001087188720703125, 0.0, -0.000858306884765625, -0.00015461444854736328, -7.62939453125e-06, -7.145510673522949, -3.814697265625e-06, -9.5367431640625e-06, -0.0007658004760742188, -9.5367431640625e-06, -0.12541770935058594, -1.9073486328125e-06, -0.0001068115234375, -6.103515625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0037517547607421875, -3.814697265625e-06, -0.019415855407714844, -5.7220458984375e-06, -0.004680752754211426, -2.0742414562846534e-05, 0.0, -0.0055294036865234375, -1.33514404296875e-05, -8.45195900183171e-05, -2.7418097943154862e-06, -7.20013485988602e-05, -4.172316494077677e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -7.516141834579223, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -7.481717586517334, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -7.05718994140625e-05, -0.0001785755157470703, 0.0, -0.000171661376953125, -1.71661376953125e-05, -0.0005283355712890625, -0.00012028217315673828, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -7.62939453125e-06, 0.0, -0.0058727264404296875, 0.0, -0.000926971435546875, -3.814697265625e-06, -0.0010700225830078125, 0.0, -0.0027942657470703125, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00035119056701660156, 0.0, -7.62939453125e-06, -0.0005931854248046875, -6.866455078125e-05, -0.00033733993768692017, -9.775153557711747e-06, -0.008351325988769531, -0.0023479461669921875, -0.0001068115234375, 0.0, -0.0008563995361328125, -0.00015270709991455078, -7.62939453125e-06, -0.0009212493896484375, 0.0, -4.38690185546875e-05, -0.000583648681640625, -4.57763671875e-05, -0.00334930419921875, -1.9073486328125e-06, -0.000156402587890625, -9.5367431640625e-05, 0.0, -0.0004329681396484375, -0.000118255615234375, -0.0002103954611811787, -1.788126610335894e-05, -0.0009094002889469266, -2.50339189733495e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -7.617597211212789, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "6", "<EOS>", 37, 117, "6", "<EOS>", 172, 49, 152, "stealth", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 6, "_type": "Num"}, {"n": 6, "_type": "Num"}], "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "effects", "value": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -0.0026531219482421875, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00036072731018066406, 0.0, -7.62939453125e-06, -0.0006008148193359375, -6.866455078125e-05, -0.00033630430698394775, -9.775153557711747e-06, -0.008466720581054688, -0.0024166107177734375, -0.0001087188720703125, 0.0, -0.000858306884765625, -0.00015461444854736328, -7.62939453125e-06, -0.0009212493896484375, 0.0, -4.38690185546875e-05, -0.0005779266357421875, -4.57763671875e-05, -5.7965898513793945, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -0.0027942657470703125, 0.0, -0.031490325927734375, -3.814697265625e-06, -0.1366710662841797, -2.288818359375e-05, -0.0003414154052734375, -0.000202178955078125, -7.62939453125e-06, -0.000583648681640625, -9.5367431640625e-05, -1.33514404296875e-05, 0.0, 0.0, -0.0004291534423828125, 0.0, -0.001995086669921875, -0.0027256011962890625, -0.00128936767578125, -4.76837158203125e-05, -0.0002231597900390625, -0.0001068115234375, 0.0, -0.000438690185546875, -2.6702880859375e-05, -0.001312255859375, -0.0004901885986328125, -9.5367431640625e-06, -1.1205642294953577e-05, -2.861022494471399e-06, -0.05604267120361328, -5.14984130859375e-05, -0.0009839656995609403, 0.0, -0.0125732421875, -7.62939453125e-06, -1.33514404296875e-05, -0.5199276208877563, -1.9073486328125e-06, -0.026149749755859375, -0.0004062652587890625, -0.012752532958984375, 0.0, -8.0108642578125e-05, -7.62939453125e-06, -0.14418315887451172, 0.0, -0.0001277923583984375, -3.0517578125e-05, -6.103515625e-05, -0.0003509521484375, -1.71661376953125e-05, -3.814697265625e-05, -2.288818359375e-05, -0.005960702896118164, 0.0, -1.71661376953125e-05, -0.0001621246337890625, -0.000213623046875, -0.4692434072494507, -0.005309700965881348, -1.9073486328125e-06, -4.9591064453125e-05, -5.91278076171875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.1961669921875e-05, -0.00022125244140625, 0.0, -0.00014495849609375, -0.019565582275390625, -0.0001010894775390625, -0.1785755753517151, -0.00010418841702630743, -0.0037384033203125, -0.1336345672607422, -0.0003204345703125, 0.0, -0.0021877288818359375, -6.866455078125e-05, -9.5367431640625e-06, -0.001369476318359375, -1.9073486328125e-06, -4.00543212890625e-05, -0.0005054473876953125, -3.62396240234375e-05, -0.0046024322509765625, -3.814697265625e-06, -0.000194549560546875, -0.0001354217529296875, 0.0], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=MINION_TYPE.BEAST)))\n\n    def create_minion(self, player):\n        return Minion(6, 6, stealth=True, effects=[Effect(TurnEnded(),\n            ActionTag(Damage(1), CharacterSelector(players=BothPlayer())))])\n"}, {"score": -8.588074785548535, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 48, 136, "6", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"hole0": 6, "_type": "Template19"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template5"}], "name": "DreadInfernal", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -7.993002891540527, -0.08267498016357422, -0.01743360608816147, -2.753734588623047e-05, -0.4747028350830078, -0.00070953369140625, -8.988352783489972e-05, -2.1099860532558523e-05, -0.00010347168426960707, -5.960446742392378e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, overload=6)\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -17.62949562072754, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -17.629440307617188], "inferred_code": "break\n"}, {"score": -23.84896469116211, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -23.84891128540039], "inferred_code": ""}], "index": 27}
{"beams": [{"score": -0.5033244523228788, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -0.016046524047851562, 0.0, -0.0001964569091796875, 0.0, -0.00013434886932373047, 0.0, -8.58306884765625e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0006952285766601562, 0.0, -1.9073486328125e-06, -0.00147247314453125, -4.9591064453125e-05, -0.00031084194779396057, -5.006789251638111e-06, -0.0003223419189453125, -0.008615493774414062, -0.0001468658447265625, 0.0, -0.00011467933654785156, -8.809561404632404e-05, -6.4849853515625e-05, -0.0003910064697265625, -5.7220458984375e-06, -7.2479248046875e-05, -0.000324249267578125, -1.33514404296875e-05, -8.7738037109375e-05, -1.33514404296875e-05, -0.0013294219970703125, -4.398822784423828e-05, 0.0, -5.14984130859375e-05, 0.0, -0.0010492801666259766, -9.5367431640625e-06, -0.00014495849609375, -7.62939453125e-06, -0.0001544952392578125, -9.572505950927734e-05, 0.0, -0.000209808349609375, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.2926658352371305e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -1.0024560613328433, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Elven Archer", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.9882707595825195, -0.0002765655517578125, -6.318072337307967e-06, -0.00010347366333007812, -1.9073486328125e-06, 0.0, -6.556709195137955e-06, -4.768370445162873e-07, -0.00016021728515625, 0.0, -0.00075531005859375, 0.0, -0.000202178955078125, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0008022785186767578, 0.0, -7.62939453125e-06, -0.0014514923095703125, -5.340576171875e-05, -0.00020944327116012573, -1.4185901818564162e-05, -0.0002574920654296875, -0.005298614501953125, -0.0001239776611328125, 0.0, -0.00014519691467285156, -6.544582720380276e-05, -8.0108642578125e-05, -0.0004520416259765625, -1.33514404296875e-05, -5.7220458984375e-05, -0.000240325927734375, -5.7220458984375e-06, -0.00014495849609375, -7.62939453125e-06, -0.0009059906005859375, -2.872943878173828e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0011522769927978516, -7.62939453125e-06, -0.0001678466796875, -7.62939453125e-06, -0.0001544952392578125, -9.965896606445312e-05, 0.0, -0.000255584716796875, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -3.815850504906848e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.520557942838195, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 89, 19, 112, "Character", "Selector", "<EOS>", 163, 36, 114, "Null", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -0.016046524047851562, 0.0, -0.0001964569091796875, 0.0, -0.00013434886932373047, 0.0, -8.58306884765625e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0006952285766601562, 0.0, -1.9073486328125e-06, -0.00147247314453125, -4.9591064453125e-05, -0.00031084194779396057, -5.006789251638111e-06, -0.0003223419189453125, -4.77535343170166, -0.0001087188720703125, 0.0, -0.000240325927734375, -8.33272933959961e-05, -4.9591064453125e-05, -0.02254486083984375, -0.1736125946044922, -0.003490447998046875, -2.3007374693406746e-05, -3.814697265625e-06, -0.036792755126953125, -6.866455078125e-05, -2.86102294921875e-05, -0.013467192649841309, -0.0004100799560546875, -0.0001201629638671875, -1.1444091796875e-05, -0.0008602142333984375, -0.00044846534729003906, 0.0, -0.0025348663330078125, -4.57763671875e-05, -1.4305121567304013e-06, -2.9802276912960224e-06, -8.226117643062025e-06, -4.768370445162873e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.828811283682619, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "find_spell_target", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "find_spell_target", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -5.336250305175781, 0.0, -0.0049591064453125, -5.7220458984375e-06, -0.00016808509826660156, 0.0, -0.000301361083984375, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.000699162483215332, 0.0, -3.814697265625e-06, -0.0019016265869140625, -4.76837158203125e-05, -0.0002819262444972992, -6.914137884450611e-06, -0.0003299713134765625, -0.00862884521484375, -0.0001506805419921875, 0.0, -0.00010907649993896484, -8.249277743743733e-05, -4.38690185546875e-05, -0.000362396240234375, -5.7220458984375e-06, -7.62939453125e-05, -0.0002899169921875, -1.1444091796875e-05, -8.20159912109375e-05, -1.52587890625e-05, -0.0013370513916015625, -4.398822784423828e-05, 0.0, -5.14984130859375e-05, 0.0, -0.001013040542602539, -9.5367431640625e-06, -0.0001430511474609375, -7.62939453125e-06, -0.0001544952392578125, -9.584426879882812e-05, 0.0, -0.0002040863037109375, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.411867848830298e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.find_spell_target,\n            battlecry=Battlecry(Damage(1), CharacterSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.244458732654486, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -5.757081508636475, 0.0, -6.67572021484375e-05, 0.0, -0.00020635128021240234, 0.0, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -0.0002980232238769531, 0.0, -1.9073486328125e-06, -0.0010986328125, -3.24249267578125e-05, -0.00028294138610363007, -6.914137884450611e-06, -0.0003490447998046875, -0.009649276733398438, -0.000141143798828125, 0.0, -0.00011277198791503906, -8.821482333587483e-05, -4.38690185546875e-05, -0.0003719329833984375, -5.7220458984375e-06, -7.43865966796875e-05, -0.000293731689453125, -1.1444091796875e-05, -8.392333984375e-05, -1.71661376953125e-05, -0.0013427734375, -4.208087921142578e-05, 0.0, -5.14984130859375e-05, 0.0, -0.0010111331939697266, -9.5367431640625e-06, -0.000141143798828125, -7.62939453125e-06, -0.0001544952392578125, -9.393692016601562e-05, 0.0, -0.000202178955078125, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.411867848830298e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.429867643398204, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -5.941714286804199, 0.0, -3.814697265625e-05, 0.0, -0.00010883808135986328, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0002694129943847656, 0.0, -3.814697265625e-06, -0.0013637542724609375, -4.38690185546875e-05, -0.0003098435699939728, -5.006789251638111e-06, -0.0003185272216796875, -0.0102081298828125, -0.0001392364501953125, 0.0, -0.00011467933654785156, -9.405607852386311e-05, -4.9591064453125e-05, -0.000354766845703125, -5.7220458984375e-06, -7.62939453125e-05, -0.000308990478515625, -1.33514404296875e-05, -8.392333984375e-05, -1.71661376953125e-05, -0.0014019012451171875, -4.780292510986328e-05, 0.0, -5.340576171875e-05, 0.0, -0.001058816909790039, -9.5367431640625e-06, -0.0001430511474609375, -7.62939453125e-06, -0.0001544952392578125, -9.381771087646484e-05, 0.0, -0.00020599365234375, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.2926658352371305e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.5211433091567415, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 89, 19, 112, "Character", "Selector", "<EOS>", 163, 36, 114, "Null", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": 1, "_type": "Template17"}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Elven Archer", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.9882707595825195, -0.0002765655517578125, -6.318072337307967e-06, -0.00010347366333007812, -1.9073486328125e-06, 0.0, -6.556709195137955e-06, -4.768370445162873e-07, -0.00016021728515625, 0.0, -0.00075531005859375, 0.0, -0.000202178955078125, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0008022785186767578, 0.0, -7.62939453125e-06, -0.0014514923095703125, -5.340576171875e-05, -0.00020944327116012573, -1.4185901818564162e-05, -0.0002574920654296875, -5.261977195739746, -9.34600830078125e-05, 0.0, -0.0009479522705078125, -4.291534423828125e-05, -4.9591064453125e-05, -0.0698709487915039, -0.0851278305053711, -0.0046558380126953125, -4.4465043174568564e-05, -3.814697265625e-06, -0.08489418029785156, -0.000152587890625, -2.288818359375e-05, -0.015711188316345215, -0.0003185272216796875, -0.0001163482666015625, -1.71661376953125e-05, -0.00107574462890625, -0.00038743019104003906, 0.0, -0.0026397705078125, -4.76837158203125e-05, -1.4305121567304013e-06, -2.7418097943154862e-06, -7.630096661159769e-06, -4.768370445162873e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.350132485379611, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -6.863646984100342, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.164477574406192e-05, 0.0, -0.000152587890625, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -0.00042808055877685547, 0.0, -3.814697265625e-06, -0.0014476776123046875, -4.57763671875e-05, -0.0003003086894750595, -6.914137884450611e-06, -0.000339508056640625, -0.008314132690429688, -0.000148773193359375, 0.0, -0.00011467933654785156, -8.809561404632404e-05, -5.91278076171875e-05, -0.0003871917724609375, -5.7220458984375e-06, -7.2479248046875e-05, -0.00031280517578125, -1.33514404296875e-05, -8.58306884765625e-05, -1.52587890625e-05, -0.0013370513916015625, -4.589557647705078e-05, 0.0, -5.340576171875e-05, 0.0, -0.0010492801666259766, -9.5367431640625e-06, -0.00014495849609375, -7.62939453125e-06, -0.0001544952392578125, -9.572505950927734e-05, 0.0, -0.0002079010009765625, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.2926658352371305e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.578169274610438, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -7.089137554168701, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00010037422180175781, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -0.00036334991455078125, 0.0, -3.814697265625e-06, -0.0013599395751953125, -4.1961669921875e-05, -0.0003279931843280792, -5.125998541188892e-06, -0.0002899169921875, -0.011034011840820312, -0.000118255615234375, 0.0, -0.00011670589447021484, -9.226793918060139e-05, -4.76837158203125e-05, -0.0003528594970703125, -5.7220458984375e-06, -7.82012939453125e-05, -0.0003108978271484375, -1.33514404296875e-05, -8.392333984375e-05, -1.71661376953125e-05, -0.001422882080078125, -4.780292510986328e-05, 0.0, -5.340576171875e-05, 0.0, -0.001058816909790039, -9.5367431640625e-06, -0.0001430511474609375, -7.62939453125e-06, -0.0001544952392578125, -9.381771087646484e-05, 0.0, -0.00020599365234375, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.2926658352371305e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.750273122911487, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "Kill", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "Kill", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -7.262717247009277, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010347366333007812, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -0.0004640817642211914, 0.0, -1.9073486328125e-06, -0.0013675689697265625, -3.814697265625e-05, -0.0002857595682144165, -5.006789251638111e-06, -0.00030517578125, -0.009485244750976562, -0.0001373291015625, 0.0, -0.00011467933654785156, -9.214872989105061e-05, -4.38690185546875e-05, -0.0003681182861328125, -5.7220458984375e-06, -7.43865966796875e-05, -0.000293731689453125, -1.1444091796875e-05, -8.392333984375e-05, -1.71661376953125e-05, -0.001331329345703125, -4.398822784423828e-05, 0.0, -5.14984130859375e-05, 0.0, -0.001024484634399414, -9.5367431640625e-06, -0.000141143798828125, -7.62939453125e-06, -0.0001544952392578125, -9.393692016601562e-05, 0.0, -0.000202178955078125, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.411867848830298e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.Kill, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.818523231375018, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 89, 19, 112, "Character", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -0.016046524047851562, 0.0, -0.0001964569091796875, 0.0, -0.00013434886932373047, 0.0, -8.58306884765625e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0006952285766601562, 0.0, -1.9073486328125e-06, -0.00147247314453125, -4.9591064453125e-05, -0.00031084194779396057, -5.006789251638111e-06, -0.0003223419189453125, -4.77535343170166, -0.0001087188720703125, 0.0, -0.000240325927734375, -8.33272933959961e-05, -4.9591064453125e-05, -0.02254486083984375, -1.857865333557129, 0.0, -0.030957818031311035, -4.589557647705078e-05, -1.9073486328125e-06, -0.000148773193359375, -3.24249267578125e-05, -1.9073486328125e-06, -0.6390378475189209, -7.43865966796875e-05, -0.000949859619140625, -9.5367431640625e-06, -0.000396728515625, -6.341934204101562e-05, 0.0, -0.0002689361572265625, -3.62396240234375e-05, -2.3842198970669415e-07, -7.152555099310121e-07, -4.411769623402506e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -8.532343698376273, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 42, 130, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": 1, "_type": "Template13"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Elven Archer", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.9882707595825195, -0.0002765655517578125, -6.318072337307967e-06, -0.00010347366333007812, -1.9073486328125e-06, 0.0, -6.556709195137955e-06, -4.768370445162873e-07, -0.00016021728515625, 0.0, -0.00075531005859375, 0.0, -0.000202178955078125, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0008022785186767578, 0.0, -7.62939453125e-06, -7.276585578918457, -0.07208824157714844, -0.009721709415316582, -1.0967229172820225e-05, -0.0006742477416992188, -0.16500568389892578, -1.33514404296875e-05, 0.0, -0.012788891792297363, -8.571136277168989e-05, -0.00023651123046875, -0.0004711151123046875, -1.71661376953125e-05, -4.1961669921875e-05, -0.00028228759765625, -5.7220458984375e-06, -0.0001277923583984375, -1.9073486328125e-05, -0.001392364501953125, -4.208087921142578e-05, 0.0, -3.0517578125e-05, 0.0, -0.0010263919830322266, -5.7220458984375e-06, -0.0001697540283203125, -7.62939453125e-06, -0.000148773193359375, -0.00010347366333007812, 0.0, -0.0002498626708984375, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.1734638216439635e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(player.\n            effective_spell_damage(1), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -8.592837634503432, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -0.016046524047851562, 0.0, -0.0001964569091796875, 0.0, -0.00013434886932373047, 0.0, -8.58306884765625e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0006952285766601562, 0.0, -1.9073486328125e-06, -0.00147247314453125, -4.9591064453125e-05, -0.00031084194779396057, -5.006789251638111e-06, -0.0003223419189453125, -0.008615493774414062, -0.0001468658447265625, 0.0, -0.00011467933654785156, -8.809561404632404e-05, -6.4849853515625e-05, -0.0003910064697265625, -5.7220458984375e-06, -7.2479248046875e-05, -0.000324249267578125, -1.33514404296875e-05, -8.7738037109375e-05, -1.33514404296875e-05, -0.0013294219970703125, -4.398822784423828e-05, 0.0, -5.14984130859375e-05, 0.0, -7.478654861450195, 0.0, -0.21399497985839844, -0.18179607391357422, -0.2159252166748047, -1.9073486328125e-06, -0.000835418701171875, -7.62939453125e-06, -6.55649091640953e-06, -8.344646857949556e-07, -4.7690664359834045e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            taunt=True)))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -9.49326013673948, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Elven Archer", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "ElvenArcher", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.9882707595825195, -0.0002765655517578125, -6.318072337307967e-06, -0.00010347366333007812, -1.9073486328125e-06, 0.0, -6.556709195137955e-06, -4.768370445162873e-07, -0.00016021728515625, 0.0, -0.00075531005859375, 0.0, -0.000202178955078125, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0008022785186767578, 0.0, -7.62939453125e-06, -0.0014514923095703125, -5.340576171875e-05, -0.00020944327116012573, -1.4185901818564162e-05, -0.0002574920654296875, -0.005298614501953125, -0.0001239776611328125, 0.0, -0.00014519691467285156, -6.544582720380276e-05, -8.0108642578125e-05, -8.485618591308594, -0.00014495849609375, -7.05718994140625e-05, -0.007328033447265625, -2.86102294921875e-05, -0.0001239776611328125, -9.5367431640625e-06, -0.001049041748046875, -6.29425048828125e-05, 0.0, -5.7220458984375e-05, -9.34600830078125e-05, -3.6954838833480608e-06, -5.245195097813848e-06, -1.6808895452413708e-05, -5.960462772236497e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -21.082965850830078, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -21.082958221435547], "inferred_code": ""}], "index": 28}
{"beams": [{"score": -0.11287998086021389, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 65, 124, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template0"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -0.052776336669921875, -0.012525558471679688, -8.58306884765625e-05, -2.09808349609375e-05, -0.00011539459228515625, -1.9073486328125e-06, -0.013508914969861507, 0.0], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"score": -4.0912249847924045, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 72, 140, "0", "<EOS>", "0", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 0, "hole0": 0, "_type": "Template5"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -3.7494001388549805, -0.010905265808105469, -0.005713938735425472, -0.0009638945339247584, -0.2903282642364502, -6.842533912276849e-05], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(0, 0)\n"}, {"score": -5.584474673068087, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 65, 124, 19, 112, "player", "<EOS>", "heal", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template0"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -0.052776336669921875, -0.012525558471679688, -8.58306884765625e-05, -2.09808349609375e-05, -0.00011539459228515625, -1.9073486328125e-06, -5.485103607177734, 0.0], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.heal()\n"}, {"score": -5.944047679698031, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "False", "<EOS>", 65, 124, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template0"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -5.319704055786133, -0.5097122192382812, -0.054574012756347656, -0.014539718627929688, -0.000110626220703125, -2.6702880859375e-05, -6.866455078125e-05, -1.9073486328125e-06, -0.01660311222076416, 0.0], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"score": -5.9762970646069675, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 72, 140, "0", "<EOS>", "Mana", "0", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 0, "hole0": 0, "_type": "Template5"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -3.7494001388549805, -0.010905265808105469, -0.005713938735425472, -0.0009638945339247584, -1.7281008958816528, -0.44682878255844116, -0.0005390909500420094], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(0, 0)\n"}, {"score": -6.076024164950411, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 65, 124, 19, 112, "player", "<EOS>", "mana", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "mana", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template0"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -0.052776336669921875, -0.012525558471679688, -8.58306884765625e-05, -2.09808349609375e-05, -0.00011539459228515625, -1.9073486328125e-06, -5.976653099060059, 0.0], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.mana()\n"}, {"score": -6.2849329607951745, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 65, 124, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DREAM", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template0"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -6.157695770263672, -9.5367431640625e-06, -0.0002193450927734375, -0.0006580352783203125, -3.814697265625e-06, -1.9073486328125e-06, -0.00018131732940673828, -0.000255584716796875, -0.0008757114410400391, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-05, -0.001962780486792326, -0.0023593902587890625, -0.0760354995727539, -0.014873504638671875, -9.918212890625e-05, -2.09808349609375e-05, -0.000110626220703125, -1.9073486328125e-06, -0.009360193274915218, 0.0], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"score": -6.684317459856999, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 65, 124, 19, 112, "player", "<EOS>", "hero", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "hero", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template0"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -0.052776336669921875, -0.012525558471679688, -8.58306884765625e-05, -2.09808349609375e-05, -0.00011539459228515625, -1.9073486328125e-06, -6.584946155548096, -2.3841855067985307e-07], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero()\n"}, {"score": -7.013551786115329, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 56, 82, 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 52, 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"value": {"n": 1, "_type": "Num"}, "op": {"_type": "Sub"}, "target": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "AugAssign"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -5.457302570343018, -0.05862236022949219, -0.000247955322265625, 0.0, -0.03280353546142578, -3.814697265625e-06, -0.3286924362182617, 0.0, -0.10318005084991455, -1.9073486328125e-06, -0.9678382873535156, -0.010008811950683594, -3.814697265625e-06, -0.020993554964661598, -7.62939453125e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n    MINION_TYPE.BEAST -= 1\n"}, {"score": -7.130971727466147, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 56, 82, 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 51, 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"value": {"n": 1, "_type": "Num"}, "op": {"_type": "Add"}, "target": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "AugAssign"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -5.457302570343018, -0.05862236022949219, -0.000247955322265625, 0.0, -0.03280353546142578, -3.814697265625e-06, -0.3286924362182617, 0.0, -0.10318005084991455, -1.9073486328125e-06, -0.7307376861572266, -0.2678556442260742, -1.9073486328125e-06, -0.11767489463090897, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n    MINION_TYPE.BEAST += 1\n"}, {"score": -7.385871712450125, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 65, 125, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "Mana", "3", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 0, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -0.052776336669921875, -5.311698913574219, -0.24400615692138672, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.19057273864746094, -3.814697265625e-06, -0.006562068127095699, -1.8596476365928538e-05, -0.7205215096473694, -1.1563301086425781e-05, -0.000278472900390625, -0.04792308807373047, -0.0002231597900390625, -0.23855865001678467, -0.467420756816864, -4.410743713378906e-06, -1.9073486328125e-06, -0.0064449310302734375, -0.06497609615325928, -5.960462772236497e-07], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.damage(player.effective_spell_damage(0), self)\n"}, {"score": -9.788360288572164, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 163, 37, 117, "0", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "player", "<EOS>", "<UNK>", "<EOS>", 163, 30, 88, 19, 112, "Aura", "Until", "<EOS>", 165, 30, 88, 19, 112, "<UNK>", "Mana", "Change", "<EOS>", 163, 37, 117, "0", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 46, 135, "Turn", "Ended", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"args": [{"n": 0, "_type": "Num"}], "func": {"id": "<UNK>ManaChange", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}, {"hole0": "TurnEnded", "_type": "Template18"}], "func": {"id": "AuraUntil", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "<UNK>", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -4.757331848144531, -0.0006866455078125, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0002803802490234375, -1.9073486328125e-06, -2.1219253540039062e-05, -2.0265579223632812e-06, -8.0108642578125e-05, -0.00010371208190917969, -1.9073486328125e-05, -1.9073486328125e-06, -0.00039572856621816754, -2.1934487449470907e-05, -0.35407066345214844, -0.00055694580078125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.4437842512270436e-05, -3.49283182004001e-05, -0.000244140625, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.0265579223632812e-06, -7.748603820800781e-06, 0.0, -5.14984130859375e-05, -0.0001322031021118164, -1.7404556274414062e-05, -0.039180755615234375, -2.47955322265625e-05, -0.0001926422119140625, -3.814697265625e-06, -0.033000700175762177, -5.245195097813848e-06, -0.000102996826171875, -5.14984130859375e-05, -0.0013370513916015625, -3.814697265625e-06, -0.00019835770945064723, -2.3126602172851562e-05, -0.5643577575683594, -0.0001888275146484375, -4.38690185546875e-05, -0.12064523249864578, -4.38690185546875e-05, -0.0003566741943359375, -0.006585121154785156, -3.814697265625e-06, 0.0, -0.000423431396484375, -0.0003662109375, -1.9073486328125e-06, -0.0007829666137695312, -0.0002727508544921875, -0.7678496837615967, -2.6941299438476562e-05, -0.24360620975494385, -1.9073486328125e-06, -0.0008640289306640625, -0.058478355407714844, -0.0059680938720703125, -0.002635955810546875, -1.9073486328125e-06, -0.047438692301511765, -0.01336526870727539, -0.0003071551618631929, -0.02169513702392578, -0.31431007385253906, -0.000133514404296875, -0.0009708404541015625, -5.7220458984375e-06, -0.2788393497467041, -0.642912745475769, -0.03902899846434593, -9.775159924174659e-06, -0.00019073486328125, -0.001140594482421875, -0.057953834533691406, -0.6465022563934326, -0.00010371165262768045, -0.000438690185546875, -1.9073486328125e-06, -0.5673105716705322, -7.808208465576172e-05, 0.0, -0.049599647521972656, 0.0, -0.10948282480239868, -0.0007493240991607308, -3.814697265625e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0):\n            player.<UNK>(AuraUntil(<UNK>ManaChange(0), PlayerSelector(),\n                TurnEnded()))\n"}, {"score": -10.559993906501347, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 163, 37, 117, "0", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "player", "<EOS>", "<UNK>", "<EOS>", 163, 30, 88, 19, 112, "Aura", "Until", "<EOS>", 165, 30, 88, 19, 112, "<UNK>", "Mana", "Change", "<EOS>", 163, 37, 117, "0", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 46, 135, "Turn", "Ended", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"args": [{"n": 0, "_type": "Num"}], "func": {"id": "<UNK>ManaChange", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}, {"hole0": "TurnEnded", "_type": "Template18"}], "func": {"id": "AuraUntil", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "<UNK>", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "ExcessMana", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -4.757331848144531, -0.0006866455078125, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0002803802490234375, -1.9073486328125e-06, -2.1219253540039062e-05, -2.0265579223632812e-06, -8.0108642578125e-05, -0.00010371208190917969, -1.9073486328125e-05, -1.9073486328125e-06, -0.00039572856621816754, -2.1934487449470907e-05, -0.35407066345214844, -0.00055694580078125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.4437842512270436e-05, -3.49283182004001e-05, -0.000244140625, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.0265579223632812e-06, -7.748603820800781e-06, 0.0, -5.14984130859375e-05, -0.0001322031021118164, -1.7404556274414062e-05, -0.039180755615234375, -2.47955322265625e-05, -0.0001926422119140625, -3.814697265625e-06, -0.033000700175762177, -5.245195097813848e-06, -0.000102996826171875, -5.14984130859375e-05, -0.0013370513916015625, -3.814697265625e-06, -0.00019835770945064723, -2.3126602172851562e-05, -0.5643577575683594, -0.0001888275146484375, -4.38690185546875e-05, -0.12064523249864578, -4.38690185546875e-05, -0.0003566741943359375, -0.006585121154785156, -3.814697265625e-06, 0.0, -0.000423431396484375, -0.0003662109375, -1.9073486328125e-06, -0.0007829666137695312, -0.0002727508544921875, -0.7678496837615967, -2.6941299438476562e-05, -0.24360620975494385, -1.9073486328125e-06, -0.0008640289306640625, -0.058478355407714844, -0.0059680938720703125, -0.002635955810546875, -1.9073486328125e-06, -0.047438692301511765, -0.01336526870727539, -0.0003071551618631929, -0.02169513702392578, -0.31431007385253906, -0.000133514404296875, -0.0009708404541015625, -5.7220458984375e-06, -0.2788393497467041, -0.642912745475769, -0.03902899846434593, -9.775159924174659e-06, -0.00019073486328125, -0.001140594482421875, -0.057953834533691406, -0.6465022563934326, -0.00010371165262768045, -0.000438690185546875, -1.9073486328125e-06, -1.020754098892212, -0.0009036064147949219, 0.0, -0.15416717529296875, 0.0, -0.32248833775520325, -0.0005389424040913582, -5.7220458984375e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0):\n            player.<UNK>(AuraUntil(<UNK>ManaChange(0), HeroSelector(),\n                TurnEnded()))\n"}, {"score": -16.678760528564453, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -16.67863655090332], "inferred_code": "break\n"}, {"score": -22.977537155151367, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-0.0001068115234375, -1.1444091796875e-05, -22.977418899536133], "inferred_code": ""}], "index": 29}
{"beams": [{"score": -0.5480382809462228, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -0.11300086975097656, -0.0005941390991210938, -0.0014858245849609375, -0.00041961669921875, -9.5367431640625e-06, 0.0, -0.0035867691040039062, 0.0, -0.0007696151733398438, -1.1920928244535389e-07, -0.005979180335998535, -1.9073486328125e-06, -0.011231422424316406, -0.000415802001953125, -1.9073486328125e-06, -1.9073486328125e-06, -0.002094268798828125, 0.0, -8.106231689453125e-05, 0.0, -0.012670636177062988, 0.0, -0.3232688903808594, -0.0005741119384765625, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.007128357887268066, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -0.0017313957214355469, -5.7220458984375e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -2.3353938223142237, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 36, 114, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -0.11300086975097656, -0.0005941390991210938, -0.0014858245849609375, -0.00041961669921875, -9.5367431640625e-06, 0.0, -0.0035867691040039062, 0.0, -0.0007696151733398438, -1.1920928244535389e-07, -0.005979180335998535, -1.9073486328125e-06, -0.011231422424316406, -0.000415802001953125, -1.9073486328125e-06, -1.9073486328125e-06, -0.002094268798828125, 0.0, -8.106231689453125e-05, 0.0, -0.012670636177062988, 0.0, -1.2904634475708008, -6.4849853515625e-05, -0.0005397796630859375, 0.0, -3.24249267578125e-05, -8.58306884765625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, 0.0, -8.7738037109375e-05, -1.1920928244535389e-07, 0.0, -0.0009198188781738281, -2.1457672119140625e-06, -0.009090423583984375, -5.340576171875e-05, -5.7220458984375e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0009670257568359375, 0.0, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -1.7404556274414062e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.1444091796875e-05, -0.007928848266601562, -3.24249267578125e-05, -0.000606536865234375, -0.07443809509277344, -2.47955322265625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -8.046624134294689e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.02808058261871338, 0.0, -6.67572021484375e-05, -0.3435373306274414, 0.0, -0.00154876708984375, -1.71661376953125e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -0.03560638427734375, -3.814697265625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.00017547607421875, 0.0, -0.00019526403048075736, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.07703065872192383, 0.0, -7.43865966796875e-05, -0.23581981658935547, -0.011795997619628906, -5.2094459533691406e-05, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.die(Null)\n"}, {"score": -3.2021988997282733, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -2.782686233520508, -3.814697265625e-06, -0.0047454833984375, -0.00060272216796875, -3.24249267578125e-05, 0.0, -0.0029554367065429688, 0.0, -0.0006923675537109375, 0.0, -0.005788087844848633, -1.9073486328125e-06, -0.01294708251953125, -0.0003643035888671875, -3.814697265625e-06, -1.9073486328125e-06, -0.00231170654296875, 0.0, -7.915496826171875e-05, 0.0, -0.01545727252960205, 0.0, -0.3014507293701172, -0.00054931640625, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.007111787796020508, 0.0, -2.6702880859375e-05, -2.288818359375e-05, 0.0, -0.0014262199401855469, -5.7220458984375e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -3.5255556473264065, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 36, 114, "Null", "<EOS>", 59, 93, 14, 86, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -0.11300086975097656, -0.0005941390991210938, -0.0014858245849609375, -0.00041961669921875, -9.5367431640625e-06, 0.0, -0.0035867691040039062, 0.0, -0.0007696151733398438, -1.1920928244535389e-07, -0.005979180335998535, -1.9073486328125e-06, -0.011231422424316406, -0.000415802001953125, -1.9073486328125e-06, -1.9073486328125e-06, -0.002094268798828125, 0.0, -8.106231689453125e-05, 0.0, -0.012670636177062988, 0.0, -1.2904634475708008, -6.4849853515625e-05, -0.0005397796630859375, 0.0, -3.24249267578125e-05, -8.58306884765625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, 0.0, -8.7738037109375e-05, -1.1920928244535389e-07, 0.0, -0.0009198188781738281, -2.1457672119140625e-06, -0.009090423583984375, -5.340576171875e-05, -5.7220458984375e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0009670257568359375, 0.0, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -1.7404556274414062e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.1444091796875e-05, -0.007928848266601562, -3.24249267578125e-05, -0.000606536865234375, -0.07443809509277344, -2.47955322265625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -8.046624134294689e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.02808058261871338, 0.0, -6.67572021484375e-05, -1.3464927673339844, -0.0267333984375, -6.783008575439453e-05, 0.0, -0.0001964569091796875, -1.52587890625e-05, -0.000659942626953125, -0.00237274169921875, 0.0, 0.0, -0.07053375244140625, -2.6702880859375e-05, -0.0001678466796875, 0.0, -0.13946735858917236, -1.9073486328125e-06, -0.02315223217010498, 0.0, -0.2863978147506714, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(Null)\n        game.other_player.draw()\n"}, {"score": -4.31787244221664, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -4.258523941040039, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.012388348579406738, 0.0, -0.003772735595703125, -0.00937652587890625, 0.0, 0.0, -0.0001678466796875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.010508418083190918, 0.0, -1.71661376953125e-05, -7.05718994140625e-05, 0.0, -0.0009729862213134766, -9.5367431640625e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.059268153649782, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 7, 163, 36, 114, "Null", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "IsNot"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -4.669138431549072, -1.1444091796875e-05, -0.005978584289550781, -0.0002155303955078125, -5.555152893066406e-05, 0.0, -0.10892295837402344, -0.0028400421142578125, -1.9073486328125e-06, 0.0, -0.000370025634765625, 0.0, -0.0045108795166015625, 0.0, -0.029303789138793945, 0.0, -0.16794681549072266, -0.0009326934814453125, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, -0.0053462982177734375, 0.0, -2.47955322265625e-05, -8.392333984375e-05, 0.0, -0.0006355047225952148, -3.814697265625e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health is not Null and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.129979051095454, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -0.11300086975097656, -0.0005941390991210938, -0.0014858245849609375, -0.00041961669921875, -9.5367431640625e-06, 0.0, -0.0035867691040039062, 0.0, -0.0007696151733398438, -1.1920928244535389e-07, -0.005979180335998535, -1.9073486328125e-06, -0.011231422424316406, -0.000415802001953125, -1.9073486328125e-06, -1.9073486328125e-06, -0.002094268798828125, 0.0, -8.106231689453125e-05, 0.0, -4.760766983032227, -3.814697265625e-06, -0.15734291076660156, -0.0007152557373046875, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.006937980651855469, 0.0, -2.47955322265625e-05, -3.24249267578125e-05, 0.0, -0.0015090703964233398, -5.7220458984375e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.378521359902834, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 9, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "LtE"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -4.205880641937256, -7.2479248046875e-05, -0.7180662155151367, -0.000732421875, -3.24249267578125e-05, 0.0, -0.0030813217163085938, 0.0, -0.0005712509155273438, 0.0, -0.0057070255279541016, -1.9073486328125e-06, -0.016678810119628906, -0.00037384033203125, -3.814697265625e-06, -1.9073486328125e-06, -0.0024318695068359375, 0.0, -8.106231689453125e-05, 0.0, -0.013551831245422363, 0.0, -0.33905029296875, -0.0005588531494140625, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.007086038589477539, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -0.0015625953674316406, -5.7220458984375e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health <= target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.4554559955420245, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 9, 163, 37, 117, "1", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "LtE"}], "_type": "Compare", "comparators": [{"n": 1, "_type": "Num"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -4.205880641937256, -7.2479248046875e-05, -0.7533254623413086, -1.9073486328125e-06, -0.016499698162078857, 0.0, -0.3841886520385742, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -0.000110626220703125, 0.0, -0.000179290771484375, 0.0, -0.007359862327575684, 0.0, -0.01764678955078125, -0.0003185272216796875, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -5.91278076171875e-05, -5.7220458984375e-06, -5.7220458984375e-05, 0.0, -0.005727648735046387, 0.0, -2.6702880859375e-05, -3.62396240234375e-05, 0.0, -0.0008025169372558594, -5.7220458984375e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health <= 1 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.788462437135188, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -0.11300086975097656, -0.0005941390991210938, -0.0014858245849609375, -0.00041961669921875, -9.5367431640625e-06, 0.0, -0.0035867691040039062, 0.0, -0.0007696151733398438, -1.1920928244535389e-07, -0.005979180335998535, -1.9073486328125e-06, -4.560202598571777, -0.0021381378173828125, -0.00066375732421875, 0.0, -0.0001277923583984375, 0.0, -0.5112991333007812, 0.0, -0.0259554386138916, 0.0, -0.0006504058837890625, -0.050833702087402344, -0.0001430511474609375, -0.17142772674560547, -0.0004100799560546875, -9.5367431640625e-06, 0.0, -0.004845619201660156, 0.0, -0.004746437072753906, 0.0, -0.005765199661254883, -1.9073486328125e-06, -0.24477005004882812, -0.001941680908203125, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.012925505638122559, 0.0, -1.33514404296875e-05, -4.76837158203125e-05, 0.0, -0.0007451772689819336, -7.62939453125e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            health != target.calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -10.790577806444958, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -10.00976276397705, -1.9073486328125e-06, -0.0002536773681640625, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -7.62939453125e-05, 0.0, -0.7349023818969727, -0.0026464462280273438, -1.52587890625e-05, 0.0, -0.004797935485839844, 0.0, -0.006706357002258301, -1.9073486328125e-06, -0.00028228759765625, 0.0, -0.027515888214111328, 0.0, -0.0001049041748046875, -9.72747802734375e-05, 0.0, -0.001408696174621582, -6.4849853515625e-05], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -10.795937776563733, "choice_history": [50, 111, 176, 59, 93, 14, 86, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>"], "model_output": {"body": [{"value": {"func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -9.181408882141113, -0.00048065185546875, -0.05175495147705078, -1.3956851959228516, -8.58306884765625e-05, 0.0, -0.1527252197265625, -0.00240325927734375, -1.740455445542466e-05, -7.62939453125e-06, -0.011351585388183594, 0.0], "inferred_code": "super().__init__()\n"}, {"score": -12.719044260680676, "choice_history": [50, 111, 176, 59, 93, 24, 144, "1", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -9.181408882141113, -0.00048065185546875, -3.487971305847168, -0.024354934692382812, -0.02478795498609543, -2.3365020751953125e-05], "inferred_code": "self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -14.173317909240723, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -14.173300743103027], "inferred_code": "break\n"}, {"score": -23.188552856445312, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -23.18853759765625], "inferred_code": ""}], "index": 30}
{"beams": [{"score": -0.07044649766171318, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -0.0036954879760742188, -5.14984130859375e-05, -0.00066375732421875, -5.7220458984375e-06, -0.0015559196472167969, -7.152555099310121e-07, -0.0002288818359375, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.003772735595703125, 0.0, -0.00014698503946419805, -2.288818359375e-05, -8.96453857421875e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00040435791015625, 0.0, -0.00054931640625, -1.33514404296875e-05, -0.01514744758605957, -3.62396240234375e-05, -7.832050323486328e-05, 0.0, -0.000194549560546875, -0.0012531280517578125, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -0.000217437744140625, 0.0, -2.288818359375e-05, 0.0, -0.0006958245649002492, -1.1920928244535389e-07, -0.0008411407470703125, -1.9073486328125e-06, -0.0009059906005859375, -0.0040912628173828125, -0.000186920166015625, -0.0001325594203080982, -3.1709168979432434e-05, -3.814697265625e-06, -8.96453857421875e-05, -0.0036373138427734375, -2.3841855067985307e-07, -0.0032978057861328125, -0.000102996826171875, -0.00046539306640625, -0.0003871917724609375, -3.814697265625e-06, 0.0, -0.000133514404296875, 0.0, -0.00047072244342416525, 0.0, -0.003902912139892578, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -4.500796450754159, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -0.0036954879760742188, -5.14984130859375e-05, -0.00066375732421875, -5.7220458984375e-06, -0.0015559196472167969, -7.152555099310121e-07, -0.0002288818359375, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.003772735595703125, 0.0, -0.00014698503946419805, -2.288818359375e-05, -8.96453857421875e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00040435791015625, 0.0, -0.00054931640625, -1.33514404296875e-05, -4.439215660095215, -2.110004425048828e-05, -3.4332275390625e-05, 0.0, -0.0001544952392578125, -0.00415802001953125, 0.0, -3.814697265625e-06, -0.0001583099365234375, -0.0003223419189453125, 0.0, -3.4332275390625e-05, 0.0, -0.0033677814062684774, -1.1920928244535389e-07, -0.000888824462890625, -1.9073486328125e-06, -0.000820159912109375, -0.0047283172607421875, -0.0002593994140625, -0.00014841402298770845, -2.884823152271565e-05, -3.814697265625e-06, -0.0001125335693359375, -0.003621697425842285, -2.3841855067985307e-07, -0.00322723388671875, -0.000102996826171875, -0.0005130767822265625, -0.00038909912109375, -3.814697265625e-06, 0.0, -0.0001659393310546875, 0.0, -0.00040778733091428876, 0.0, -0.003870368003845215, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -4.93297482325314, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -4.8773603439331055, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -5.14984130859375e-05, -0.0002593994140625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.0006760358810424805, -4.768370445162873e-07, -0.00080108642578125, -2.6702880859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -5.14984130859375e-05, -9.5367431640625e-06, -2.1815289073856547e-05, -1.1563301086425781e-05, -0.00014495849609375, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -7.82012939453125e-05, -3.3616728615015745e-05, -2.0265579223632812e-06, -0.0033845901489257812, -5.14984130859375e-05, -0.000621795654296875, -5.7220458984375e-06, -0.0015271902084350586, -7.152555099310121e-07, -0.000232696533203125, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.0035076141357421875, 0.0, -0.00014889238809701055, -2.288818359375e-05, -9.1552734375e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.0004024505615234375, 0.0, -0.000545501708984375, -1.33514404296875e-05, -0.01526951789855957, -3.62396240234375e-05, -7.832049595890567e-05, 0.0, -0.0001964569091796875, -0.0012607574462890625, 0.0, -3.814697265625e-06, -8.0108642578125e-05, -0.000217437744140625, 0.0, -2.288818359375e-05, 0.0, -0.0006959437741898, -1.1920928244535389e-07, -0.0008373260498046875, -1.9073486328125e-06, -0.000911712646484375, -0.004077911376953125, -0.000186920166015625, -0.0001325594203080982, -3.158996332786046e-05, -3.814697265625e-06, -8.96453857421875e-05, -0.0036336183547973633, -2.3841855067985307e-07, -0.0033788681030273438, -0.0001049041748046875, -0.000514984130859375, -0.0003833770751953125, -3.814697265625e-06, 0.0, -0.0001354217529296875, 0.0, -0.00046309453318826854, 0.0, -0.003902912139892578, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -5.130341298704501, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -5.074284553527832, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0003662109375, -1.52587890625e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005538463592529297, -3.576278118089249e-07, -0.0008869171142578125, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.4318680516444147e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -7.82012939453125e-05, -3.3259108022321016e-05, -2.0265579223632812e-06, -0.0041027069091796875, -4.9591064453125e-05, -0.0005817413330078125, -5.7220458984375e-06, -0.0015255212783813477, -8.344646857949556e-07, -0.0002460479736328125, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -0.003345489501953125, 0.0, -0.00015079973672982305, -2.288818359375e-05, -9.34600830078125e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.14984130859375e-05, 0.0, -0.0003986358642578125, 0.0, -0.000537872314453125, -1.33514404296875e-05, -0.015440225601196289, -3.4332275390625e-05, -7.832049595890567e-05, 0.0, -0.000202178955078125, -0.0012798309326171875, 0.0, -3.814697265625e-06, -8.20159912109375e-05, -0.000217437744140625, 0.0, -2.288818359375e-05, 0.0, -0.0006978511228226125, -1.1920928244535389e-07, -0.000835418701171875, -1.9073486328125e-06, -0.000919342041015625, -0.0040683746337890625, -0.0001850128173828125, -0.00013267862959764898, -3.158996332786046e-05, -3.814697265625e-06, -8.96453857421875e-05, -0.0036317110061645508, -2.3841855067985307e-07, -0.0031042098999023438, -9.918212890625e-05, -0.000453948974609375, -0.0003910064697265625, -3.814697265625e-06, 0.0, -0.0001239776611328125, 0.0, -0.0004683391307480633, 0.0, -0.003963828086853027, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -5.919282442791108, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "<UNK>", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -0.0036954879760742188, -5.14984130859375e-05, -0.00066375732421875, -5.7220458984375e-06, -0.0015559196472167969, -7.152555099310121e-07, -0.0002288818359375, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.003772735595703125, 0.0, -0.00014698503946419805, -2.288818359375e-05, -8.96453857421875e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00040435791015625, 0.0, -0.00054931640625, -1.33514404296875e-05, -0.01514744758605957, -3.62396240234375e-05, -7.832050323486328e-05, 0.0, -0.000194549560546875, -0.0012531280517578125, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -0.000217437744140625, 0.0, -2.288818359375e-05, 0.0, -0.0006958245649002492, -1.1920928244535389e-07, -0.0008411407470703125, -1.9073486328125e-06, -0.0009059906005859375, -0.0040912628173828125, -0.000186920166015625, -0.0001325594203080982, -3.1709168979432434e-05, -3.814697265625e-06, -8.96453857421875e-05, -0.0036373138427734375, -2.3841855067985307e-07, -0.0032978057861328125, -0.000102996826171875, -0.00046539306640625, -0.0003871917724609375, -3.814697265625e-06, 0.0, -0.000133514404296875, 0.0, -0.00047072244342416525, 0.0, -5.852738857269287, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.<UNK>()\n"}, {"score": -6.29112396019913, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -0.0036954879760742188, -5.14984130859375e-05, -0.00066375732421875, -5.7220458984375e-06, -0.0015559196472167969, -7.152555099310121e-07, -0.0002288818359375, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.003772735595703125, 0.0, -0.00014698503946419805, -2.288818359375e-05, -8.96453857421875e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00040435791015625, 0.0, -0.00054931640625, -1.33514404296875e-05, -0.01514744758605957, -3.62396240234375e-05, -7.832050323486328e-05, 0.0, -0.000194549560546875, -0.0012531280517578125, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -0.000217437744140625, 0.0, -2.288818359375e-05, 0.0, -0.0006958245649002492, -1.1920928244535389e-07, -0.0008411407470703125, -1.9073486328125e-06, -0.0009059906005859375, -0.0040912628173828125, -0.000186920166015625, -0.0001325594203080982, -3.1709168979432434e-05, -3.814697265625e-06, -8.96453857421875e-05, -0.0036373138427734375, -2.3841855067985307e-07, -6.099885940551758, -0.000217437744140625, -0.0030269622802734375, -3.814697265625e-06, -0.016339540481567383, -5.125998541188892e-06, -0.0054836273193359375, 0.0, -0.012828826904296875, 0.0, -0.000263214111328125, 0.0, -0.0073500871658325195, -3.814697265625e-06, -0.009200692176818848, -7.748603820800781e-06, -0.000385945662856102, 0.0, -0.00012969970703125, -0.0019283294677734375, 0.0, -5.7220458984375e-06, -0.005084991455078125, -0.0001506805419921875, -1.9073486328125e-06, -0.000278472900390625, -1.9073486328125e-06, -0.0013419317547231913, -1.311301275563892e-06, -0.052794456481933594, -5.7220458984375e-06, -0.0010395050048828125, -0.004146575927734375, -0.001068115234375, -0.00020706042414531112, -1.7762025890988298e-05, -7.62939453125e-06, -0.0001201629638671875, -0.006106972694396973, -1.1920928244535389e-07], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.61063890005056, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -5.969532012939453, -0.0026998519897460938, -0.36348438262939453, -0.000736236572265625, -0.010457038879394531, -4.172316494077677e-06, -0.021389007568359375, -0.00011444091796875, -3.814697265625e-06, -0.2169170379638672, -9.5367431640625e-06, 0.0, -6.67572021484375e-05, 0.0, -0.00024116021813824773, 0.0, -0.0022846460342407227, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -6.725137436189513, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -0.0036954879760742188, -5.14984130859375e-05, -0.00066375732421875, -5.7220458984375e-06, -0.0015559196472167969, -7.152555099310121e-07, -0.0002288818359375, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.003772735595703125, 0.0, -0.00014698503946419805, -2.288818359375e-05, -8.96453857421875e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00040435791015625, 0.0, -0.00054931640625, -1.33514404296875e-05, -0.01514744758605957, -3.62396240234375e-05, -7.832050323486328e-05, 0.0, -0.000194549560546875, -0.0012531280517578125, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -0.000217437744140625, 0.0, -2.288818359375e-05, 0.0, -0.0006958245649002492, -1.1920928244535389e-07, -0.0008411407470703125, -1.9073486328125e-06, -0.0009059906005859375, -6.436699867248535, -7.62939453125e-06, -0.011169010773301125, -1.4305104514278355e-06, -0.0008068084716796875, -6.866455078125e-05, -0.00019955633615609258, 0.0, -0.2124948501586914, -1.52587890625e-05, -4.00543212890625e-05, -0.004306793212890625, -3.814697265625e-06, 0.0, -0.000453948974609375, 0.0, -0.00037263421108946204, -1.1920928244535389e-07, -0.004988312721252441, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(1, self)\n        player.draw()\n"}, {"score": -6.732021573177143, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "minions", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -0.0036954879760742188, -5.14984130859375e-05, -0.00066375732421875, -5.7220458984375e-06, -0.0015559196472167969, -7.152555099310121e-07, -0.0002288818359375, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.003772735595703125, 0.0, -0.00014698503946419805, -2.288818359375e-05, -8.96453857421875e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00040435791015625, 0.0, -0.00054931640625, -1.33514404296875e-05, -6.671802043914795, 0.0, -9.918212890625e-05, 0.0, -7.2479248046875e-05, -0.0054378509521484375, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -0.000133514404296875, 0.0, -2.288818359375e-05, 0.0, -0.0013170238817110658, -1.1920928244535389e-07, -0.0012836456298828125, -1.9073486328125e-06, -0.0006961822509765625, -0.0042209625244140625, -0.000240325927734375, -0.00014424193068407476, -3.0278701160568744e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.0035858154296875, -2.3841855067985307e-07, -0.0032911300659179688, -0.0001049041748046875, -0.0005016326904296875, -0.0003871917724609375, -3.814697265625e-06, 0.0, -0.0001087188720703125, 0.0, -0.0004930113791488111, 0.0, -0.0038791894912719727, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.minions.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -6.825577743993705, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -0.0036954879760742188, -5.14984130859375e-05, -0.00066375732421875, -5.7220458984375e-06, -0.0015559196472167969, -7.152555099310121e-07, -0.0002288818359375, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -5.627628326416016, -1.9073486328125e-05, -7.2479248046875e-05, 0.0, -0.19816923141479492, -3.814697265625e-06, -0.0007649660110473633, -1.4543528777721804e-05, -0.9309509992599487, -7.62939453125e-06, -7.05718994140625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.00067901611328125, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0004787445068359375, -3.24249267578125e-05, -0.015018701553344727, -4.9591064453125e-05, -0.00019466876983642578, 0.0, -0.00020599365234375, -0.001468658447265625, 0.0, -3.814697265625e-06, -0.0001125335693359375, -0.000179290771484375, 0.0, -3.0517578125e-05, 0.0, -0.000930309237446636, 0.0, -0.0006237030029296875, -1.9073486328125e-06, -0.0008220672607421875, -0.0051479339599609375, -0.0002269744873046875, -0.00013959271018393338, -3.0636318115284666e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.003563523292541504, -2.3841855067985307e-07, -0.0032806396484375, -9.34600830078125e-05, -0.00049591064453125, -0.00038909912109375, -3.814697265625e-06, 0.0, -0.00012969970703125, 0.0, -0.00046237948117777705, 0.0, -0.0038933753967285156, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -6.845786418085929, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fan", " ", "of", " ", "Knives", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fan of Knives", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -5.846399307250977, -2.86102294921875e-05, -1.2874597814516164e-05, -2.3841855067985307e-07, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -0.0004558563232421875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -3.218649908376392e-06, -4.0531158447265625e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000255584716796875, -0.00042512916843406856, -8.809566497802734e-05, -8.463859558105469e-06, -4.9591064453125e-05, -1.800060272216797e-05, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -1.4066597032069694e-05, -2.264974000354414e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -2.1457621187437326e-05, -3.576278118089249e-07, -0.8561415672302246, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -8.0108642578125e-05, 0.0, -0.000186920166015625, 0.0, -0.000171661376953125, -0.005283355712890625, -3.4332275390625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001621246337890625, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -0.000244140625, -9.5367431640625e-06, -0.0007495880126953125, -8.96453857421875e-05, -0.06398677825927734, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -0.0001983642578125, -7.2479248046875e-05, -9.5367431640625e-06, -4.57763671875e-05, -5.841255187988281e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0005743503570556641, -4.768370445162873e-07, -0.0011644363403320312, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.5020307728264015e-05, -1.3709068298339844e-05, -0.000125885009765625, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -6.4849853515625e-05, -2.253041384392418e-05, -1.9073486328125e-06, -0.0052967071533203125, -4.9591064453125e-05, -0.000225067138671875, -9.5367431640625e-06, -0.0008411406888626516, -1.311301275563892e-06, -0.000713348388671875, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -0.0011444091796875, 0.0, -0.0001857280731201172, -1.33514404296875e-05, -0.0001506805419921875, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -0.0001068115234375, 0.0, -0.00025177001953125, -1.52587890625e-05, -0.032564520835876465, -2.47955322265625e-05, -0.00019288063049316406, 0.0, -0.000335693359375, -0.0025310516357421875, 0.0, -3.814697265625e-06, -0.0005340576171875, -0.000141143798828125, 0.0, -4.9591064453125e-05, 0.0, -0.0005066391895525157, -1.1920928244535389e-07, -0.0007495880126953125, -1.9073486328125e-06, -0.001129150390625, -0.003162384033203125, -0.0001850128173828125, -0.00013279772247187793, -3.0874729418428615e-05, -3.814697265625e-06, -9.1552734375e-05, -0.0036487579345703125, -2.3841855067985307e-07, -0.005057334899902344, -0.00011444091796875, -0.0005893707275390625, -0.0003757476806640625, -3.814697265625e-06, 0.0, -0.0001583099365234375, 0.0, -0.0004646497836802155, 0.0, -0.004105925559997559, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -7.044868433853075, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fan", " ", "of", " ", "Knives", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fan of Knives", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -5.846399307250977, -2.86102294921875e-05, -1.2874597814516164e-05, -2.3841855067985307e-07, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -0.0004558563232421875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -3.218649908376392e-06, -4.0531158447265625e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000255584716796875, -0.00042512916843406856, -8.809566497802734e-05, -8.463859558105469e-06, -4.9591064453125e-05, -1.800060272216797e-05, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -1.4066597032069694e-05, -2.264974000354414e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -2.1457621187437326e-05, -3.576278118089249e-07, -1.062915325164795, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000102996826171875, 0.0, -9.5367431640625e-05, 0.0, -0.0001087188720703125, -0.0011692047119140625, -4.00543212890625e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.0001277923583984375, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -0.0002460479736328125, -9.5367431640625e-06, -0.000766754150390625, -9.1552734375e-05, -0.060614585876464844, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -0.0001735687255859375, -7.82012939453125e-05, -9.5367431640625e-06, -4.00543212890625e-05, -5.841255187988281e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -0.00047469139099121094, -3.576278118089249e-07, -0.0012083053588867188, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.4901099348207936e-05, -1.3709068298339844e-05, -0.0001239776611328125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -6.4849853515625e-05, -2.169596336898394e-05, -1.9073486328125e-06, -0.005035400390625, -4.9591064453125e-05, -0.0002231597900390625, -9.5367431640625e-06, -0.0008354186429642141, -1.311301275563892e-06, -0.000698089599609375, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -0.001178741455078125, 0.0, -0.0001857280731201172, -1.33514404296875e-05, -0.000148773193359375, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -0.0001049041748046875, 0.0, -0.00025177001953125, -1.52587890625e-05, -0.03252828121185303, -2.47955322265625e-05, -0.00019288063049316406, 0.0, -0.0003299713134765625, -0.0025272369384765625, 0.0, -3.814697265625e-06, -0.0005283355712890625, -0.000141143798828125, 0.0, -4.9591064453125e-05, 0.0, -0.000507592863868922, -1.1920928244535389e-07, -0.0007534027099609375, -1.9073486328125e-06, -0.001129150390625, -0.0031604766845703125, -0.0001850128173828125, -0.00013279772247187793, -3.0874729418428615e-05, -3.814697265625e-06, -9.1552734375e-05, -0.0036458969116210938, -2.3841855067985307e-07, -0.005404472351074219, -0.000118255615234375, -0.0005779266357421875, -0.0003795623779296875, -3.814697265625e-06, 0.0, -0.000152587890625, 0.0, -0.0004744237521663308, 0.0, -0.004102110862731934, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -7.794764324472361, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 3, 163, 37, 117, "0", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Gt"}], "_type": "Compare", "comparators": [{"n": 0, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FanOfKnives", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -6.999577522277832, -0.0024776458740234375, -3.814697265625e-05, -0.0007338214782066643, -7.641315460205078e-05, -4.6133995056152344e-05, -0.000244140625, -4.518024070421234e-05, -1.9073486328125e-06, -6.103340274421498e-05, -1.9073486328125e-06, -0.011449813842773438, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -0.0001392364501953125, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -0.0009845495223999023, -3.576278118089249e-07, -0.0007600784301757812, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.52587890625e-05, -5.7220458984375e-06, -4.57763671875e-05, -7.62939453125e-06, -2.3365011657006107e-05, -9.655952453613281e-06, -0.0001392364501953125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -7.43865966796875e-05, -3.015969559783116e-05, -2.0265579223632812e-06, -0.00426483154296875, -4.1961669921875e-05, -0.0002288818359375, -5.7220458984375e-06, -0.0009883642196655273, -8.344646857949556e-07, -0.0004825592041015625, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.001583099365234375, 0.0, -0.0001729726791381836, -1.71661376953125e-05, -0.000133514404296875, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -0.0001964569091796875, 0.0, -0.0003795623779296875, -1.33514404296875e-05, -0.0211336612701416, -2.47955322265625e-05, -0.00011467932199593633, 0.0, -0.00023651123046875, -0.002094268798828125, 0.0, -3.814697265625e-06, -0.000194549560546875, -0.00017547607421875, 0.0, -3.24249267578125e-05, 0.0, -0.0005936621455475688, -1.1920928244535389e-07, -0.0007610321044921875, -1.9073486328125e-06, -0.0010128021240234375, -0.0035800933837890625, -0.0001850128173828125, -0.0001337514549959451, -3.135155202471651e-05, -3.814697265625e-06, -8.96453857421875e-05, -0.0036089420318603516, -2.3841855067985307e-07, -0.0030059814453125, -9.918212890625e-05, -0.0004100799560546875, -0.000400543212890625, -3.814697265625e-06, 0.0, -0.00014495849609375, 0.0, -0.0004638093523681164, 0.0, -0.003859996795654297, 0.0, -0.00023651123046875, -9.5367431640625e-06, -0.09947967529296875, -1.9073486328125e-05, -3.814697265625e-06, -6.29425048828125e-05, 0.0, -9.5367431640625e-06, 0.0, 0.0, -2.491474151611328e-05, 0.0, 0.0, -0.000870823860168457, 0.0, -0.03750896453857422, -0.0020599365234375, -3.4332275390625e-05, -0.07192516326904297, -0.00022125244140625, -0.000461578369140625, -0.0007381439208984375, -0.0028591156005859375, -0.0001277923583984375, -7.2479248046875e-05, 0.0, -0.0009708404541015625, -2.6702880859375e-05, -0.0001019237024593167, -0.0002346038818359375, -0.002529144287109375, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.29425048828125e-05, -2.9563881980720907e-05, -7.62939453125e-06, -0.002384185791015625, -0.00026702880859375, -0.0013494491577148438, -1.9073486328125e-06, -6.29425048828125e-05, -9.5367431640625e-06, -0.0004699217970483005, -4.768370445162873e-07, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.004871368408203125, -1.9073486328125e-06, -0.0008544921875, 0.0, -0.00021386146545410156, -3.814697265625e-06, -0.04512429237365723, -5.7220458984375e-06, -0.0010342582827433944, 0.0, -0.00012969970703125, -0.44570350646972656, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.002214937936514616, -5.7220458984375e-06], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) > 0\n"}, {"score": -15.317214012145996, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -15.317187309265137], "inferred_code": "break\n"}, {"score": -21.320045471191406, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [0.0, -7.62939453125e-06, -21.320037841796875], "inferred_code": ""}], "index": 31}
{"beams": [{"score": -0.03361481217276463, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.00799560546875, -0.0001068115234375, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-05, -0.003139495849609375, -5.7220458984375e-06, -0.0009979009628295898, -9.167194366455078e-05, -0.009410858154296875, -0.000102996826171875, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.0005259513854980469, 0.0, -5.7220458984375e-06, -0.000736236572265625, -0.0001125335693359375, -0.00016164773842319846, -3.4570680327306036e-06, 0.0, -3.24249267578125e-05, -0.00011348724365234375, 0.0], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -5.817441878579714, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "target", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "target", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.00799560546875, -0.0001068115234375, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-05, -5.791518211364746, -1.1920928244535389e-07, -0.001584768295288086, -1.9073486328125e-06, -0.0044651031494140625, -7.82012939453125e-05, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-05, 0.0, -0.0004767179489135742, 0.0, -5.7220458984375e-06, -0.000667572021484375, -0.0001201629638671875, -0.0001688002812443301, -3.4570680327306036e-06, 0.0, -3.0517578125e-05, -0.00010776519775390625, 0.0], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.target.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -6.120862779892796, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -6.09235143661499, -3.814697265625e-06, -0.0008182525634765625, 0.0, -4.9591064453125e-05, 0.0, -0.00189971923828125, -3.814697265625e-06, -0.0008296966552734375, 0.0, -0.00658416748046875, -0.0001354217529296875, -4.57763671875e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-05, -0.00304412841796875, -5.7220458984375e-06, -0.0009521245956420898, -9.357929229736328e-05, -0.009593963623046875, -0.0001049041748046875, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0005259513854980469, 0.0, -5.7220458984375e-06, -0.0007457733154296875, -0.0001125335693359375, -0.00016164773842319846, -3.4570680327306036e-06, 0.0, -3.24249267578125e-05, -0.00011348724365234375, 0.0], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -6.5004076330089475, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -5.119290351867676, -5.7220458984375e-06, -0.00011444091796875, -0.00015079975128173828, -1.9073486328125e-06, -0.00017547607421875, -0.0003452301025390625, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0008945465087890625, -1.33514404296875e-05, -0.05389213562011719, -5.841255187988281e-06, -0.001445174217224121, -0.00013363361358642578, -0.03707313537597656, -0.0001468658447265625, -0.022165298461914062, 0.0, -0.0017747879028320312, -0.001087188720703125, -3.4332275390625e-05, -0.0001087188720703125, -3.24249267578125e-05, -0.0035734176635742188, 0.0, -0.008870124816894531, -0.000209808349609375, -0.008429527282714844, -0.000576019287109375, -0.00531005859375, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.1463308334350586, 0.0, -0.003238677978515625, 0.0, -0.016860485076904297, 0.0, -0.000370025634765625, -0.7269372940063477, -0.014400482177734375, -0.02045917510986328, -0.0011730194091796875, -3.24249267578125e-05, 0.0, -0.0013532638549804688, -1.9073486328125e-06, -0.000728607177734375, 0.0, -0.002238631248474121, -5.7220458984375e-06, -0.015895843505859375, -0.0017004013061523438, -1.9073486328125e-05, 0.0, -0.000118255615234375, 0.0, -0.0021209716796875, 0.0, -0.2622929811477661, 0.0, -0.005608558654785156, -0.0003070831298828125, -7.62939453125e-06, 0.0, -0.0001316070556640625, 0.0, -0.0003185272216796875, -1.52587890625e-05, -6.4849853515625e-05, 0.0, -0.0003142356581520289, 0.0, -1.52587890625e-05, -0.0009307861328125, -8.392333984375e-05, -0.000233291502809152, -3.6954863844584906e-06, 0.0, -5.53131103515625e-05, -0.000141143798828125, -1.1920928244535389e-07], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health != target.\n            calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -6.55987363739537, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -5.119290351867676, -5.7220458984375e-06, -0.00011444091796875, -0.00015079975128173828, -1.9073486328125e-06, -0.00017547607421875, -0.0003452301025390625, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0008945465087890625, -1.33514404296875e-05, -0.05389213562011719, -5.841255187988281e-06, -0.001445174217224121, -0.00013363361358642578, -0.03707313537597656, -0.0001468658447265625, -0.022165298461914062, 0.0, -0.0017747879028320312, -0.001087188720703125, -3.4332275390625e-05, -0.0001087188720703125, -3.24249267578125e-05, -0.0035734176635742188, 0.0, -0.008870124816894531, -0.000209808349609375, -0.008429527282714844, -0.000576019287109375, -0.00531005859375, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.1463308334350586, 0.0, -0.003238677978515625, 0.0, -0.016860485076904297, 0.0, -0.000370025634765625, -0.7731027603149414, -3.0517578125e-05, -0.051509857177734375, -0.0014743804931640625, -6.29425048828125e-05, 0.0, -0.000896453857421875, -1.9073486328125e-06, -0.0010366439819335938, 0.0, -0.002390146255493164, -5.7220458984375e-06, -0.014186859130859375, -0.0020465850830078125, -2.288818359375e-05, 0.0, -0.0001201629638671875, 0.0, -0.001964569091796875, 0.0, -0.2595893144607544, 0.0, -0.006038665771484375, -0.0003108978271484375, -7.62939453125e-06, 0.0, -0.00012969970703125, 0.0, -0.00032520294189453125, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -0.0003079175658058375, 0.0, -1.52587890625e-05, -0.0010013580322265625, -8.20159912109375e-05, -0.0002348412381252274, -3.4570680327306036e-06, 0.0, -5.340576171875e-05, -0.000141143798828125, -1.1920928244535389e-07], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health == target.\n            calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -7.123945889748448, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -7.090989589691162, -7.62939453125e-06, -7.43865966796875e-05, 0.0, -0.000152587890625, 0.0, -0.00079345703125, -3.814697265625e-06, -0.0008411407470703125, 0.0, -0.012038230895996094, -0.0001430511474609375, -4.9591064453125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.0038280487060546875, -5.7220458984375e-06, -0.0010093450546264648, -9.167194366455078e-05, -0.009485244750976562, -0.0001049041748046875, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0005297660827636719, 0.0, -5.7220458984375e-06, -0.0007343292236328125, -0.0001125335693359375, -0.00015962118050083518, -3.4570680327306036e-06, 0.0, -3.24249267578125e-05, -0.00011348724365234375, 0.0], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -7.132523951805943, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -7.107792854309082, 0.0, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0001468658447265625, -3.814697265625e-06, -0.0006732940673828125, 0.0, -0.005661964416503906, -7.82012939453125e-05, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-05, -0.00324249267578125, -5.7220458984375e-06, -0.0009940862655639648, -9.357929229736328e-05, -0.009274482727050781, -0.0001049041748046875, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0005184412002563477, 0.0, -5.7220458984375e-06, -0.0007381439208984375, -0.0001125335693359375, -0.00016164773842319846, -3.4570680327306036e-06, 0.0, -3.24249267578125e-05, -0.00011348724365234375, 0.0], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -7.133288219354618, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 62, 99, 15, 91, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "4", "<EOS>", 176, 59, 93, 24, 144, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"hole0": 4, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 4, "_type": "Template9"}, "_type": "Expr"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.00799560546875, -0.0001068115234375, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-05, -0.003139495849609375, -5.7220458984375e-06, -0.0009979009628295898, -9.167194366455078e-05, -5.05865478515625, -0.20683574676513672, -0.000331878662109375, -0.00135040283203125, -0.1630229949951172, 0.0, -0.3639049530029297, 0.0, -0.9460506439208984, 0.0, -0.0017414093017578125, 0.0, -0.0006561279296875, -0.17156505584716797, -0.000186920166015625, -0.04085826873779297, -0.0026540756225585938, -0.00016438771854154766, -3.814697265625e-06, -0.01624298095703125, -0.052689552307128906, -6.866455078125e-05, -0.008314132690429688, -0.0001468658447265625, -0.034080129116773605, -7.033347174001392e-06, -9.5367431640625e-06, -0.00019073486328125, -1.71661376953125e-05, -0.02395153045654297, -9.5367431640625e-05, -0.01704815775156021, -0.00015175342559814453], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n    if self.target is Null:\n        self.target.damage(player.effective_spell_damage(4), self)\n    else:\n        self.target.damage(player.effective_spell_damage(4), self)\n"}, {"score": -7.243831099482996, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "6", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 6, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.00799560546875, -0.0001068115234375, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-05, -0.003139495849609375, -5.7220458984375e-06, -0.0009979009628295898, -9.167194366455078e-05, -6.072818756103516, -0.0001888275146484375, -3.4332275390625e-05, 0.0, -0.0004749298095703125, -8.0108642578125e-05, -0.000148773193359375, -1.2278545909794047e-05, 0.0, -3.24249267578125e-05, -0.00010526180267333984, -4.9591064453125e-05, -1.1444091796875e-05, -0.010068178176879883, -3.3974647521972656e-05, -0.03026580810546875, -9.5367431640625e-06, -9.5367431640625e-06, -0.0003986358642578125, -2.47955322265625e-05, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -1.1444091796875e-05, -0.00010120842489413917, -1.1563301086425781e-05, -0.0001544952392578125, 0.0, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0037270784378051758, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.014486312866210938, -0.0008983612060546875, -0.04164302721619606, -2.491474151611328e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.001995086669921875, -0.8041305541992188, -5.7220458984375e-06, 0.0, -0.01314544677734375, 0.0, -0.05673789978027344, 0.0, -0.16929900646209717, 0.0], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n        player.draw()\n"}, {"score": -7.513313980313747, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "6", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 6, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.00799560546875, -0.0001068115234375, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-05, -0.003139495849609375, -5.7220458984375e-06, -0.0009979009628295898, -9.167194366455078e-05, -6.072818756103516, -0.0001888275146484375, -3.4332275390625e-05, 0.0, -0.0004749298095703125, -8.0108642578125e-05, -0.000148773193359375, -1.2278545909794047e-05, 0.0, -3.24249267578125e-05, -0.00010526180267333984, -4.9591064453125e-05, -1.1444091796875e-05, -0.010068178176879883, -3.3974647521972656e-05, -0.03026580810546875, -9.5367431640625e-06, -9.5367431640625e-06, -0.0003986358642578125, -2.47955322265625e-05, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -1.1444091796875e-05, -0.00010120842489413917, -1.1563301086425781e-05, -0.0001544952392578125, 0.0, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0037270784378051758, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.014486312866210938, -0.0008983612060546875, -0.04164302721619606, -2.491474151611328e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.001995086669921875, -0.5943317413330078, -5.7220458984375e-06, 0.0, -0.00023746490478515625, -7.62939453125e-06, -0.0002574920654296875, 0.0, -0.00109100341796875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.18951416015625, -1.9073486328125e-06, -1.9073486328125e-05, -0.20093154907226562, -0.0001373291015625, -0.3261285126209259, -1.1920928244535389e-07, 0.0, 0.0, -8.237361907958984e-05, -1.1920928244535389e-07], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n        self.target.damage(4, self)\n"}, {"score": -7.63224881676566, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.00799560546875, -0.0001068115234375, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-05, -0.003139495849609375, -5.7220458984375e-06, -7.607377529144287, 0.0, -0.0016021728515625, -0.00038909912109375, 0.0, 0.0, -6.29425048828125e-05, 0.0, -2.288818359375e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -0.00043785572052001953, 0.0, -7.62939453125e-06, -0.00058746337890625, -0.0001544952392578125, -0.00019741052528843284, -3.576277322281385e-06, 0.0, -3.24249267578125e-05, -0.00011444091796875, 0.0], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -7.9529656739773245, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 6, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "Fireball", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -5.119290351867676, -5.7220458984375e-06, -0.00011444091796875, -0.00015079975128173828, -1.9073486328125e-06, -0.00017547607421875, -0.0003452301025390625, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0008945465087890625, -1.33514404296875e-05, -0.05389213562011719, -5.841255187988281e-06, -0.001445174217224121, -0.00013363361358642578, -0.03707313537597656, -0.0001468658447265625, -0.022165298461914062, 0.0, -0.0017747879028320312, -0.001087188720703125, -3.4332275390625e-05, -0.0001087188720703125, -3.24249267578125e-05, -0.0035734176635742188, 0.0, -0.008870124816894531, -0.000209808349609375, -0.008429527282714844, -0.000576019287109375, -0.00531005859375, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.1463308334350586, 0.0, -0.003238677978515625, 0.0, -0.016860485076904297, 0.0, -0.000370025634765625, -0.7269372940063477, -0.014400482177734375, -0.02045917510986328, -0.0011730194091796875, -3.24249267578125e-05, 0.0, -0.0013532638549804688, -1.9073486328125e-06, -0.000728607177734375, 0.0, -0.002238631248474121, -5.7220458984375e-06, -0.015895843505859375, -0.0017004013061523438, -1.9073486328125e-05, 0.0, -0.000118255615234375, 0.0, -0.0021209716796875, 0.0, -1.7146493196487427, -1.71661376953125e-05, -0.005551338195800781, -0.000579833984375, -3.814697265625e-06, 0.0, -0.0002727508544921875, 0.0, -0.000301361083984375, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -0.00035941600799560547, 0.0, -9.5367431640625e-06, -0.000701904296875, -9.1552734375e-05, -0.0002564184251241386, -3.576277322281385e-06, 0.0, -5.340576171875e-05, -0.000156402587890625, -2.0265579223632812e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health != target.\n            calculate_max_health() and target.calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -13.316258020699024, "choice_history": [50, 111, 176, 59, 93, 24, 144, "4", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 4, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -11.1016263961792, -1.1839771270751953, -0.8444957733154297, -0.049376487731933594, -0.07234198600053787, -0.06440401077270508], "inferred_code": "self.target.damage(player.effective_spell_damage(4), self)\n"}, {"score": -15.450250625610352, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -15.450214385986328], "inferred_code": "break\n"}, {"score": -20.789993286132812, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-9.5367431640625e-06, -7.62939453125e-06, -20.789976119995117], "inferred_code": ""}], "index": 32}
{"beams": [{"score": -0.036910838993151174, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -0.005543231964111328, -3.814697265625e-06, -8.20159912109375e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -0.00012969970703125, -0.000362396240234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -0.0001804828643798828, 0.0, -0.002185821533203125, -0.0007543563842773438, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814624506048858e-05, -1.9073486328125e-06, -0.000255584716796875, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.09808349609375e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8610222216229886e-05, 0.0, -0.0001316070556640625, -1.52587890625e-05, -0.00095367431640625, -1.9073486328125e-06, -0.0004748106002807617, -8.106222594506107e-06, -0.00067901611328125, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020923614501953125, 0.0, -0.00034224987030029297, -2.86102294921875e-05, -0.0002918243408203125, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.0002002716064453125, -5.7220458984375e-06, -0.0005950927734375, 0.0, -0.0007476806640625, -5.7220458984375e-06, -0.00421905517578125, -5.7220458984375e-06, -0.00024282913364004344, 0.0, -0.0001010894775390625, -0.003978729248046875, 0.0, -3.24249267578125e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0006074905395507812, 0.0, -0.0001581844117026776, -2.3841855067985307e-07, -0.00016021728515625, -5.7220458984375e-06, -0.001499176025390625, -0.003490447998046875, -0.000164031982421875, -0.0003649814461823553, -1.3589766240329482e-05, -5.7220458984375e-05, -0.0001373291015625, -0.0007592439651489258, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -5.599661774158385, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -5.565160274505615, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.9591064453125e-05, -0.0002384185791015625, -0.0005645751953125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.00014066696166992188, -1.1920928244535389e-07, -0.0050506591796875, -0.0009622573852539062, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -4.0649541915627196e-05, -1.9073486328125e-06, -0.0002613067626953125, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.09808349609375e-05, -8.392333984375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8610222216229886e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -0.0009670257568359375, -1.9073486328125e-06, -0.000469207763671875, -8.225431884056889e-06, -0.0006732940673828125, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0019426345825195312, 0.0, -0.00034606456756591797, -2.86102294921875e-05, -0.0002880096435546875, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.00019931793212890625, -5.7220458984375e-06, -0.000598907470703125, 0.0, -0.0007495880126953125, -5.7220458984375e-06, -0.004207611083984375, -5.7220458984375e-06, -0.00024294831382576376, 0.0, -9.918212890625e-05, -0.003963470458984375, 0.0, -3.24249267578125e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0006084442138671875, 0.0, -0.00015937635907903314, -2.3841855067985307e-07, -0.00016021728515625, -5.7220458984375e-06, -0.0015010833740234375, -0.0034809112548828125, -0.0001621246337890625, -0.0003654581669252366, -1.3589766240329482e-05, -5.7220458984375e-05, -0.0001373291015625, -0.0007573366165161133, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -5.793612553299646, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -0.005543231964111328, -3.814697265625e-06, -8.20159912109375e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -0.00012969970703125, -0.000362396240234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -0.0001804828643798828, 0.0, -0.002185821533203125, -0.0007543563842773438, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814624506048858e-05, -1.9073486328125e-06, -0.000255584716796875, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.09808349609375e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8610222216229886e-05, 0.0, -0.0001316070556640625, -1.52587890625e-05, -0.00095367431640625, -1.9073486328125e-06, -0.0004748106002807617, -8.106222594506107e-06, -0.00067901611328125, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020923614501953125, 0.0, -0.00034224987030029297, -2.86102294921875e-05, -0.0002918243408203125, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.0002002716064453125, -5.7220458984375e-06, -0.0005950927734375, 0.0, -0.0007476806640625, -5.7220458984375e-06, -5.757328033447266, -3.814697265625e-06, -0.00019311904907226562, 0.0, -0.000213623046875, -0.0064449310302734375, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0006618499755859375, 0.0, -0.00013196216605138034, -1.1920928244535389e-07, -0.0001678466796875, -5.7220458984375e-06, -0.001575469970703125, -0.0044078826904296875, -0.0001659393310546875, -0.00035199010744690895, -1.3232143828645349e-05, -5.340576171875e-05, -0.0001468658447265625, -0.0007764101028442383, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -6.695955764000615, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -0.005543231964111328, -3.814697265625e-06, -8.20159912109375e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -0.00012969970703125, -0.000362396240234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -0.0001804828643798828, 0.0, -6.314199447631836, -0.0006542205810546875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -6.282154936343431e-05, -1.9073486328125e-06, -0.00037384033203125, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -2.09808349609375e-05, -2.288818359375e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.8967848265892826e-05, 0.0, -0.005154609680175781, -0.0003566741943359375, -0.005331993103027344, -1.9073486328125e-06, -0.0010852813720703125, -1.4781869140279014e-05, -0.0010013580322265625, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0023221969604492188, 0.0, -0.00043594837188720703, -2.86102294921875e-05, -0.0002651214599609375, -9.5367431640625e-06, -2.288818359375e-05, -1.33514404296875e-05, -3.62396240234375e-05, -0.00017547607421875, -5.7220458984375e-06, -0.0007534027099609375, 0.0, -0.00078582763671875, -5.7220458984375e-06, -0.003986358642578125, -5.7220458984375e-06, -0.00023031211458146572, 0.0, -1.9073486328125e-05, -0.00356292724609375, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000576019287109375, 0.0, -0.0002316030440852046, -3.576278118089249e-07, -0.0001583099365234375, -7.62939453125e-06, -0.00171661376953125, -0.0029010772705078125, -0.0001373291015625, -0.00041455955943092704, -1.4305012882687151e-05, -7.05718994140625e-05, -0.000141143798828125, -0.0006525516510009766, -3.933906555175781e-06, -0.021581649780273438, -1.33514404296875e-05, -0.0211944580078125, 0.0, -9.787081944523379e-05, -2.3007374693406746e-05, -0.2625885009765625, -1.71661376953125e-05, -5.340576171875e-05, -1.1444091796875e-05, -0.000492095947265625, 0.0, -0.0009309053421020508, -1.9073486328125e-06, -0.005169034004211426, -3.814697265625e-06, -0.0007903643418103456, 0.0, -2.288818359375e-05, -0.00061798095703125, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.013609886169433594, 0.0, -0.00032408235711045563, -2.741813204920618e-06, -0.0016841888427734375, -1.1444091796875e-05, -0.0024871826171875, -0.00347137451171875, -0.000171661376953125, -0.0005645886994898319, -1.6569954823353328e-05, -8.392333984375e-05, -0.000171661376953125, -0.0006296634674072266, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -6.7738020982637295, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "values": [{"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "can_use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, {"left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"n": 1, "_type": "Num"}]}], "_type": "BoolOp"}, "_type": "Return"}], "name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -6.5303955078125, -0.0023555755615234375, -8.7738037109375e-05, -4.2199197196168825e-05, -4.88758041683468e-06, -0.0003159739135298878, -2.872943878173828e-05, -0.004819989204406738, -5.7220458984375e-06, -9.918212890625e-05, -0.0001010894775390625, -5.91278076171875e-05, 0.0, -7.2479248046875e-05, -0.0001277923583984375, -0.0002899169921875, -5.7220458984375e-06, 0.0, 0.0, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -0.00017261505126953125, 0.0, -0.00714111328125, -0.000324249267578125, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -3.0517578125e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.0649541915627196e-05, -1.9073486328125e-06, -0.000278472900390625, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8729431505780667e-05, 0.0, -0.0001277923583984375, -1.52587890625e-05, -0.00096893310546875, -1.9073486328125e-06, -0.00044345855712890625, -8.344639354618266e-06, -0.000659942626953125, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.00189971923828125, 0.0, -0.00034606456756591797, -2.86102294921875e-05, -0.0002880096435546875, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.0002002716064453125, -5.7220458984375e-06, -0.000598907470703125, 0.0, -0.0007476806640625, -5.7220458984375e-06, -0.0042057037353515625, -5.7220458984375e-06, -0.00024282913364004344, 0.0, -9.918212890625e-05, -0.003955841064453125, 0.0, -3.4332275390625e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0006093978881835938, 0.0, -0.0001584228011779487, -2.3841855067985307e-07, -0.00016021728515625, -5.7220458984375e-06, -0.001499176025390625, -0.0034923553466796875, -0.000164031982421875, -0.00036450475454330444, -1.3589766240329482e-05, -5.7220458984375e-05, -0.0001373291015625, -0.0007582902908325195, -3.933906555175781e-06, -0.0076160430908203125, -0.0002536773681640625, -0.001148223876953125, 0.0, -5.7220458984375e-06, -0.0003814697265625, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.288818359375e-05, -0.00025022029876708984, 0.0, -0.0275726318359375, -0.009721755981445312, -0.000274658203125, -0.10567378997802734, -0.0001087188720703125, -0.0001354217529296875, -0.0023040771484375, -0.0017595291137695312, -0.0002574920654296875, -1.52587890625e-05, 0.0, -0.000263214111328125, -1.9073486328125e-06, -0.0002927776367869228, -1.52587890625e-05, -0.005953788757324219, 0.0, -0.000240325927734375, -4.57763671875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -8.392333984375e-05, -1.33514404296875e-05, -8.58306884765625e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.0023126602172851562, -0.0002307891845703125, -0.0004978179931640625, 0.0, -0.00077056884765625, 0.0, -0.0004372574621811509, -9.417505680175964e-06, -7.62939453125e-06, -4.57763671875e-05, -2.47955322265625e-05, -3.24249267578125e-05, -3.4332275390625e-05, -0.0005474090576171875, 0.0, -7.82012939453125e-05, -3.814697265625e-06, -0.00586700439453125, -1.9073486328125e-06, -0.00017523627320770174, 0.0, -0.0035266876220703125, -0.011204719543457031, -0.0004119873046875, -0.0001373291015625, -3.814697265625e-06, -0.01263169851154089, -1.9073486328125e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"score": -7.257939967450454, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template2", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -6.658021926879883, -0.0010433197021484375, -1.0967194612021558e-05, -2.0861407392658293e-05, -0.0002563863235991448, -1.5377996533061378e-05, -0.4356318712234497, -4.9710244638845325e-05, -0.0003032684326171875, -3.4332275390625e-05, -3.62396240234375e-05, 0.0, -4.00543212890625e-05, -0.0003604888916015625, -0.0001678466796875, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -0.00018393993377685547, 0.0, -0.13597679138183594, -0.0004730224609375, 0.0, -3.814697265625e-06, -1.52587890625e-05, -2.6702880859375e-05, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -6.413266237359494e-05, -1.9073486328125e-06, -0.0002613067626953125, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-05, -9.72747802734375e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.920626684499439e-05, 0.0, -0.0001373291015625, -1.52587890625e-05, -0.0009365081787109375, -1.9073486328125e-06, -0.0004214048385620117, -8.344639354618266e-06, -0.0006389617919921875, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.001453399658203125, 0.0, -0.00035953521728515625, -2.86102294921875e-05, -0.000274658203125, -9.5367431640625e-06, -2.288818359375e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.0002002716064453125, -5.7220458984375e-06, -0.0006008148193359375, 0.0, -0.0007495880126953125, -5.7220458984375e-06, -0.0041599273681640625, -5.7220458984375e-06, -0.00023913361656013876, 0.0, -0.0001010894775390625, -0.00384521484375, 0.0, -3.4332275390625e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0006113052368164062, 0.0, -0.00015913796960376203, -2.3841855067985307e-07, -0.00016021728515625, -5.7220458984375e-06, -0.0014972686767578125, -0.003490447998046875, -0.000164031982421875, -0.0003651006263680756, -1.3589766240329482e-05, -5.7220458984375e-05, -0.0001392364501953125, -0.0007573366165161133, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -7.264756746017099, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "ROGUE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -7.195450305938721, 0.0, -8.7738037109375e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -7.62939453125e-06, -0.0001220703125, -2.47955322265625e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.00026798248291015625, 0.0, -0.039633750915527344, -0.0019626617431640625, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -4.470248313737102e-05, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -8.392333984375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8729431505780667e-05, 0.0, -0.0001316070556640625, -1.52587890625e-05, -0.000946044921875, -1.9073486328125e-06, -0.00045669078826904297, -8.583057933719829e-06, -0.0006618499755859375, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00180816650390625, 0.0, -0.00035178661346435547, -2.86102294921875e-05, -0.0002803802490234375, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.00019931793212890625, -5.7220458984375e-06, -0.0006084442138671875, 0.0, -0.000751495361328125, -5.7220458984375e-06, -0.004177093505859375, -5.7220458984375e-06, -0.00023901440727058798, 0.0, -0.0001010894775390625, -0.00390625, 0.0, -3.24249267578125e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0006093978881835938, 0.0, -0.0001579460222274065, -2.3841855067985307e-07, -0.00016021728515625, -5.7220458984375e-06, -0.001499176025390625, -0.0034942626953125, -0.000164031982421875, -0.0003647431149147451, -1.3589766240329482e-05, -5.7220458984375e-05, -0.0001373291015625, -0.0007582902908325195, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -7.330303490469248, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 62, 98, 15, 91, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", 160, 3, 163, 37, 117, "0", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "test": {"left": {"attr": "health", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Gt"}], "_type": "Compare", "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -0.005543231964111328, -3.814697265625e-06, -8.20159912109375e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -0.00012969970703125, -0.000362396240234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -0.0001804828643798828, 0.0, -0.002185821533203125, -0.0007543563842773438, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814624506048858e-05, -1.9073486328125e-06, -0.000255584716796875, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.09808349609375e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8610222216229886e-05, 0.0, -0.0001316070556640625, -1.52587890625e-05, -0.00095367431640625, -1.9073486328125e-06, -0.0004748106002807617, -8.106222594506107e-06, -0.00067901611328125, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020923614501953125, 0.0, -0.00034224987030029297, -2.86102294921875e-05, -0.0002918243408203125, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.0002002716064453125, -5.7220458984375e-06, -0.0005950927734375, 0.0, -0.0007476806640625, -5.7220458984375e-06, -0.00421905517578125, -5.7220458984375e-06, -0.00024282913364004344, 0.0, -0.0001010894775390625, -5.5503339767456055, -0.000843048095703125, -0.0009326934814453125, -1.1444091796875e-05, -0.14828968048095703, -3.814697265625e-06, -0.003330230712890625, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.4703561067581177, 0.0, -0.01617790013551712, -3.325883881188929e-05, -0.1522860825061798, -5.006785613659304e-06, -0.001476287841796875, -0.5477075576782227, -1.9073486328125e-06, -0.000102996826171875, -3.814697265625e-06, -0.02722485363483429, -1.9073486328125e-06, -0.0074558258056640625, -0.3420877456665039, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -0.023363113403320312, 0.0, -0.008374565280973911, -2.3841855067985307e-07, -0.0001735687255859375, -1.9073486328125e-06, -0.000499725341796875, -0.0020503997802734375, -0.0002117156982421875, -0.0003540156176313758, -1.1324817933200393e-05, -5.14984130859375e-05, -0.0001850128173828125, -0.0005828142166137695, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            if player.hero.health > 0:\n                minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -7.479941138651128, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -0.005543231964111328, -3.814697265625e-06, -8.20159912109375e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -0.00012969970703125, -0.000362396240234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -0.0001804828643798828, 0.0, -0.002185821533203125, -0.0007543563842773438, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814624506048858e-05, -1.9073486328125e-06, -0.000255584716796875, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.09808349609375e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8610222216229886e-05, 0.0, -0.0001316070556640625, -1.52587890625e-05, -0.00095367431640625, -1.9073486328125e-06, -0.0004748106002807617, -8.106222594506107e-06, -0.00067901611328125, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020923614501953125, 0.0, -0.00034224987030029297, -2.86102294921875e-05, -0.0002918243408203125, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.0002002716064453125, -5.7220458984375e-06, -7.436311721801758, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -0.002079010009765625, -3.814697265625e-06, -0.005466461181640625, -1.9073486328125e-06, -0.0021371108014136553, 0.0, -0.0007878541946411133, 0.0, -0.000598907470703125, -0.005222320556640625, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.0004215240478515625, 0.0, -0.00011229403025936335, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, -0.0016345977783203125, -0.0039691925048828125, -0.0001506805419921875, -0.0003207650443073362, -1.2874520507466514e-05, -4.57763671875e-05, -0.000125885009765625, -0.0007354021072387695, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -7.895071625365972, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 163, 30, 88, 11, 81, 19, 112, "game", "<EOS>", "<UNK>", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "7", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"args": [{"n": 2, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"attr": "<UNK>", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -0.005543231964111328, -3.814697265625e-06, -8.20159912109375e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -0.00012969970703125, -0.000362396240234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -0.0001804828643798828, 0.0, -0.002185821533203125, -0.0007543563842773438, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814624506048858e-05, -1.9073486328125e-06, -0.000255584716796875, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.09808349609375e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8610222216229886e-05, 0.0, -0.0001316070556640625, -1.52587890625e-05, -0.00095367431640625, -1.9073486328125e-06, -0.0004748106002807617, -8.106222594506107e-06, -0.00067901611328125, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020923614501953125, 0.0, -0.00034224987030029297, -2.86102294921875e-05, -0.0002918243408203125, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.0002002716064453125, -5.7220458984375e-06, -0.0005950927734375, 0.0, -0.0007476806640625, -5.7220458984375e-06, -0.00421905517578125, -5.7220458984375e-06, -0.00024282913364004344, 0.0, -0.0001010894775390625, -0.003978729248046875, 0.0, -3.24249267578125e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0006074905395507812, 0.0, -0.0001581844117026776, -2.3841855067985307e-07, -0.00016021728515625, -5.7220458984375e-06, -0.001499176025390625, -6.103157997131348, -0.00014495849609375, -4.38690185546875e-05, 0.0, -0.0001239776611328125, 0.0, -0.0007773637771606445, -3.445148468017578e-05, -0.08996808528900146, -6.556489552167477e-06, -9.5367431640625e-05, -0.37487125396728516, -0.0026493072509765625, -0.000171661376953125, -1.9073486328125e-06, -0.000377655029296875, 0.0, -0.039028286933898926, -7.62939453125e-06, -0.3936910629272461, 0.0, -0.014182090759277344, -0.015051841735839844, 0.0, -0.6426801085472107, 0.0, -0.10770034790039062, -7.62939453125e-06, -0.07506830990314484, -0.0003249645233154297, -0.0020351409912109375, -9.1552734375e-05, -0.0008575914544053376, -5.960462772236497e-07], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.<UNK>(2, 7)), self\n                )\n"}, {"score": -7.908221803363546, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Flamestrike", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -0.005543231964111328, -3.814697265625e-06, -8.20159912109375e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -0.00012969970703125, -0.000362396240234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -0.0001804828643798828, 0.0, -6.314199447631836, -0.0006542205810546875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -6.282154936343431e-05, -1.9073486328125e-06, -0.00037384033203125, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -2.09808349609375e-05, -2.288818359375e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.8967848265892826e-05, 0.0, -0.005154609680175781, -0.0003566741943359375, -0.005331993103027344, -1.9073486328125e-06, -0.0010852813720703125, -1.4781869140279014e-05, -0.0010013580322265625, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0023221969604492188, 0.0, -0.00043594837188720703, -2.86102294921875e-05, -0.0002651214599609375, -9.5367431640625e-06, -2.288818359375e-05, -1.33514404296875e-05, -3.62396240234375e-05, -0.00017547607421875, -5.7220458984375e-06, -0.0007534027099609375, 0.0, -0.00078582763671875, -5.7220458984375e-06, -0.003986358642578125, -5.7220458984375e-06, -0.00023031211458146572, 0.0, -1.9073486328125e-05, -0.00356292724609375, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000576019287109375, 0.0, -0.0002316030440852046, -3.576278118089249e-07, -0.0001583099365234375, -7.62939453125e-06, -0.00171661376953125, -0.0029010772705078125, -0.0001373291015625, -0.00041455955943092704, -1.4305012882687151e-05, -7.05718994140625e-05, -0.000141143798828125, -0.0006525516510009766, -3.933906555175781e-06, -0.021581649780273438, -1.33514404296875e-05, -0.0211944580078125, 0.0, -9.787081944523379e-05, -2.3007374693406746e-05, -1.4862604141235352, -0.0001850128173828125, -4.38690185546875e-05, 0.0, -8.20159912109375e-05, 0.0, -0.0005068778991699219, -2.47955322265625e-05, -0.0003108978271484375, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -5.340576171875e-05, -0.00018978118896484375, -5.7220458984375e-06, -0.0004482269287109375, 0.0, -0.0008449554443359375, -3.814697265625e-06, -0.003978729248046875, -7.62939453125e-06, -0.00024473649682477117, 0.0, -1.33514404296875e-05, -0.005168914794921875, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001373291015625, 0.0, -0.00018333039770368487, -2.1457672119140625e-06, -0.0002040863037109375, -5.7220458984375e-06, -0.00159454345703125, -0.00292205810546875, -0.0001506805419921875, -0.00044744968181475997, -1.3828182090946939e-05, -6.29425048828125e-05, -0.0001468658447265625, -0.000691533088684082, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -13.575949903577566, "choice_history": [50, 111, 176, 59, 93, 24, 144, "7", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 7, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -11.902627944946289, -0.05530834197998047, -1.2473411560058594, -0.015187263488769531, -0.3398714065551758, -0.015465017408132553], "inferred_code": "self.target.damage(player.effective_spell_damage(7), self)\n"}, {"score": -13.692577362060547, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -13.692428588867188], "inferred_code": "break\n"}, {"score": -14.838260292992345, "choice_history": [50, 111, 176, 59, 93, 24, 144, "2", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -11.902627944946289, -0.05530834197998047, -1.2473411560058594, -0.015187263488769531, -1.61761474609375, -3.206728433724493e-05], "inferred_code": "self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -21.929197311401367, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-0.000118255615234375, -2.6702880859375e-05, -21.929052352905273], "inferred_code": ""}], "index": 33}
{"beams": [{"score": -0.17778144181726674, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Flametongue", " ", "Totem", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -0.07482528686523438, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -5.14984130859375e-05, -0.0001926422119140625, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, 0.0, -1.0848020792764146e-05, -0.0001163482666015625, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.793414675281383e-05, -4.053115117130801e-05, -0.0002009868621826172, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.003395317355170846, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.6133995056152344e-05, -2.6702880859375e-05, -0.0038366317749023438, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004730224609375, -0.0023479461669921875, 0.0, -0.00043976306915283203, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -0.0002307891845703125, 0.0, -0.0021953582763671875, -3.814697265625e-06, -0.018808722496032715, 0.0, -0.05160331726074219, -1.1444091796875e-05, -3.576278118089249e-07, -3.576278118089249e-07, -2.5033634301507846e-05, -2.2649765014648438e-06, -0.0018600219627842307, -1.537799835205078e-05, -0.0017795562744140625, -7.05718994140625e-05, -0.00034332275390625, -0.00017547607421875, -0.0001010894775390625, -3.814697265625e-06, 0.0, -8.654594421386719e-05, -7.05718994140625e-05, -0.0002384185791015625, -0.0008563995361328125, -0.00030517578125, -0.0009503355831839144, -1.9073486328125e-05, -0.0008983612060546875, -0.0002040863037109375, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003097057342529297, -0.00074005126953125, 0.0, -1.9073486328125e-05, -0.003996849060058594, -8.58306884765625e-05, -0.0017030350863933563, -5.209347000345588e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -2.9760860183887274, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template1", "hole2": "SHAMAN"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -2.6300582885742188, -4.1961669921875e-05, -0.0010102669475600123, -1.9073484509135596e-05, -4.9233436584472656e-05, 0.0, -0.0011718972818925977, 0.0, -0.2794649600982666, -3.814697265625e-06, -0.012042999267578125, -1.1444091796875e-05, -1.9073468138230965e-06, -1.1920928244535389e-07, -5.447697913041338e-05, -2.0265579223632812e-06, -0.0345832034945488, -5.7220458984375e-06, -0.001880645751953125, -7.62939453125e-05, -0.0001583099365234375, -0.00011444091796875, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -8.0108642578125e-05, -7.05718994140625e-05, -0.0003795623779296875, -0.0042724609375, -0.000293731689453125, -0.0007421965710818768, -1.71661376953125e-05, -0.0015354156494140625, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0003514289855957031, -0.0009765625, 0.0, -1.52587890625e-05, -0.0014734268188476562, -5.91278076171875e-05, -0.0015580616891384125, -5.042461270932108e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -4.3879907476581295, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Flametongue", " ", "Totem", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "3", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -0.07482528686523438, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -5.14984130859375e-05, -0.0001926422119140625, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, 0.0, -1.0848020792764146e-05, -0.0001163482666015625, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.793414675281383e-05, -4.053115117130801e-05, -0.0002009868621826172, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.003395317355170846, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.6133995056152344e-05, -2.6702880859375e-05, -0.0038366317749023438, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004730224609375, -0.0023479461669921875, 0.0, -0.00043976306915283203, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -0.0002307891845703125, 0.0, -0.0021953582763671875, -3.814697265625e-06, -0.018808722496032715, 0.0, -2.9912843704223633, -1.9073486328125e-06, -0.003173828125, -0.000141143798828125, -1.9073486328125e-06, -0.0006961822509765625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -0.1808624267578125, -1.5497195136049413e-06, -0.0001239776611328125, -0.000164031982421875, -5.91278076171875e-05, -3.4332275390625e-05, -0.000270843505859375, -9.5367431640625e-06, 0.0, -0.028888581320643425, -9.5367431640625e-06, -0.0009899139404296875, -5.7220458984375e-06, -1.71661376953125e-05, -0.004568776581436396, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.007310586050152779, -1.9073486328125e-06, -0.10043907165527344, -2.09808349609375e-05, -1.9073486328125e-06, -0.03559458255767822, 0.0, -0.000568389892578125, -2.09808349609375e-05, -0.003955841064453125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.6645509004592896, 0.0, -0.0007762908935546875, -1.71661376953125e-05, -0.000335693359375, -0.0016965866088867188, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003241300582885742, -8.213520050048828e-05, -0.000141143798828125, -0.2393646240234375, -0.0011997222900390625, -0.0018703928217291832, -1.71661376953125e-05, -0.0030765533447265625, -6.103515625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00028610226581804454, -0.00130462646484375, 0.0, -4.1961669921875e-05, -0.0007534027099609375, -5.53131103515625e-05, -0.0014062225818634033, -5.1735940360231325e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, charge=True, auras=[Aura(ChangeAttack(2),\n            MinionSelector(Adjacent()))])\n"}, {"score": -4.521167590969057, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template1", "hole2": "MAGE"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -2.6300582885742188, -4.1961669921875e-05, -0.0010102669475600123, -1.9073484509135596e-05, -4.9233436584472656e-05, 0.0, -0.0011718972818925977, 0.0, -1.8526413440704346, -7.62939453125e-06, -0.00543212890625, -4.38690185546875e-05, -4.529942543740617e-06, -1.1920928244535389e-07, -5.101999340695329e-05, -2.1457672119140625e-06, -0.01663922145962715, -7.62939453125e-06, -0.00154876708984375, -4.76837158203125e-05, -6.67572021484375e-05, -7.62939453125e-05, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.189678192138672e-05, -8.20159912109375e-05, -0.0004062652587890625, -0.001689910888671875, -0.000339508056640625, -0.0007266993052326143, -1.33514404296875e-05, -0.0010013580322265625, -0.0001163482666015625, -1.52587890625e-05, -1.9073486328125e-06, -0.0003355741500854492, -0.0009098052978515625, 0.0, -1.52587890625e-05, -0.0015039443969726562, -6.866455078125e-05, -0.0015358496457338333, -5.149745265953243e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -5.171411616563653, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Flametongue", " ", "Totem", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "3", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "effects", "value": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -0.07482528686523438, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -5.14984130859375e-05, -0.0001926422119140625, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, 0.0, -1.0848020792764146e-05, -0.0001163482666015625, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.793414675281383e-05, -4.053115117130801e-05, -0.0002009868621826172, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.003395317355170846, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.6133995056152344e-05, -2.6702880859375e-05, -0.0038366317749023438, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004730224609375, -0.0023479461669921875, 0.0, -0.00043976306915283203, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -0.0002307891845703125, 0.0, -0.0021953582763671875, -3.814697265625e-06, -0.018808722496032715, 0.0, -2.9912843704223633, -1.9073486328125e-06, -0.003173828125, -0.000141143798828125, -1.9073486328125e-06, -0.0006961822509765625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -0.1808624267578125, -1.5497195136049413e-06, -0.0001239776611328125, -0.000164031982421875, -5.91278076171875e-05, -3.4332275390625e-05, -0.000270843505859375, -9.5367431640625e-06, 0.0, -0.028888581320643425, -9.5367431640625e-06, -0.0009899139404296875, -5.7220458984375e-06, -1.71661376953125e-05, -0.004568776581436396, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.007310586050152779, -1.9073486328125e-06, -0.10043907165527344, -2.09808349609375e-05, -1.9073486328125e-06, -0.03559458255767822, 0.0, -0.000568389892578125, -2.09808349609375e-05, -0.003955841064453125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -1.5651875734329224, 0.0, -0.00012969970703125, -1.9073486328125e-06, -2.86102294921875e-05, -0.0002918243408203125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0029485225677490234, -0.00015461444854736328, -0.0005035400390625, -0.11913108825683594, -0.0008678436279296875, -0.0018576362635940313, -1.9073486328125e-05, -0.0052242279052734375, -4.9591064453125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00030481815338134766, -0.0014781951904296875, 0.0, -3.814697265625e-05, -0.00090789794921875, -7.2479248046875e-05, -0.0015780720859766006, -5.26895746588707e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, charge=True, effects=[Aura(ChangeAttack(2),\n            MinionSelector(Adjacent()))])\n"}, {"score": -5.7342715225964795, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Flametongue", " ", "Totem", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "3", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 46, 135, "Adjacent", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"elts": [{"args": [{"hole0": "Adjacent", "_type": "Template18"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -0.07482528686523438, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -5.14984130859375e-05, -0.0001926422119140625, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, 0.0, -1.0848020792764146e-05, -0.0001163482666015625, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.793414675281383e-05, -4.053115117130801e-05, -0.0002009868621826172, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.003395317355170846, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.6133995056152344e-05, -2.6702880859375e-05, -0.0038366317749023438, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004730224609375, -0.0023479461669921875, 0.0, -0.00043976306915283203, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -0.0002307891845703125, 0.0, -0.0021953582763671875, -3.814697265625e-06, -0.018808722496032715, 0.0, -2.9912843704223633, -1.9073486328125e-06, -0.003173828125, -0.000141143798828125, -1.9073486328125e-06, -0.0006961822509765625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -0.1808624267578125, -1.5497195136049413e-06, -0.0001239776611328125, -0.000164031982421875, -5.91278076171875e-05, -3.4332275390625e-05, -0.000270843505859375, -9.5367431640625e-06, 0.0, -0.028888581320643425, -9.5367431640625e-06, -0.0009899139404296875, -5.7220458984375e-06, -1.71661376953125e-05, -0.004568776581436396, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.007310586050152779, -1.9073486328125e-06, -0.10043907165527344, -2.09808349609375e-05, -1.9073486328125e-06, -0.03559458255767822, 0.0, -0.000568389892578125, -2.09808349609375e-05, -0.003955841064453125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.6645509004592896, 0.0, -0.0007762908935546875, -1.71661376953125e-05, -0.000335693359375, -0.0016965866088867188, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003241300582885742, -8.213520050048828e-05, -0.000141143798828125, -1.5651779174804688, -0.0005054473876953125, -0.013550376519560814, -0.005027651786804199, -0.00038433074951171875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0015938273863866925, -7.2479248046875e-05, 0.0, -2.09808349609375e-05, -0.0065479278564453125, -2.288818359375e-05, -0.0028286129236221313, -3.337840098538436e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, charge=True, auras=[Aura(Adjacent(),\n            MinionSelector(Adjacent()))])\n"}, {"score": -5.8945570768345235, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Flametongue", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -0.07482528686523438, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -5.14984130859375e-05, -0.0001926422119140625, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, 0.0, -1.0848020792764146e-05, -0.0001163482666015625, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.793414675281383e-05, -4.053115117130801e-05, -0.0002009868621826172, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7192840576171875, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.295608520507812e-05, -5.7220458984375e-06, -0.005279183387756348, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -4.57763671875e-05, -9.739398956298828e-05, 0.0, -0.000568389892578125, -0.0016269683837890625, 0.0, -0.00043785572052001953, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0002384185791015625, 0.0, -0.0022869110107421875, -3.814697265625e-06, -0.018635153770446777, 0.0, -0.05174827575683594, -1.1444091796875e-05, -3.576278118089249e-07, -3.576278118089249e-07, -2.2887918021297082e-05, -2.2649765014648438e-06, -0.0018390411278232932, -1.3470649719238281e-05, -0.0017547607421875, -6.866455078125e-05, -0.0003337860107421875, -0.00017547607421875, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -8.463859558105469e-05, -7.2479248046875e-05, -0.000244140625, -0.0009098052978515625, -0.000347137451171875, -0.0009818067774176598, -1.9073486328125e-05, -0.0009517669677734375, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003020763397216797, -0.0007534027099609375, 0.0, -1.9073486328125e-05, -0.00391387939453125, -8.58306884765625e-05, -0.0017005093395709991, -5.209347000345588e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -5.962179305134548, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Flametongue", " ", "Totem", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "<UNK>Totem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.787642002105713, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -0.07482528686523438, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -5.14984130859375e-05, -0.0001926422119140625, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, 0.0, -1.0848020792764146e-05, -0.0001163482666015625, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.793414675281383e-05, -4.053115117130801e-05, -0.0002009868621826172, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.003395317355170846, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.6133995056152344e-05, -2.6702880859375e-05, -0.0038366317749023438, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004730224609375, -0.0023479461669921875, 0.0, -0.00043976306915283203, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -0.0002307891845703125, 0.0, -0.0021953582763671875, -3.814697265625e-06, -0.018808722496032715, 0.0, -0.05160331726074219, -1.1444091796875e-05, -3.576278118089249e-07, -3.576278118089249e-07, -2.5033634301507846e-05, -2.2649765014648438e-06, -0.0018600219627842307, -1.537799835205078e-05, -0.0017795562744140625, -7.05718994140625e-05, -0.00034332275390625, -0.00017547607421875, -0.0001010894775390625, -3.814697265625e-06, 0.0, -8.654594421386719e-05, -7.05718994140625e-05, -0.0002384185791015625, -0.0008563995361328125, -0.00030517578125, -0.0009503355831839144, -1.9073486328125e-05, -0.0008983612060546875, -0.0002040863037109375, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003097057342529297, -0.00074005126953125, 0.0, -1.9073486328125e-05, -0.003996849060058594, -8.58306884765625e-05, -0.0017030350863933563, -5.209347000345588e-05], "inferred_code": "class <UNK>Totem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -6.096338999660915, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template1", "hole2": "PRIEST"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -2.6300582885742188, -4.1961669921875e-05, -0.0010102669475600123, -1.9073484509135596e-05, -4.9233436584472656e-05, 0.0, -0.0011718972818925977, 0.0, -3.4294273853302, -1.9073486328125e-06, -0.00909423828125, -1.33514404296875e-05, -2.145764938177308e-06, -1.1920928244535389e-07, -4.4225431338418275e-05, -2.1457672119140625e-06, -0.009039982222020626, -7.62939453125e-06, -0.0016193389892578125, -5.53131103515625e-05, -8.58306884765625e-05, -0.0001277923583984375, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -8.189678192138672e-05, -7.2479248046875e-05, -0.0004100799560546875, -0.0034742355346679688, -0.000301361083984375, -0.0007596011273562908, -1.52587890625e-05, -0.0013790130615234375, -9.1552734375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0003477334976196289, -0.000988006591796875, 0.0, -1.71661376953125e-05, -0.0014705657958984375, -6.103515625e-05, -0.0015721507370471954, -5.113983934279531e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -7.391969595039875, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template1", "hole2": "WARLOCK"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -2.6300582885742188, -4.1961669921875e-05, -0.0010102669475600123, -1.9073484509135596e-05, -4.9233436584472656e-05, 0.0, -0.0011718972818925977, 0.0, -4.678581237792969, 0.0, -0.05248832702636719, -9.5367431640625e-06, -4.887569048150908e-06, -2.0265579223632812e-06, -5.1377683121245354e-05, -2.1457672119140625e-06, -0.011081447824835777, -9.655952453613281e-06, -0.00214385986328125, -6.103515625e-05, -7.82012939453125e-05, -9.34600830078125e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -8.368492126464844e-05, -7.62939453125e-05, -0.0004405975341796875, -0.003985404968261719, -0.0003070831298828125, -0.0007274146773852408, -1.52587890625e-05, -0.0013885498046875, -9.1552734375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00034606456756591797, -0.0010242462158203125, 0.0, -1.71661376953125e-05, -0.0014543533325195312, -6.103515625e-05, -0.0015699006617069244, -5.1378247007960454e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -7.447971826376936, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template1", "hole2": "DRUID"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -2.6300582885742188, -4.1961669921875e-05, -0.0010102669475600123, -1.9073484509135596e-05, -4.9233436584472656e-05, 0.0, -0.0011718972818925977, 0.0, -4.252013206481934, -5.7220458984375e-06, -0.5309314727783203, -1.71661376953125e-05, -2.861018856492592e-06, -2.0265579223632812e-06, -5.042408520239405e-05, -2.0265579223632812e-06, -0.014557469636201859, -7.62939453125e-06, -0.0023059844970703125, -8.7738037109375e-05, -6.29425048828125e-05, -8.58306884765625e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -7.43865966796875e-05, -0.0004291534423828125, -0.004284858703613281, -0.00030517578125, -0.0007523293606936932, -1.52587890625e-05, -0.00142669677734375, -9.1552734375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0003516674041748047, -0.0010356903076171875, 0.0, -1.71661376953125e-05, -0.0015516281127929688, -6.29425048828125e-05, -0.0015848949551582336, -5.149745265953243e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -7.609286029772633, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template1", "hole2": "PALADIN"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "auras"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -2.6300582885742188, -4.1961669921875e-05, -0.0010102669475600123, -1.9073484509135596e-05, -4.9233436584472656e-05, 0.0, -0.0011718972818925977, 0.0, -4.937113285064697, -1.9073486328125e-06, -0.009946823120117188, -9.5367431640625e-06, -1.6689286894688848e-06, -1.1920928244535389e-07, -3.1709081667941064e-05, -2.0265579223632812e-06, -0.012457244098186493, -7.62939453125e-06, -0.0020732879638671875, -7.43865966796875e-05, -8.20159912109375e-05, -7.82012939453125e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.368492126464844e-05, -7.2479248046875e-05, -0.0004119873046875, -0.004046440124511719, -0.00030517578125, -0.0007379050366580486, -1.71661376953125e-05, -0.0014667510986328125, -8.96453857421875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0003496408462524414, -0.0010128021240234375, 0.0, -1.52587890625e-05, -0.0013895034790039062, -5.7220458984375e-05, -0.0015762615948915482, -4.99477973789908e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -7.74701310251838, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template1", "hole2": "SHAMAN"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template4", "hole2": "spell_targetable"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -2.6300582885742188, -4.1961669921875e-05, -0.0010102669475600123, -1.9073484509135596e-05, -4.9233436584472656e-05, 0.0, -0.0011718972818925977, 0.0, -0.2794649600982666, -3.814697265625e-06, -0.012042999267578125, -1.1444091796875e-05, -1.9073468138230965e-06, -1.1920928244535389e-07, -5.447697913041338e-05, -2.0265579223632812e-06, -4.043149948120117, -1.9073486328125e-06, -0.22450733184814453, -0.00872802734375, -0.5433617830276489, 0.0], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, spell_targetable=True)\n"}, {"score": -8.079745303140939, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 20, 113, "False", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template1", "hole2": "SHAMAN"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template4", "hole2": "spell_targetable"}], "name": "FlametongueTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -2.6300582885742188, -4.1961669921875e-05, -0.0010102669475600123, -1.9073484509135596e-05, -4.9233436584472656e-05, 0.0, -0.0011718972818925977, 0.0, -0.2794649600982666, -3.814697265625e-06, -0.012042999267578125, -1.1444091796875e-05, -1.9073468138230965e-06, -1.1920928244535389e-07, -5.447697913041338e-05, -2.0265579223632812e-06, -4.043149948120117, -1.9073486328125e-06, -0.22450733184814453, -0.00872802734375, -0.8760939836502075, 0.0], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, spell_targetable=True)\n"}, {"score": -24.741710662841797, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -24.741695404052734], "inferred_code": ""}], "index": 34}
{"beams": [{"score": -0.05296703975193395, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 67, 129, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template12", "hole2": "taunt"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -0.0008993148803710938, 0.0, -0.0262908935546875, -4.57763671875e-05, -0.000141143798828125, -2.288818359375e-05, -1.9073486328125e-06, -0.0002498626708984375, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00202178955078125, -2.0265579223632812e-06, -3.4332275390625e-05, -0.014301300048828125, -0.0014476776123046875, -6.5565000113565475e-06, -1.4305104514278355e-06, -0.0002932351198978722, 0.0, -0.0013830617535859346, 0.0, -8.20159912109375e-05, -1.33514404296875e-05, -0.000110626220703125, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -3.718109480852249, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template4", "hole2": "taunt"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -0.0008993148803710938, 0.0, -3.7059717178344727, -3.24249267578125e-05, -1.1920928244535389e-07, 0.0, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.00545346736907959, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -4.599332534079849, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "0", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole0": 0, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -0.0008993148803710938, 0.0, -0.0262908935546875, -4.57763671875e-05, -0.000141143798828125, -2.288818359375e-05, -1.9073486328125e-06, -0.0002498626708984375, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00202178955078125, -2.0265579223632812e-06, -3.4332275390625e-05, -4.478555679321289, -0.0003509521484375, -0.0036947582848370075, -5.841255187988281e-06, -0.08139751851558685, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n"}, {"score": -6.662230364809801, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "0", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 0, "_type": "Template5"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -0.0008993148803710938, 0.0, -6.6556901931762695, -1.52587890625e-05, -2.3841855067985307e-07, -3.4570634852570947e-06, -2.5033950805664062e-05, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1)\n"}, {"score": -6.728900636497762, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Frog", "<EOS>", "0", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 67, 129, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 0, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Frog", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template12", "hole2": "taunt"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -6.373706817626953, -0.000110626220703125, -0.00043347186874598265, -2.682209014892578e-05, -0.0025674989446997643, 0.0, -0.004641294479370117, 0.0, -0.0015772476326674223, 0.0, -4.38690185546875e-05, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -2.288818359375e-05, 0.0, -0.00035893917083740234, 0.0, -0.2642707824707031, -9.5367431640625e-05, -0.0001773834228515625, -9.5367431640625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.006041526794433594, -1.1920928244535389e-07, -4.38690185546875e-05, -0.07034873962402344, -0.001312255859375, -4.768367489305092e-06, -3.4570634852570947e-06, -0.0004198408278170973, 0.0, -0.0017098162788897753, 0.0, -0.0001125335693359375, -3.0517578125e-05, -6.67572021484375e-05, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -7.0966698698237, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "_", "<EOS>", 176, 67, 129, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template12", "hole2": "taunt"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "_", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -0.0008993148803710938, 0.0, -0.0262908935546875, -4.57763671875e-05, -0.000141143798828125, -2.288818359375e-05, -1.9073486328125e-06, -0.0002498626708984375, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.034491539001465, 0.0, -3.0517578125e-05, -0.02557659149169922, -0.0010089874267578125, -8.940691259340383e-06, -9.536738616588991e-07, -0.00026866784901358187, 0.0, -0.0018080422887578607, 0.0, -9.918212890625e-05, -1.52587890625e-05, -9.1552734375e-05, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -7.133902766113579, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "0", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 4, "hole0": 0, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -0.0008993148803710938, 0.0, -0.0262908935546875, -4.57763671875e-05, -0.000141143798828125, -2.288818359375e-05, -1.9073486328125e-06, -0.0002498626708984375, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00202178955078125, -2.0265579223632812e-06, -3.4332275390625e-05, -4.478555679321289, -0.0003509521484375, -0.0036947582848370075, -5.841255187988281e-06, -2.6159677505493164, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 4)\n"}, {"score": -7.864130360052137, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Frog", "<EOS>", "0", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 0, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Frog", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template4", "hole2": "taunt"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -6.373706817626953, -0.000110626220703125, -0.00043347186874598265, -2.682209014892578e-05, -0.0025674989446997643, 0.0, -0.004641294479370117, 0.0, -0.0015772476326674223, 0.0, -4.38690185546875e-05, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -2.288818359375e-05, 0.0, -0.00035893917083740234, 0.0, -1.4732885360717773, -3.4332275390625e-05, -2.3841855067985307e-07, 0.0, -1.7523694623378105e-05, -1.1920928244535389e-07, -0.0064961910247802734, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -8.20159912109375e-05, -1.9073486328125e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -7.989210458168593, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 67, 129, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template12", "hole2": "taunt"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -7.938122272491455, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.00026929378509521484, -1.1920928244535389e-07, -0.00019550247816368937, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.445148468017578e-05, -0.0001316070556640625, -5.53131103515625e-05, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.0004788637161254883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -0.000880122184753418, 0.0, -0.024236679077148438, -4.57763671875e-05, -0.00014495849609375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002689361572265625, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0020389556884765625, -2.0265579223632812e-06, -3.4332275390625e-05, -0.0145416259765625, -0.0015964508056640625, -6.318082796497038e-06, -1.1920922133867862e-06, -0.0002932355273514986, 0.0, -0.0014232349349185824, 0.0, -7.82012939453125e-05, -1.1444091796875e-05, -0.000110626220703125, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -8.249724190450934, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "1", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 0, "_type": "Num"}, {"n": 1, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -0.0008993148803710938, 0.0, -0.0262908935546875, -4.57763671875e-05, -0.000141143798828125, -2.288818359375e-05, -1.9073486328125e-06, -0.0002498626708984375, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00202178955078125, -2.0265579223632812e-06, -3.4332275390625e-05, -7.680063724517822, -0.009922027587890625, -0.0021724700927734375, -0.08018684387207031, -9.5367431640625e-06, 0.0, -0.014695882797241211, -3.24249267578125e-05, -0.0024013519287109375, -0.00037384033203125, -5.7220458984375e-06, -1.168244216387393e-05, -9.536738616588991e-07, -3.24249267578125e-05, -7.62939453125e-06, -0.008512664586305618, 0.0, -0.0025634765625, -7.62939453125e-06, -0.0005092620849609375, -0.4080240726470947, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -2.86102294921875e-05, -0.0004444122314453125, -0.003960609436035156, 0.0, -9.1552734375e-05, 0.0, -0.0001621246337890625, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, charge=True, taunt=True)\n"}, {"score": -8.319167129505544, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template4", "hole2": "taunt"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.863105773925781, 0.0, -0.4460268020629883, -3.0517578125e-05, -1.1920928244535389e-07, 0.0, -1.1086436643381603e-05, -1.1920928244535389e-07, -0.004248976707458496, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -1.9073486328125e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -9.058634277511253, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frog", "<EOS>", "0", "<EOS>", "ALL", "<EOS>", 71, 139, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 0, "hole0": "Frog", "_type": "Template1", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 0, "_type": "Template4", "hole2": "taunt"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -9.00041675567627, -2.86102294921875e-05, -3.874234243994579e-05, -4.076957702636719e-05, -0.000802875030785799, 0.0, -0.004011631011962891, 0.0, -0.04287147521972656, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -3.182877117069438e-05, 0.0, -0.009783506393432617, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.9073486328125e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -9.522045194685795, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Frog", "<EOS>", "0", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "0", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 0, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Frog", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole0": 0, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frog", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -6.373706817626953, -0.000110626220703125, -0.00043347186874598265, -2.682209014892578e-05, -0.0025674989446997643, 0.0, -0.004641294479370117, 0.0, -0.0015772476326674223, 0.0, -4.38690185546875e-05, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -2.288818359375e-05, 0.0, -0.00035893917083740234, 0.0, -0.2642707824707031, -9.5367431640625e-05, -0.0001773834228515625, -9.5367431640625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.006041526794433594, -1.1920928244535389e-07, -4.38690185546875e-05, -2.7927560806274414, -0.0004062652587890625, -0.005566368345171213, -4.0531158447265625e-06, -0.06842047721147537, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n"}, {"score": -17.798791885375977, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, 0.0, -17.79878807067871], "inferred_code": "break\n"}, {"score": -24.48919677734375, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [0.0, -3.814697265625e-06, -24.489192962646484], "inferred_code": ""}], "index": 35}
{"beams": [{"score": -0.4107458683516825, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -0.2359304428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0005865097045898438, 0.0, -0.000286102294921875, -1.9073486328125e-06, -0.0018024444580078125, -6.914137884450611e-06, -0.0005626678466796875, -0.0002002716064453125, -3.814697265625e-06, -0.0036104850005358458, -6.92605972290039e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score": -3.466617114036694, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "minion", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "minion", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -3.164613723754883, -5.7220458984375e-06, -0.0001983642578125, -0.061646461486816406, -1.9073486328125e-06, -0.0062274932861328125, 0.0, -0.059316158294677734, -2.2649765014648438e-06, -0.0009212493896484375, -0.000408172607421875, -1.9073486328125e-06, -0.005553951486945152, -4.0411949157714844e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.minion(Buff(Frozen()))\n"}, {"score": -3.6410241286552036, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 163, 35, 112, "minions", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -1.9204721450805664, -1.9073486328125e-06, -0.000637054443359375, -0.20471763610839844, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.000286102294921875, 0.0, -0.001973271369934082, -5.924701690673828e-05, -0.011814236640930176, -3.099436753473128e-06, -6.4849853515625e-05, -0.21694087982177734, 0.0, -1.0820027589797974, 0.0, -0.000446319580078125, -5.91278076171875e-05, -0.03378033638000488, -1.9073486328125e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(minions), self)\n"}, {"score": -3.6688743989237764, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -1.9204721450805664, -1.9073486328125e-06, -0.000637054443359375, -0.20471763610839844, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.000286102294921875, 0.0, -0.001973271369934082, -5.924701690673828e-05, -0.011814236640930176, -3.099436753473128e-06, -6.4849853515625e-05, -0.21694087982177734, 0.0, -1.1401468515396118, -6.19888032815652e-06, -6.103515625e-05, -1.9073486328125e-06, -0.003922820091247559, -1.9073486328125e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(<UNK>), self)\n"}, {"score": -4.69425547572115, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "Frost", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 0, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -1.9204721450805664, -1.9073486328125e-06, -0.000637054443359375, -1.7033824920654297, -0.0003719329833984375, -0.8945133686065674, -0.0003174428711645305, -0.0005321502685546875, -0.000125885009765625, -0.006221413612365723, -3.576278118089249e-07], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n"}, {"score": -4.940571681824281, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "minion", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -3.57559871673584, -1.9073486328125e-05, -0.0002841949462890625, 0.0, -0.00041460987995378673, -5.841255187988281e-06, -0.19268226623535156, 0.0, -1.020900845527649, 0.0, -9.5367431640625e-06, -0.0005245208740234375, -3.814697265625e-06, -0.001068115234375, -1.9073486328125e-06, -0.0012922286987304688, -7.987022399902344e-06, -0.0007228851318359375, -0.00058746337890625, -3.814697265625e-06, -0.007614850997924805, -0.00020229816436767578], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.target.add_buff(Buff(Frozen()))\n"}, {"score": -4.989494458729148, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "3", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 3, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -1.9204721450805664, -1.9073486328125e-06, -0.000637054443359375, -1.7033824920654297, -0.0003719329833984375, -1.192475438117981, -2.7894804588868283e-05, -0.0002918243408203125, -5.91278076171875e-05, -0.004095196723937988, -1.1920928244535389e-07], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"score": -5.196137518743285, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 163, 30, 88, 11, 81, 19, 112, "game", "<EOS>", "<UNK>", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"args": [{"n": 2, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"attr": "<UNK>", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -1.9204721450805664, -1.9073486328125e-06, -0.000637054443359375, -0.20471763610839844, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.000286102294921875, 0.0, -0.001973271369934082, -5.924701690673828e-05, -0.011814236640930176, -3.099436753473128e-06, -6.4849853515625e-05, -2.1159181594848633, -0.000118255615234375, -0.00186920166015625, -2.288818359375e-05, -0.0011844635009765625, 0.0, -0.00415647029876709, -1.1563301086425781e-05, -0.013928413391113281, 0.0, -0.28855228424072266, -0.03944110870361328, 0.0, -0.09889931976795197, 0.0, -0.023001670837402344, -1.33514404296875e-05, -0.24017024040222168, -1.1444091796875e-05, -0.05696678161621094, -7.62939453125e-06, -0.004069089889526367, -2.384185791015625e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(game.<UNK>(2, 3)), self\n                )\n"}, {"score": -5.39758838083219, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "players", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "players", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -4.995784759521484, -5.7220458984375e-05, -0.0019073486328125, 0.0, -0.0002918243408203125, -0.0029010772705078125, 0.0, -7.62939453125e-06, -0.0001468658447265625, -2.09808349609375e-05, -1.9073486328125e-06, -0.033336639404296875, 0.0, -6.699535151710734e-05, -8.296966552734375e-05, -0.238555908203125, -1.9073486328125e-06, -3.814697265625e-06, -0.00041866302490234375, 0.0, -0.000293731689453125, -1.9073486328125e-06, -0.0018711090087890625, -7.033347174001392e-06, -0.0005397796630859375, -0.000194549560546875, -3.814697265625e-06, -0.0034494318533688784, -6.937980651855469e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.players.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score": -5.507581957639218, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "minions", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -5.15204381942749, 0.0, -0.006768226623535156, 0.0, -0.000270843505859375, -0.0027103424072265625, 0.0, -7.62939453125e-06, -8.20159912109375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.03207111358642578, 0.0, -6.735301576554775e-05, -6.568431854248047e-05, -0.18909168243408203, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -1.9073486328125e-06, -0.00030517578125, -1.9073486328125e-06, -0.0019435882568359375, -8.940695806813892e-06, -0.0005283355712890625, -0.000202178955078125, -3.814697265625e-06, -0.00340448971837759, -7.128715515136719e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.minions.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score": -5.554203019428428, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 20, 113, "True", "<EOS>", 177, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "iter": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"value": true, "_type": "NameConstant"}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -2.56406307220459, -0.000888824462890625, -3.814697265625e-06, -2.86102294921875e-05, -0.1799449920654297, -5.7220458984375e-06, -6.29425048828125e-05, 0.0, -0.025989174842834473, -1.9073486328125e-06, -0.11359882354736328, -7.11679458618164e-05, -0.37196850776672363, 0.0, -0.000202178955078125, -0.20479774475097656, -0.000133514404296875, -0.0011310577392578125, 0.0, -0.026136398315429688, -1.71661376953125e-05, -0.008220434188842773, -1.9073486328125e-06, -0.0075836181640625, -0.000244140625, -3.24249267578125e-05, -3.62396240234375e-05, -0.0001239776611328125, -0.008563041687011719, -1.9073486328125e-06, -0.07571125030517578, -0.0024929046630859375, -0.0140838623046875, -7.62939453125e-06, -0.006344795227050781, -0.11826038360595703, -0.0020542144775390625, -0.0002269744873046875, -8.96453857421875e-05, -3.814697265625e-06, -0.7070162296295166, 0.0, -0.004591941833496094, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0012722015380859375, 0.0, -0.01271355152130127, -1.9073486328125e-06, -0.0048809051513671875, -0.0001773834228515625, -6.866455078125e-05, -0.0043773651123046875, -1.9073486328125e-06, -0.04926180839538574, -7.62939453125e-06, -0.6741971969604492, -0.0001163482666015625, -0.0001354217529296875, 0.0, -0.0008803606033325195, -3.814697265625e-06, -0.0034618377685546875, -1.9073486328125e-06, -0.007625579833984375, -9.5367431640625e-06, -0.00046539306640625, 0.0, -0.06429862976074219, -1.9073486328125e-06, -0.027051091194152832, -1.9073486328125e-06, -0.00010881107300519943, 0.0, -0.00012969970703125, -0.00063323974609375, 0.0, -9.5367431640625e-06, -1.9073486328125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.00988006591796875, 0.0, -7.09294545231387e-05, -0.0002429485321044922, -0.21109390258789062, -1.9073486328125e-06, -5.7220458984375e-06, -0.00047397613525390625, -1.9073486328125e-06, -0.0003814697265625, -1.9073486328125e-06, -0.001710057258605957, -6.675719760096399e-06, -0.00061798095703125, -0.0001983642578125, -3.814697265625e-06, -0.003904577111825347, -5.3882598876953125e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_enemy_minion_spell_target(\n            player.game, lambda x: True):\n            minion = game.random_choice(targets)\n            for minion in game.other_player.minions:\n                minion.add_buff(Buff(Frozen()))\n"}, {"score": -6.06997981330403, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 35, 112, "game", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "game", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -1.9204721450805664, -1.9073486328125e-06, -0.000637054443359375, -0.20471763610839844, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.000286102294921875, 0.0, -0.001973271369934082, -5.924701690673828e-05, -0.011814236640930176, -3.099436753473128e-06, -6.4849853515625e-05, -2.8856678009033203, -1.9073486328125e-06, -0.00099945068359375, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.10541439056396484, -1.9073486328125e-06, -0.0704270601272583, -1.9073486328125e-06, -0.0015753612387925386, 0.0, -0.0857086181640625, 0.0, -0.6123161315917969, -1.33514404296875e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(game.other_player.\n                minions), game)\n"}, {"score": -6.676258998239405, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 20, 113, "True", "<EOS>", 177, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "3", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template1", "hole2": "MAGE"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"value": true, "_type": "NameConstant"}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -2.56406307220459, -0.000888824462890625, -3.814697265625e-06, -2.86102294921875e-05, -0.1799449920654297, -5.7220458984375e-06, -6.29425048828125e-05, 0.0, -0.025989174842834473, -1.9073486328125e-06, -0.11359882354736328, -7.11679458618164e-05, -0.37196850776672363, 0.0, -0.000202178955078125, -0.20479774475097656, -0.000133514404296875, -0.0011310577392578125, 0.0, -0.026136398315429688, -1.71661376953125e-05, -0.008220434188842773, -1.9073486328125e-06, -0.0075836181640625, -0.000244140625, -3.24249267578125e-05, -3.62396240234375e-05, -0.0001239776611328125, -0.008563041687011719, -1.9073486328125e-06, -0.07571125030517578, -0.0024929046630859375, -0.0140838623046875, -7.62939453125e-06, -0.006344795227050781, -0.11826038360595703, -0.0020542144775390625, -0.0002269744873046875, -8.96453857421875e-05, -3.814697265625e-06, -0.7070162296295166, 0.0, -0.004591941833496094, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0012722015380859375, 0.0, -0.01271355152130127, -1.9073486328125e-06, -0.0048809051513671875, -0.0001773834228515625, -6.866455078125e-05, -0.0043773651123046875, -1.9073486328125e-06, -0.04926180839538574, -7.62939453125e-06, -0.7779951095581055, -0.004329681396484375, -1.9073486328125e-06, -0.0003337860107421875, -1.1444091796875e-05, -0.00023651123046875, -0.00030612945556640625, -1.9073486328125e-06, -0.759626030921936, -2.0265558760002023e-06, -0.07045471668243408, -1.9073486328125e-06, -7.62939453125e-06, -0.30800342559814453, -6.866455078125e-05, -0.20617538690567017, -2.0861618395429105e-05, -0.0005168914794921875, -6.103515625e-05, -0.0017251968383789062, 0.0], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_enemy_minion_spell_target(\n            player.game, lambda x: True):\n            minion = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -17.66770362854004, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -17.66768455505371], "inferred_code": "break\n"}, {"score": -23.901411056518555, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.52587890625e-05, -3.814697265625e-06, -23.901391983032227], "inferred_code": ""}], "index": 36}
{"beams": [{"score": -0.332976090524447, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -0.02996063232421875, -0.00066375732421875, -9.999959729611874e-05, -1.311301275563892e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0028705596923828125, -3.814697265625e-06, -5.7220458984375e-06, -0.0012445449829101562, 0.0, -0.000579833984375, 0.0, -0.0009108776575885713, 0.0, -2.47955322265625e-05, 0.0, -0.08949577808380127, 0.0, 0.0, -0.0015764236450195312, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.044386863708496094, -2.5153160095214844e-05, -0.0006504058837890625, -0.0001373291015625, -1.33514404296875e-05, -0.0032849302515387535, -3.814697265625e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -3.15686335953707, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -0.02996063232421875, -0.00066375732421875, -9.999959729611874e-05, -1.311301275563892e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0028705596923828125, -3.814697265625e-06, -5.7220458984375e-06, -0.0012445449829101562, 0.0, -0.000579833984375, 0.0, -0.0009108776575885713, 0.0, -2.47955322265625e-05, 0.0, -2.9575090408325195, -1.9073486328125e-06, -4.57763671875e-05, -0.000530242919921875, -5.7220458984375e-06, -0.005389014258980751, 0.0, -1.9073486328125e-06, 0.0, -2.5272369384765625e-05, -1.1920928244535389e-07], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.damage(1, self)\n"}, {"score": -3.408193892863686, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -2.1472082138061523, -3.0517578125e-05, -6.67572021484375e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.004141807556152344, -4.38690185546875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0058422088623046875, 0.0, -0.010163426399230957, 0.0, -0.0043468475341796875, -2.288818359375e-05, -0.018650054931640625, 0.0, -0.01332855224609375, -0.001651763916015625, -8.0108642578125e-05, -0.00012969970703125, -1.9073486328125e-06, -0.04726409912109375, 0.0, -0.0015878677368164062, -0.0001220703125, -0.000720977783203125, -0.0007724761962890625, -0.00162506103515625, -0.0002651214599609375, -0.0007190704345703125, 0.0, -0.13493728637695312, 0.0, -0.005864143371582031, 0.0, -0.008954167366027832, 0.0, -2.288818359375e-05, -0.1949472427368164, -3.814697265625e-06, -0.014599800109863281, -0.0012950897216796875, -3.814697265625e-06, 0.0, -0.0008087158203125, 0.0, -0.029300689697265625, 0.0, -0.00442659854888916, -1.9073486328125e-06, -0.01827239990234375, -0.0010967254638671875, -1.33514404296875e-05, 0.0, -0.0002689361572265625, 0.0, -0.016115188598632812, 0.0, -0.1777287721633911, 0.0, -0.29415321350097656, -5.340576171875e-05, -8.7738037109375e-05, 0.0, -5.7220458984375e-06, -6.29425048828125e-05, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0002052783966064453, -2.0265579223632812e-06, -0.0037069320678710938, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -3.8146954466355965e-06, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -0.0001220703125, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.753734588623047e-05, -1.33514404296875e-05, -0.0003528594970703125, -0.0001277923583984375, -0.08617401123046875, -0.0005817413330078125, -0.00010007806122303009, -1.1920922133867862e-06, -1.33514404296875e-05, -2.6702880859375e-05, -2.09808349609375e-05, -0.00247955322265625, -3.814697265625e-06, -3.814697265625e-06, -0.0010290145874023438, 0.0, -0.0005626678466796875, 0.0, -0.0008298153406940401, 0.0, -2.47955322265625e-05, 0.0, -0.09208023548126221, 0.0, 0.0, -0.0015401840209960938, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.04332447052001953, -2.5153160095214844e-05, -0.000659942626953125, -0.0001373291015625, -1.52587890625e-05, -0.003229140304028988, -3.933906555175781e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>,\n            filter_func=lambda target: target.health == target.\n            calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -4.25291113800764, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -2.1472082138061523, -3.0517578125e-05, -6.67572021484375e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.004141807556152344, -4.38690185546875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0058422088623046875, 0.0, -0.010163426399230957, 0.0, -0.0043468475341796875, -2.288818359375e-05, -0.018650054931640625, 0.0, -0.01332855224609375, -0.001651763916015625, -8.0108642578125e-05, -0.00012969970703125, -1.9073486328125e-06, -0.04726409912109375, 0.0, -0.0015878677368164062, -0.0001220703125, -0.000720977783203125, -0.0007724761962890625, -0.00162506103515625, -0.0002651214599609375, -0.0007190704345703125, 0.0, -0.13493728637695312, 0.0, -0.005864143371582031, 0.0, -0.008954167366027832, 0.0, -2.288818359375e-05, -0.1949472427368164, -3.814697265625e-06, -0.014599800109863281, -0.0012950897216796875, -3.814697265625e-06, 0.0, -0.0008087158203125, 0.0, -0.029300689697265625, 0.0, -0.00442659854888916, -1.9073486328125e-06, -0.01827239990234375, -0.0010967254638671875, -1.33514404296875e-05, 0.0, -0.0002689361572265625, 0.0, -0.016115188598632812, 0.0, -0.1777287721633911, 0.0, -1.3739519119262695, -0.0001068115234375, -1.33514404296875e-05, 0.0, -0.00159454345703125, 0.0, -0.00015461444854736328, 0.0, -1.33514404296875e-05, 0.0, -0.0003523826599121094, 0.0, -7.62939453125e-06, -0.00032806396484375, -0.0001010894775390625, -0.0001296214759349823, -3.576278118089249e-07, 0.0, -1.9073486328125e-05, -4.9114227294921875e-05, -2.0265579223632812e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>,\n            filter_func=lambda target: target.health == target.\n            calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.621922672355133, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -3.56331729888916, -0.0003604888916015625, -1.1444091796875e-05, -9.5367431640625e-06, -0.0001983642578125, 0.0, -0.0005035400390625, 0.0, -0.0012649290729314089, 0.0, -1.1444091796875e-05, 0.0, -0.03307628631591797, 0.0, -1.9073486328125e-05, -0.0001392364501953125, -7.62939453125e-06, -0.0043557086028158665, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -2.7298927307128906e-05, -1.1920928244535389e-07, -0.12152767181396484, -3.814697265625e-06, -0.011220932006835938, -0.0003795623779296875, -1.33514404296875e-05, -7.62939453125e-06, -0.00022220611572265625, -1.9073486328125e-06, -0.046370506286621094, 0.0, -0.003315325127914548, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -0.6721649169921875, -1.9073486328125e-06, -5.7220458984375e-05, -0.000659942626953125, -9.5367431640625e-06, -0.005685825832188129, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -2.7179718017578125e-05, -1.1920928244535389e-07], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        self.target.damage(1, self)\n"}, {"score": -4.831658640505346, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -3.56331729888916, -0.0003604888916015625, -1.1444091796875e-05, -9.5367431640625e-06, -0.0001983642578125, 0.0, -0.0005035400390625, 0.0, -0.0012649290729314089, 0.0, -1.1444091796875e-05, 0.0, -0.03307628631591797, 0.0, -1.9073486328125e-05, -0.0001392364501953125, -7.62939453125e-06, -0.0043557086028158665, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -2.7298927307128906e-05, -1.1920928244535389e-07, -0.12152767181396484, -3.814697265625e-06, -0.011220932006835938, -0.0003795623779296875, -1.33514404296875e-05, -7.62939453125e-06, -0.00022220611572265625, -1.9073486328125e-06, -0.046370506286621094, 0.0, -0.003315325127914548, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -0.831477165222168, 0.0, 0.0, -0.0020542144775390625, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.050907135009765625, -3.4689903259277344e-05, -0.000789642333984375, -0.0001354217529296875, -2.47955322265625e-05, -0.002875683829188347, -2.0265579223632812e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -4.91021249516691, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -0.02996063232421875, -0.00066375732421875, -9.999959729611874e-05, -1.311301275563892e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0028705596923828125, -3.814697265625e-06, -5.7220458984375e-06, -0.0012445449829101562, 0.0, -0.000579833984375, 0.0, -0.0009108776575885713, 0.0, -2.47955322265625e-05, 0.0, -0.08949577808380127, 0.0, 0.0, -0.0015764236450195312, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.474924087524414, -1.9669532775878906e-05, -0.0003509521484375, -0.033913612365722656, 0.0, -0.006656646728515625, -1.9073486328125e-06, -0.00145721435546875, 0.0, -0.001049041748046875, 0.0, -0.10146808624267578, -1.9073486328125e-06, -0.005895127542316914, 0.0], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(len(game.other_player.minions))\n"}, {"score": -4.986569497536969, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -0.02996063232421875, -0.00066375732421875, -9.999959729611874e-05, -1.311301275563892e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0028705596923828125, -3.814697265625e-06, -5.7220458984375e-06, -0.0012445449829101562, 0.0, -0.000579833984375, 0.0, -0.0009108776575885713, 0.0, -2.47955322265625e-05, 0.0, -4.55063533782959, -3.814697265625e-06, -5.7220458984375e-06, -0.000701904296875, -9.5367431640625e-06, -0.24185501039028168, -3.814697265625e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.change_attack(1)\n"}, {"score": -5.212829216680596, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -2.1472082138061523, -3.0517578125e-05, -6.67572021484375e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.004141807556152344, -4.38690185546875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0058422088623046875, 0.0, -0.010163426399230957, 0.0, -0.0043468475341796875, -2.288818359375e-05, -0.018650054931640625, 0.0, -0.01332855224609375, -0.001651763916015625, -8.0108642578125e-05, -0.00012969970703125, -1.9073486328125e-06, -0.04726409912109375, 0.0, -0.0015878677368164062, -0.0001220703125, -0.000720977783203125, -0.0007724761962890625, -0.00162506103515625, -0.0002651214599609375, -0.0007190704345703125, 0.0, -0.13493728637695312, 0.0, -0.005864143371582031, 0.0, -0.008954167366027832, 0.0, -2.288818359375e-05, -0.1949472427368164, -3.814697265625e-06, -0.014599800109863281, -0.0012950897216796875, -3.814697265625e-06, 0.0, -0.0008087158203125, 0.0, -0.029300689697265625, 0.0, -0.00442659854888916, -1.9073486328125e-06, -0.01827239990234375, -0.0010967254638671875, -1.33514404296875e-05, 0.0, -0.0002689361572265625, 0.0, -0.016115188598632812, 0.0, -1.9935246706008911, -3.814697265625e-06, -0.2789802551269531, -1.9073486328125e-05, -0.000213623046875, 0.0, -5.7220458984375e-06, -6.67572021484375e-05, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.00021958351135253906, -2.0265579223632812e-06, -0.0034389495849609375, -1.9073486328125e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -3.933904736186378e-06, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.753734588623047e-05, -1.33514404296875e-05, -0.0003490447998046875, -0.000125885009765625, -0.0895986557006836, -0.0005950927734375, -9.98771283775568e-05, -1.1920922133867862e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0025348663330078125, -3.814697265625e-06, -3.814697265625e-06, -0.0010309219360351562, 0.0, -0.0005664825439453125, 0.0, -0.0008271927363239229, 0.0, -2.6702880859375e-05, 0.0, -0.09259903430938721, 0.0, 0.0, -0.0015468597412109375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.043468475341796875, -2.5153160095214844e-05, -0.0006580352783203125, -0.0001373291015625, -1.52587890625e-05, -0.0032321205362677574, -3.933906555175781e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>,\n            filter_func=lambda target: target.health == target.\n            calculate_max_health() and target.calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -5.4695551616928455, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 45, 134, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"hole0": 1, "_type": "Template17"}, {"id": "self", "_type": "Name"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -0.02996063232421875, -0.00066375732421875, -9.999959729611874e-05, -1.311301275563892e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0028705596923828125, -3.814697265625e-06, -5.7220458984375e-06, -0.0012445449829101562, 0.0, -0.000579833984375, 0.0, -0.0009108776575885713, 0.0, -2.47955322265625e-05, 0.0, -0.08949577808380127, 0.0, 0.0, -0.0015764236450195312, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.518074035644531, 0.0, -0.0002651214599609375, -0.010222434997558594, -7.43865966796875e-05, -0.04736693575978279, -0.0007166856667026877, 0.0, -0.000949859619140625, -5.7220458984375e-06, -0.0002574920654296875, -3.24249267578125e-05, -0.002316233469173312, -3.62396240234375e-05, 0.0, -0.0001277923583984375, -0.23785686492919922, -0.0006046295166015625, -0.018596846610307693, -1.5139492461457849e-05, -0.34717845916748047, -4.00543212890625e-05, -0.0003391503996681422, -4.41074053014745e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Effect(TurnEnded(), ActionTag(Damage(1), self)))\n"}, {"score": -5.67709023378255, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -5.520363807678223, -0.0001392364501953125, -1.9073486328125e-06, 0.0, -0.0016307830810546875, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00021255016326904297, 0.0, -7.62939453125e-06, -0.0076427459716796875, -6.29425048828125e-05, -0.0001646876335144043, -2.3841855067985307e-07, 0.0, -2.09808349609375e-05, -1.9431114196777344e-05, -1.1920928244535389e-07], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.701974618982625, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -0.02996063232421875, -0.00066375732421875, -9.999959729611874e-05, -1.311301275563892e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0028705596923828125, -3.814697265625e-06, -5.7220458984375e-06, -0.0012445449829101562, 0.0, -0.000579833984375, 0.0, -0.0009108776575885713, 0.0, -2.47955322265625e-05, 0.0, -5.508028984069824, -3.814697265625e-06, -3.62396240234375e-05, -0.0003185272216796875, 0.0, -0.0002307891845703125, -1.9073486328125e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.die(self)\n"}, {"score": -6.099455345748559, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostShock", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -0.02996063232421875, -0.00066375732421875, -9.999959729611874e-05, -1.311301275563892e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -5.877788543701172, -3.814697265625e-06, 0.0, -0.001674652099609375, 0.0, -0.006180286407470703, 0.0, -0.02609384059906006, 0.0], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -16.670223236083984, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -16.670211791992188], "inferred_code": "break\n"}, {"score": -22.793657302856445, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -22.793649673461914], "inferred_code": ""}], "index": 37}
{"beams": [{"score": -1.2247733468748265, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -0.39346885681152344, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000141143798828125, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -1.4305092918220907e-05, 0.0, -7.43865966796875e-05, 0.0, -0.18759167194366455, 0.0, -5.7220458984375e-06, -0.00197601318359375, -4.76837158203125e-05, -0.016947627067565918, -2.622604142743512e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.200241088867188e-05, -2.3841855067985307e-07, -0.0007419586181640625, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -2.09808349609375e-05, -0.000644683837890625, 0.0, -7.68899917602539e-05, 0.0, -8.96453857421875e-05, 0.0, -0.5099325180053711, -1.9073486328125e-06, -3.814697265625e-06, -0.000213623046875, -9.5367431640625e-06, -0.0987730398774147, -4.5299530029296875e-06], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        self.target.change_attack(3)\n"}, {"score": -1.2254020161771848, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -1.1266450881958008, -0.00022125244140625, -0.0015225065872073174, -2.503394853192731e-06, -9.5367431640625e-05, 0.0, -9.5367431640625e-05, -0.0005359649658203125, -3.814697265625e-06, -1.9073486328125e-06, -0.0003204345703125, -1.52587890625e-05, -0.0010471343994140625, 0.0, -0.00026535987854003906, 0.0, -6.103515625e-05, 0.0, -0.07406330108642578, 0.0, -5.7220458984375e-06, -0.001605987548828125, -2.288818359375e-05, -0.0001087188720703125, 0.0, -0.0006963014602661133, -3.24249267578125e-05, -0.0004978179931640625, -0.000949859619140625, -0.000621795654296875, -0.0023205592297017574, -3.576278118089249e-07], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -2.0988429779744138, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -0.39346885681152344, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000141143798828125, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -1.4305092918220907e-05, 0.0, -7.43865966796875e-05, 0.0, -0.18759167194366455, 0.0, -5.7220458984375e-06, -0.00197601318359375, -4.76837158203125e-05, -0.016947627067565918, -2.622604142743512e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.200241088867188e-05, -2.3841855067985307e-07, -0.0007419586181640625, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -2.09808349609375e-05, -0.000644683837890625, 0.0, -7.68899917602539e-05, 0.0, -8.96453857421875e-05, 0.0, -1.4749507904052734, 0.0, -5.7220458984375e-06, -0.0020399093627929688, -2.288818359375e-05, -0.000171661376953125, 0.0, -0.0009233951568603516, -2.47955322265625e-05, -0.000457763671875, -0.00096893310546875, -0.00079345703125, -0.0026488080620765686, -4.768370445162873e-07], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -2.568319342527161, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -0.39346885681152344, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000141143798828125, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -1.4305092918220907e-05, 0.0, -7.43865966796875e-05, 0.0, -0.18759167194366455, 0.0, -5.7220458984375e-06, -0.00197601318359375, -4.76837158203125e-05, -0.016947627067565918, -2.622604142743512e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.200241088867188e-05, -2.3841855067985307e-07, -0.0007419586181640625, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -2.09808349609375e-05, -0.000644683837890625, 0.0, -7.68899917602539e-05, 0.0, -8.96453857421875e-05, 0.0, -1.9199132919311523, 0.0, -7.62939453125e-06, -0.015367507934570312, -7.62939453125e-05, -0.017012953758239746, -2.503394853192731e-06, -9.5367431640625e-06, 0.0, -9.47713851928711e-05, -4.768370445162873e-07], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        self.target.damage(3, self)\n"}, {"score": -2.9591275725603907, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -0.39346885681152344, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000141143798828125, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -1.4305092918220907e-05, 0.0, -7.43865966796875e-05, 0.0, -2.223513603210449, 0.0, -5.7220458984375e-06, -0.0002117156982421875, -1.33514404296875e-05, -0.08339621126651764, -4.768371127283899e-06, -0.0002079010009765625, -3.814697265625e-06, -0.0039615631103515625, -8.392333984375e-05, -5.14984130859375e-05, 0.0, -0.00038623809814453125, -2.09808349609375e-05, -0.0002994537353515625, 0.0, -8.618831634521484e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.23065471649169922, 0.0, -7.62939453125e-06, -0.0029935836791992188, -1.71661376953125e-05, -0.00022125244140625, 0.0, -0.0011341571807861328, -2.491474151611328e-05, -0.0004596710205078125, -0.0009746551513671875, -0.0006561279296875, -0.0021426582243293524, -3.576278118089249e-07], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -3.541396997366064, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -0.39346885681152344, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000141143798828125, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -1.4305092918220907e-05, 0.0, -7.43865966796875e-05, 0.0, -0.18759167194366455, 0.0, -5.7220458984375e-06, -0.00197601318359375, -4.76837158203125e-05, -0.016947627067565918, -2.622604142743512e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.200241088867188e-05, -2.3841855067985307e-07, -0.0007419586181640625, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -2.09808349609375e-05, -0.000644683837890625, 0.0, -7.68899917602539e-05, 0.0, -8.96453857421875e-05, 0.0, -0.5099325180053711, -1.9073486328125e-06, -3.814697265625e-06, -0.000213623046875, -9.5367431640625e-06, -2.4154012203216553, 0.0], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        self.target.change_attack(2)\n"}, {"score": -4.383637363541311, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -1.1266450881958008, -0.00022125244140625, -0.0015225065872073174, -2.503394853192731e-06, -9.5367431640625e-05, 0.0, -9.5367431640625e-05, -0.0005359649658203125, -3.814697265625e-06, -1.9073486328125e-06, -0.0003204345703125, -1.52587890625e-05, -0.0010471343994140625, 0.0, -0.00026535987854003906, 0.0, -6.103515625e-05, 0.0, -3.2174806594848633, 0.0, -3.814697265625e-06, -0.001773834228515625, -5.7220458984375e-05, -0.01977378875017166, -2.1457672119140625e-06, -9.5367431640625e-06, 0.0, -5.984306335449219e-05, -2.3841855067985307e-07], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(3, self)\n"}, {"score": -4.4888585640208305, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -0.39346885681152344, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000141143798828125, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -1.4305092918220907e-05, 0.0, -7.43865966796875e-05, 0.0, -3.239701271057129, 0.0, -0.00072479248046875, -0.001178741455078125, -3.62396240234375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.000110626220703125, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.03610527515411377, 0.0, -1.1444091796875e-05, -0.003170013427734375, -0.000263214111328125, -0.0010929048294201493, -7.307276246137917e-05, -8.20159912109375e-05, -2.288818359375e-05, -3.8027617847546935e-05, -9.536738616588991e-07, -0.0010833740234375, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -7.62939453125e-06, -0.0011730194091796875, 0.0, -0.0001322031021118164, 0.0, -8.0108642578125e-05, 0.0, -0.7143878936767578, -1.9073486328125e-06, -3.814697265625e-06, -0.0002460479736328125, -9.5367431640625e-06, -0.08142980933189392, -4.5299530029296875e-06], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        self.target.change_attack(3)\n"}, {"score": -4.849258101973447, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -0.39346885681152344, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000141143798828125, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -1.4305092918220907e-05, 0.0, -7.43865966796875e-05, 0.0, -2.223513603210449, 0.0, -5.7220458984375e-06, -0.0002117156982421875, -1.33514404296875e-05, -0.08339621126651764, -4.768371127283899e-06, -0.0002079010009765625, -3.814697265625e-06, -0.0039615631103515625, -8.392333984375e-05, -5.14984130859375e-05, 0.0, -0.00038623809814453125, -2.09808349609375e-05, -0.0002994537353515625, 0.0, -8.618831634521484e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -1.8988618850708008, 0.0, -2.09808349609375e-05, -0.0009403228759765625, -3.814697265625e-06, -0.22958838939666748, -2.0265579223632812e-06], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(3)\n"}, {"score": -5.544537010121559, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -1.1266450881958008, -0.00022125244140625, -0.0015225065872073174, -2.503394853192731e-06, -9.5367431640625e-05, 0.0, -9.5367431640625e-05, -0.0005359649658203125, -3.814697265625e-06, -1.9073486328125e-06, -0.0003204345703125, -1.52587890625e-05, -0.0010471343994140625, 0.0, -0.00026535987854003906, 0.0, -6.103515625e-05, 0.0, -4.218928337097168, 0.0, -3.814697265625e-06, -0.000308990478515625, -1.1444091796875e-05, -0.18080396950244904, -4.172325134277344e-06], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.change_attack(3)\n"}, {"score": -6.120710419941162, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "increase_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Frostbolt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -1.1266450881958008, -0.00022125244140625, -0.0015225065872073174, -2.503394853192731e-06, -9.5367431640625e-05, 0.0, -9.5367431640625e-05, -0.0005359649658203125, -3.814697265625e-06, -1.9073486328125e-06, -0.0003204345703125, -1.52587890625e-05, -0.0010471343994140625, 0.0, -0.00026535987854003906, 0.0, -6.103515625e-05, 0.0, -4.5564374923706055, 0.0, -3.814697265625e-05, -0.001186370849609375, -7.62939453125e-06, -0.41856247186660767, -2.0265579223632812e-06], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.increase_health(3)\n"}, {"score": -14.443750709251617, "choice_history": [50, 111, 176, 59, 93, 24, 144, "2", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -11.650163650512695, -0.8587989807128906, -1.4400615692138672, -0.03694438934326172, -0.4577575623989105, -1.3112978194840252e-05], "inferred_code": "self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -15.062154412269592, "choice_history": [50, 111, 176, 59, 93, 24, 144, "3", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -11.650163650512695, -0.8587989807128906, -1.4400615692138672, -0.03694438934326172, -1.0759679079055786, -0.00020647048950195312], "inferred_code": "self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -15.804145812988281, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -15.804134368896484], "inferred_code": "break\n"}, {"score": -22.397062301635742, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -22.397056579589844], "inferred_code": ""}], "index": 38}
{"beams": [{"score": -0.014614688989659896, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "taunt"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -0.0016204117564484477, 0.0, -5.53131103515625e-05, -3.4332275390625e-05, -0.00020611286163330078, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -5.383170592220715, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "2", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 2, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -4.598542213439941, -1.71661376953125e-05, -0.0011463165283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.000133514404296875, -9.5367431640625e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.000141143798828125, -3.218649908376392e-06, -0.000194549560546875, -0.000640869140625, -0.0001964569091796875, -0.0005340576171875, -3.4332275390625e-05, -5.340576171875e-05, 0.0, -0.09188580513000488, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-05, -3.24249267578125e-05, -2.741774733294733e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -5.7220458984375e-06, -1.3112876331433654e-06, 0.0, -0.008514404296875, -1.71661376953125e-05, -0.000335693359375, -0.6463025808334351, 0.0, -0.0001430511474609375, -1.52587890625e-05, -0.0007288455963134766, 0.0, -2.47955322265625e-05, -0.001682281494140625, -0.029641151428222656, 0.0, -7.62939453125e-05, 0.0, -0.00010311603546142578, 0.0], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True, taunt=True)\n"}, {"score": -5.532693015964917, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "2", "<EOS>", 172, 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 2, "_type": "Num"}], "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -4.598542213439941, -1.71661376953125e-05, -0.0011463165283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.000133514404296875, -9.5367431640625e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.000141143798828125, -3.218649908376392e-06, -0.000194549560546875, -0.000640869140625, -0.0001964569091796875, -0.0005340576171875, -3.4332275390625e-05, -5.340576171875e-05, 0.0, -0.09188580513000488, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-05, -3.24249267578125e-05, -2.741774733294733e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -5.7220458984375e-06, -1.3112876331433654e-06, 0.0, -0.008514404296875, -1.71661376953125e-05, -0.000335693359375, -0.7555335760116577, 0.0, -8.392333984375e-05, -5.7220458984375e-06, -0.00029981136322021484, 0.0, -1.52587890625e-05, -0.0004253387451171875, -0.07161092758178711, 0.0, -0.000102996826171875, 0.0, -0.00016224384307861328, 0.0], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, taunt=True)\n"}, {"score": -7.913485157245724, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "spell_targetable"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -7.899279594421387, 0.0, -0.00069427490234375, -0.0003795623779296875, -0.00043129920959472656, -3.814697265625e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_targetable=True)\n"}, {"score": -7.955624568218319, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "charge"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -7.9426093101501465, 0.0, -9.918212890625e-05, -1.71661376953125e-05, -0.00020039081573486328, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n"}, {"score": -8.505847441906063, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "Ended", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "Ended"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -8.49270248413086, 0.0, -0.0001811981201171875, -1.71661376953125e-05, -0.0002480745315551758, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, Ended=True)\n"}, {"score": -8.814810144657223, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "enrage"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -8.774776458740234, 0.0, -0.026978492736816406, -4.57763671875e-05, -0.0003108978271484375, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, enrage=True)\n"}, {"score": -9.315301406139461, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "HUNTER"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -9.301414489746094, -1.9073486328125e-06, -0.0008373260498046875, -3.4332275390625e-05, -0.0003148317337036133, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, HUNTER=True)\n"}, {"score": -9.343382350649755, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "<UNK>", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf <UNK>", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "taunt"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.328861236572266, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -0.0016204117564484477, 0.0, -5.53131103515625e-05, -3.4332275390625e-05, -0.00020611286163330078, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf <UNK>', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -9.433367476014602, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 69, 137, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template2", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "taunt"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -8.854945182800293, -0.0008869171142578125, -0.00012218205665703863, -3.516674041748047e-05, -1.0847986231965479e-05, 0.0, -3.314153946121223e-05, 0.0, -0.00011205673217773438, 0.0, -0.5751953125, -3.62396240234375e-05, -9.894321010506246e-06, -1.1920928244535389e-07, -4.327207716414705e-05, 0.0, -0.0013698339462280273, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -0.0002633333206176758, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -9.476676451915829, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "windfury"}], "name": "FrostwolfGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -9.46367073059082, -1.9073486328125e-06, -0.000171661376953125, -2.288818359375e-05, -0.00011265277862548828, 0.0], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, windfury=True)\n"}, {"score": -9.842440594341006, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "<UNK>", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "taunt"}], "name": "Frostwolf<UNK>", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -9.827879905700684, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -0.0016204117564484477, 0.0, -5.53131103515625e-05, -3.4332275390625e-05, -0.00020611286163330078, -1.9073486328125e-06], "inferred_code": "class Frostwolf<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -9.92891387196169, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "taunt"}], "name": "ForceTankGrunt", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.254841804504395, -0.42357540130615234, -0.23211102187633514, -1.4305104514278355e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, 0.0, -8.70227722771233e-06, -3.933904736186378e-06, -2.09808349609375e-05, -0.00145721435546875, -3.24249267578125e-05, -5.6028297876764555e-06, -2.8371783628244884e-05, -9.16677454370074e-05, -1.9073486328125e-06, -5.483677341544535e-06, 0.0, -6.079665035940707e-05, 0.0, -0.014642715454101562, -1.71661376953125e-05, -1.311301275563892e-06, -3.576278118089249e-07, -1.2278494978090748e-05, -1.1920928244535389e-07, -0.0016478298930451274, 0.0, -5.340576171875e-05, -3.4332275390625e-05, -0.00020420551300048828, -1.9073486328125e-06], "inferred_code": "class ForceTankGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -18.331514358520508, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -18.331504821777344], "inferred_code": "break\n"}, {"score": -22.555694580078125, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [0.0, -5.7220458984375e-06, -22.555688858032227], "inferred_code": ""}], "index": 39}
{"beams": [{"score": -0.011263001714802101, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "taunt"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -0.0020712614059448242, 0.0, -5.340576171875e-05, -2.6702880859375e-05, -0.0002709627151489258, -3.814697265625e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -5.668166745347861, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "2", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 2, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -5.166457176208496, -1.52587890625e-05, -0.0011844635009765625, -3.814697265625e-06, 0.0, -4.00543212890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014095306396484375, -2.9802317840221804e-06, -0.00014495849609375, -0.0002918243408203125, -9.72747802734375e-05, -8.7738037109375e-05, -9.72747802734375e-05, -0.00045013427734375, 0.0, -0.03604698181152344, -5.7220458984375e-06, -8.96453857421875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -1.800038808141835e-05, -1.7881377516459906e-06, -5.7220458984375e-06, -5.14984130859375e-05, -0.000989675521850586, 0.0, -0.004863739013671875, -9.5367431640625e-06, -0.0003795623779296875, -0.4254947900772095, 0.0, -9.72747802734375e-05, -9.5367431640625e-06, -0.00023472309112548828, -1.9073486328125e-06, -1.52587890625e-05, -0.0008144378662109375, -0.026380300521850586, 0.0, -7.82012939453125e-05, 0.0, -0.00010693073272705078, 0.0], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True, taunt=True)\n"}, {"score": -6.393975604219321, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "2", "<EOS>", 172, 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 2, "_type": "Num"}], "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -5.166457176208496, -1.52587890625e-05, -0.0011844635009765625, -3.814697265625e-06, 0.0, -4.00543212890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014095306396484375, -2.9802317840221804e-06, -0.00014495849609375, -0.0002918243408203125, -9.72747802734375e-05, -8.7738037109375e-05, -9.72747802734375e-05, -0.00045013427734375, 0.0, -0.03604698181152344, -5.7220458984375e-06, -8.96453857421875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -1.800038808141835e-05, -1.7881377516459906e-06, -5.7220458984375e-06, -5.14984130859375e-05, -0.000989675521850586, 0.0, -0.004863739013671875, -9.5367431640625e-06, -0.0003795623779296875, -1.0727697610855103, 0.0, -5.91278076171875e-05, -5.7220458984375e-06, -9.751319885253906e-05, 0.0, -1.52587890625e-05, -0.0001888275146484375, -0.10564839839935303, 0.0, -8.20159912109375e-05, 0.0, -0.00017559528350830078, 0.0], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True, taunt=True)\n"}, {"score": -7.606868851934529, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "charge"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -7.597761154174805, 0.0, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001850128173828125, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True)\n"}, {"score": -7.935409057890034, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "spell_targetable"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -7.9247236251831055, 0.0, -0.0008068084716796875, -0.0001697540283203125, -0.0008701086044311523, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, spell_targetable=True)\n"}, {"score": -7.982330430303669, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "enrage"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -7.951080322265625, 0.0, -0.022085189819335938, -1.52587890625e-05, -0.0003108978271484375, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, enrage=True)\n"}, {"score": -8.745933640752888, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "Ended", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "Ended"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -8.736644744873047, 0.0, -0.00020599365234375, -1.1444091796875e-05, -0.000232696533203125, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, Ended=True)\n"}, {"score": -8.863669378251068, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 69, 137, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template2", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "taunt"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -8.574285507202148, -0.0005168914794921875, -0.0001512651506345719, -3.6835670471191406e-05, -8.344646857949556e-07, 0.0, -0.0001387660449836403, -1.1920928244535389e-07, -0.00011312959395581856, 0.0, -0.28635692596435547, -7.43865966796875e-05, -8.106222594506107e-06, -2.384185791015625e-06, -2.1219018890406005e-05, 0.0, -0.0013490915298461914, 0.0, -4.38690185546875e-05, -3.814697265625e-06, -0.0002728700637817383, -3.814697265625e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -8.912441600118733, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "HUNTER"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -8.901824951171875, -7.62939453125e-06, -0.0013294219970703125, -1.9073486328125e-05, -0.00042176246643066406, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, HUNTER=True)\n"}, {"score": -9.50418876484499, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "windfury"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -9.495077133178711, 0.0, -0.000152587890625, -2.6702880859375e-05, -9.548664093017578e-05, 0.0], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, windfury=True)\n"}, {"score": -9.639668336462897, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "<UNK>", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "taunt"}], "name": "Goldshire<UNK>", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -9.628471374511719, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -0.0020712614059448242, 0.0, -5.340576171875e-05, -2.6702880859375e-05, -0.0002709627151489258, -3.814697265625e-06], "inferred_code": "class Goldshire<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -9.708477080751969, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "taunt"}], "name": "ForceTankFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -8.96255874633789, -0.18104404211044312, -0.5532701015472412, -1.1920922133867862e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.1915108188986778e-07, -8.58306884765625e-06, -3.4570680327306036e-06, -1.1444091796875e-05, -0.001689910888671875, -4.38690185546875e-05, -1.3708974620385561e-05, -2.0742414562846534e-05, -2.3841855067985307e-07, 0.0, -3.707527866936289e-05, -2.264974000354414e-06, -9.596344170859084e-05, 0.0, -0.0072116851806640625, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4424213077290915e-05, -1.1920928244535389e-07, -0.0020356178283691406, 0.0, -5.340576171875e-05, -2.47955322265625e-05, -0.0002461671829223633, -3.814697265625e-06], "inferred_code": "class ForceTankFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -9.735184658323384, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "minion_type", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template4", "hole2": "taunt"}], "name": "GoldshireFootman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -0.0020712614059448242, 0.0, -5.340576171875e-05, -2.6702880859375e-05, -9.724181175231934, -1.52587890625e-05], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -18.38381576538086, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -18.3837890625], "inferred_code": "break\n"}, {"score": -21.81239128112793, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -21.812379837036133], "inferred_code": ""}], "index": 40}
{"beams": [{"score": -0.09190998683844498, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -0.010456765070557594, -2.0265579223632812e-06, -0.0011844635009765625, -1.33514404296875e-05, -0.000286102294921875, -0.000244140625, -0.000507354736328125, -3.814697265625e-06, 0.0, -0.0001442432403564453, -4.57763671875e-05, -0.000225067138671875, -0.000560760498046875, -0.000209808349609375, -0.0006608979310840368, -1.33514404296875e-05, -0.00032806396484375, -0.012970924377441406, -5.7220458984375e-06, 0.0, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -0.011133193969726562, -0.00051116943359375, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, -0.0003743171691894531, -0.0002027750015258789, -0.0006963014602661133, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0006715059280395508, -7.748603820800781e-06, -0.005743265151977539, -1.9073486328125e-05, -0.0002269744873046875, 0.0, -0.004580970387905836, -0.0014080449473112822, -1.1563301086425781e-05], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -4.079815898634237, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -4.00696325302124, -1.1920928244535389e-07, -0.0050334930419921875, -2.09808349609375e-05, -1.192074705613777e-07, -7.152555099310121e-07, -1.4546429156325758e-05, -1.1920928244535389e-07, -0.012554863467812538, -2.0265579223632812e-06, -0.001071929931640625, -1.1444091796875e-05, -0.0003147125244140625, -0.00026702880859375, -0.000629425048828125, -5.7220458984375e-06, 0.0, -0.0001558065414428711, -4.9591064453125e-05, -0.0002422332763671875, -0.00055694580078125, -0.0001964569091796875, -0.000643612933345139, -1.71661376953125e-05, -0.0003299713134765625, -0.014710426330566406, -5.7220458984375e-06, 0.0, -0.0001468658447265625, -4.57763671875e-05, 0.0, -0.011083602905273438, -0.00046443939208984375, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, -0.00037610530853271484, -0.00020837783813476562, -0.0007249116897583008, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -0.0006409883499145508, -7.748603820800781e-06, -0.00579679012298584, -1.9073486328125e-05, -0.0002498626708984375, 0.0, -0.004616256337612867, -0.0014180514262989163, -1.1563301086425781e-05], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -4.867910307487918, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -0.010456765070557594, -2.0265579223632812e-06, -0.0011844635009765625, -1.33514404296875e-05, -0.000286102294921875, -0.000244140625, -0.000507354736328125, -3.814697265625e-06, 0.0, -0.0001442432403564453, -4.57763671875e-05, -0.000225067138671875, -0.000560760498046875, -0.000209808349609375, -0.0006608979310840368, -1.33514404296875e-05, -0.00032806396484375, -0.012970924377441406, -5.7220458984375e-06, 0.0, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -4.788575172424316, -0.00518798828125, -0.000156402587890625, -1.9073486328125e-06, 0.0, -0.0005879402160644531, -0.0002609491057228297, -0.00018322467803955078, -3.0517578125e-05, -2.09808349609375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0003854036331176758, -7.748603820800781e-06, -0.006354928016662598, -1.9073486328125e-05], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC)))])\n"}, {"score": -5.506229800788432, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "enrage", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "enrage"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -5.427160739898682, -1.9073486328125e-06, -0.0017547607421875, -1.9073486328125e-05, -0.000347137451171875, -0.0001983642578125, -0.0003509521484375, -5.7220458984375e-06, 0.0, -0.00016450881958007812, -4.1961669921875e-05, -0.0002231597900390625, -0.0006313323974609375, -0.0002384185791015625, -0.0006856933468952775, -1.33514404296875e-05, -0.00035858154296875, -0.010587692260742188, -5.7220458984375e-06, 0.0, -0.000148773193359375, -4.57763671875e-05, 0.0, -0.010772705078125, -0.00042724609375, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.00033986568450927734, -0.00020074844360351562, -0.0007420778274536133, -1.1444091796875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.0007134675979614258, -7.748603820800781e-06, -0.005618095397949219, -1.9073486328125e-05, -0.0002155303955078125, 0.0, -0.004524345975369215, -0.0013801750028505921, -9.655952453613281e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -5.917437504195945, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -5.849484920501709, -1.1920928244535389e-07, -0.002086639404296875, -1.52587890625e-05, 9.094947017729282e-13, -1.7881377516459906e-06, -2.380408113822341e-05, -1.1920928244535389e-07, -0.00977175310254097, -2.0265579223632812e-06, -0.00112152099609375, -1.1444091796875e-05, -0.000274658203125, -0.0002574920654296875, -0.0005779266357421875, -5.7220458984375e-06, 0.0, -0.00014412403106689453, -5.53131103515625e-05, -0.0002498626708984375, -0.000518798828125, -0.0001964569091796875, -0.0006551760016009212, -1.52587890625e-05, -0.000331878662109375, -0.01531982421875, -5.7220458984375e-06, 0.0, -0.000141143798828125, -4.57763671875e-05, 0.0, -0.0114288330078125, -0.00045013427734375, -7.43865966796875e-05, -5.7220458984375e-06, 0.0, -0.00036275386810302734, -0.00021016597747802734, -0.0007344484329223633, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.0006581544876098633, -7.748603820800781e-06, -0.005753874778747559, -2.09808349609375e-05, -0.000244140625, 0.0, -0.004620071034878492, -0.0014111452037468553, -9.655952453613281e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -5.956650007970886, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Grimscale", " ", "Oracle", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -5.017273902893066, -3.0517578125e-05, -0.000179290771484375, -5.14984130859375e-05, -0.000141143798828125, -0.0001220703125, -3.814697265625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -8.344650268554688e-06, -0.000728607177734375, 0.0, -0.7789726257324219, -2.86102294921875e-05, -9.5367431640625e-06, -2.622600959512056e-06, -0.00011467933654785156, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013947491243015975, -3.576278118089249e-07, -3.0517578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0034776260145008564, -3.838539123535156e-05, -0.002300370717421174, 0.0, -0.0060825347900390625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.007162928581237793, 0.0, -0.0007612705230712891, 0.0, -7.62939453125e-05, -0.000278472900390625, -0.0009980201721191406, 0.0, -0.006805419921875, -7.62939453125e-06, -1.9073486328125e-06, -3.373602157807909e-05, 0.0, -6.866455078125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00041961669921875, 0.0, -0.04797983169555664, 0.0, -0.003925323486328125, -1.52587890625e-05, -2.3841721485950984e-07, -5.960462772236497e-07, -8.997645636554807e-06, -1.1920928244535389e-07, -0.03431149199604988, -4.0531158447265625e-06, -0.0010471343994140625, -3.814697265625e-06, -0.00019073486328125, -0.000362396240234375, -0.0007801055908203125, -7.62939453125e-06, 0.0, -0.00015723705291748047, -0.0001277923583984375, -0.000286102294921875, -0.0006656646728515625, -0.00025177001953125, -0.0005790006835013628, -5.91278076171875e-05, -0.0003299713134765625, -0.010317802429199219, -5.7220458984375e-06, 0.0, -0.00012028217315673828, -5.7220458984375e-05, 0.0, -0.011661529541015625, -0.0005741119384765625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -0.00037992000579833984, -0.00022351741790771484, -0.0007134675979614258, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.0007039308547973633, -7.748603820800781e-06, -0.005669236183166504, -2.09808349609375e-05, -0.0002422332763671875, 0.0, -0.0043830834329128265, -0.0014222234021872282, -9.655952453613281e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -5.987689919068757, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -5.952397346496582, -0.0004119873046875, 1.1920928955078125e-07, -4.529942543740617e-06, 5.2663312999357e-07, -1.1920928244535389e-07], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.250513237567802, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -0.010456765070557594, -2.0265579223632812e-06, -0.0011844635009765625, -1.33514404296875e-05, -0.000286102294921875, -0.000244140625, -0.000507354736328125, -3.814697265625e-06, 0.0, -0.0001442432403564453, -4.57763671875e-05, -0.000225067138671875, -0.000560760498046875, -0.000209808349609375, -0.0006608979310840368, -1.33514404296875e-05, -0.00032806396484375, -0.012970924377441406, -5.7220458984375e-06, 0.0, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -0.011133193969726562, -0.00051116943359375, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, -0.0003743171691894531, -0.0002027750015258789, -0.0006963014602661133, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0006715059280395508, -7.748603820800781e-06, -0.005743265151977539, -1.9073486328125e-05, -0.0002269744873046875, 0.0, -6.1645827293396, -2.1100026060594246e-05, 0.0], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), SelfSelector()))])\n"}, {"score": -6.513205155997284, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 46, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -0.010456765070557594, -2.0265579223632812e-06, -0.0011844635009765625, -1.33514404296875e-05, -0.000286102294921875, -0.000244140625, -0.000507354736328125, -3.814697265625e-06, 0.0, -0.0001442432403564453, -4.57763671875e-05, -0.000225067138671875, -0.000560760498046875, -0.000209808349609375, -0.0006608979310840368, -1.33514404296875e-05, -0.00032806396484375, -0.012970924377441406, -5.7220458984375e-06, 0.0, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -0.011133193969726562, -0.00051116943359375, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, -0.0003743171691894531, -0.0002027750015258789, -0.0006963014602661133, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0006715059280395508, -7.748603820800781e-06, -6.425102233886719, -2.288818359375e-05, -0.003025054931640625, 0.0, -0.0037740441039204597, -0.0013454618165269494, -1.537799835205078e-05], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.PIRATE), BothPlayer()))])\n"}, {"score": -6.783654600008603, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "1", "<EOS>", 14, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, "hole0": 1, "_type": "Template4", "hole2": "1"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -6.267138957977295, 0.0, -0.2685966491699219, -0.0003185272216796875, -3.814697265625e-06, -1.9073486328125e-06, -0.02802145481109619, -5.91278076171875e-05, -0.007114410400390625, -0.05624198913574219, -0.0005893707275390625, -0.00012576585868373513, -5.7220458984375e-06, -0.000194549560546875, -0.08745288848876953, -5.7220458984375e-06, 0.0, -0.0021975040435791016, -4.76837158203125e-05, 0.0, -0.011837959289550781, -0.000347137451171875, -0.00016021728515625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008641481399536133, -0.00032579898834228516, -0.0008927583694458008, -1.9073486328125e-05, -2.288818359375e-05, 0.0, -0.000118255615234375, 0.0, -0.0009595155715942383, -7.748603820800781e-06, -0.005682229995727539, -1.9073486328125e-05, -0.0002384185791015625, 0.0, -0.004575605969876051, -0.001388627220876515, -7.748603820800781e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, 1=Aura(ChangeAttack(1), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer())))\n"}, {"score": -6.995868760631808, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 165, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Random", "Picker", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}, {"args": [{"n": 1, "_type": "Num"}], "func": {"id": "RandomPicker", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -0.010456765070557594, -2.0265579223632812e-06, -0.0011844635009765625, -1.33514404296875e-05, -0.000286102294921875, -0.000244140625, -0.000507354736328125, -3.814697265625e-06, 0.0, -0.0001442432403564453, -4.57763671875e-05, -0.000225067138671875, -0.000560760498046875, -0.000209808349609375, -0.0006608979310840368, -1.33514404296875e-05, -0.00032806396484375, -0.012970924377441406, -5.7220458984375e-06, 0.0, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -6.026533126831055, -0.00042724609375, -0.0002651214599609375, -3.814697265625e-06, 0.0, -0.005977988243103027, -0.00034010407398454845, -0.000606536865234375, -5.340576171875e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.0005475282669067383, -7.748603820800781e-06, -0.005864381790161133, -2.09808349609375e-05, -0.013669967651367188, 0.0, -0.012658346444368362, -0.0016927571268752217, -3.063678741455078e-05, -0.019254684448242188, -0.26401424407958984, 0.0, 0.0, -0.5281137228012085, -0.04614460468292236, -0.0011581182479858398, -1.71661376953125e-05, -0.0001239776611328125, -7.62939453125e-06, -0.0021144773345440626, -3.576278118089249e-07], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer(), RandomPicker(1)))])\n"}, {"score": -7.164124649634331, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 89, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 172, 49, 152, "value", "<EOS>", 21, 117, "1", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"arg": "value", "value": {"n": 1, "_type": "Num"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template4", "hole2": "auras"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -0.010456765070557594, -2.0265579223632812e-06, -0.0011844635009765625, -1.33514404296875e-05, -0.000286102294921875, -0.000244140625, -0.000507354736328125, -3.814697265625e-06, 0.0, -0.0001442432403564453, -4.57763671875e-05, -0.000225067138671875, -0.000560760498046875, -0.000209808349609375, -0.0006608979310840368, -1.33514404296875e-05, -0.00032806396484375, -4.688841819763184, -1.52587890625e-05, 0.0, -0.015909194946289062, -0.000194549560546875, 0.0, -0.04386425018310547, -0.000965118408203125, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.008835673332214355, -0.00014126300811767578, -0.0007843971252441406, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -7.05718994140625e-05, 0.0, -0.00034332275390625, -7.748603820800781e-06, -0.0067596435546875, -1.9073486328125e-05, -0.10890769958496094, -1.71661376953125e-05, -6.29425048828125e-05, -0.27947938442230225, 0.0, -0.18204498291015625, -3.24249267578125e-05, -0.06732797622680664, 0.0, -0.000469207763671875, -0.001895904541015625, -1.069574236869812, 0.0, -0.07627391815185547, -0.05554771423339844, -0.5026865005493164, -5.7220458984375e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), value=1, taunt=True))])\n"}, {"score": -7.537452655762181, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 1, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Grimscale Oracle", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template4", "hole2": "spell_damage"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -6.968557834625244, -0.00027501583099365234, -0.5303449630737305, -2.09808349609375e-05, -0.00019395537674427032, 0.0], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, spell_damage=1)\n"}, {"score": -8.93709592905904, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Grimscale", " ", "Oracle", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 30, 89, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 172, 49, 152, "value", "<EOS>", 21, 117, "1", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"arg": "value", "value": {"n": 1, "_type": "Num"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "GrimscaleOracle", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -5.017273902893066, -3.0517578125e-05, -0.000179290771484375, -5.14984130859375e-05, -0.000141143798828125, -0.0001220703125, -3.814697265625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -8.344650268554688e-06, -0.000728607177734375, 0.0, -0.6154804229736328, -2.86102294921875e-05, -6.4849853515625e-05, -4.291525328881107e-06, -0.00015485286712646484, -6.794906312279636e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -4.410744168126257e-06, -9.536738616588991e-07, -3.814697265625e-05, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -0.00036179134622216225, -7.510183422709815e-06, -0.00177668291144073, 0.0, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -0.0020716190338134766, 0.0, -0.00023293495178222656, 0.0, -0.0006694793701171875, -7.62939453125e-06, -1.9073486328125e-06, -1.8477399862604216e-05, 0.0, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0003108978271484375, 0.0, -0.03654968738555908, 0.0, -3.4332275390625e-05, -0.0009403228759765625, -0.024898290634155273, 0.0, -0.010011672973632812, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0030785799026489258, -1.9073486328125e-06, -0.0005893707275390625, -0.10419750213623047, -7.62939453125e-06, -4.00543212890625e-05, 0.0, -0.02925490029156208, -4.649161837733118e-06, -0.000698089599609375, -0.36852550506591797, -0.000728607177734375, -8.59486754052341e-05, -7.62939453125e-06, -0.00926971435546875, -0.065765380859375, -1.33514404296875e-05, 0.0, -0.0011425018310546875, -7.05718994140625e-05, 0.0, -0.05028057098388672, -0.0006732940673828125, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.002112865447998047, -0.0001329183578491211, -0.0009272098541259766, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -7.82012939453125e-05, 0.0, -0.000850677490234375, -9.5367431640625e-06, -0.005217432975769043, -1.71661376953125e-05, -0.05156517028808594, -1.33514404296875e-05, -3.0517578125e-05, -0.28075480461120605, 0.0, -0.05144309997558594, -3.62396240234375e-05, -0.0870194211602211, 0.0, -0.000316619873046875, -0.0013065338134765625, -1.2427020072937012, 0.0, -0.10179328918457031, -0.059723854064941406, -0.4989633560180664, -5.7220458984375e-06, -0.2023944854736328, -0.0001373291015625, -0.00010751662193797529, -3.576277322281385e-06, -3.409423879929818e-05, -2.3841855067985307e-07], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give(ChangeAttack(1)), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), value=1, taunt=True)))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -20.314584732055664, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-7.62939453125e-06, -0.0001583099365234375, -20.31441879272461], "inferred_code": ""}], "index": 41}
{"beams": [{"score": -0.08202185789217964, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.05243110656738281, -2.09808349609375e-05, -3.814697265625e-06, -0.0007516145706176758, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.0002002716064453125, -7.62939453125e-05, -0.0008032321929931641, 0.0, -0.0006313323974609375, -0.0003948211669921875, 0.0, -7.43865966796875e-05, 0.0, -0.008455869741737843, -0.00010883276263484731, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.00647579925134778, -6.794917680963408e-06, -0.0004825592041015625, -3.62396240234375e-05, -0.0009995698928833008, -0.00019848346710205078, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -5.817412966280244e-05, 0.0, -0.00021302467212080956, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -4.260236547279639, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9883766174316406, -0.0001373291015625, -8.96453857421875e-05, -0.464389443397522, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00048065185546875, 0.0, -2.09808349609375e-05, 0.0, -0.778834342956543, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.000133514404296875, 0.0, -0.00199127197265625, 0.0, -1.1444091796875e-05, -4.9591064453125e-05, -0.00010120868682861328, 0.0, -1.1444091796875e-05, -0.0004024505615234375, 0.0, -0.0001125335693359375, 0.0, -0.008932110853493214, -0.00011896446085302159, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.004764213692396879, -8.344629350176547e-06, -0.0001926422119140625, -4.38690185546875e-05, -0.0010682344436645508, -0.00016796588897705078, 0.0, -2.288818359375e-05, -1.52587890625e-05, -5.817412966280244e-05, 0.0, -0.0002133821399183944, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -4.262321784921589, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9883766174316406, -0.0001373291015625, -8.96453857421875e-05, -0.464389443397522, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00048065185546875, 0.0, -2.09808349609375e-05, 0.0, -0.778803825378418, 0.0, -7.05718994140625e-05, 0.0, -0.0001430511474609375, 0.0, -0.004253387451171875, 0.0, -1.71661376953125e-05, -9.1552734375e-05, -9.930133819580078e-05, 0.0, -1.52587890625e-05, -0.000453948974609375, 0.0, -0.0001087188720703125, -1.9073486328125e-06, -0.007802480366080999, -0.00015472312225028872, -3.0517578125e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.005461505148559809, -1.013275596051244e-05, -0.000213623046875, -4.57763671875e-05, -0.0011178255081176758, -0.00016415119171142578, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -5.817412966280244e-05, 0.0, -0.00021767349971923977, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -5.141787677991481, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "5", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 5, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.05243110656738281, -2.09808349609375e-05, -3.814697265625e-06, -0.0007516145706176758, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.0002002716064453125, -7.62939453125e-05, -0.0008032321929931641, 0.0, -0.0006313323974609375, -0.0003948211669921875, 0.0, -7.43865966796875e-05, 0.0, -0.008455869741737843, -0.00010883276263484731, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.066575527191162, -2.0265558760002023e-06, -8.20159912109375e-05, -1.71661376953125e-05, -0.00115203857421875, -8.58306884765625e-05, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -5.4597840062342584e-05, 0.0, -0.0002558181877247989, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -5.881143367948191, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 49, 152, "condition", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}, {"arg": "condition", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9883766174316406, -0.0001373291015625, -8.96453857421875e-05, -1.253243088722229, 0.0, -0.00122833251953125, -1.9073486328125e-06, -0.000194549560546875, -0.000110626220703125, -0.0005990266799926758, 0.0, -0.00087738037109375, -0.0002613067626953125, 0.0, -6.103515625e-05, 0.0, -0.008303162641823292, -0.0001346981734968722, -4.1961669921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.007008836138993502, -6.675708846159978e-06, -0.0005550384521484375, -2.86102294921875e-05, -0.0009652376174926758, -0.00019848346710205078, 0.0, -0.00012969970703125, -9.5367431640625e-06, -1.2403078079223633, 0.0, -0.21545982360839844, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.06717991828918457, 0.0, -0.0001049041748046875, -0.00031280517578125, 0.0, -1.52587890625e-05, 0.0, -0.07306035608053207, -8.77359343576245e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-05, -0.010030991397798061, -8.463848644169047e-06, -5.7220458984375e-05, -0.0002269744873046875, -0.0017968416213989258, -6.687641143798828e-05, 0.0, -1.52587890625e-05, -2.288818359375e-05, -5.114077066536993e-05, 0.0, -0.00024913978995755315, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()\n            ), condition=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.01359363104779, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 49, 152, "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Used", "Power", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}, {"arg": "effects", "value": {"elts": [{"args": [{"hole0": "UsedPower", "_type": "Template18"}, {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9883766174316406, -0.0001373291015625, -8.96453857421875e-05, -1.253243088722229, 0.0, -0.00122833251953125, -1.9073486328125e-06, -0.000194549560546875, -0.000110626220703125, -0.0005990266799926758, 0.0, -0.00087738037109375, -0.0002613067626953125, 0.0, -6.103515625e-05, 0.0, -0.008303162641823292, -0.0001346981734968722, -4.1961669921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.007008836138993502, -6.675708846159978e-06, -0.0005550384521484375, -2.86102294921875e-05, -0.0009652376174926758, -0.00019848346710205078, 0.0, -0.00012969970703125, -9.5367431640625e-06, -0.9887895584106445, 0.0, -0.00249481201171875, 0.0, -0.0004367828369140625, -5.91278076171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.003542184829711914, 0.0, -0.0001125335693359375, -0.0003223419189453125, -5.7220458984375e-06, -0.6905286312103271, -0.03688250482082367, -1.537799835205078e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0010150671005249023, -0.0001697540283203125, 0.0, -0.0019016265869140625, -3.62396240234375e-05, 0.0, -0.0006465911865234375, -5.7220458984375e-06, -0.010163783095777035, -1.3828244846081361e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -0.0032557446975260973, -1.1920896213268861e-05, -5.53131103515625e-05, -6.29425048828125e-05, -0.0006314516067504883, -8.976459503173828e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -5.2809700719080865e-05, 0.0, -0.0001834588620113209, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()\n            ), effects=[Effect(UsedPower(), ActionTag(Heal(6), HeroSelector\n            ()))])\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.072300762238903, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -6.012688159942627, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -1.537799835205078e-05, 0.0, -0.034989356994628906, -1.9073486328125e-05, -3.814697265625e-06, -0.0009309053421020508, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.0001983642578125, -8.392333984375e-05, -0.0008262395858764648, 0.0, -0.0006103515625, -0.00042724609375, 0.0, -7.05718994140625e-05, 0.0, -0.008413192816078663, -0.0001063296222127974, -2.86102294921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.007021123543381691, -7.033334895822918e-06, -0.0006008148193359375, -3.4332275390625e-05, -0.0010148286819458008, -0.00019848346710205078, 0.0, -4.00543212890625e-05, -1.33514404296875e-05, -5.8293338952353224e-05, 0.0, -0.00021826964803040028, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.295937921199986, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -6.1999592781066895, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, 0.0, -1.919269561767578e-05, 0.0, -0.07178115844726562, -1.33514404296875e-05, -1.9073486328125e-06, -0.0009022951126098633, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.000213623046875, -9.918212890625e-05, -0.0008624792098999023, 0.0, -0.00054931640625, -0.000431060791015625, 0.0, -7.2479248046875e-05, 0.0, -0.00839304644614458, -0.00010740239667939022, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.006707419641315937, -6.914126061019488e-06, -0.000553131103515625, -3.4332275390625e-05, -0.0010052919387817383, -0.00019848346710205078, 0.0, -4.00543212890625e-05, -1.33514404296875e-05, -5.817412966280244e-05, 0.0, -0.00021517029381357133, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.341244292035469, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 46, 135, "Frozen", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.05243110656738281, -2.09808349609375e-05, -3.814697265625e-06, -0.0007516145706176758, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.0002002716064453125, -7.62939453125e-05, -0.0008032321929931641, 0.0, -0.0006313323974609375, -0.0003948211669921875, 0.0, -7.43865966796875e-05, 0.0, -5.7049078941345215, -0.00014948837633710355, -2.09808349609375e-05, -0.13039684295654297, -9.5367431640625e-06, -0.27837395668029785, -0.000809818331617862, -0.0010890960693359375, -1.9073486328125e-06, -0.16021859645843506, -3.063678741455078e-05, 0.0, -0.0001068115234375, -5.7220458984375e-06, -6.794928049203008e-05, -2.0265579223632812e-06, -0.00017118343384936452, -3.576278118089249e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(Frozen()),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.490720366493626, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9883766174316406, -0.0001373291015625, -8.96453857421875e-05, -0.464389443397522, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00048065185546875, 0.0, -2.09808349609375e-05, 0.0, -3.00838565826416, 0.0, -0.0001201629638671875, 0.0, -0.00014495849609375, 0.0, -0.0018157958984375, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -0.00010514259338378906, 0.0, -1.9073486328125e-05, -0.0004100799560546875, 0.0, -0.000102996826171875, 0.0, -0.009617083705961704, -0.00012754651834256947, -2.86102294921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.0050130570307374, -8.344629350176547e-06, -0.000194549560546875, -4.38690185546875e-05, -0.0010472536087036133, -0.00017368793487548828, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -5.817412966280244e-05, 0.0, -0.00021672002912964672, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.552337840422972, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 49, 152, "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Health", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}, {"arg": "effects", "value": {"elts": [{"args": [{"hole0": "Health", "_type": "Template18"}, {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9883766174316406, -0.0001373291015625, -8.96453857421875e-05, -1.253243088722229, 0.0, -0.00122833251953125, -1.9073486328125e-06, -0.000194549560546875, -0.000110626220703125, -0.0005990266799926758, 0.0, -0.00087738037109375, -0.0002613067626953125, 0.0, -6.103515625e-05, 0.0, -0.008303162641823292, -0.0001346981734968722, -4.1961669921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.007008836138993502, -6.675708846159978e-06, -0.0005550384521484375, -2.86102294921875e-05, -0.0009652376174926758, -0.00019848346710205078, 0.0, -0.00012969970703125, -9.5367431640625e-06, -0.9887895584106445, 0.0, -0.00249481201171875, 0.0, -0.0004367828369140625, -5.91278076171875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.003542184829711914, 0.0, -0.0001125335693359375, -0.0003223419189453125, -5.7220458984375e-06, -1.2412508726119995, -3.421303699724376e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.01584172248840332, -0.000591278076171875, 0.0, -0.0011138916015625, -7.62939453125e-05, 0.0, -0.0005664825439453125, -7.62939453125e-06, -0.02104461006820202, -3.528592787915841e-05, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, -0.00285864295437932, -1.41858699862496e-05, -3.24249267578125e-05, -4.9591064453125e-05, -0.0006028413772583008, -8.785724639892578e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -5.447863441077061e-05, 0.0, -0.00018727338465396315, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()\n            ), effects=[Effect(Health(), ActionTag(Heal(6), HeroSelector()))])\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.720860214330621, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -6.6546525955200195, -1.4305104514278355e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.5153038222924806e-05, -3.099436753473128e-06, -0.0034631448797881603, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -0.040345191955566406, -3.0517578125e-05, -3.814697265625e-06, -0.0008031129837036133, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002346038818359375, -7.62939453125e-05, -0.0008434057235717773, 0.0, -0.0005512237548828125, -0.00041961669921875, 0.0, -7.05718994140625e-05, 0.0, -0.008431908674538136, -0.00010847517114598304, -2.6702880859375e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.00633841659873724, -6.5565000113565475e-06, -0.000507354736328125, -3.62396240234375e-05, -0.0009843111038208008, -0.00020039081573486328, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -5.996226900606416e-05, 0.0, -0.00021099825971759856, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -7.037199669298154, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 49, 152, "combo", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}, {"arg": "combo", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9883766174316406, -0.0001373291015625, -8.96453857421875e-05, -1.253243088722229, 0.0, -0.00122833251953125, -1.9073486328125e-06, -0.000194549560546875, -0.000110626220703125, -0.0005990266799926758, 0.0, -0.00087738037109375, -0.0002613067626953125, 0.0, -6.103515625e-05, 0.0, -0.008303162641823292, -0.0001346981734968722, -4.1961669921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.007008836138993502, -6.675708846159978e-06, -0.0005550384521484375, -2.86102294921875e-05, -0.0009652376174926758, -0.00019848346710205078, 0.0, -0.00012969970703125, -9.5367431640625e-06, -2.5913400650024414, 0.0, -0.05145835876464844, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.06776916980743408, 0.0, -9.1552734375e-05, -0.0003147125244140625, 0.0, -1.52587890625e-05, 0.0, -0.043209657073020935, -9.572197450324893e-05, -9.5367431640625e-06, -3.814697265625e-06, -4.9591064453125e-05, -0.008379222825169563, -9.536726793157868e-06, -7.2479248046875e-05, -0.0001983642578125, -0.0017071962356567383, -6.496906280517578e-05, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -5.304811929818243e-05, 0.0, -0.0002493779466021806, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()\n            ), combo=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -7.31184015268331, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 6, "hole0": 5, "_type": "Template5"}], "name": "GuardianOfKings", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9883766174316406, -0.0001373291015625, -8.96453857421875e-05, -1.253243088722229, 0.0, -0.00122833251953125, -1.9073486328125e-06, -0.000194549560546875, -0.000110626220703125, -0.0005990266799926758, 0.0, -0.00087738037109375, -0.0002613067626953125, 0.0, -6.103515625e-05, 0.0, -0.008303162641823292, -0.0001346981734968722, -4.1961669921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.007008836138993502, -6.675708846159978e-06, -0.0005550384521484375, -2.86102294921875e-05, -0.0009652376174926758, -0.00019848346710205078, 0.0, -0.00012969970703125, -9.5367431640625e-06, -2.9691662788391113, 0.0, -0.0030145645141601562, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.03637135028839111, 0.0, -0.0002460479736328125, -0.000255584716796875, 0.0, -2.86102294921875e-05, 0.0, -0.018380634486675262, -8.880835230229422e-05, -1.52587890625e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.009614384733140469, -1.1205645932932384e-05, -7.62939453125e-05, -0.000244140625, -0.0017319917678833008, -6.115436553955078e-05, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -5.2809700719080865e-05, 0.0, -0.0002509276964701712, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()\n            ), battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -22.303617477416992, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [0.0, 0.0, -22.303617477416992], "inferred_code": ""}], "index": 42}
{"beams": [{"score": -0.19725567101385622, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 23, 135, "Minion", "Is", "Target", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -0.019380569458007812, -4.38690185546875e-05, -0.047437071800231934, -0.002614589175209403, -0.01665305159986019, -0.0031872407998889685, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -5.91278076171875e-05, -0.0003814697265625, 0.0, -4.00543212890625e-05, -0.005237579345703125, -3.814697265625e-06, -0.000156402587890625, 0.0, -0.001293778419494629, -8.106231689453125e-06, -2.86102294921875e-05, -0.0012521743774414062, -8.20159912109375e-05, -0.06326937675476074, -4.2438507080078125e-05, 0.0, -3.814697265625e-06, -0.0011307001113891602, -9.655945177655667e-06, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -3.0635871290746692, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 23, 135, "Minion", "Is", "Target", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -0.019380569458007812, -4.38690185546875e-05, -0.047437071800231934, -0.002614589175209403, -0.01665305159986019, -0.0031872407998889685, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -5.91278076171875e-05, -0.0003814697265625, 0.0, -4.00543212890625e-05, -0.005237579345703125, -3.814697265625e-06, -0.000156402587890625, 0.0, -0.001293778419494629, -8.106231689453125e-06, -2.86102294921875e-05, -0.0012521743774414062, -8.20159912109375e-05, -2.9304568767547607, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003066062927246094, -1.6331634469679557e-05, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"score": -3.316701390302562, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 23, 135, "Is", "Minion", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"hole0": "IsMinion", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -0.019380569458007812, -4.38690185546875e-05, -3.0741994380950928, -0.015812577679753304, -0.08806121349334717, -0.0008411407470703125, -0.00397491455078125, -3.814697265625e-06, -9.5367431640625e-06, -0.0001087188720703125, -0.0001811981201171875, 0.0, -5.14984130859375e-05, -0.0086669921875, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.0017226934432983398, -9.894371032714844e-06, -3.0517578125e-05, -0.002262115478515625, -8.20159912109375e-05, -0.06500363349914551, -5.1975250244140625e-05, 0.0, -3.814697265625e-06, -0.0012966394424438477, -1.0132780516869389e-05, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -4.649156339687117, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 23, 135, "Minion", "Is", "Minion", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"hole0": "MinionIsMinion", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -0.019380569458007812, -4.38690185546875e-05, -0.047437071800231934, -0.002614589175209403, -4.4355340003967285, -0.026166677474975586, -0.001346588134765625, -0.0026607513427734375, -7.62939453125e-06, -4.76837158203125e-05, -6.866455078125e-05, -0.00032806396484375, 0.0, -4.1961669921875e-05, -0.010984420776367188, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.0021146535873413086, -7.987022399902344e-06, -2.288818359375e-05, -0.0025262832641601562, -7.82012939453125e-05, -0.06138014793395996, -4.6253204345703125e-05, 0.0, -3.814697265625e-06, -0.0014187097549438477, -1.0013571227318607e-05, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsMinion()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -5.385968261526379, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -5.050625801086426, -0.06726765632629395, -0.00078582763671875, -1.9073486328125e-06, -0.13343538343906403, -4.851785342907533e-05, -2.2649765014648438e-06, -1.1444091796875e-05, -2.288818359375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -0.00353240966796875, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.00026345252990722656, -5.9604644775390625e-06, -4.57763671875e-05, -0.0008897781372070312, -7.43865966796875e-05, -0.10509109497070312, -5.3882598876953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006785392761230469, -9.536735888104886e-06, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(players=\n            BothPlayer()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -5.54027390242549, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -5.376080513000488, -0.00010883808135986328, -0.0002384185791015625, -3.814697265625e-06, -0.019404012709856033, -3.159042535116896e-05, 0.0, -2.288818359375e-05, -5.91278076171875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001316070556640625, -4.57763671875e-05, 0.0, -9.5367431640625e-06, -0.0030050277709960938, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -0.00021004676818847656, -7.867813110351562e-06, -4.76837158203125e-05, -0.000667572021484375, -7.43865966796875e-05, -0.1166391372680664, -4.6253204345703125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005356073379516602, -9.417526598554105e-06, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(player=\n            BothPlayer()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -5.605562524308645, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Damaged", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"hole0": "Damaged", "_type": "Template18"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -5.481866836547852, -1.33514404296875e-05, -0.014258661307394505, -0.0001996745413634926, -1.52587890625e-05, -5.14984130859375e-05, -3.62396240234375e-05, -3.4332275390625e-05, -0.00010144710540771484, -0.00022518634796142578, 0.0, -5.7220458984375e-06, -0.004298210144042969, -1.33514404296875e-05, -9.1552734375e-05, -1.9073486328125e-06, -0.0003268718719482422, -2.3245811462402344e-05, -3.24249267578125e-05, -0.001129150390625, -0.0002384185791015625, -0.09849739074707031, -3.910064697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0008407831192016602, -9.059900548891164e-06, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), ActionTag(Give(\n            ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -5.639580643225138, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 20, 114, "Null", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -4.841595649719238, -0.04267597198486328, -0.110848069190979, -0.0002685785002540797, -0.5276145935058594, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0038394927978515625, -7.2479248046875e-05, 0.0, -4.38690185546875e-05, -0.002368927001953125, -1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0014328956604003906, -9.775161743164062e-06, -2.6702880859375e-05, -0.0019502639770507812, -9.918212890625e-05, -0.07075130939483643, -6.35385513305664e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000991225242614746, -1.0848032616195269e-05, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=Null\n            ), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -5.8637556432413405, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 23, 135, "Minion", "Is", "Target", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "self", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 0, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -0.019380569458007812, -4.38690185546875e-05, -0.047437071800231934, -0.002614589175209403, -0.01665305159986019, -0.0031872407998889685, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -5.91278076171875e-05, -0.0003814697265625, 0.0, -4.00543212890625e-05, -0.005237579345703125, -3.814697265625e-06, -0.000156402587890625, 0.0, -0.001293778419494629, -8.106231689453125e-06, -2.86102294921875e-05, -0.0012521743774414062, -8.20159912109375e-05, -5.728568077087402, -0.0006151198176667094, 0.0, -1.9073486328125e-06, -0.0017633438110351562, -7.5101784204889555e-06, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(0)),\n            SelfSelector()))])\n"}, {"score": -5.895935511669897, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 23, 135, "Is", "Minion", "Is", "Target", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"hole0": "IsMinionIsTarget", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -0.019380569458007812, -4.38690185546875e-05, -3.0741994380950928, -0.015812577679753304, -2.6334102153778076, -0.03941325470805168, -0.004433354362845421, -2.6702880859375e-05, -0.0002193450927734375, -5.7220458984375e-06, -5.53131103515625e-05, -6.29425048828125e-05, -0.0004787445068359375, 0.0, -4.1961669921875e-05, -0.00646209716796875, -3.814697265625e-06, -0.000164031982421875, 0.0, -0.0016448497772216797, -8.106231689453125e-06, -2.6702880859375e-05, -0.0015058517456054688, -8.0108642578125e-05, -0.062403079122304916, -4.2438507080078125e-05, 0.0, -3.814697265625e-06, -0.0011862516403198242, -9.894361937767826e-06, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            IsMinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -5.926011785774328, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 20, 114, "Null", "<EOS>", 46, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -4.841595649719238, -0.04267597198486328, -0.110848069190979, -0.0002685785002540797, -0.8935728073120117, 0.0, -0.002024491084739566, -0.00021194358123466372, -3.814697265625e-06], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=Null\n            ), BothPlayer())])\n"}, {"score": -6.0178461433274535, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 14, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -5.064420700073242, -0.000324249267578125, -3.0517578125e-05, -1.9073486328125e-05, -0.03306114673614502, -0.0037134885787963867, -2.47955322265625e-05, -1.9073486328125e-06, -0.000400543212890625, -1.9073486328125e-05, -8.0108642578125e-05, -1.9073486328125e-05, -0.0007171630859375, -3.814697265625e-06, -0.7078170776367188, 0.0, -0.0018854141235351562, -0.0007724761962890625, -5.7220458984375e-06, -7.62939453125e-06, -0.0006885528564453125, -4.9591064453125e-05, 0.0, -1.1444091796875e-05, -0.006825447082519531, -7.62939453125e-06, -4.9591064453125e-05, 0.0, -0.00019681453704833984, -1.5616416931152344e-05, -4.1961669921875e-05, -0.000827789306640625, -8.96453857421875e-05, -0.16013085842132568, -5.3882598876953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007092952728271484, -9.775153557711747e-06, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            IsType(MINION_TYPE.BEAST)), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -6.138317086210456, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 23, 135, "Is", "Minion", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "condition", "value": {"hole0": "IsMinion", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -0.019380569458007812, -4.38690185546875e-05, -3.0741994380950928, -0.015812577679753304, -0.08806121349334717, -0.0008411407470703125, -0.00397491455078125, -3.814697265625e-06, -9.5367431640625e-06, -0.0001087188720703125, -0.0001811981201171875, 0.0, -5.14984130859375e-05, -0.0086669921875, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.0017226934432983398, -9.894371032714844e-06, -3.0517578125e-05, -0.002262115478515625, -8.20159912109375e-05, -2.887636423110962, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003198385238647461, -1.8000548152485862e-05, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -10.386171796821827, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template1", "hole2": "ALL"}, {"hole1": 7, "hole3": {"n": 1, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damage"}], "name": "GurubashiBerserker", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -10.278680801391602, -0.0028737783432006836, -0.0073394775390625, -0.000118255615234375, -0.09503036737442017, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, spell_damage=1)\n"}, {"score": -22.34577751159668, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, 0.0, -22.345775604248047], "inferred_code": ""}], "index": 43}
{"beams": [{"score": -0.07168249870221644, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -0.020601511001586914, 0.0, -0.00290679931640625, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001220703125, -9.894371032714844e-06, -0.0032737255096435547, -7.748603820800781e-06, -4.9591064453125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.0517578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.295608520507812e-05, -2.861022494471399e-06, 0.0, -3.933904736186378e-06, -3.814697265625e-06, 0.0, -0.0004099319048691541, -6.079655122448457e-06, -0.0008087158203125, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.2676889279391617e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-05, -0.014243125915527344, -0.0002346038818359375, -0.0007017723401077092, -6.4373016357421875e-06, -0.0001430511474609375, -5.7220458984375e-06, -0.0016689300537109375, -0.0051746368408203125, -7.62939453125e-06, 0.0, -0.00029754638671875, 0.0, -1.9669532775878906e-05, 0.0, -0.0009747743024490774, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -4.076764861788547, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "EPIC", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -4.027682304382324, -1.9073486328125e-06, -0.00152587890625, -5.7220458984375e-06, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001392364501953125, -3.814697265625e-06, -0.0001068115234375, -7.987022399902344e-06, -0.0026689767837524414, -7.748603820800781e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -2.86102294921875e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.295608520507812e-05, -2.9802317840221804e-06, 0.0, -4.053113570989808e-06, -3.933906555175781e-06, 0.0, -0.00043996699969284236, -6.318072337307967e-06, -0.0007982254028320312, -5.53131103515625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.205371856689453e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.303451714804396e-05, 0.0, -4.38690185546875e-05, -4.00543212890625e-05, -0.014207839965820312, -0.0002346038818359375, -0.0006998649332672358, -6.4373016357421875e-06, -0.0001468658447265625, -5.7220458984375e-06, -0.00168609619140625, -0.0051517486572265625, -7.62939453125e-06, 0.0, -0.0002956390380859375, 0.0, -1.9669532775878906e-05, 0.0, -0.0009785889415070415, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -4.627238060049535, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -4.475151062011719, 0.0, -7.05718994140625e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -7.450580596923828e-05, 0.0, -0.11357247829437256, 0.0, -0.004177093505859375, -3.814697265625e-06, -3.0517578125e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.14984130859375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00012969970703125, -3.814697265625e-06, -0.000118255615234375, -9.894371032714844e-06, -0.003435850143432617, -7.62939453125e-06, -5.7220458984375e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.4332275390625e-05, -4.38690185546875e-05, -1.9073486328125e-06, -6.341934204101562e-05, -9.536738616588991e-07, 0.0, -4.053113570989808e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005212530959397554, -7.033323527139146e-06, -0.0007886886596679688, -5.340576171875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -3.0517578125e-05, -2.288818359375e-05, -2.4199485778808594e-05, -2.205371856689453e-05, -4.1961669921875e-05, 0.0, -0.000156402587890625, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -4.303451714804396e-05, 0.0, -4.57763671875e-05, -4.1961669921875e-05, -0.01399993896484375, -0.000232696533203125, -0.0007058251067064703, -6.4373016357421875e-06, -0.000156402587890625, -7.62939453125e-06, -0.001766204833984375, -0.005001068115234375, -7.62939453125e-06, 0.0, -0.00029754638671875, 0.0, -1.9669532775878906e-05, 0.0, -0.0009992121485993266, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -5.852917394672772, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -0.020601511001586914, 0.0, -0.00290679931640625, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001220703125, -9.894371032714844e-06, -0.0032737255096435547, -7.748603820800781e-06, -4.9591064453125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.0517578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.295608520507812e-05, -2.861022494471399e-06, 0.0, -3.933904736186378e-06, -3.814697265625e-06, 0.0, -0.0004099319048691541, -6.079655122448457e-06, -0.0008087158203125, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.2676889279391617e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-05, -4.452177047729492, -0.05356597900390625, -0.0003948211669921875, -6.4849853515625e-05, -0.0011920928955078125, 0.0, -0.000286102294921875, 0.0, -0.003576040267944336, 0.0, -0.0014095306396484375, 0.0, -0.6256246566772461, 0.0, -2.288818359375e-05, -0.0018520355224609375, -5.7220458984375e-06, -0.000133514404296875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.063678741455078e-05, -0.013860464096069336, 0.0, -3.814697265625e-06, -0.007239341735839844, -1.52587890625e-05, -0.008716821670532227, -0.0018800765974447131, -2.47955322265625e-05, -5.7220458984375e-06, -0.00016450550174340606, -1.9311717551317997e-05, -0.05939674377441406, -3.814697265625e-06, -0.04928779602050781, -0.5221519470214844, -6.103515625e-05, 0.0, -0.0008792877197265625, 0.0, -2.2530553906108253e-05, 0.0, -0.0005997412954457104, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        player.draw()\n"}, {"score": -6.157850918009331, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -0.020601511001586914, 0.0, -0.00290679931640625, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001220703125, -9.894371032714844e-06, -6.089227199554443, 0.0, -0.0001583099365234375, -2.86102294921875e-05, -3.4332275390625e-05, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-06, -7.665157318115234e-05, -7.152555099310121e-07, 0.0, -3.3378591979271732e-06, -1.9073486328125e-06, 0.0, -0.0003168407711200416, -6.079655122448457e-06, -0.0008497238159179688, -4.9591064453125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.050399598374497e-05, -2.396106719970703e-05, -4.1961669921875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.291530785849318e-05, 0.0, -3.814697265625e-05, -3.814697265625e-05, -0.014377593994140625, -0.000240325927734375, -0.0007001030608080328, -6.4373016357421875e-06, -0.000118255615234375, -7.62939453125e-06, -0.00157928466796875, -0.005336761474609375, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -1.9788742065429688e-05, 0.0, -0.000981569173745811, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -6.471613685045327, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -6.367098808288574, 0.0, -3.814697265625e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.067557692527771, 0.0, -0.002544403076171875, -1.9073486328125e-06, -3.0517578125e-05, -2.288818359375e-05, -7.62939453125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000133514404296875, -3.814697265625e-06, -0.000118255615234375, -9.894371032714844e-06, -0.0034224987030029297, -7.748603820800781e-06, -5.340576171875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.24249267578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -6.914138793945312e-05, -2.861022494471399e-06, 0.0, -3.933904736186378e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00044616576633416116, -6.318072337307967e-06, -0.0007991790771484375, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.2172927856445312e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.27960985689424e-05, 0.0, -4.38690185546875e-05, -4.00543212890625e-05, -0.014168739318847656, -0.0002346038818359375, -0.0007018913165666163, -6.4373016357421875e-06, -0.0001468658447265625, -5.7220458984375e-06, -0.001697540283203125, -0.0051250457763671875, -7.62939453125e-06, 0.0, -0.00029754638671875, 0.0, -1.9669532775878906e-05, 0.0, -0.000983238103799522, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -6.522683081819764, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "4", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -0.020601511001586914, 0.0, -0.00290679931640625, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001220703125, -9.894371032714844e-06, -0.0032737255096435547, -7.748603820800781e-06, -4.9591064453125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.0517578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.295608520507812e-05, -2.861022494471399e-06, 0.0, -3.933904736186378e-06, -3.814697265625e-06, 0.0, -0.0004099319048691541, -6.079655122448457e-06, -0.0008087158203125, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.2676889279391617e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-05, -4.452177047729492, -0.05356597900390625, -0.0003948211669921875, -6.4849853515625e-05, -0.0011920928955078125, 0.0, -0.000286102294921875, 0.0, -0.003576040267944336, 0.0, -0.0014095306396484375, 0.0, -0.8240242004394531, 0.0, -1.1444091796875e-05, -0.0002346038818359375, 0.0, -0.8882331848144531, -3.933898824470816e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0003836152609437704, -1.0132738680113107e-05, -0.03238105773925781, 0.0, -0.05359840393066406, -0.1613941192626953, -9.5367431640625e-06, 0.0, -0.0007686614990234375, 0.0, -3.7074081774335355e-05, 0.0, -0.0007086985860951245, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        player.draw()\n"}, {"score": -6.541074632637105, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 24, 144, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -0.020601511001586914, 0.0, -0.00290679931640625, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001220703125, -9.894371032714844e-06, -0.0032737255096435547, -7.748603820800781e-06, -4.9591064453125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.0517578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.295608520507812e-05, -2.861022494471399e-06, 0.0, -3.933904736186378e-06, -3.814697265625e-06, 0.0, -0.0004099319048691541, -6.079655122448457e-06, -0.0008087158203125, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.2676889279391617e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-05, -0.014243125915527344, -0.0002346038818359375, -0.0007017723401077092, -6.4373016357421875e-06, -0.0001430511474609375, -5.7220458984375e-06, -6.459922790527344, -0.000133514404296875, -0.017471028491854668, -7.987022399902344e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -6.56195704376853, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "DRUID", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "DRUID", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -6.513914108276367, -1.52587890625e-05, -0.0002651214599609375, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00014495849609375, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001087188720703125, -7.987022399902344e-06, -0.002770066261291504, -7.748603820800781e-06, -4.38690185546875e-05, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -2.86102294921875e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.486343383789062e-05, -2.9802317840221804e-06, 0.0, -4.053113570989808e-06, -3.933906555175781e-06, 0.0, -0.0004275714745745063, -6.198863957251888e-06, -0.0008020401000976562, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.205371856689453e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.303451714804396e-05, 0.0, -4.38690185546875e-05, -4.00543212890625e-05, -0.0142364501953125, -0.0002346038818359375, -0.0006998649914748967, -6.4373016357421875e-06, -0.00014495849609375, -5.7220458984375e-06, -0.0016765594482421875, -0.005168914794921875, -7.62939453125e-06, 0.0, -0.0002956390380859375, 0.0, -1.9669532775878906e-05, 0.0, -0.0009776352671906352, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.DRUID, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -6.659566709758167, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -0.020601511001586914, 0.0, -0.00290679931640625, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001220703125, -9.894371032714844e-06, -0.0032737255096435547, -7.748603820800781e-06, -4.9591064453125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.0517578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.295608520507812e-05, -2.861022494471399e-06, 0.0, -3.933904736186378e-06, -3.814697265625e-06, 0.0, -0.0004099319048691541, -6.079655122448457e-06, -0.0008087158203125, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.2676889279391617e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-05, -0.014243125915527344, -0.0002346038818359375, -0.0007017723401077092, -6.4373016357421875e-06, -0.0001430511474609375, -5.7220458984375e-06, -0.0016689300537109375, -5.296231269836426, -0.0011444091796875, -5.340576171875e-05, -0.0017719268798828125, -1.9073486328125e-06, -0.0029287338256835938, -1.9073486328125e-06, -0.3456496000289917, 0.0, -0.0006594630540348589, -3.576278118089249e-07, -0.9008680582046509, 0.0, -3.814697265625e-05, -0.00054931640625, -5.7220458984375e-06, -0.04444124922156334, -1.2993770724278875e-05], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.hero.increase_armor(3)\n"}, {"score": -6.820589193943761, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "EPIC", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -4.475151062011719, 0.0, -7.05718994140625e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -7.450580596923828e-05, 0.0, -2.3096888065338135, -1.9073486328125e-06, -0.002201080322265625, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001316070556640625, -3.814697265625e-06, -0.0001049041748046875, -9.894371032714844e-06, -0.0027338266372680664, -7.748603820800781e-06, -4.57763671875e-05, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, -1.9073486328125e-06, -5.9604644775390625e-05, -1.0728830375228426e-06, 0.0, -4.29153169534402e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005883524427190423, -7.390948667307384e-06, -0.0007801055908203125, -5.53131103515625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -3.0517578125e-05, -2.288818359375e-05, -2.4199485778808594e-05, -2.205371856689453e-05, -4.1961669921875e-05, 0.0, -0.00016021728515625, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -4.33921413787175e-05, 0.0, -4.76837158203125e-05, -4.38690185546875e-05, -0.013855934143066406, -0.000232696533203125, -0.0007078514900058508, -6.4373016357421875e-06, -0.0001659393310546875, -7.62939453125e-06, -0.00182342529296875, -0.0048923492431640625, -7.62939453125e-06, 0.0, -0.00029754638671875, 0.0, -1.9669532775878906e-05, 0.0, -0.001011490705423057, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -7.105255669296284, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 35, 112, "CHARACTER_CLASS", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"id": "CHARACTER_CLASS", "_type": "Name"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -6.561046600341797, -0.0006542205810546875, -0.42273831367492676, -1.1920928244535389e-07, -0.011643409729003906, 0.0, -0.0002460479736328125, -2.86102294921875e-05, -0.04839169979095459, -8.22540732769994e-06, -0.024891968816518784, 0.0, -0.0010700225830078125, -5.7220458984375e-06, -1.33514404296875e-05, -0.00028121471405029297, -1.1920928244535389e-07, -2.288818359375e-05, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0002117156982421875, 0.0, -7.82012939453125e-05, -5.9604644775390625e-06, -0.004645228385925293, -5.841255187988281e-06, -5.53131103515625e-05, -7.62939453125e-06, -4.76837158203125e-05, 0.0, -1.52587890625e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9485435485839844e-05, -8.344646857949556e-07, 0.0, -2.9802317840221804e-06, -3.814697265625e-06, 0.0, -0.00020956425578333437, -3.814689989667386e-06, -0.0009355545043945312, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -2.0265579223632812e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.3153722799615934e-05, 0.0, -3.814697265625e-05, -3.62396240234375e-05, -0.014661788940429688, -0.0002422332763671875, -0.000690090237185359, -6.4373016357421875e-06, -0.000125885009765625, -5.7220458984375e-06, -0.0015354156494140625, -0.005413055419921875, -5.7220458984375e-06, 0.0, -0.0002956390380859375, 0.0, -1.9788742065429688e-05, 0.0, -0.0009475945844314992, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS,\n            CHARACTER_CLASS.PALADIN, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -7.208263135916127, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "increase_armor", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HammerOfWrath", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -0.020601511001586914, 0.0, -0.00290679931640625, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001220703125, -9.894371032714844e-06, -0.0032737255096435547, -7.748603820800781e-06, -4.9591064453125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.0517578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.295608520507812e-05, -2.861022494471399e-06, 0.0, -3.933904736186378e-06, -3.814697265625e-06, 0.0, -0.0004099319048691541, -6.079655122448457e-06, -0.0008087158203125, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.2676889279391617e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-05, -4.452177047729492, -0.05356597900390625, -0.0003948211669921875, -6.4849853515625e-05, -0.0011920928955078125, 0.0, -0.000286102294921875, 0.0, -0.003576040267944336, 0.0, -0.0014095306396484375, 0.0, -0.6256246566772461, 0.0, -2.288818359375e-05, -0.0018520355224609375, -5.7220458984375e-06, -0.000133514404296875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.063678741455078e-05, -0.013860464096069336, 0.0, -3.814697265625e-06, -0.007239341735839844, -1.52587890625e-05, -0.008716821670532227, -0.0018800765974447131, -2.47955322265625e-05, -5.7220458984375e-06, -0.00016450550174340606, -1.9311717551317997e-05, -0.05939674377441406, -3.814697265625e-06, -0.04928779602050781, -0.8999824523925781, -0.001964569091796875, -1.71661376953125e-05, -0.016666412353515625, -9.5367431640625e-06, -0.0005950927734375, -1.9073486328125e-06, -0.018358349800109863, 0.0, -0.0005725619266740978, -7.152555099310121e-07, -0.8982580900192261, 0.0, -4.9591064453125e-05, -0.000278472900390625, -5.7220458984375e-06, -0.04228736460208893, -1.2278534995857626e-05], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        player.hero.increase_armor(3)\n"}, {"score": -15.805645942687988, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -15.805624961853027], "inferred_code": "break\n"}, {"score": -21.36231803894043, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -21.36231231689453], "inferred_code": ""}], "index": 44}
{"beams": [{"score": -0.24035624182651816, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -0.08765888214111328, -0.0002460479736328125, -2.47955322265625e-05, -0.06078052520751953, -5.53131103515625e-05, -8.20159912109375e-05, 0.0, -9.34600830078125e-05, 0.0, -0.00054168701171875, 0.0, -5.7220458984375e-06, 0.0, -0.006569027900695801, 0.0, -0.000583648681640625, -3.814697265625e-05, -0.00014495849609375, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score": -4.120274805032025, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "1", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -2.539364814758301, -6.67572021484375e-05, -0.006711006164550781, 0.0, -1.1620985269546509, -2.861018856492592e-06, -0.000125885009765625, -8.96453857421875e-05, -0.017960548400878906, 0.0, -0.017592543736100197, -4.291534423828125e-06, -0.00054168701171875, -4.76837158203125e-05, -7.62939453125e-06, -0.013759774155914783, -2.741813204920618e-06, -0.0010623931884765625, -1.33514404296875e-05, -0.0016947048716247082, -2.3841855067985307e-07, -0.052056312561035156, -0.0007724761962890625, -0.0002002716064453125, -1.9073486328125e-06, -0.00052642822265625, -1.9073486328125e-06, -3.814697265625e-06, -0.062310218811035156, -1.33514404296875e-05, -0.024714404717087746, -0.000509974139276892, -0.0024993419647216797, -7.62939453125e-06, -0.0003299713134765625, -0.000492095947265625, 0.0, -0.0001723766326904297, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0010274623055011034, -3.576278118089249e-07, -0.0002002716064453125, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0016426851507276297, -4.172316494077677e-06, -2.86102294921875e-05, -0.0001544952392578125, 0.0, -0.04256916046142578, -5.7220458984375e-06, -0.0001010894775390625, 0.0, -0.026129961013793945, 0.0, -0.05434608459472656, -6.198863957251888e-06, -0.004400745965540409, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 1):\n            <UNK>.summon(player, game, len(game.other_player.minions))\n"}, {"score": -4.6745202892313245, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -3.864398956298828, -3.814697265625e-06, -5.7220458984375e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0001201629638671875, 0.0, -2.6702880859375e-05, 0.0, -1.7642851162236184e-05, -6.198883056640625e-06, -0.0002956390380859375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.410743713378906e-06, -3.933906555175781e-06, 0.0, 0.0, -9.357637463836e-05, -2.2649765014648438e-06, -0.05426597595214844, -0.0001163482666015625, -0.0001068115234375, -0.0004215240478515625, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.001863241195678711, 0.0, -1.33514404296875e-05, 0.0, -0.06091165542602539, 0.0, -1.71661376953125e-05, -0.0011768341064453125, 0.0, -0.054291725158691406, -2.3841855067985307e-07, -0.0005397796630859375, -1.52587890625e-05, -1.1444091796875e-05, -0.0010204315185546875, -3.814697265625e-06, 0.0, -6.67572021484375e-05, 0.0, -7.2479248046875e-05, 0.0, -0.0005464553833007812, 0.0, -1.9073486328125e-05, -3.576278118089249e-07, -0.4969792366027832, -3.814697265625e-06, -2.47955322265625e-05, -0.0018939971923828125, 0.0, -0.08118164539337158, -2.3841855067985307e-07], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.die(self)\n"}, {"score": -4.79712935537718, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -4.579564571380615, -1.9073486328125e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, 0.0, -0.000972747802734375, 0.0, -0.0017452239990234375, -1.9073486328125e-06, -3.814697265625e-06, -0.0007648468017578125, -2.288818359375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.0003070831298828125, -1.251697449333733e-05, -0.003972528502345085, -1.1920928244535389e-07, -0.0024051666259765625, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5762786865234375e-05, -7.927417755126953e-05, -3.814697265625e-06, -0.001099147368222475, -1.9311717551317997e-05, -0.028665542602539062, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.658341145433951e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.202662477036938e-05, -2.2649765014648438e-06, -0.08768653869628906, -0.0002460479736328125, -2.47955322265625e-05, -0.06080818176269531, -5.53131103515625e-05, -8.20159912109375e-05, 0.0, -9.34600830078125e-05, 0.0, -0.0005437135696411133, 0.0, -5.7220458984375e-06, 0.0, -0.006566166877746582, 0.0, -0.000583648681640625, -3.814697265625e-05, -0.00014495849609375, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score": -4.8586458785110125, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -4.641031742095947, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -0.0007877349853515625, 0.0, -0.0018291473388671875, -1.9073486328125e-06, -3.814697265625e-06, -0.00022125244140625, -2.288818359375e-05, -0.000240325927734375, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.00031280517578125, -1.263618378288811e-05, -0.004156110808253288, -1.1920928244535389e-07, -0.0024623870849609375, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.814697265625e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010937827173620462, -1.9311717551317997e-05, -0.028954505920410156, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.670261892490089e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -0.08774852752685547, -0.0002460479736328125, -2.47955322265625e-05, -0.060898780822753906, -5.53131103515625e-05, -8.20159912109375e-05, 0.0, -9.34600830078125e-05, 0.0, -0.0005407333374023438, 0.0, -5.7220458984375e-06, 0.0, -0.006574749946594238, 0.0, -0.000583648681640625, -3.814697265625e-05, -0.00014495849609375, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score": -5.2553135849548624, "choice_history": [50, 111, 176, 58, 90, "Hand", "PRIEST", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandPRIEST", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -5.027900218963623, -0.0006405961466953158, -3.0517578125e-05, 0.0, -3.814697265625e-06, -2.050225157290697e-05, -0.00010871886479435489, -1.1920928244535389e-07, -1.33514404296875e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.0848044439626392e-05, 0.0, 0.0, -5.14984130859375e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001201629638671875, -0.00070953369140625, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, 0.0, -4.410743713378906e-06, -2.5033950805664062e-05, -3.814697265625e-06, 0.0, -0.000110626220703125, -1.9073486328125e-06, -2.09808349609375e-05, -2.992119152622763e-05, -0.0007815328426659107, -0.0001628281461307779, -4.9591064453125e-05, -1.1801719665527344e-05, -4.208087921142578e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02507849596440792, 0.0, 0.0, 0.0, -1.1444091796875e-05, 0.0, -9.34600830078125e-05, 0.0, -0.00109100341796875, 0.0, -0.001956939697265625, -1.9073486328125e-06, -3.814697265625e-06, -0.000293731689453125, -2.288818359375e-05, -0.0002307891845703125, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.0003147125244140625, -1.263618378288811e-05, -0.0040537104941904545, -1.1920928244535389e-07, -0.00246429443359375, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -3.814697265625e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.308887481689453e-05, -3.814697265625e-06, -0.00108270812779665, -1.9430925021879375e-05, -0.02975940704345703, -1.52587890625e-05, -3.24249267578125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.670261892490089e-05, -6.079673767089844e-06, -0.000713348388671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -0.08701038360595703, -0.000244140625, -2.6702880859375e-05, -0.0608673095703125, -5.53131103515625e-05, -8.20159912109375e-05, 0.0, -9.34600830078125e-05, 0.0, -0.0005398988723754883, 0.0, -5.7220458984375e-06, 0.0, -0.006574749946594238, 0.0, -0.000583648681640625, -3.814697265625e-05, -0.00014495849609375, 0.0], "inferred_code": "class HandPRIEST(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score": -5.439918379656412, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -0.08765888214111328, -0.0002460479736328125, -2.47955322265625e-05, -2.8655223846435547, 0.0, -1.7778648138046265, 0.0, -0.00022125244140625, -0.0001125335693359375, -0.0001392364501953125, 0.0, -0.10412979125976562, 0.0, -0.0012233257293701172, -1.1920928244535389e-07, -0.0015649795532226562, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0002002716064453125, 0.0, -0.511775016784668, -1.9073486328125e-06, -0.0048999786376953125, -5.960462772236497e-07, -0.0007241423008963466, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n"}, {"score": -5.689340953231323, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"value": true, "_type": "NameConstant"}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -0.08765888214111328, -0.0002460479736328125, -2.47955322265625e-05, -2.8655223846435547, 0.0, -0.6874898672103882, -1.7881377516459906e-06, -0.05430126190185547, -0.08246994018554688, -0.0001354217529296875, 0.0, -0.027513504028320312, -1.9073486328125e-05, -3.24249267578125e-05, 0.0, -0.3384053707122803, -1.1920928244535389e-07, -0.013576149940490723, -8.940672159951646e-06, -0.3580147922039032, 0.0, -0.3150901794433594, -0.13385486602783203, -1.9073486328125e-06, -0.0010251998901367188, 0.0, -0.0007572174072265625, 0.0, -0.000657438300549984, 0.0, -0.0591583251953125, -0.000274658203125, -1.71661376953125e-05, -7.43865966796875e-05, -1.9073486328125e-06, -0.40920352935791016, -1.1920928244535389e-07, -0.1688671112060547, -0.0005970001220703125, -0.0008052587509155273, -1.9073486328125e-06], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: True)\n"}, {"score": -5.774837399837267, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -5.681200981140137, -0.035820960998535156, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -0.00323486328125, -9.5367431640625e-06, -0.00013731993385590613, -4.291534423828125e-06, -0.00040435791015625, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.291534423828125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00011026477295672521, -2.2649765014648438e-06], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"score": -5.904364080313556, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "1", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "<UNK>", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -2.539364814758301, -6.67572021484375e-05, -0.006711006164550781, 0.0, -2.9348578453063965, -3.4570634852570947e-06, -0.0002040863037109375, -0.0002918243408203125, -0.041858673095703125, 0.0, -0.025886887684464455, -5.125998541188892e-06, -0.0003108978271484375, -8.20159912109375e-05, -7.62939453125e-06, -0.021567149087786674, -3.218649908376392e-06, -0.0015926361083984375, -7.62939453125e-06, -0.0012517014984041452, -2.3841855067985307e-07, -0.03670787811279297, -0.0006313323974609375, -0.0002079010009765625, -1.9073486328125e-06, -0.0010509490966796875, -1.9073486328125e-06, -1.9073486328125e-06, -0.054218292236328125, -2.288818359375e-05, -0.022852251306176186, -0.0005235571879893541, -0.0027379989624023438, -7.62939453125e-06, -0.0002384185791015625, -0.0004863739013671875, 0.0, -0.0001360177993774414, -3.814697265625e-06, -0.0002040863037109375, 0.0, -0.0007468450930900872, -3.576278118089249e-07, -0.0001983642578125, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.0016534080496057868, -4.410734163684538e-06, -2.86102294921875e-05, -0.00016021728515625, 0.0, -0.0391082763671875, -5.7220458984375e-06, -0.000102996826171875, 0.0, -0.02558159828186035, 0.0, -0.05462074279785156, -6.318072337307967e-06, -0.00443301722407341, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 1):\n            <UNK>.summon(player, game, len(game.other_player.minions))\n"}, {"score": -6.297870820094161, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"attr": "die", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -3.864398956298828, -3.814697265625e-06, -5.7220458984375e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0001201629638671875, 0.0, -2.6702880859375e-05, 0.0, -1.7642851162236184e-05, -6.198883056640625e-06, -0.0002956390380859375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.410743713378906e-06, -3.933906555175781e-06, 0.0, 0.0, -9.357637463836e-05, -2.2649765014648438e-06, -0.05426597595214844, -0.0001163482666015625, -0.0001068115234375, -0.0004215240478515625, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.001863241195678711, 0.0, -1.33514404296875e-05, 0.0, -0.06091165542602539, 0.0, -1.71661376953125e-05, -0.0011768341064453125, 0.0, -0.054291725158691406, -2.3841855067985307e-07, -0.0005397796630859375, -1.52587890625e-05, -1.1444091796875e-05, -0.0010204315185546875, -3.814697265625e-06, 0.0, -6.67572021484375e-05, 0.0, -7.2479248046875e-05, 0.0, -0.0005464553833007812, 0.0, -1.9073486328125e-05, -3.576278118089249e-07, -2.049382209777832, -3.814697265625e-06, -1.9073486328125e-06, -0.030731201171875, -3.814697265625e-05, -0.1232769787311554, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.change_attack(1)\n"}, {"score": -6.680543507414782, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Divine", "Shield", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "DivineShield", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -2.539364814758301, -6.67572021484375e-05, -0.006711006164550781, 0.0, -1.822846531867981, -9.536738616588991e-07, -0.02019977569580078, -0.0057201385498046875, -7.05718994140625e-05, 0.0, -0.027723312377929688, 0.0, -0.0039179325103759766, -2.3841855067985307e-07, -0.0018901824951171875, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.24249267578125e-05, 0.0, -5.7220458984375e-05, 0.0, -0.06818103790283203, -1.9073486328125e-06, -0.016501545906066895, -3.099440846199286e-06, -0.0023484239354729652, 0.0, -0.0003719329833984375, -0.0007171630859375, -3.814697265625e-06, -1.9073486328125e-06, -0.00019073486328125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -0.4457002580165863, -3.576277322281385e-06, -1.193257451057434, -1.9073486328125e-06, -7.62939453125e-06, -0.000152587890625, -1.9073486328125e-06, -0.000843048095703125, 0.0, -0.0043534040451049805, -5.769702329416759e-05, -0.001773834228515625, -0.000164031982421875, -0.00018310546875, -0.43115225434303284, -0.0013539090286940336, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(DivineShield()))\n"}, {"score": -6.787674136501337, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "player", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Divine", "Shield", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "DivineShield", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "add_buff", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "player", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -2.539364814758301, -6.67572021484375e-05, -0.006711006164550781, 0.0, -0.9567943811416626, -2.3841855067985307e-07, -0.03934288024902344, 0.0, -0.18120956420898438, 0.0, -6.67572021484375e-05, 0.0, -0.764446496963501, 0.0, -0.05562412738800049, -4.768370445162873e-07, -0.017901834100484848, 0.0, -0.000301361083984375, -0.00048828125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035228729248046875, -5.7220458984375e-06, -3.814697265625e-06, -0.08641910552978516, 0.0, -0.3182834982872009, -8.940672159951646e-06, -1.2658790349960327, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0008831024169921875, 0.0, -0.006482243537902832, -6.592244608327746e-05, -0.00174713134765625, -0.0001678466796875, -0.0001926422119140625, -0.45659857988357544, -0.0014291767729446292, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for player in game.other_player.minions:\n            minion.add_buff(Buff(DivineShield()))\n"}, {"score": -6.839534544002177, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"attr": "summon", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HandOfProtection", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -2.539364814758301, -6.67572021484375e-05, -0.006711006164550781, 0.0, -1.822846531867981, -9.536738616588991e-07, -0.02019977569580078, -0.0057201385498046875, -7.05718994140625e-05, 0.0, -0.027723312377929688, 0.0, -0.0039179325103759766, -2.3841855067985307e-07, -0.0018901824951171875, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.24249267578125e-05, 0.0, -5.7220458984375e-05, 0.0, -0.06818103790283203, -1.9073486328125e-06, -0.016501545906066895, -3.099440846199286e-06, -0.0023484239354729652, 0.0, -0.0003719329833984375, -0.0007171630859375, -3.814697265625e-06, -1.9073486328125e-06, -0.00019073486328125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -0.4457002580165863, -3.576277322281385e-06, -1.5727473497390747, -3.814697265625e-06, -0.07789897918701172, -0.000217437744140625, 0.0, -0.00144195556640625, -3.933906555175781e-06, -7.05718994140625e-05, 0.0, -0.000496983528137207, 0.0, -0.0003871917724609375, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0019350015791133046, -5.006777428206988e-06, -2.86102294921875e-05, -0.0001850128173828125, 0.0, -0.022985458374023438, -7.62939453125e-06, -9.918212890625e-05, 0.0, -0.0460587739944458, 0.0, -0.06330204010009766, -7.390948667307384e-06, -0.0043275561183691025, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.summon(player, game, len(game.other_player.minions))\n"}, {"score": -24.28323745727539, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-6.103515625e-05, -5.14984130859375e-05, -24.283124923706055], "inferred_code": ""}], "index": 45}
{"beams": [{"score": -0.05318328405824957, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "condition", "<EOS>", 20, 114, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -0.007007598876953125, -0.000110626220703125, -0.00012969970703125, 0.0, -0.0001506805419921875, -0.000179290771484375, -7.62939453125e-06, -0.00153350830078125, -2.09808349609375e-05, 0.0, -0.0006238222122192383, 0.0, -0.0046234130859375, -0.0001354217529296875, -0.00038909912109375, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -5.760703086455848, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "SHAMAN", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "condition", "<EOS>", 20, 114, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "SHAMAN", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -5.698826789855957, 0.0, -0.02048492431640625, -4.9591064453125e-05, -2.622604142743512e-06, -5.960462772236497e-07, -5.245201464276761e-06, 0.0, -0.0004990100860595703, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002841949462890625, -2.47955322265625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.0005762577056884766, 0.0, -3.0517578125e-05, -0.00045013427734375, -5.340576171875e-05, -0.00047897471813485026, -0.0023717880249023438, -1.52587890625e-05, -0.0002288818359375, -1.9073486328125e-06, -5.14984130859375e-05, -0.0006885528564453125, -0.00024271008442156017, -0.0002288818359375, 0.0, -0.000370025634765625, -0.0002498626708984375, -1.9073486328125e-06, -0.0001392364501953125, -6.103515625e-05, -0.007835864089429379, -0.00040446966886520386, -4.00543212890625e-05, -4.1961669921875e-05, -4.1961669921875e-05, -0.0002681617042981088, -1.1205610462639015e-05, -0.0070400238037109375, -0.000110626220703125, -0.00012969970703125, 0.0, -0.000148773193359375, -0.0001773834228515625, -7.62939453125e-06, -0.0015087127685546875, -2.09808349609375e-05, 0.0, -0.0006200075149536133, 0.0, -0.004515647888183594, -0.0001354217529296875, -0.0003871917724609375, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.SHAMAN)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -5.843639195582611, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "condition", "<EOS>", 20, 114, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -5.728813171386719, 0.0, -0.07302284240722656, -9.918212890625e-05, -3.3378591979271732e-06, -3.576278118089249e-07, -8.82147105585318e-06, 0.0, -0.00035321712493896484, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002727508544921875, -1.71661376953125e-05, 0.0, -2.288818359375e-05, -3.814697265625e-06, -0.0007059574127197266, 0.0, -3.0517578125e-05, -0.00043487548828125, -4.76837158203125e-05, -0.0005056801019236445, -0.0020325183868408203, -1.33514404296875e-05, -0.0002498626708984375, -1.9073486328125e-06, -5.340576171875e-05, -0.0006999969482421875, -0.00024664399097673595, -0.00025177001953125, 0.0, -0.0003948211669921875, -0.000209808349609375, -1.9073486328125e-06, -0.0001697540283203125, -6.866455078125e-05, -0.008042453788220882, -0.00039791324525140226, -4.1961669921875e-05, -4.38690185546875e-05, -4.00543212890625e-05, -0.0002660739701241255, -1.07287787614041e-05, -0.007033348083496094, -0.000110626220703125, -0.0001316070556640625, 0.0, -0.000156402587890625, -0.000179290771484375, -7.62939453125e-06, -0.001598358154296875, -2.09808349609375e-05, 0.0, -0.0006314516067504883, 0.0, -0.004836082458496094, -0.0001373291015625, -0.0003910064697265625, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -6.42196828350221, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Started", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "condition", "<EOS>", 20, 114, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnStarted", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -6.367825508117676, -0.0001430511474609375, -4.76837158203125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.000118255615234375, -0.0001097917411243543, -0.000141143798828125, 0.0, -0.000804901123046875, -0.0001430511474609375, -1.9073486328125e-06, -0.0001373291015625, -3.4332275390625e-05, -0.009180902503430843, -0.0003741904511116445, -6.103515625e-05, -5.7220458984375e-05, -3.4332275390625e-05, -0.0003112587728537619, -9.059865078597795e-06, -0.008294105529785156, -0.000110626220703125, -0.0001468658447265625, 0.0, -0.0001697540283203125, -0.00018310546875, -7.62939453125e-06, -0.00174713134765625, -2.09808349609375e-05, 0.0, -0.0006829500198364258, 0.0, -0.00539398193359375, -0.0001392364501953125, -0.000400543212890625, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnStarted(), ActionTag(Heal(1\n            ), MinionSelector(condition=Null)))])\n"}, {"score": -6.461349931015619, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 41, 128, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": 2, "_type": "Template11"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -5.491758346557617, -0.021009445190429688, -0.9103103876113892, -2.3841855067985307e-07], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            Buff(ChangeAttack(2))))])\n"}, {"score": -6.70674761797396, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 46, 135, "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -6.105708122253418, -2.6702880859375e-05, -0.5608835220336914, -0.0018558502197265625, -1.9073486328125e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector()))])\n"}, {"score": -6.867911544098533, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 172, 49, 152, "condition", "<EOS>", 20, 114, "Null", "<EOS>", 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -0.007007598876953125, -0.000110626220703125, -0.00012969970703125, 0.0, -0.0001506805419921875, -0.000179290771484375, -7.62939453125e-06, -6.795052528381348, -1.9073486328125e-06, -5.7220458984375e-06, -0.008081436157226562, 0.0, -0.007758140563964844, -0.0001430511474609375, -0.0001888275146484375, 0.0, -1.33514404296875e-05, -2.6702880859375e-05, -0.0054569244384765625, 0.0, -0.0038013458251953125, 0.0, -0.001522660255432129, -1.9073486328125e-06, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n"}, {"score": -7.004956808342612, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -6.105708122253418, -2.6702880859375e-05, -0.8607521057128906, -0.0001983642578125, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            HeroSelector()))])\n"}, {"score": -7.170854296936639, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 41, 128, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": 3, "_type": "Template11"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -5.491758346557617, -0.021009445190429688, -1.6198147535324097, -2.3841855067985307e-07], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            Buff(ChangeAttack(3))))])\n"}, {"score": -7.26817958900277, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -5.962557792663574, -5.7220458984375e-06, -0.7377300262451172, -1.9073486328125e-06, 0.0, -0.001674652099609375, -6.67572021484375e-05, -3.814697265625e-06, 0.0, 0.0, -0.2365274429321289, 0.0, -2.288818359375e-05, -0.016092300415039062, -0.0017786026000976562, -5.340576171875e-05, -0.011775970458984375, -9.5367431640625e-06, 0.0, -0.2177525758743286, -0.0001850128173828125, -0.0003185272216796875, -0.0001049041748046875, 0.0, -0.05232052505016327, 0.0, -0.0054912567138671875, -5.7220458984375e-06, -0.00349455326795578, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Weapon(0, 2)\n"}, {"score": -7.513215031876243, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 41, 128, "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": 0, "_type": "Template11"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -5.491758346557617, -0.021009445190429688, -1.962175726890564], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            Buff(ChangeAttack(0))))])\n"}, {"score": -7.672837822749656, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -7.321369171142578, -0.0045928955078125, -0.0001163482666015625, 0.0, -0.02375507354736328, -3.814697265625e-06, -0.051644325256347656, -9.5367431640625e-06, 0.0, -0.00041961669921875, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.01794910430908203, 0.0, -1.9073486328125e-05, -0.004680633544921875, -0.0019073486328125, -2.288818359375e-05, -0.014947891235351562, -9.5367431640625e-06, 0.0, -0.1695154905319214, -0.00018310546875, -0.0006618499755859375, -7.82012939453125e-05, 0.0, -0.04654499888420105, 0.0, -0.004994392395019531, -7.62939453125e-06, -0.0015807580202817917, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, True)\n\n    def create_weapon(self, player):\n        return Weapon(0, 2)\n"}, {"score": -7.736006987884807, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -7.312531471252441, -7.62939453125e-06, -2.288818359375e-05, -4.649158654501662e-06, -3.063678741455078e-05, -1.7523747374070808e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -6.11916184425354e-05, 0.0, -8.20159912109375e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.0001583099365234375, -0.009214401245117188, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000171661376953125, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -4.9591064453125e-05, 0.0, -0.11145496368408203, -1.1444091796875e-05, -0.02088165283203125, -7.62939453125e-06, 0.0, -0.0007190704345703125, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.011599540710449219, 0.0, -1.52587890625e-05, -0.00505828857421875, -0.00183868408203125, -2.288818359375e-05, -0.017904281616210938, -9.5367431640625e-06, 0.0, -0.18639910221099854, -0.0001659393310546875, -0.0006008148193359375, -7.62939453125e-05, 0.0, -0.04630886763334274, 0.0, -0.0055522918701171875, -7.62939453125e-06, -0.0015663467347621918, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(0, 2)\n"}, {"score": -8.829154696716941, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "condition", "<EOS>", 20, 114, "create_minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "condition", "value": {"value": "create_minion", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template4", "hole2": "effects"}], "name": "HealingTotem", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -0.007007598876953125, -0.000110626220703125, -0.00012969970703125, 0.0, -0.0001506805419921875, -0.000179290771484375, -7.62939453125e-06, -0.00153350830078125, -2.09808349609375e-05, 0.0, -0.0006238222122192383, 0.0, -0.0046234130859375, -0.0001354217529296875, -8.776347160339355, -1.33514404296875e-05], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=create_minion)))])\n"}, {"score": -23.164535522460938, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -23.164514541625977], "inferred_code": ""}], "index": 46}
{"beams": [{"score": -0.04336246567775248, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -0.0024356842041015625, -0.0005474090576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -0.013181090354919434, 0.0, -0.000362396240234375, -0.000133514404296875, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -0.0032100677490234375, 0.0, -9.357929229736328e-05, -5.006789251638111e-06, -0.002232074737548828, 0.0, -7.62939453125e-06, -0.0002460479736328125, -0.0001316070556640625, -0.0006370748742483556, -9.894123650155962e-05, 0.0, -7.2479248046875e-05, -0.000588591443374753, -2.6225699912174605e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -5.017653991117619, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -0.0024356842041015625, -0.0005474090576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -4.930870532989502, 0.0, -9.5367431640625e-06, -0.05351448059082031, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -5.14984130859375e-05, 0.0, -0.00034737586975097656, -2.7418097943154862e-06, -0.00839376449584961, 0.0, -7.62939453125e-06, -0.0003757476806640625, -0.000171661376953125, -0.0008492118795402348, -0.00010764286707853898, 0.0, -0.0001010894775390625, -0.0005051633343100548, -1.7404405298293568e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(8), self)\n"}, {"score": -5.3932939438798115, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -5.359653949737549, 0.0, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, 0.0, -0.0002269744873046875, 0.0, -0.0021935701370239258, 0.0, -0.0011348724365234375, -1.9073486328125e-06, -7.62939453125e-06, -7.82012939453125e-05, -1.71661376953125e-05, -4.76837158203125e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -8.58306884765625e-05, -0.00015652179718017578, -1.3470647900248878e-05, -0.0031915903091430664, -2.2649765014648438e-06, -0.0025196075439453125, -0.0005512237548828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.00045430660247802734, 0.0, -0.013091683387756348, 0.0, -0.000362396240234375, -0.0001316070556640625, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -0.003192901611328125, 0.0, -9.167194366455078e-05, -5.125998541188892e-06, -0.0022330284118652344, 0.0, -7.62939453125e-06, -0.000244140625, -0.000133514404296875, -0.000636717421002686, -9.715308988234028e-05, 0.0, -7.2479248046875e-05, -0.0005900214891880751, -2.6225699912174605e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -6.0566825464427225, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -6.018386363983154, 0.0, -0.0009937286376953125, -0.001033782958984375, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -0.013739347457885742, 0.0, -0.000293731689453125, -0.000148773193359375, -5.14984130859375e-05, -1.33514404296875e-05, 0.0, -0.001987457275390625, 0.0, -9.167194366455078e-05, -7.152556463552173e-06, -0.002048969268798828, 0.0, -7.62939453125e-06, -0.000255584716796875, -0.000148773193359375, -0.0006783048738725483, -9.262344246963039e-05, 0.0, -6.67572021484375e-05, -0.0005314986919984221, -2.634490556374658e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -6.2473799855740495, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -6.211665630340576, 0.0, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, 0.0, -0.0002690553665161133, 0.0, -0.004139423370361328, -1.1920928244535389e-07, -0.001316070556640625, -1.9073486328125e-06, -7.62939453125e-06, -9.167194366455078e-05, -1.52587890625e-05, -3.814697265625e-05, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.47955322265625e-05, -8.7738037109375e-05, -0.00016605854034423828, -1.3351438610698096e-05, -0.003082752227783203, -2.2649765014648438e-06, -0.002521514892578125, -0.0005340576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00045049190521240234, 0.0, -0.013084888458251953, 0.0, -0.000362396240234375, -0.0001316070556640625, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -0.003208160400390625, 0.0, -9.357929229736328e-05, -5.006789251638111e-06, -0.0022492408752441406, 0.0, -7.62939453125e-06, -0.000244140625, -0.000133514404296875, -0.0006368365720845759, -9.703388786874712e-05, 0.0, -7.2479248046875e-05, -0.0005890681059099734, -2.610649426060263e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -6.83142305801514, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -0.0024356842041015625, -0.0005474090576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -6.807493686676025, 0.0, -0.0003566741943359375, -0.00020599365234375, 0.0, -0.0010799169540405273, -2.1457672119140625e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.835969653289496, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "EPIC", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -6.795770168304443, -9.5367431640625e-06, -0.000659942626953125, -5.7220458984375e-06, -7.62939453125e-06, -0.00013935565948486328, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -3.814697265625e-06, 0.0, -3.62396240234375e-05, -5.7220458984375e-05, -0.00016796588897705078, -1.5735622582724318e-05, -0.003232717514038086, -3.576278118089249e-07, -0.00244140625, -0.0006313323974609375, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.00043523311614990234, 0.0, -0.013188004493713379, 0.0, -0.000362396240234375, -0.000133514404296875, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -0.0031795501708984375, 0.0, -9.167194366455078e-05, -5.006789251638111e-06, -0.0022149085998535156, 0.0, -7.62939453125e-06, -0.000244140625, -0.000133514404296875, -0.000637670629657805, -9.667628910392523e-05, 0.0, -7.05718994140625e-05, -0.0005876374198123813, -2.6225699912174605e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -6.973642380681412, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -6.143710136413574, -0.0001316070556640625, -5.91278076171875e-05, 0.0, -0.000118255615234375, -4.00543212890625e-05, -4.9591064453125e-05, -2.765651879599318e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0004702804144471884, -2.0980833141948096e-05, -3.0517578125e-05, -0.0011424350086599588, -2.2053585780668072e-05, -0.32003116607666016, -3.814697265625e-06, -3.814697265625e-06, -0.0001926422119140625, -2.47955322265625e-05, -0.00020599365234375, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -8.165836334228516e-05, -1.919269561767578e-05, -8.0108642578125e-05, 0.0, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -0.0009322166442871094, -5.7220458984375e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.030813217163085938, -6.29425048828125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00025177001953125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.01859259605407715, -1.9073486328125e-06, -0.000701904296875, 0.0, -0.01902306079864502, 0.0, -0.0003452301025390625, -0.002529144287109375, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00058746337890625, 0.0, -2.09808349609375e-05, -1.0013580322265625e-05, -0.0010396242141723633, 0.0, -1.33514404296875e-05, -0.000896453857421875, -0.000118255615234375, -0.0008424974512308836, -0.00011837079364340752, 0.0, -6.103515625e-05, -0.0007694327505305409, -2.300717096659355e-05, -0.010515213012695312, -2.6702880859375e-05, -3.4332275390625e-05, -0.0010967254638671875, -1.33514404296875e-05, 0.0, -0.0002498626708984375, -4.00543212890625e-05, -0.0002288818359375, 0.0, -0.2724665403366089, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.11722326278686523, 0.0, -0.00022125244140625, -0.0034656524658203125, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00055694580078125, 0.0, -2.47955322265625e-05, -8.463859558105469e-06, -0.001096963882446289, 0.0, -1.33514404296875e-05, -0.0008144378662109375, -0.00011444091796875, -0.0007873116992413998, -0.00012802582932636142, 0.0, -6.103515625e-05, -0.000777779845520854, -1.585470999998506e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -7.064716067073888, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -7.025248050689697, 0.0, -0.0003528594970703125, -5.7220458984375e-06, -4.38690185546875e-05, -5.543231964111328e-05, -2.09808349609375e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -6.29425048828125e-05, -0.00016415119171142578, -1.39474832394626e-05, -0.0028766393661499023, -3.576278118089249e-07, -0.0024890899658203125, -0.0005855560302734375, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.00042951107025146484, 0.0, -0.013165950775146484, 0.0, -0.0003643035888671875, -0.0001316070556640625, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -0.003154754638671875, 0.0, -9.357929229736328e-05, -5.125998541188892e-06, -0.0022101402282714844, 0.0, -7.62939453125e-06, -0.0002460479736328125, -0.0001316070556640625, -0.0006369557231664658, -9.727229189593345e-05, 0.0, -7.2479248046875e-05, -0.0005896632792428136, -2.6464111215318553e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -7.1392805401407955, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -0.0024356842041015625, -0.0005474090576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -0.013181090354919434, 0.0, -0.000362396240234375, -0.000133514404296875, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -0.0032100677490234375, 0.0, -9.357929229736328e-05, -5.006789251638111e-06, -7.088756084442139, 0.0, -6.103515625e-05, -0.008940696716308594, -4.9591064453125e-05, -0.001416518702171743, -4.184224235359579e-05, 0.0, -3.24249267578125e-05, -0.0006370688788592815, -2.3483997210860252e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.draw(8), self)\n"}, {"score": -7.203155268151683, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -0.0024356842041015625, -0.0005474090576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -0.013181090354919434, 0.0, -0.000362396240234375, -0.000133514404296875, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -5.75125789642334, 0.0, -9.72747802734375e-05, 0.0, -0.010578632354736328, -4.52994936495088e-06, -0.12635987997055054, -0.00010358751023886725, -0.7572610378265381, 0.0, -0.1475505828857422, -0.34452152252197266, -0.0007266998291015625, -1.9073486328125e-06, -1.9073486328125e-06, -0.0036144256591796875, 0.0, -0.00012218952178955078, -0.00013744831085205078, -0.0007078647613525391, 0.0, -7.62939453125e-06, -0.00052642822265625, -0.000240325927734375, -0.000723993987776339, -7.891528366599232e-05, 0.0, -0.00017547607421875, -0.0010269936174154282, -1.680836794548668e-05, -3.814697265625e-06, 0.0, -0.02129209041595459, -2.2649765014648438e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.hero.heal(player.effective_heal_power(8),\n            self), self)\n"}, {"score": -7.301710381013187, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 163, 37, 117, "8", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "taunt", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 8, "_type": "Num"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -0.0024356842041015625, -0.0005474090576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -6.387838363647461, 0.0, -0.0010471343994140625, -0.38207149505615234, -0.00012969970703125, -0.5083215236663818, -1.7523765563964844e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.taunt(8)\n"}, {"score": -7.353233272522381, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "draw", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "draw", "value": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -0.0024356842041015625, -0.0005474090576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -0.013181090354919434, 0.0, -0.000362396240234375, -0.000133514404296875, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -5.75125789642334, 0.0, -9.72747802734375e-05, 0.0, -0.010578632354736328, -4.52994936495088e-06, -0.12635987997055054, -0.00010358751023886725, -1.4217069149017334, 0.0, -0.0002994537353515625, -0.0031871795654296875, -0.000270843505859375, -0.0030510313808918, -2.4795503122732043e-05, 0.0, -1.52587890625e-05, -0.00024914497043937445, -1.3708998267247807e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.hero.draw(8), self)\n"}, {"score": -16.624101638793945, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -16.62409210205078], "inferred_code": "break\n"}, {"score": -23.273839950561523, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-3.814697265625e-06, -3.814697265625e-06, -23.273832321166992], "inferred_code": ""}], "index": 47}
{"beams": [{"score": -0.564961205289805, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -0.06859397888183594, 0.0, -0.005105018615722656, -1.9073486328125e-06, -0.02982497215270996, -4.076874756719917e-05, -0.0032616346143186092, 0.0, -0.007615896873176098, -4.0531076592742465e-06, -0.03936564177274704, -3.993511199951172e-05, -4.57763671875e-05, -2.288818359375e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.00012969970703125, -0.0022859573364257812, 0.0, -0.000762939453125, -2.47955322265625e-05, -0.002735137939453125, 0.0, -0.012105941772460938, 0.0, -0.03187847137451172, -0.000102996826171875, -0.0025396347045898438, 0.0, -2.09808349609375e-05, -0.013471603393554688, -0.0021419525146484375, -0.0025305747985839844, 0.0, -0.000701904296875, -4.00543212890625e-05, -0.0001811981201171875, -0.006903648376464844, -2.47955322265625e-05, -0.0001125335693359375, -6.866455078125e-05, -0.009874343872070312, -3.814697265625e-06, -0.0027151107788085938, -1.9073486328125e-06, -0.0014324188232421875, 0.0, -0.03320598602294922, -5.7220458984375e-05, -0.006290435791015625, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.002231597900390625, -1.52587890625e-05, -0.0011577606201171875, -9.5367431640625e-06, -0.0014069080352783203, -2.264974000354414e-06, -4.982948303222656e-05, 0.0, -0.0008238535956479609, 0.0, -0.0001659393310546875, -0.001651763916015625, -1.9073486328125e-06, -0.009235382080078125, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -3.4270466623497526, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -2.719676971435547, -1.9073486328125e-06, -0.0017147064208984375, 0.0, -0.0008717775344848633, -5.7220458984375e-06, -0.021120429039001465, -7.199982064776123e-05, -0.007338257040828466, 0.0, -0.09091608226299286, -3.576272320060525e-06, -0.07691206783056259, -6.198883056640625e-06, -0.0957474634051323, -3.659724825411104e-05, -3.62396240234375e-05, -1.9073486328125e-05, -0.000102996826171875, -7.62939453125e-06, -0.0001010894775390625, -0.0031108856201171875, 0.0, -0.0007791519165039062, -2.288818359375e-05, -0.00373077392578125, 0.0, -0.012586593627929688, 0.0, -0.029936790466308594, -0.0001049041748046875, -0.0024023056030273438, 0.0, -1.9073486328125e-05, -0.015076637268066406, -0.0020875930786132812, -0.0026175975799560547, 0.0, -0.0007228851318359375, -4.1961669921875e-05, -0.0001888275146484375, -0.006768226623535156, -2.47955322265625e-05, -0.00011444091796875, -6.4849853515625e-05, -0.009929656982421875, -3.814697265625e-06, -0.0026721954345703125, -1.9073486328125e-06, -0.001392364501953125, 0.0, -0.03313732147216797, -5.91278076171875e-05, -0.0062408447265625, -3.814697265625e-06, -0.0001583099365234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0021457672119140625, -1.52587890625e-05, -0.0011806488037109375, -7.62939453125e-06, -0.0014089345932006836, -2.264974000354414e-06, -4.982948303222656e-05, 0.0, -0.0008264762000180781, 0.0, -0.000164031982421875, -0.0016469955444335938, -1.9073486328125e-06, -0.009226799011230469, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -4.466542380844189, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "0/1", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "0/1", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -0.06859397888183594, 0.0, -0.005105018615722656, -1.9073486328125e-06, -0.02982497215270996, -4.076874756719917e-05, -0.0032616346143186092, 0.0, -0.007615896873176098, -4.0531076592742465e-06, -3.9443037509918213, -1.1920858014491387e-05, -0.0002574920654296875, -6.29425048828125e-05, -4.1961669921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -0.0021467208862304688, 0.0, -0.0009279251098632812, -3.24249267578125e-05, -0.001667022705078125, 0.0, -0.009347915649414062, 0.0, -0.03570365905761719, -7.2479248046875e-05, -0.0025281906127929688, 0.0, -2.288818359375e-05, -0.010213851928710938, -0.002376556396484375, -0.0022215843200683594, 0.0, -0.0007457733154296875, -3.814697265625e-05, -0.0001735687255859375, -0.006817817687988281, -2.47955322265625e-05, -0.0001125335693359375, -7.62939453125e-05, -0.009879112243652344, -3.814697265625e-06, -0.0027217864990234375, -1.9073486328125e-06, -0.0014677047729492188, 0.0, -0.033112525939941406, -5.7220458984375e-05, -0.0062923431396484375, -3.814697265625e-06, -0.0001659393310546875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0022525787353515625, -1.52587890625e-05, -0.0011444091796875, -9.5367431640625e-06, -0.001402139663696289, -2.264974000354414e-06, -4.792213439941406e-05, 0.0, -0.0008223038748838007, 0.0, -0.0001659393310546875, -0.0016508102416992188, -1.9073486328125e-06, -0.009241104125976562, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.0/1()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -4.655529511299832, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.8743181228637695, 0.0, -0.0005025863647460938, -0.0674896240234375, -0.0001850128173828125, 0.0, -0.03285503387451172, -1.9073486328125e-06, -0.002979278564453125, -1.9073486328125e-06, -0.03548622131347656, 0.0, -0.22507476806640625, 0.0, -0.017606735229492188, -1.9073486328125e-06, -0.03769826889038086, -3.182837463100441e-05, -0.003991001285612583, 0.0, -0.003400863381102681, -5.245195097813848e-06, -0.05771182104945183, -2.3603439331054688e-05, -3.62396240234375e-05, -2.288818359375e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.0001373291015625, -0.0023164749145507812, 0.0, -0.00074005126953125, -3.24249267578125e-05, -0.002429962158203125, 0.0, -0.01174163818359375, 0.0, -0.03197956085205078, -0.0001239776611328125, -0.0023164749145507812, 0.0, -2.09808349609375e-05, -0.020826339721679688, -0.0022363662719726562, -0.002745509147644043, 0.0, -0.0007228851318359375, -4.00543212890625e-05, -0.0001888275146484375, -0.007266998291015625, -2.6702880859375e-05, -0.00011444091796875, -6.4849853515625e-05, -0.009881019592285156, -3.814697265625e-06, -0.002716064453125, -1.9073486328125e-06, -0.00142669677734375, 0.0, -0.03316688537597656, -5.91278076171875e-05, -0.0063018798828125, -3.814697265625e-06, -0.0001659393310546875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.002288818359375, -1.52587890625e-05, -0.00113677978515625, -9.5367431640625e-06, -0.0014051198959350586, -2.264974000354414e-06, -4.982948303222656e-05, 0.0, -0.0008249264792539179, 0.0, -0.0001659393310546875, -0.0016527175903320312, -1.9073486328125e-06, -0.009226799011230469, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minion = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.033172498621056, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "justice", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "justice", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -0.06859397888183594, 0.0, -0.005105018615722656, -1.9073486328125e-06, -0.02982497215270996, -4.076874756719917e-05, -0.0032616346143186092, 0.0, -0.007615896873176098, -4.0531076592742465e-06, -0.03936564177274704, -3.993511199951172e-05, -4.57763671875e-05, -2.288818359375e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.00012969970703125, -0.0022859573364257812, 0.0, -0.000762939453125, -2.47955322265625e-05, -0.002735137939453125, 0.0, -0.012105941772460938, 0.0, -0.03187847137451172, -0.000102996826171875, -0.0025396347045898438, 0.0, -2.09808349609375e-05, -0.013471603393554688, -0.0021419525146484375, -0.0025305747985839844, 0.0, -0.000701904296875, -4.00543212890625e-05, -0.0001811981201171875, -0.006903648376464844, -2.47955322265625e-05, -0.0001125335693359375, -6.866455078125e-05, -0.009874343872070312, -3.814697265625e-06, -0.0027151107788085938, -1.9073486328125e-06, -0.0014324188232421875, 0.0, -4.491674423217773, 0.0, -0.009134292602539062, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.007862091064453125, -2.09808349609375e-05, -0.0019130706787109375, -1.52587890625e-05, -0.002970576286315918, -4.0531076592742465e-06, -4.4345855712890625e-05, 0.0, -0.0007526857662014663, 0.0, -0.0001544952392578125, -0.0019283294677734375, -1.9073486328125e-06, -0.008189201354980469, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = justice\n        self.target.<UNK>(minion)\n"}, {"score": -5.105878728424145, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "<UNK>", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "<UNK>", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -0.06859397888183594, 0.0, -0.005105018615722656, -1.9073486328125e-06, -0.02982497215270996, -4.076874756719917e-05, -0.0032616346143186092, 0.0, -0.007615896873176098, -4.0531076592742465e-06, -4.583640098571777, -1.1920858014491387e-05, -0.0002574920654296875, -6.29425048828125e-05, -4.1961669921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -0.0021467208862304688, 0.0, -0.0009279251098632812, -3.24249267578125e-05, -0.001667022705078125, 0.0, -0.009347915649414062, 0.0, -0.03570365905761719, -7.2479248046875e-05, -0.0025281906127929688, 0.0, -2.288818359375e-05, -0.010213851928710938, -0.002376556396484375, -0.0022215843200683594, 0.0, -0.0007457733154296875, -3.814697265625e-05, -0.0001735687255859375, -0.006817817687988281, -2.47955322265625e-05, -0.0001125335693359375, -7.62939453125e-05, -0.009879112243652344, -3.814697265625e-06, -0.0027217864990234375, -1.9073486328125e-06, -0.0014677047729492188, 0.0, -0.033112525939941406, -5.7220458984375e-05, -0.0062923431396484375, -3.814697265625e-06, -0.0001659393310546875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0022525787353515625, -1.52587890625e-05, -0.0011444091796875, -9.5367431640625e-06, -0.001402139663696289, -2.264974000354414e-06, -4.792213439941406e-05, 0.0, -0.0008223038748838007, 0.0, -0.0001659393310546875, -0.0016508102416992188, -1.9073486328125e-06, -0.009241104125976562, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.<UNK>()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.125316542940695, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -4.236316680908203, 0.0, -0.01865673065185547, -1.9073486328125e-06, -0.21947884559631348, -8.940656698541716e-06, -0.026667719706892967, 0.0, -0.22088485956192017, -5.960446742392378e-06, -6.4849853515625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0016080141067504883, 0.0, -0.0006427764892578125, -3.4332275390625e-05, -0.00089263916015625, 0.0, -0.014094352722167969, 0.0, -0.037459373474121094, -0.0001049041748046875, -0.0023622512817382812, 0.0, -2.86102294921875e-05, -0.014805793762207031, -0.0027103424072265625, -0.00240325927734375, 0.0, -0.000728607177734375, -3.62396240234375e-05, -0.00017547607421875, -0.007069587707519531, -2.6702880859375e-05, -0.00011444091796875, -7.62939453125e-05, -0.009952545166015625, -3.814697265625e-06, -0.0027608871459960938, -1.9073486328125e-06, -0.0014944076538085938, 0.0, -0.033115386962890625, -5.7220458984375e-05, -0.0063571929931640625, -3.814697265625e-06, -0.0001697540283203125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0023708343505859375, -1.52587890625e-05, -0.0011005401611328125, -9.5367431640625e-06, -0.0013964176177978516, -2.264974000354414e-06, -4.792213439941406e-05, 0.0, -0.0008203965262509882, 0.0, -0.0001659393310546875, -0.0016536712646484375, -1.9073486328125e-06, -0.009242057800292969, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.1822093273012655, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "target", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "target", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -0.06859397888183594, 0.0, -0.005105018615722656, -1.9073486328125e-06, -4.462113857269287, -2.50339189733495e-06, -0.14410139620304108, 0.0, -0.0663137286901474, -2.9802276912960224e-06, -0.019122697412967682, -9.417532055522315e-06, -3.24249267578125e-05, -2.47955322265625e-05, -9.1552734375e-05, -1.9073486328125e-06, -8.58306884765625e-05, -0.0027799606323242188, 0.0, -0.0007829666137695312, -3.0517578125e-05, -0.00246429443359375, 0.0, -0.012895584106445312, 0.0, -0.03264331817626953, -0.0001087188720703125, -0.0023431777954101562, 0.0, -2.09808349609375e-05, -0.017486572265625, -0.002330780029296875, -0.0026264190673828125, 0.0, -0.0007457733154296875, -4.1961669921875e-05, -0.0001888275146484375, -0.006683349609375, -2.6702880859375e-05, -0.00011444091796875, -6.67572021484375e-05, -0.010021209716796875, -3.814697265625e-06, -0.0026988983154296875, -1.9073486328125e-06, -0.0014276504516601562, 0.0, -0.033125877380371094, -5.7220458984375e-05, -0.0062961578369140625, -3.814697265625e-06, -0.0001621246337890625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.002262115478515625, -1.52587890625e-05, -0.0011348724365234375, -9.5367431640625e-06, -0.0014013051986694336, -2.264974000354414e-06, -4.982948303222656e-05, 0.0, -0.0008223038748838007, 0.0, -0.0001659393310546875, -0.0016498565673828125, -1.9073486328125e-06, -0.0092315673828125, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.target.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.264680585289838, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "query", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "query", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -4.681766510009766, 0.0, -0.0038051605224609375, -0.07772636413574219, -7.2479248046875e-05, 0.0, -0.019972801208496094, -1.9073486328125e-05, -0.0019054412841796875, -9.5367431640625e-06, -0.02527618408203125, -5.7220458984375e-06, -0.06789970397949219, 0.0, -0.012635231018066406, -7.62939453125e-06, -0.031874656677246094, -2.2411095415009186e-05, -0.002568342024460435, 0.0, -0.005590221844613552, -2.264974000354414e-06, -0.044349536299705505, -9.536742436466739e-05, -3.4332275390625e-05, -2.47955322265625e-05, -9.1552734375e-05, -1.1444091796875e-05, -0.0001430511474609375, -0.002079010009765625, 0.0, -0.0007600784301757812, -2.6702880859375e-05, -0.0027923583984375, 0.0, -0.01198577880859375, 0.0, -0.03168010711669922, -0.0001087188720703125, -0.0025196075439453125, 0.0, -2.09808349609375e-05, -0.01416778564453125, -0.0022220611572265625, -0.0025920867919921875, 0.0, -0.000698089599609375, -3.814697265625e-05, -0.0001773834228515625, -0.006972312927246094, -2.47955322265625e-05, -0.00011444091796875, -6.866455078125e-05, -0.009706497192382812, -3.814697265625e-06, -0.002712249755859375, -1.9073486328125e-06, -0.0014286041259765625, 0.0, -0.03316211700439453, -5.7220458984375e-05, -0.0062808990478515625, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.002254486083984375, -1.52587890625e-05, -0.0011539459228515625, -9.5367431640625e-06, -0.0014078617095947266, -2.264974000354414e-06, -4.982948303222656e-05, 0.0, -0.0008228999213315547, 0.0, -0.0001659393310546875, -0.0016527175903320312, -1.9073486328125e-06, -0.009233474731445312, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        query = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.577391684578103, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "left_minion", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "left_minion", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.114004135131836, -5.960462772236497e-07, -0.02979755401611328, -0.0032014846801757812, -3.62396240234375e-05, 0.0, -0.0027933120727539062, -9.5367431640625e-06, -0.0011081695556640625, -1.9073486328125e-06, -0.03144264221191406, -1.9073486328125e-06, -0.028293609619140625, 0.0, -0.00701141357421875, -3.814697265625e-06, -0.027636051177978516, -5.066266385256313e-05, -0.00433953246101737, 0.0, -0.009182066656649113, -4.768360213347478e-06, -0.025334633886814117, -3.0636783776571974e-05, -3.4332275390625e-05, -2.09808349609375e-05, -0.000102996826171875, -3.814697265625e-06, -0.0001068115234375, -0.0028543472290039062, 0.0, -0.0007925033569335938, -2.86102294921875e-05, -0.002079010009765625, 0.0, -0.01189422607421875, 0.0, -0.03202533721923828, -0.0001087188720703125, -0.0023479461669921875, 0.0, -2.09808349609375e-05, -0.017747879028320312, -0.0022192001342773438, -0.002613663673400879, 0.0, -0.00072479248046875, -4.00543212890625e-05, -0.000186920166015625, -0.0069427490234375, -2.47955322265625e-05, -0.0001125335693359375, -6.67572021484375e-05, -0.009957313537597656, -3.814697265625e-06, -0.0027065277099609375, -1.9073486328125e-06, -0.0014238357543945312, 0.0, -0.03318500518798828, -5.91278076171875e-05, -0.0063018798828125, -3.814697265625e-06, -0.0001621246337890625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0022678375244140625, -1.52587890625e-05, -0.0011444091796875, -9.5367431640625e-06, -0.0014089345932006836, -2.264974000354414e-06, -4.982948303222656e-05, 0.0, -0.0008239728049375117, 0.0, -0.0001659393310546875, -0.0016527175903320312, -1.9073486328125e-06, -0.009228706359863281, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        left_minion = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.884117615406687, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -0.06859397888183594, 0.0, -0.005105018615722656, -1.9073486328125e-06, -0.02982497215270996, -4.076874756719917e-05, -0.0032616346143186092, 0.0, -0.007615896873176098, -4.0531076592742465e-06, -0.03936564177274704, -3.993511199951172e-05, -4.57763671875e-05, -2.288818359375e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.00012969970703125, -0.0022859573364257812, 0.0, -0.000762939453125, -2.47955322265625e-05, -0.002735137939453125, 0.0, -0.012105941772460938, 0.0, -0.03187847137451172, -0.000102996826171875, -0.0025396347045898438, 0.0, -2.09808349609375e-05, -0.013471603393554688, -0.0021419525146484375, -0.0025305747985839844, 0.0, -0.000701904296875, -4.00543212890625e-05, -0.0001811981201171875, -0.006903648376464844, -2.47955322265625e-05, -0.0001125335693359375, -6.866455078125e-05, -0.009874343872070312, -3.814697265625e-06, -0.0027151107788085938, -1.9073486328125e-06, -0.0014324188232421875, 0.0, -0.03320598602294922, -5.7220458984375e-05, -5.122214317321777, -1.33514404296875e-05, -3.814697265625e-06, -0.030849456787109375, -1.71661376953125e-05, -0.0008172988891601562, 0.0, -0.15198087692260742, 0.0, -0.002938389778137207, 0.0, -0.0010480880737304688, 0.0, -0.03235816955566406, -0.0001316070556640625], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        minion.card = frog\n"}, {"score": -6.283609870235772, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -0.06859397888183594, 0.0, -0.005105018615722656, -1.9073486328125e-06, -0.02982497215270996, -4.076874756719917e-05, -0.0032616346143186092, 0.0, -0.007615896873176098, -4.0531076592742465e-06, -0.03936564177274704, -3.993511199951172e-05, -4.57763671875e-05, -2.288818359375e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.00012969970703125, -0.0022859573364257812, 0.0, -0.000762939453125, -2.47955322265625e-05, -0.002735137939453125, 0.0, -0.012105941772460938, 0.0, -0.03187847137451172, -0.000102996826171875, -0.0025396347045898438, 0.0, -2.09808349609375e-05, -4.612836837768555, -3.814697265625e-05, -0.16155529022216797, 0.0, -0.06429195404052734, 0.0, -9.5367431640625e-05, -0.0012187957763671875, -1.9073486328125e-06, 0.0, -0.12102794647216797, -5.7220458984375e-06, -0.00043487548828125, -1.1444091796875e-05, -0.005198478698730469, -1.1920922133867862e-06, -4.029273986816406e-05, -1.1920928244535389e-07, -0.0011519172694534063, 0.0, -0.0002307891845703125, -0.0028696060180664062, -1.9073486328125e-06, -0.007735252380371094, -1.1920928244535389e-07, -0.644474983215332, -1.9073486328125e-06, -1.71661376953125e-05, -0.0005321502685546875, -1.9073486328125e-06, 0.0, -0.14897823333740234, -5.7220458984375e-06, -0.000347137451171875, -9.5367431640625e-06, -0.028889894485473633, -5.960462772236497e-07, -4.0411949157714844e-05, -1.1920928244535389e-07, -0.0012779167154803872, 0.0, -0.0003204345703125, -0.0034627914428710938, -1.9073486328125e-06, -0.008221626281738281, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(minion)\n        self.target.<UNK>(minion)\n        self.target.<UNK>(minion)\n"}, {"score": -6.3279883865215965, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 181, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Hex", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -4.838915824890137, -0.0027942657470703125, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.0003091059916187078, -3.814697265625e-06, -0.000782012939453125, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0003066062927246094, 0.0, -0.009676933288574219, -2.6702880859375e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -0.10271453857421875, -0.0001125335693359375, -0.0007038116455078125, -0.001495361328125, -1.1444091796875e-05, 0.0, -0.00290679931640625, -3.814697265625e-06, -0.0007877349853515625, -1.9073486328125e-06, -0.014573097229003906, -1.9073486328125e-06, -0.0767974853515625, 0.0, -0.004372596740722656, -1.9073486328125e-06, -0.029122114181518555, -4.088794958079234e-05, -0.004297647625207901, 0.0, -0.00952330231666565, -4.291525328881107e-06, -0.039680566638708115, -3.790855407714844e-05, -0.001636505126953125, -0.000301361083984375, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0008192062377929688, 0.0, -0.0019588470458984375, -4.00543212890625e-05, -0.001110076904296875, 0.0, -0.021427154541015625, 0.0, -0.030839920043945312, -9.5367431640625e-05, -0.00196075439453125, 0.0, -1.71661376953125e-05, -0.019130706787109375, -0.0022430419921875, -0.002391815185546875, 0.0, -0.06154346466064453, -0.000278472900390625, -7.62939453125e-05, -0.2207202911376953, -1.9073486328125e-06, -0.0001373291015625, -6.67572021484375e-05, -0.014344215393066406, -1.9073486328125e-06, -0.0021419525146484375, -1.9073486328125e-06, -0.0011081695556640625, 0.0, -0.03569316864013672, -5.14984130859375e-05, -0.001728057861328125, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.06540107727050781, -2.288818359375e-05, -0.001033782958984375, -1.1444091796875e-05, -0.0014319419860839844, -7.152555099310121e-07, -3.445148468017578e-05, 0.0, -0.0010815809946507215, 0.0, -0.000202178955078125, -0.001705169677734375, -1.9073486328125e-06, -0.007208824157714844, -1.1920928244535389e-07, -0.13267135620117188, -1.71661376953125e-05, -2.6702880859375e-05, -0.10693836212158203, -1.9073486328125e-06, -0.0006933212280273438, 0.0, -0.28793323040008545, -1.9073486328125e-06, -0.0029050111770629883, 0.0, -0.0015096664428710938, 0.0, -0.0436100959777832, -9.34600830078125e-05], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n        minion.card = frog\n"}, {"score": -16.16624641418457, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -16.166170120239258], "inferred_code": "break\n"}, {"score": -21.073562622070312, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -21.073495864868164], "inferred_code": ""}], "index": 48}
{"beams": [{"score": -0.053218975776857746, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -0.006590843200683594, -0.0002613067626953125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004410147666931152, 0.0, -0.008988014422357082, 0.0, -0.000194549560546875, -0.000118255615234375, -0.000102996826171875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, 0.0, -4.971027374267578e-05, -5.483625955093885e-06, -0.0028374195098876953, 0.0, -1.9073486328125e-05, -0.000518798828125, -0.000179290771484375, -0.008036650717258453, -2.5987455956055783e-05, 0.0, -1.33514404296875e-05, -0.00010096922778757289, -8.4638240878121e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -4.9560574082274655, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -0.006590843200683594, -0.0002613067626953125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004410147666931152, 0.0, -0.008988014422357082, 0.0, -0.000194549560546875, -0.000118255615234375, -0.000102996826171875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, 0.0, -4.971027374267578e-05, -5.483625955093885e-06, -0.0028374195098876953, 0.0, -1.9073486328125e-05, -0.000518798828125, -0.000179290771484375, -4.910821914672852, -2.1457672119140625e-06, -1.52587890625e-05, -2.6702880859375e-05, -0.00015246859402395785, -5.364412118069595e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n"}, {"score": -5.128765731225016, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -5.087556838989258, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.00040435791015625, 0.0, -0.0022259950637817383, 0.0, -0.0014705657958984375, -1.52587890625e-05, -5.7220458984375e-06, -6.67572021484375e-05, -5.53131103515625e-05, -4.1961669921875e-05, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.76837158203125e-05, -9.5367431640625e-05, -0.0001888275146484375, -2.1338462829589844e-05, -0.0015889406204223633, -4.172325134277344e-06, -0.006594657897949219, -0.000263214111328125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.004366278648376465, 0.0, -0.008994570933282375, 0.0, -0.0001926422119140625, -0.000118255615234375, -0.000102996826171875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, 0.0, -4.971027374267578e-05, -5.483625955093885e-06, -0.002836465835571289, 0.0, -1.9073486328125e-05, -0.000518798828125, -0.000179290771484375, -0.008037963882088661, -2.5987455956055783e-05, 0.0, -1.33514404296875e-05, -0.00010108842980116606, -8.4638240878121e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -5.632578843082214, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -0.006590843200683594, -0.0002613067626953125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004410147666931152, 0.0, -5.546106815338135, 0.0, -5.7220458984375e-06, -0.036228179931640625, -3.0517578125e-05, -3.814697265625e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0002900362014770508, -5.125986263010418e-06, -0.009511590003967285, 0.0, -2.09808349609375e-05, -0.0004558563232421875, -0.000164031982421875, -0.008127695880830288, -2.408014188404195e-05, 0.0, -9.5367431640625e-06, -8.72607488417998e-05, -8.344629350176547e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(6), self)\n"}, {"score": -5.650137927496857, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -5.61015510559082, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.0014324188232421875, 0.0, -0.001346588134765625, -9.5367431640625e-06, -5.7220458984375e-06, -7.2479248046875e-05, -7.62939453125e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.76837158203125e-05, -0.0001010894775390625, -0.0001850128173828125, -1.9431114196777344e-05, -0.0015794038772583008, -4.172325134277344e-06, -0.0066051483154296875, -0.000263214111328125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.004350066184997559, 0.0, -0.008972636424005032, 0.0, -0.000194549560546875, -0.000118255615234375, -0.000102996826171875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, 0.0, -4.971027374267578e-05, -5.483625955093885e-06, -0.002840280532836914, 0.0, -1.9073486328125e-05, -0.000518798828125, -0.000179290771484375, -0.008035696111619473, -2.5987455956055783e-05, 0.0, -1.33514404296875e-05, -0.00010096922778757289, -8.4638240878121e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.095973760178012, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "hero", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -0.006590843200683594, -0.0002613067626953125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.955162525177002, -8.344646857949556e-07, -0.09847401827573776, 0.0, -0.0001544952392578125, -0.000431060791015625, -1.52587890625e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0022182464599609375, 0.0, -4.9591064453125e-05, -5.006789251638111e-06, -0.003260493278503418, 0.0, -1.9073486328125e-05, -0.000347137451171875, -0.00014495849609375, -0.008510521613061428, -2.1695992472814396e-05, 0.0, -9.5367431640625e-06, -8.153820817824453e-05, -7.271740287251305e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.hero.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.294796930830032, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -5.897337913513184, -3.814697265625e-05, -7.62939453125e-06, -0.0003757476806640625, -1.9073486328125e-06, 0.0, -0.017080307006835938, 0.0, -0.02257072925567627, -5.960462772236497e-07, -0.26423656940460205, 0.0, -0.0006656646728515625, -0.060126304626464844, -7.2479248046875e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0001068115234375, 0.0, -0.0006848573684692383, -7.748596544843167e-06, -0.0017969608306884766, 0.0, -4.57763671875e-05, -0.000843048095703125, -0.0003337860107421875, -0.008159996010363102, -2.7179594326298684e-05, -1.9073486328125e-06, -3.62396240234375e-05, -6.389517511706799e-05, -8.344629350176547e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n    target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.532901036050575, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -0.006590843200683594, -0.0002613067626953125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004410147666931152, 0.0, -6.500488758087158, 0.0, -0.0005817413330078125, -0.0002346038818359375, 0.0, -0.0001518726348876953, -2.0265579223632812e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.820844558181292, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -6.780426979064941, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -5.14984130859375e-05, 0.0, -0.0015735626220703125, 0.0, -0.0014133453369140625, -9.5367431640625e-06, -7.62939453125e-06, -8.7738037109375e-05, -0.000110626220703125, -4.1961669921875e-05, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0001049041748046875, -0.00018310546875, -2.1338462829589844e-05, -0.0016175508499145508, -4.172325134277344e-06, -0.006604194641113281, -0.0002613067626953125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004508376121520996, 0.0, -0.009005538187921047, 0.0, -0.000194549560546875, -0.000118255615234375, -0.000102996826171875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, 0.0, -4.971027374267578e-05, -5.483625955093885e-06, -0.002839326858520508, 0.0, -1.9073486328125e-05, -0.000518798828125, -0.000179290771484375, -0.008037008345127106, -2.5987455956055783e-05, 0.0, -1.33514404296875e-05, -0.00010096922778757289, -8.4638240878121e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.823470777736915, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -6.133027076721191, -0.0001392364501953125, -7.05718994140625e-05, 0.0, -9.1552734375e-05, -6.103515625e-05, -0.0001277923583984375, -2.0503857740550302e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.002878665691241622, -3.778933023568243e-05, -4.00543212890625e-05, -0.0004923301748931408, -1.1205658665858209e-05, -0.31679534912109375, -1.9073486328125e-06, -9.5367431640625e-06, -0.0007991790771484375, -0.0001888275146484375, -0.0001697540283203125, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.948543184786104e-05, -1.3470649719238281e-05, -8.7738037109375e-05, 0.0, -0.00017547607421875, -3.814697265625e-06, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023636817932128906, -2.0265579223632812e-06, -4.1961669921875e-05, -1.71661376953125e-05, -0.2065277099609375, -0.0001125335693359375, -7.62939453125e-06, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.0037102699279785156, -1.9073486328125e-06, -0.0020093917846679688, 0.0, -0.007329106330871582, 0.0, -0.0023632049560546875, -0.0011692047119140625, -4.1961669921875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.00042724609375, 0.0, -2.47955322265625e-05, -8.82148651726311e-06, -0.002198934555053711, 0.0, -1.9073486328125e-05, -0.0012607574462890625, -0.000179290771484375, -0.0051140510477125645, -3.5285567719256505e-05, 0.0, -1.52587890625e-05, -0.00010144555562874302, -5.483612312673358e-06, -0.005108833312988281, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003147125244140625, -1.1444091796875e-05, -0.000133514404296875, 0.0, -0.03198742866516113, -1.9073486328125e-06, -0.0006256103515625, 0.0, -0.06030416488647461, 0.0, -0.0030040740966796875, -0.001361846923828125, -6.67572021484375e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.000446319580078125, 0.0, -2.47955322265625e-05, -1.1086463018727954e-05, -0.0022362470626831055, 0.0, -2.288818359375e-05, -0.0012149810791015625, -0.0002040863037109375, -0.005107637494802475, -3.445112452027388e-05, 0.0, -1.71661376953125e-05, -0.00012337916996330023, -6.556489552167477e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.905368057839937, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "draw", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -0.006590843200683594, -0.0002613067626953125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004410147666931152, 0.0, -0.008988014422357082, 0.0, -0.000194549560546875, -0.000118255615234375, -0.000102996826171875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, 0.0, -4.971027374267578e-05, -5.483625955093885e-06, -6.851205825805664, 0.0, -3.4332275390625e-05, -0.0008487701416015625, -0.0001125335693359375, -0.0114741250872612, -1.41858699862496e-05, 0.0, -9.5367431640625e-06, -0.00018083715985994786, -8.940672159951646e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.draw(6), self)\n"}, {"score": -6.9260132574718085, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -6.884971618652344, 0.0, -0.00017547607421875, 0.0, -1.1444091796875e-05, 0.0, -0.0005779266357421875, 0.0, -0.001827239990234375, 0.0, -0.0012798309326171875, -1.1444091796875e-05, -7.62939453125e-06, -8.0108642578125e-05, -7.62939453125e-05, -4.1961669921875e-05, -2.288818359375e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -9.918212890625e-05, -0.0001811981201171875, -2.1338462829589844e-05, -0.0016329288482666016, -4.172325134277344e-06, -0.00659942626953125, -0.000263214111328125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004398703575134277, 0.0, -0.008978358469903469, 0.0, -0.0001926422119140625, -0.000118255615234375, -0.000102996826171875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, 0.0, -4.971027374267578e-05, -5.483625955093885e-06, -0.0028336048126220703, 0.0, -1.9073486328125e-05, -0.000514984130859375, -0.0001811981201171875, -0.008030212484300137, -2.586825030448381e-05, 0.0, -1.33514404296875e-05, -9.906187915476039e-05, -8.4638240878121e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -7.025359623099561, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -6.969204902648926, 0.0, -0.0058746337890625, -0.002384185791015625, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.007215738296508789, 0.0, -0.009717934764921665, 0.0, -0.0002651214599609375, -8.392333984375e-05, -0.000133514404296875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0006084442138671875, 0.0, -4.208087921142578e-05, -5.364416665543104e-06, -0.0023854970932006836, 0.0, -1.9073486328125e-05, -0.0004730224609375, -0.0002117156982421875, -0.007982028648257256, -2.6345078367739916e-05, 0.0, -1.71661376953125e-05, -0.00010192276386078447, -8.940656698541716e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -15.530366897583008, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -15.53034782409668], "inferred_code": "break\n"}, {"score": -22.294055938720703, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -22.294042587280273], "inferred_code": ""}], "index": 49}
{"beams": [{"score": -1.0071025775476556, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.5123805999755859, -1.9073486328125e-06, -0.00016021728515625, -0.0025310516357421875, -0.0006313323974609375, -0.0018190708942711353, -3.6954811548639555e-06, -3.814697265625e-06, -0.00144195556640625, -2.7418136596679688e-05, -1.9073486328125e-06, -0.11806488037109375, -4.38690185546875e-05, -0.0023956298828125, -3.814697265625e-06, -0.0020346641540527344, -2.2649765014648438e-06, -0.03507041931152344, -0.0001049041748046875, -0.12978076934814453, 0.0, -0.001995086669921875, 0.0, -0.0027033090591430664, 0.0, -0.0008678436279296875, -0.0040912628173828125, 0.0, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.0002155303955078125, -2.47955322265625e-05, 0.0, -0.00031650063465349376, -4.768370445162873e-07, -0.02684807777404785, 0.0, -0.0001659393310546875, -0.0008144378662109375, -3.814697265625e-06, -0.0002002716064453125, -2.09808349609375e-05, -4.00543212890625e-05, 0.0, -5.543231964111328e-05, -2.86102294921875e-05, -0.013885855674743652, -2.3841855067985307e-07, -7.62939453125e-06, -0.000766754150390625, -0.000110626220703125, -0.00048363208770751953, -1.1920928244535389e-07, -1.1444091796875e-05, -2.6702880859375e-05, -0.00015616416931152344, -2.3841855067985307e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -2.110780494360533, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.9275798797607422, 0.0, -8.96453857421875e-05, -0.0062160491943359375, -3.814697265625e-06, -0.000385284423828125, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006695866584777832, -1.1920928244535389e-07, -5.7220458984375e-06, -0.001140594482421875, -0.0001697540283203125, -0.0005860626697540283, -1.1920928244535389e-07, -7.62939453125e-06, -3.4332275390625e-05, -0.00014841556549072266, -1.1920928244535389e-07, -0.052084922790527344, -2.09808349609375e-05, -0.002574920654296875, -7.62939453125e-06, -0.0014008283615112305, -3.576278118089249e-07, -0.5931921005249023, -0.000988006591796875, -0.30773258209228516, 0.0, -0.005806922912597656, 0.0, -0.003868579864501953, 0.0, -0.0011663436889648438, -0.0045375823974609375, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -0.000255584716796875, -1.9073486328125e-05, 0.0, -0.000385045976145193, -5.960462772236497e-07, -0.0290529727935791, 0.0, -0.0001277923583984375, -0.0014781951904296875, -3.814697265625e-06, -0.0002040863037109375, -2.47955322265625e-05, -3.814697265625e-05, 0.0, -5.352497100830078e-05, -2.6702880859375e-05, -0.014322519302368164, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000728607177734375, -0.0001220703125, -0.00044508278369903564, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00015795230865478516, -2.3841855067985307e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -2.6481732715391217, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.9275798797607422, 0.0, -8.96453857421875e-05, -0.0062160491943359375, -3.814697265625e-06, -0.000385284423828125, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006695866584777832, -1.1920928244535389e-07, -5.7220458984375e-06, -0.001140594482421875, -0.0001697540283203125, -0.0005860626697540283, -1.1920928244535389e-07, -7.62939453125e-06, -3.4332275390625e-05, -0.00014841556549072266, -1.1920928244535389e-07, -0.052084922790527344, -2.09808349609375e-05, -0.002574920654296875, -7.62939453125e-06, -0.0014008283615112305, -3.576278118089249e-07, -0.8055620193481445, -0.00018310546875, -0.0003223419189453125, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.0002843141555786133, -5.7220458984375e-06, -0.00031280517578125, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -0.000171661376953125, 0.0, -0.0015888214111328125, -5.7220458984375e-06, -0.12293946743011475, -1.52587890625e-05, -0.0032849309500306845, 0.0, -0.0003795623779296875, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -0.0001392364501953125, -9.5367431640625e-06, 0.0, -0.00038695335388183594, -3.576278118089249e-07, -0.5609149932861328, 0.0, -0.000118255615234375, -0.0018253326416015625, -0.0006084442138671875, -0.0017197104170918465, -4.172316494077677e-06, -3.814697265625e-06, -0.00104522705078125, -2.944469451904297e-05, -1.9073486328125e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -2.960519136730319, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.9275798797607422, 0.0, -8.96453857421875e-05, -0.0062160491943359375, -3.814697265625e-06, -0.000385284423828125, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006695866584777832, -1.1920928244535389e-07, -5.7220458984375e-06, -0.001140594482421875, -0.0001697540283203125, -0.0005860626697540283, -1.1920928244535389e-07, -7.62939453125e-06, -3.4332275390625e-05, -0.00014841556549072266, -1.1920928244535389e-07, -0.052084922790527344, -2.09808349609375e-05, -0.002574920654296875, -7.62939453125e-06, -0.0014008283615112305, -3.576278118089249e-07, -0.8055620193481445, -0.00018310546875, -0.0003223419189453125, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.0002843141555786133, -5.7220458984375e-06, -0.00031280517578125, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -0.000171661376953125, 0.0, -0.0015888214111328125, -5.7220458984375e-06, -0.12293946743011475, -1.52587890625e-05, -0.0032849309500306845, 0.0, -0.0003795623779296875, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -0.0001392364501953125, -9.5367431640625e-06, 0.0, -0.00038695335388183594, -3.576278118089249e-07, -0.8585824966430664, 0.0, -0.0001010894775390625, -0.010644912719726562, -3.814697265625e-06, -0.0004444122314453125, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -2.288818359375e-05, -2.6702880859375e-05, -0.006619572639465332, -1.1920928244535389e-07, -7.62939453125e-06, -0.001194000244140625, -0.0001811981201171875, -0.0005519390106201172, -1.1920928244535389e-07, -7.62939453125e-06, -2.86102294921875e-05, -0.00015985965728759766, -1.1920928244535389e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -3.0697862418245876, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.5123805999755859, -1.9073486328125e-06, -0.00016021728515625, -0.0025310516357421875, -0.0006313323974609375, -0.0018190708942711353, -3.6954811548639555e-06, -3.814697265625e-06, -0.00144195556640625, -2.7418136596679688e-05, -1.9073486328125e-06, -0.11806488037109375, -4.38690185546875e-05, -0.0023956298828125, -3.814697265625e-06, -0.0020346641540527344, -2.2649765014648438e-06, -0.03507041931152344, -0.0001049041748046875, -2.1079320907592773, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -0.015461921691894531, -1.9073486328125e-06, -0.010710358619689941, -4.00543212890625e-05, -0.03246643394231796, 0.0, -0.0001163482666015625, -0.00011444091796875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -6.29425048828125e-05, -1.9073486328125e-05, 0.0, -0.0002286434028064832, -2.3841855067985307e-07, -0.06297218799591064, 0.0, -8.20159912109375e-05, -0.0018749237060546875, -3.814697265625e-06, -0.0002803802490234375, -2.6702880859375e-05, -4.38690185546875e-05, 0.0, -5.352497100830078e-05, -2.6702880859375e-05, -0.012097716331481934, -2.3841855067985307e-07, -7.62939453125e-06, -0.0006847381591796875, -0.0001220703125, -0.0005682110786437988, -1.1920928244535389e-07, -1.1444091796875e-05, -4.00543212890625e-05, -0.00013697147369384766, -2.3841855067985307e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -3.2339636516847676, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.9275798797607422, 0.0, -8.96453857421875e-05, -0.0062160491943359375, -3.814697265625e-06, -0.000385284423828125, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-05, -2.6702880859375e-05, -0.006695866584777832, -1.1920928244535389e-07, -5.7220458984375e-06, -0.001140594482421875, -0.0001697540283203125, -0.0005860626697540283, -1.1920928244535389e-07, -7.62939453125e-06, -3.4332275390625e-05, -0.00014841556549072266, -1.1920928244535389e-07, -0.052084922790527344, -2.09808349609375e-05, -0.002574920654296875, -7.62939453125e-06, -0.0014008283615112305, -3.576278118089249e-07, -0.5931921005249023, -0.000988006591796875, -1.3310346603393555, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -0.006893157958984375, -1.9073486328125e-06, -0.010532379150390625, -2.47955322265625e-05, -0.03884778544306755, 0.0, -0.000194549560546875, -0.0001277923583984375, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.00028526782989501953, -2.3841855067985307e-07, -0.08923828601837158, 0.0, -7.2479248046875e-05, -0.002544403076171875, -3.814697265625e-06, -0.0002689361572265625, -2.6702880859375e-05, -4.1961669921875e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.011816263198852539, -2.3841855067985307e-07, -7.62939453125e-06, -0.000682830810546875, -0.0001316070556640625, -0.0005487203598022461, -1.1920928244535389e-07, -1.1444091796875e-05, -4.00543212890625e-05, -0.00013887882232666016, -2.3841855067985307e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in game.other_player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -3.3504666977713526, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -2.259065866470337, -4.52994936495088e-06, -0.00043606723193079233, 0.0, -0.0009212493896484375, -0.0001506805419921875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0004177093505859375, -2.3841855067985307e-07, -0.7189674377441406, 0.0, -0.0001773834228515625, -0.0026702880859375, -0.00060272216796875, -0.0019246168667450547, -3.933898824470816e-06, -3.814697265625e-06, -0.0013370513916015625, -2.753734588623047e-05, -1.9073486328125e-06, -0.12258434295654297, -4.38690185546875e-05, -0.0023860931396484375, -3.814697265625e-06, -0.0020318031311035156, -2.2649765014648438e-06, -0.034348487854003906, -0.0001049041748046875, -0.12619876861572266, 0.0, -0.0019674301147460938, 0.0, -0.0026977062225341797, 0.0, -0.0008640289306640625, -0.0040836334228515625, 0.0, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.000213623046875, -2.47955322265625e-05, 0.0, -0.00031852719257585704, -4.768370445162873e-07, -0.026856660842895508, 0.0, -0.0001678466796875, -0.0008144378662109375, -3.814697265625e-06, -0.0001983642578125, -2.09808349609375e-05, -4.00543212890625e-05, 0.0, -5.543231964111328e-05, -2.86102294921875e-05, -0.013875365257263184, -2.3841855067985307e-07, -7.62939453125e-06, -0.0007686614990234375, -0.000110626220703125, -0.0004795342683792114, -1.1920928244535389e-07, -1.1444091796875e-05, -2.6702880859375e-05, -0.00015616416931152344, -2.3841855067985307e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -3.5797789013269252, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.5123805999755859, -1.9073486328125e-06, -0.00016021728515625, -0.0025310516357421875, -0.0006313323974609375, -0.0018190708942711353, -3.6954811548639555e-06, -3.814697265625e-06, -0.00144195556640625, -2.7418136596679688e-05, -1.9073486328125e-06, -2.2128000259399414, -4.9591064453125e-05, -0.0032501220703125, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006008148193359375, -1.1444091796875e-05, -0.026960372924804688, -3.814697265625e-06, -0.00103759765625, 0.0, -0.17491114139556885, -1.9073486328125e-06, -0.06390619277954102, -3.0517578125e-05, -0.003100054571405053, -4.410734163684538e-06, -0.4239159822463989, 0.0, -5.340576171875e-05, -0.0013942718505859375, -0.000213623046875, -0.0003312883782200515, -8.344646857949556e-07, -1.9073486328125e-06, -0.001445770263671875, -2.4795530407573096e-05, -1.9073486328125e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.00802205661256, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -2.259065866470337, -4.52994936495088e-06, -0.00043606723193079233, 0.0, -0.0009212493896484375, -0.0001506805419921875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0004177093505859375, -2.3841855067985307e-07, -0.6805868148803711, 0.0, -0.00011444091796875, -0.0063724517822265625, -3.814697265625e-06, -0.0004215240478515625, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0064994096755981445, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0011348724365234375, -0.00018310546875, -0.000517725944519043, -1.1920928244535389e-07, -7.62939453125e-06, -3.24249267578125e-05, -0.00014650821685791016, -2.3841855067985307e-07, -0.05195426940917969, -2.09808349609375e-05, -0.0025634765625, -7.62939453125e-06, -0.0014123916625976562, -3.576278118089249e-07, -0.6017990112304688, -0.0009937286376953125, -0.3069000244140625, 0.0, -0.005887031555175781, 0.0, -0.003859996795654297, 0.0, -0.00115966796875, -0.004550933837890625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -0.000255584716796875, -1.71661376953125e-05, 0.0, -0.0003869533247780055, -5.960462772236497e-07, -0.029097795486450195, 0.0, -0.0001277923583984375, -0.0014858245849609375, -3.814697265625e-06, -0.0002040863037109375, -2.47955322265625e-05, -3.814697265625e-05, 0.0, -5.352497100830078e-05, -2.6702880859375e-05, -0.014322519302368164, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000728607177734375, -0.0001220703125, -0.00044508278369903564, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00015795230865478516, -2.3841855067985307e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -4.329745777735731, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.5123805999755859, -1.9073486328125e-06, -0.00016021728515625, -0.0025310516357421875, -0.0006313323974609375, -0.0018190708942711353, -3.6954811548639555e-06, -3.814697265625e-06, -0.00144195556640625, -2.7418136596679688e-05, -1.9073486328125e-06, -2.2128000259399414, -4.9591064453125e-05, -0.0032501220703125, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006008148193359375, -1.1444091796875e-05, -0.026960372924804688, -3.814697265625e-06, -0.00103759765625, 0.0, -0.17491114139556885, -1.9073486328125e-06, -0.06390619277954102, -3.0517578125e-05, -0.003100054571405053, -4.410734163684538e-06, -1.153122067451477, 0.0, -0.0002899169921875, -0.01325225830078125, -1.9073486328125e-06, -0.000518798828125, -3.814697265625e-06, -0.0002193450927734375, 0.0, -4.9591064453125e-05, -3.24249267578125e-05, -0.006470918655395508, -2.3841855067985307e-07, -3.814697265625e-06, -0.000576019287109375, -0.0001468658447265625, -0.0002484545111656189, -1.1920928244535389e-07, -1.33514404296875e-05, -4.00543212890625e-05, -0.0023605823516845703, -1.1920928244535389e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -4.525603441611459, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -2.259065866470337, -4.52994936495088e-06, -0.00043606723193079233, 0.0, -0.0009212493896484375, -0.0001506805419921875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0004177093505859375, -2.3841855067985307e-07, -0.6805868148803711, 0.0, -0.00011444091796875, -0.0063724517822265625, -3.814697265625e-06, -0.0004215240478515625, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0064994096755981445, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0011348724365234375, -0.00018310546875, -0.000517725944519043, -1.1920928244535389e-07, -7.62939453125e-06, -3.24249267578125e-05, -0.00014650821685791016, -2.3841855067985307e-07, -0.05195426940917969, -2.09808349609375e-05, -0.0025634765625, -7.62939453125e-06, -0.0014123916625976562, -3.576278118089249e-07, -0.7950277328491211, -0.00018310546875, -0.0003223419189453125, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.0002862215042114258, -5.7220458984375e-06, -0.0003147125244140625, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -0.000171661376953125, 0.0, -0.00159454345703125, -5.7220458984375e-06, -0.12308156490325928, -1.52587890625e-05, -0.0032963750418275595, 0.0, -0.0003814697265625, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -0.0001392364501953125, -9.5367431640625e-06, 0.0, -0.0003859996795654297, -3.576278118089249e-07, -0.5593881607055664, 0.0, -0.0001163482666015625, -0.00182342529296875, -0.0006084442138671875, -0.0017199484864249825, -4.172316494077677e-06, -3.814697265625e-06, -0.00104522705078125, -2.944469451904297e-05, -1.9073486328125e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.841527716704476, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"attr": "heal", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -2.259065866470337, -4.52994936495088e-06, -0.00043606723193079233, 0.0, -0.0009212493896484375, -0.0001506805419921875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0004177093505859375, -2.3841855067985307e-07, -0.6805868148803711, 0.0, -0.00011444091796875, -0.0063724517822265625, -3.814697265625e-06, -0.0004215240478515625, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0064994096755981445, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0011348724365234375, -0.00018310546875, -0.000517725944519043, -1.1920928244535389e-07, -7.62939453125e-06, -3.24249267578125e-05, -0.00014650821685791016, -2.3841855067985307e-07, -0.05195426940917969, -2.09808349609375e-05, -0.0025634765625, -7.62939453125e-06, -0.0014123916625976562, -3.576278118089249e-07, -0.7950277328491211, -0.00018310546875, -0.0003223419189453125, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.0002862215042114258, -5.7220458984375e-06, -0.0003147125244140625, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -0.000171661376953125, 0.0, -0.00159454345703125, -5.7220458984375e-06, -0.12308156490325928, -1.52587890625e-05, -0.0032963750418275595, 0.0, -0.0003814697265625, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -0.0001392364501953125, -9.5367431640625e-06, 0.0, -0.0003859996795654297, -3.576278118089249e-07, -0.8606166839599609, 0.0, -0.0001010894775390625, -0.01065826416015625, -3.814697265625e-06, -0.0004444122314453125, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -2.288818359375e-05, -2.6702880859375e-05, -0.006618618965148926, -1.1920928244535389e-07, -7.62939453125e-06, -0.0011959075927734375, -0.0001811981201171875, -0.0005514472723007202, -1.1920928244535389e-07, -7.62939453125e-06, -2.86102294921875e-05, -0.00015985965728759766, -1.1920928244535389e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -5.0084984281269485, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template1", "hole2": "PRIEST"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "HolyNova", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.5123805999755859, -1.9073486328125e-06, -0.00016021728515625, -0.0025310516357421875, -0.0006313323974609375, -0.0018190708942711353, -3.6954811548639555e-06, -3.814697265625e-06, -0.00144195556640625, -2.7418136596679688e-05, -1.9073486328125e-06, -0.11806488037109375, -4.38690185546875e-05, -0.0023956298828125, -3.814697265625e-06, -0.0020346641540527344, -2.2649765014648438e-06, -3.381016731262207, -0.0008563995361328125, -0.0011920928955078125, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.0003865957260131836, -5.7220458984375e-06, -0.0003795623779296875, -1.9073486328125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.00017833709716796875, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0014896392822265625, -7.62939453125e-06, -0.10957765579223633, -1.52587890625e-05, -0.0028444526251405478, 0.0, -0.0001983642578125, -0.000125885009765625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -0.0001354217529296875, -7.62939453125e-06, 0.0, -0.0003758668899536133, -4.768370445162873e-07, -0.7159051895141602, 0.0, -0.0001125335693359375, -0.0017833709716796875, -0.00060272216796875, -0.0017724329372867942, -4.172316494077677e-06, -3.814697265625e-06, -0.0010051727294921875, -2.944469451904297e-05, -1.9073486328125e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -16.21307373046875, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -16.213058471679688], "inferred_code": "break\n"}, {"score": -23.475906372070312, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -23.47589111328125], "inferred_code": ""}], "index": 50}
{"beams": [{"score": -0.08240151392927686, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.058068037033081055, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0002899169921875, -5.7220458984375e-06, -0.0008335113525390625, 0.0, -0.007572174072265625, -7.62939453125e-06, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0001583099365234375, -3.0517578125e-05, -0.0010623931884765625, -1.3470649719238281e-05, -0.006260514259338379, -0.0002824068069458008, -0.001415252685546875, -0.00016021728515625, -7.62939453125e-06, 0.0, -0.0001239776611328125, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00041282176971435547, 0.0, -1.9073486328125e-06, -0.0004215240478515625, -0.0001544952392578125, -0.0019108057022094727, 0.0, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.0945637224864058, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -3.071197271347046, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-05, 0.0, -0.0002765655517578125, -3.814697265625e-06, -0.0012378692626953125, 0.0, -0.0064697265625, -1.1444091796875e-05, -2.86102294921875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0001697540283203125, -3.0517578125e-05, -0.001071929931640625, -1.3470649719238281e-05, -0.005917191505432129, -0.0003052949905395508, -0.001434326171875, -0.000156402587890625, -7.62939453125e-06, 0.0, -0.0001277923583984375, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00041282176971435547, 0.0, -1.9073486328125e-06, -0.00041961669921875, -0.0001544952392578125, -0.0019108057022094727, 0.0, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.622690200681596, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -5.59775972366333, -7.2479248046875e-05, -7.62939453125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0004787445068359375, -3.814697265625e-06, -0.00130462646484375, 0.0, -0.007300376892089844, -9.5367431640625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.0001163482666015625, -4.00543212890625e-05, -0.001064300537109375, -1.3470649719238281e-05, -0.006421566009521484, -0.0003072023391723633, -0.0014171600341796875, -0.000156402587890625, -7.62939453125e-06, 0.0, -0.000125885009765625, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00041282176971435547, 0.0, -1.9073486328125e-06, -0.00041961669921875, -0.0001544952392578125, -0.0019109249114990234, 0.0, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.68910872923842, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -5.665502071380615, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0004253387451171875, -3.814697265625e-06, -0.0012073516845703125, 0.0, -0.006585121154785156, -1.1444091796875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.000133514404296875, -3.0517578125e-05, -0.001007080078125, -1.3470649719238281e-05, -0.006106853485107422, -0.0002995729446411133, -0.0014133453369140625, -0.000156402587890625, -7.62939453125e-06, 0.0, -0.000125885009765625, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00041282176971435547, 0.0, -1.9073486328125e-06, -0.00041961669921875, -0.0001544952392578125, -0.0019088983535766602, 0.0, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.784271836156755, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.058068037033081055, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0002899169921875, -5.7220458984375e-06, -0.0008335113525390625, 0.0, -0.007572174072265625, -7.62939453125e-06, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0001583099365234375, -3.0517578125e-05, -0.0010623931884765625, -1.3470649719238281e-05, -5.697961330413818, 0.0, -0.01062774658203125, -0.001049041748046875, -3.814697265625e-06, 0.0, -0.000579833984375, 0.0, -2.288818359375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0003465414047241211, 0.0, -3.814697265625e-06, -0.0004100799560546875, -0.000152587890625, -0.0019023418426513672, 0.0, 0.0, -7.62939453125e-06, -1.71661376953125e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.917292833087764, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}]}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.058068037033081055, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0002899169921875, -5.7220458984375e-06, -0.0008335113525390625, 0.0, -5.10764217376709, -3.814697265625e-06, -7.2479248046875e-05, -0.00022900104522705078, -3.814697265625e-06, -2.288818359375e-05, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -5.340576171875e-05, 0.0, -0.0004425048828125, -2.09808349609375e-05, -0.00689697265625, -1.1563301086425781e-05, -0.012314319610595703, -0.0003339052200317383, -0.0024328231811523438, -3.24249267578125e-05, -0.006805419921875, 0.0, -0.001983642578125, -0.001190185546875, -2.288818359375e-05, -0.0001163482666015625, -9.5367431640625e-06, -0.0015125274658203125, 0.0, -0.0026292800903320312, -0.0001583099365234375, -0.0001659393310546875, -0.0004787445068359375, -0.0025691986083984375, -0.0022878646850585938, -4.76837158203125e-05, 0.0, -0.10302734375, 0.0, -0.00548553466796875, 0.0, -0.05713844299316406, 0.0, -0.00018310546875, -0.1530752182006836, -9.5367431640625e-06, -0.07410812377929688, -0.0010967254638671875, -5.14984130859375e-05, 0.0, -0.0002231597900390625, -1.9073486328125e-06, -0.00321197509765625, 0.0, -0.0023717880249023438, -3.4332275390625e-05, -0.009031295776367188, -0.00045013427734375, -7.62939453125e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0031690597534179688, 0.0, -0.28556644916534424, -3.814697265625e-06, -0.0029468536376953125, -0.0001544952392578125, -0.0001773834228515625, 0.0, -0.000102996826171875, 0.0, -0.000278472900390625, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.0003706216812133789, 0.0, -3.814697265625e-06, -0.0002803802490234375, -0.0001373291015625, -0.0017049311427399516, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health ==\n            target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.344869851941965, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 1, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.058068037033081055, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0002899169921875, -5.7220458984375e-06, -0.0008335113525390625, 0.0, -0.007572174072265625, -7.62939453125e-06, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0001583099365234375, -3.0517578125e-05, -0.0010623931884765625, -1.3470649719238281e-05, -0.006260514259338379, -0.0002824068069458008, -0.001415252685546875, -0.00016021728515625, -7.62939453125e-06, 0.0, -0.0001239776611328125, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00041282176971435547, 0.0, -1.9073486328125e-06, -0.0004215240478515625, -0.0001544952392578125, -6.264384746551514, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, -3.814697265625e-06, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.365300536031633, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.058068037033081055, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0002899169921875, -5.7220458984375e-06, -0.0008335113525390625, 0.0, -0.007572174072265625, -7.62939453125e-06, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0001583099365234375, -3.0517578125e-05, -0.0010623931884765625, -1.3470649719238281e-05, -6.288589954376221, 0.0, -0.00089263916015625, -0.0013217926025390625, -3.814697265625e-06, 0.0, -0.00017547607421875, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.00034797191619873047, 0.0, -3.814697265625e-06, -0.0004253387451171875, -0.0001697540283203125, -0.0021333694458007812, 0.0, 0.0, -7.62939453125e-06, -2.288818359375e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.776894092435747, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -6.752598762512207, 0.0, -7.62939453125e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0006504058837890625, -5.7220458984375e-06, -0.001270294189453125, 0.0, -0.006798744201660156, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0001926422119140625, -2.86102294921875e-05, -0.001079559326171875, -1.537799835205078e-05, -0.00613558292388916, -0.0002862215042114258, -0.001415252685546875, -0.0001583099365234375, -7.62939453125e-06, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00041282176971435547, 0.0, -1.9073486328125e-06, -0.0004215240478515625, -0.0001544952392578125, -0.0019088983535766602, 0.0, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.957214832181833, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "target", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "target", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.058068037033081055, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0002899169921875, -5.7220458984375e-06, -0.0008335113525390625, 0.0, -0.007572174072265625, -7.62939453125e-06, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0001583099365234375, -3.0517578125e-05, -6.880545616149902, -1.1920928244535389e-07, -0.0021282434463500977, -7.62939453125e-06, -0.0011157989501953125, -0.000152587890625, -5.7220458984375e-06, 0.0, -0.00017547607421875, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.00034606456756591797, 0.0, -1.9073486328125e-06, -0.000431060791015625, -0.0001583099365234375, -0.0019588470458984375, 0.0, 0.0, -9.5367431640625e-06, -3.0517578125e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.target.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -7.186737673231754, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -6.903738975524902, -0.0002040863037109375, -0.011891024187207222, -3.4570680327306036e-06, -0.001010894775390625, -1.9073486328125e-06, -3.814697265625e-05, -1.33514404296875e-05, -3.4332275390625e-05, -2.0265579223632812e-06, -0.25382816791534424, -3.814697265625e-06, -0.0012111663818359375, -3.814697265625e-05, -0.0001773834228515625, -0.00023758411407470703, -8.20159912109375e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.340576171875e-05, 0.0, -0.00055694580078125, -1.1444091796875e-05, -0.0005931854248046875, -3.635883331298828e-05, -0.0066558122634887695, -0.0007516145706176758, -0.0009765625, -0.00017547607421875, -7.62939453125e-06, 0.0, -0.0001583099365234375, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.00037848949432373047, 0.0, -1.9073486328125e-06, -0.0004119873046875, -0.000152587890625, -0.0019474029541015625, 0.0, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, 1, CHARACTER_CLASS.PRIEST,\n            target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -7.341202139730363, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "EPIC", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.058068037033081055, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0002899169921875, -5.7220458984375e-06, -7.267040252685547, 0.0, -0.0010700225830078125, -1.52587890625e-05, -0.0001010894775390625, -2.288818359375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -0.0002117156982421875, -2.288818359375e-05, -0.0008220672607421875, -1.537799835205078e-05, -0.005501508712768555, -0.0002461671829223633, -0.001434326171875, -0.0001583099365234375, -7.62939453125e-06, 0.0, -0.0001163482666015625, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.00041854381561279297, 0.0, -1.9073486328125e-06, -0.000423431396484375, -0.0001544952392578125, -0.0019050836563110352, 0.0, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -7.363010406370073, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 2, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "HolySmite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -7.337897777557373, 0.0, -1.52587890625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001430511474609375, -3.814697265625e-06, -0.0011844635009765625, 0.0, -0.008087158203125, -7.62939453125e-06, -2.47955322265625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.62939453125e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0001010894775390625, -3.62396240234375e-05, -0.001064300537109375, -1.3470649719238281e-05, -0.006328105926513672, -0.0003052949905395508, -0.001422882080078125, -0.000156402587890625, -7.62939453125e-06, 0.0, -0.0001277923583984375, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00041282176971435547, 0.0, -1.9073486328125e-06, -0.00041961669921875, -0.0001544952392578125, -0.0019109249114990234, 0.0, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -17.041893005371094, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -17.041872024536133], "inferred_code": "break\n"}, {"score": -23.05445671081543, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -23.054439544677734], "inferred_code": ""}], "index": 51}
{"beams": [{"score": -0.6016960985988504, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Taunt", "<EOS>", 30, 89, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"args": [{"hole0": "Taunt", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -0.4367713928222656, -0.00012969970703125, -5.7220458984375e-06, 0.0, -0.0024704933166503906, -1.537799835205078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -0.006576331332325935, -3.433215897530317e-05, -3.814697265625e-06, -0.0022792816162109375, -0.000133514404296875, 0.0, -0.00040435791015625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006198883056640625, -0.0007429122924804688, -9.5367431640625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0003091096878051758, -0.00014543533325195312, -4.4226646423339844e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00031280517578125, -3.4332275390625e-05, -3.0517578125e-05, 0.0, -0.0014734268188476562, 0.0, -0.0001621246337890625, -4.00543212890625e-05, -0.0002155303955078125, -0.0006983280181884766, -3.814697265625e-06, -0.000270843505859375, 0.0, -0.0006697177886962891, -1.943111237778794e-05, -1.9073486328125e-06, -0.013942718505859375, -5.7220458984375e-06, -2.0265579223632812e-06, 0.0, -8.20159912109375e-05, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -1.7923511741963267, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template11"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -1.444697380065918, -0.0009250640869140625, -0.006191486958414316, 0.0, -0.0016422271728515625, -0.011129379272460938, -9.5367431640625e-06, 0.0, -0.004348039627075195, -2.09808349609375e-05, -1.9073486328125e-06, -0.0026836395263671875, -0.004261970520019531, -1.9073486328125e-05, -2.09808349609375e-05, -3.814697265625e-06, -0.1111748218536377, -0.0007430315017700195, -2.765655517578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00025177001953125, -1.52587890625e-05, -0.00018894672393798828, 0.0, -0.0009174346923828125, 0.0, -0.06943511962890625, -2.288818359375e-05, -2.3841852225814364e-07, 0.0, -0.0006899833679199219, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.BEAST)))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -2.8052158882191094, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 40, 127, "2", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -2.425373077392578, -0.022324562072753906, -0.005152225494384766, -3.814697265625e-06, -0.000621795654296875, -0.14432621002197266, -2.09808349609375e-05, 0.0, -4.589557647705078e-05, -7.748603820800781e-06, -1.9073486328125e-06, -0.010547637939453125, -7.62939453125e-06, -3.814697265625e-06, -0.010193109512329102, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.03488743305206299, -4.410743713378906e-06, 0.0, -0.018672943115234375, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -7.295608520507812e-05, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeHealth(2))]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -3.9557225118904427, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 41, 128, "2", "<EOS>", 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -3.688343048095703, -0.000125885009765625, -0.0006775856018066406, -7.62939453125e-06, -0.004344940185546875, -0.0083770751953125, -0.002476215362548828, -9.5367431640625e-06, -0.035076141357421875, -0.000827789306640625, -0.005176539067178965, 0.0, -0.000881195068359375, -0.009504318237304688, -7.62939453125e-06, 0.0, -0.0044296979904174805, -1.71661376953125e-05, -1.9073486328125e-06, -0.003448486328125, -0.004192352294921875, -1.1444091796875e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.030710339546203613, -0.0007127523422241211, -3.325939178466797e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -1.71661376953125e-05, -0.00012981891632080078, 0.0, -0.0009393692016601562, 0.0, -0.0669565200805664, -2.09808349609375e-05, -2.3841852225814364e-07, 0.0, -0.0007147789001464844, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.BEAST)))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -4.064065242796303, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 164, 41, 128, "2", "<EOS>", 40, 127, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -3.4402341842651367, -0.02383708953857422, -0.000225067138671875, -0.0027156658470630646, -1.33514404296875e-05, -0.0054111480712890625, -0.005184173583984375, -0.002177119255065918, -1.9073486328125e-05, -0.0007266998291015625, -0.4420032501220703, -3.24249267578125e-05, 0.0, -0.0002956390380859375, -1.1444091796875e-05, -1.9073486328125e-06, -0.003421783447265625, -0.0026788711547851562, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.013060688972473145, -0.0005346536636352539, -3.516674041748047e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-05, -3.826618194580078e-05, 0.0, -0.0010480880737304688, 0.0, -0.0652017593383789, -1.9073486328125e-05, -2.3841852225814364e-07, 0.0, -0.0008175373077392578, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(IsType(MINION_TYPE.BEAST))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -4.248312796637855, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Taunt", "<EOS>", 30, 89, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"args": [{"hole0": "Taunt", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -3.67348575592041, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00669097900390625, 0.0, -0.0034732818603515625, -3.814697265625e-06, -5.7220458984375e-05, -4.172325134277344e-06, 0.0, -3.814697265625e-06, 0.0, -0.0006237030029296875, 0.0, -0.000152587890625, 0.0, -0.010484814643859863, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00022268295288085938, 0.0, -0.0005893707275390625, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1828880310058594e-05, 0.0, -2.09808349609375e-05, -0.0001430511474609375, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.0009291544556617737, -0.0003985115617979318, -0.0004749298095703125, -0.0016412734985351562, -6.67572021484375e-05, -0.031627655029296875, -0.026430130004882812, -0.009243011474609375, -0.005124915856868029, -0.0003699064254760742, -0.002349853515625, -0.0004901885986328125, -0.0013127325801178813, -1.9073486328125e-06, -0.43778514862060547, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -0.0024552345275878906, -1.537799835205078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -0.006576568353921175, -3.433215897530317e-05, -3.814697265625e-06, -0.0022983551025390625, -0.000133514404296875, 0.0, -0.0003986358642578125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006198883056640625, -0.00074005126953125, -9.5367431640625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0003091096878051758, -0.00014543533325195312, -4.4226646423339844e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.000301361083984375, -3.4332275390625e-05, -3.0517578125e-05, 0.0, -0.0014896392822265625, 0.0, -0.0001621246337890625, -4.1961669921875e-05, -0.000217437744140625, -0.0006926059722900391, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0006678104400634766, -1.943111237778794e-05, -1.9073486328125e-06, -0.013982772827148438, -5.7220458984375e-06, -2.0265579223632812e-06, 0.0, -8.20159912109375e-05, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -4.522320046088346, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Has", "Card", "Name", "<EOS>", 163, 38, 121, "Taunt", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template11"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"s": "Taunt", "_type": "Str"}], "func": {"id": "HasCardName", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -1.444697380065918, -0.0009250640869140625, -0.006191486958414316, 0.0, -0.0016422271728515625, -0.011129379272460938, -9.5367431640625e-06, 0.0, -0.004348039627075195, -2.09808349609375e-05, -1.9073486328125e-06, -0.0026836395263671875, -0.004261970520019531, -1.9073486328125e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.4111244678497314, -0.01617821678519249, -0.014282941818237305, -0.0033617019653320312, 0.0, -0.00460052490234375, -0.0009822845458984375, -0.4585886001586914, -2.6702880859375e-05, -0.0039081573486328125, -9.918212890625e-05, -2.3841855636419496e-06, -1.1920928244535389e-07, -0.0002883672423195094, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(HasCardName('Taunt'))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -4.6488192329697, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 164, 41, 128, "2", "<EOS>", 40, 127, "2", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -3.4402341842651367, -0.02383708953857422, -0.000225067138671875, -0.0027156658470630646, -1.33514404296875e-05, -0.0054111480712890625, -0.005184173583984375, -0.002177119255065918, -1.9073486328125e-05, -0.0007266998291015625, -1.056772232055664, -3.24249267578125e-05, 0.0, -0.00017583370208740234, -1.3470649719238281e-05, -1.9073486328125e-06, -0.0013790130615234375, -3.814697265625e-06, -3.814697265625e-06, -0.00241696834564209, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0288316011428833, -6.318092346191406e-06, 0.0, -0.024425506591796875, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -7.295608520507812e-05, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -4.715156846242124, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 40, 127, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -2.425373077392578, -0.022324562072753906, -0.005152225494384766, -3.814697265625e-06, -0.000621795654296875, -2.0418758392333984, -1.52587890625e-05, 0.0, -0.0002982616424560547, -1.33514404296875e-05, -1.9073486328125e-06, -0.0068988800048828125, -0.0027399063110351562, -5.7220458984375e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.010285496711730957, -0.0005911588668823242, -3.6835670471191406e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.000148773193359375, -1.9073486328125e-05, -4.780292510986328e-05, 0.0, -0.0009937286376953125, 0.0, -0.06397819519042969, -1.9073486328125e-05, -2.3841852225814364e-07, 0.0, -0.0007604360580444336, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.BEAST)))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -5.286668076149347, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Has", "Card", "Name", "<EOS>", 163, 38, 121, "+2/+2", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template11"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"s": "+2/+2", "_type": "Str"}], "func": {"id": "HasCardName", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -1.444697380065918, -0.0009250640869140625, -0.006191486958414316, 0.0, -0.0016422271728515625, -0.011129379272460938, -9.5367431640625e-06, 0.0, -0.004348039627075195, -2.09808349609375e-05, -1.9073486328125e-06, -0.0026836395263671875, -0.004261970520019531, -1.9073486328125e-05, -2.09808349609375e-05, -3.814697265625e-06, -2.4111244678497314, -0.01617821678519249, -0.014282941818237305, -0.0033617019653320312, 0.0, -0.00460052490234375, -0.0009822845458984375, -1.1584657430648804, -0.01758575439453125, -0.05036449432373047, -7.43865966796875e-05, -2.5033946258190554e-06, -1.1920928244535389e-07, -0.0007685422315262258, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(HasCardName('+2/+2'))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -5.461139368845252, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"hole0": 2, "_type": "Template11"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "taunt"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -1.444697380065918, -0.0009250640869140625, -0.006191486958414316, 0.0, -0.0016422271728515625, -0.011129379272460938, -9.5367431640625e-06, 0.0, -0.004348039627075195, -2.09808349609375e-05, -1.9073486328125e-06, -0.0026836395263671875, -0.004261970520019531, -1.9073486328125e-05, -2.09808349609375e-05, -3.814697265625e-06, -0.1111748218536377, -0.0007430315017700195, -2.765655517578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00025177001953125, -1.52587890625e-05, -0.00018894672393798828, 0.0, -0.0009174346923828125, 0.0, -3.3145036697387695, -2.288818359375e-05, -2.503394853192731e-06, 0.0, -6.926058995304629e-05, 0.0, -0.4149806499481201, 0.0, -0.009107589721679688, -0.0001735687255859375, -7.62939453125e-05, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.BEAST)))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n"}, {"score": -7.598299731930524, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Taunt", "<EOS>", 30, 89, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "4", "<EOS>", 37, 117, "3", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 88, 19, 112, "Minion", "Died", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 44, 133, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"args": [{"hole0": "Taunt", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"n": 3, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "effects", "value": {"elts": [{"args": [{"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionDied", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 2, "_type": "Template16"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -0.4367713928222656, -0.00012969970703125, -5.7220458984375e-06, 0.0, -0.0024704933166503906, -1.537799835205078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -0.006576331332325935, -3.433215897530317e-05, -3.814697265625e-06, -0.0022792816162109375, -0.000133514404296875, 0.0, -0.00040435791015625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006198883056640625, -0.0007429122924804688, -9.5367431640625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0003091096878051758, -0.00014543533325195312, -4.4226646423339844e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00031280517578125, -3.4332275390625e-05, -3.0517578125e-05, 0.0, -0.0014734268188476562, 0.0, -0.0001621246337890625, -4.00543212890625e-05, -0.0002155303955078125, -0.0006983280181884766, -3.814697265625e-06, -0.000270843505859375, 0.0, -0.0006697177886962891, -1.943111237778794e-05, -1.9073486328125e-06, -4.293054580688477, -1.9073486328125e-05, -0.21022415161132812, -1.9073486328125e-06, 0.0, -0.00012969970703125, -9.5367431640625e-06, 0.0, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001697540283203125, -2.1457672119140625e-06, -0.009296417236328125, -0.0004062652587890625, -2.09808349609375e-05, -1.71661376953125e-05, -0.00777435302734375, -1.1444091796875e-05, 0.0, -0.0017660856246948242, -0.000102996826171875, -4.38690185546875e-05, -0.0020580291748046875, 0.0, -0.00015896875993348658, 0.0, -0.000713348388671875, -3.814697265625e-06, -0.002939218655228615, 0.0, -0.01636505126953125, -5.7220458984375e-06, -6.29425048828125e-05, -0.017302513122558594, 0.0, -0.0003204345703125, -0.0002651214599609375, -7.62939453125e-05, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -0.3393745422363281, 0.0, -0.0014743804931640625, 0.0, -0.0001125335693359375, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.001367806107737124, -1.1920928244535389e-07, -1.1444091796875e-05, -0.5871706008911133, -0.0031795501708984375, -1.71661376953125e-05, -1.9073486328125e-06, -0.006278131622821093, -0.4558924436569214, 0.0, -0.000171661376953125, -0.03769874572753906, -1.9073486328125e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0015739202499389648, -0.0004552602767944336, -2.193450927734375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0012731552124023438, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.0012445449829101562, 0.0, -0.000202178955078125, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.007479786407202482, -2.5391578674316406e-05, 0.0, -3.24249267578125e-05, -0.00598907470703125, 0.0, -0.001567840576171875, -7.62939453125e-06, -0.0003052911488339305, -0.00010228079918306321, -3.814697265625e-06, -0.10343265533447266, -0.0007171630859375, -0.053244590759277344, -1.9073486328125e-06, -0.15513038635253906, -0.4321250915527344, -2.09808349609375e-05, 0.0, -2.5153141905320808e-05, -2.491474151611328e-05, 0.0, -0.01657867431640625, -0.1598949432373047, -3.814697265625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.06505072116851807, -0.0005601644515991211, -2.181529998779297e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.005940437316894531, -4.57763671875e-05, -2.491474151611328e-05, 0.0, -0.0010509490966796875, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, effects=[Effect(MinionDied(IsType(\n            MINION_TYPE.BEAST)), ActionTag(Give(ChangeHealth(2)),\n            MinionSelector(IsType(MINION_TYPE.BEAST))))])\n"}, {"score": -7.629448447288162, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"n": 1, "_type": "Num"}, "hole0": 4, "_type": "Template4", "hole2": "spell_damage"}], "name": "Houndmaster", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -5.6995649337768555, -8.96453857421875e-05, -1.9073486328125e-06, -0.0021592378616333008, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -0.000141143798828125, 0.0, -0.019240617752075195, 0.0, -0.19896984100341797, -1.52587890625e-05, -1.5497207641601562e-05, -1.1920928244535389e-07, -7.486343383789062e-05, -1.1920928244535389e-07, -1.186487078666687, -0.00013363361358642578, -0.00093841552734375, -0.0002651214599609375, -0.48649847507476807, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(4, 3, spell_damage=1)\n"}, {"score": -13.182069608941674, "choice_history": [50, 111, 176, 59, 93, 24, 144, "4", "<EOS>"], "model_output": {"body": [{"value": {"hole0": 4, "_type": "Template9"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -11.066475868225098, -0.5713071823120117, -1.4003891944885254, -0.1134805679321289, -0.03026563860476017, -0.00012254714965820312], "inferred_code": "self.target.damage(player.effective_spell_damage(4), self)\n"}, {"score": -22.033140182495117, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -22.03312110900879], "inferred_code": ""}], "index": 52}
{"beams": [{"score": -0.04097768507678268, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.010292766615748405, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.000675201416015625, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.65595172601752e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.7642974853515625e-05, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001341104507446289, 0.0, -0.00452423095703125, -1.9073486328125e-06, -0.00026702880859375, -2.3841855067985307e-07, -1.0728830375228426e-06, 0.0, -0.009191988036036491, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.000759124755859375, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -5.2967540922739005, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "4", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "taunt"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.010292766615748405, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.000675201416015625, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.65595172601752e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.7642974853515625e-05, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001341104507446289, 0.0, -0.00452423095703125, -1.9073486328125e-06, -0.00026702880859375, -2.3841855067985307e-07, -1.0728830375228426e-06, 0.0, -5.265391826629639, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.000301361083984375, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, taunt=True)\n"}, {"score": -5.479346126621216, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -5.448758602142334, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -0.0004807710647583008, 0.0, -0.000125885009765625, -1.9073486328125e-06, -8.64267349243164e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.5616416931152344e-05, 0.0, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -0.00013589859008789062, 0.0, -0.00452423095703125, -1.9073486328125e-06, -0.0002593994140625, -1.1920928244535389e-07, -9.536738616588991e-07, 0.0, -0.009257672354578972, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0007572174072265625, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -6.024705742585738, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 67, 129, "4", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template12", "hole2": "taunt"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.010292766615748405, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.000675201416015625, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.65595172601752e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.7642974853515625e-05, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001341104507446289, 0.0, -5.420414924621582, -0.000110626220703125, -0.0001697540283203125, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.04622077941894531, -9.655952453613281e-06, -1.52587890625e-05, -0.18123435974121094, -0.0052356719970703125, -0.0006703133694827557, -6.508615479106084e-05, -0.0006774734356440604, -3.576278118089249e-07, -0.3434414863586426, 0.0, -8.96453857421875e-05, -9.5367431640625e-06, -7.05718994140625e-05, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, taunt=True)\n"}, {"score": -6.063805307885772, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "4", "<EOS>", 37, 117, "2", "<EOS>", 171, 49, 152, "stealth", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Huffer", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"n": 2, "_type": "Num"}], "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -4.856731414794922, -9.34600830078125e-05, -0.00011073929636040702, -1.0728830375228426e-06, -3.4451466490281746e-05, -1.1920928244535389e-07, -0.14226460456848145, 0.0, -0.05528450012207031, -2.47955322265625e-05, -0.0015544891357421875, -3.814697265625e-06, 0.0, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.33145618438720703, -4.768370445162873e-07, -0.0003604888916015625, -0.000637054443359375, -0.0003757476806640625, -0.0001068115234375, -4.38690185546875e-05, -0.0054187774658203125, 0.0, -0.0004665851593017578, -3.814697265625e-05, -0.00086212158203125, -0.000133514404296875, 0.0, -1.251697449333733e-05, -9.059865078597795e-06, -0.0007534027099609375, -3.814697265625e-06, -2.384181243542116e-06, 0.0, -0.1819171905517578, -0.0001163482666015625, -1.33514404296875e-05, -0.4805474281311035, -1.9073486328125e-06, -0.0001506805419921875, -3.24249267578125e-05, -0.0017033815383911133, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, stealth=True)\n"}, {"score": -6.327560633716772, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "4", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "stealth"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.010292766615748405, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.000675201416015625, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.65595172601752e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.7642974853515625e-05, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001341104507446289, 0.0, -0.00452423095703125, -1.9073486328125e-06, -0.00026702880859375, -2.3841855067985307e-07, -1.0728830375228426e-06, 0.0, -6.296223163604736, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0003032684326171875, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, stealth=True)\n"}, {"score": -6.6046664376465145, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "4", "<EOS>", 37, 117, "2", "<EOS>", 171, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Huffer", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"n": 2, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -4.856731414794922, -9.34600830078125e-05, -0.00011073929636040702, -1.0728830375228426e-06, -3.4451466490281746e-05, -1.1920928244535389e-07, -0.14226460456848145, 0.0, -0.05528450012207031, -2.47955322265625e-05, -0.0015544891357421875, -3.814697265625e-06, 0.0, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.33145618438720703, -4.768370445162873e-07, -0.0003604888916015625, -0.000637054443359375, -0.0003757476806640625, -0.0001068115234375, -4.38690185546875e-05, -0.0054187774658203125, 0.0, -0.0004665851593017578, -3.814697265625e-05, -0.00086212158203125, -0.000133514404296875, 0.0, -1.251697449333733e-05, -9.059865078597795e-06, -0.0007534027099609375, -3.814697265625e-06, -2.384181243542116e-06, 0.0, -0.1819171905517578, -0.0001163482666015625, -1.33514404296875e-05, -1.0226807594299316, -1.71661376953125e-05, -0.0001373291015625, -2.288818359375e-05, -0.0004388093948364258, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -6.630463332241028, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "charge", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "charge", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -6.5997395515441895, 0.0, -5.53131103515625e-05, -3.814697265625e-06, 0.0, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.0007724761962890625, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -7.832050323486328e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.5735626220703125e-05, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, 0.0, -0.0001341104507446289, 0.0, -0.004425048828125, -1.9073486328125e-06, -0.0002613067626953125, -1.1920928244535389e-07, -9.536738616588991e-07, 0.0, -0.00919782929122448, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0007476806640625, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.charge, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -6.783127039966772, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "4", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "HUNTER"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.010292766615748405, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.000675201416015625, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.65595172601752e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.7642974853515625e-05, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001341104507446289, 0.0, -0.00452423095703125, -1.9073486328125e-06, -0.00026702880859375, -2.3841855067985307e-07, -1.0728830375228426e-06, 0.0, -6.745726108551025, -3.814697265625e-06, -0.0052890777587890625, -1.9073486328125e-06, -0.0011157989501953125, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, HUNTER=True)\n"}, {"score": -7.037226673886252, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "4", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Huffer", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"hole1": 2, "hole0": 4, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -4.856731414794922, -9.34600830078125e-05, -0.00011073929636040702, -1.0728830375228426e-06, -3.4451466490281746e-05, -1.1920928244535389e-07, -0.14226460456848145, 0.0, -0.05528450012207031, -2.47955322265625e-05, -0.0015544891357421875, -3.814697265625e-06, 0.0, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.3895072937011719, -1.9073486328125e-06, -8.58306884765625e-05, -0.23594188690185547, -0.000652313232421875, -0.004915864206850529, -2.0265579223632812e-06, -0.34747791290283203, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, p):\n        return Minion(4, 2)\n"}, {"score": -7.2764118659377885, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 67, 129, "4", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template12", "hole2": "HUNTER"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.010292766615748405, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.000675201416015625, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.65595172601752e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.7642974853515625e-05, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001341104507446289, 0.0, -5.420414924621582, -0.000110626220703125, -0.0001697540283203125, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.04622077941894531, -9.655952453613281e-06, -1.52587890625e-05, -0.18123435974121094, -0.0052356719970703125, -0.0006703133694827557, -6.508615479106084e-05, -0.0006774734356440604, -3.576278118089249e-07, -1.5938525199890137, 0.0, -0.000885009765625, -1.1444091796875e-05, -0.000568389892578125, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, HUNTER=True)\n"}, {"score": -7.931606766507102, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "4", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Huffer", "_type": "Template1", "hole2": "HUNTER"}, {"body": [{"hole1": 4, "hole0": 4, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -4.856731414794922, -9.34600830078125e-05, -0.00011073929636040702, -1.0728830375228426e-06, -3.4451466490281746e-05, -1.1920928244535389e-07, -0.14226460456848145, 0.0, -0.05528450012207031, -2.47955322265625e-05, -0.0015544891357421875, -3.814697265625e-06, 0.0, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.3895072937011719, -1.9073486328125e-06, -8.58306884765625e-05, -0.23594188690185547, -0.000652313232421875, -0.004915864206850529, -2.0265579223632812e-06, -1.2418560981750488, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, p):\n        return Minion(4, 4)\n"}, {"score": -7.935377794162534, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 71, 139, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Huffer", "_type": "Template1", "hole2": "HUNTER"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "Huffer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -4.856731414794922, -9.34600830078125e-05, -0.00011073929636040702, -1.0728830375228426e-06, -3.4451466490281746e-05, -1.1920928244535389e-07, -0.14226460456848145, 0.0, -2.927492141723633, -2.86102294921875e-05, -0.0004258155822753906, -5.960462772236497e-07, -3.802693754551001e-05, 0.0, -0.00493573397397995, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -0.0007953643798828125, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -17.1749267578125, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -17.174861907958984], "inferred_code": "break\n"}, {"score": -23.840139389038086, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -6.103515625e-05, -23.840076446533203], "inferred_code": ""}], "index": 53}
{"beams": [{"score": -0.1797016311883084, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -0.08753727376461029, -4.768370445162873e-07, -0.00093841552734375, -0.014775276184082031, -0.0030107498168945312, -0.000308990478515625, -5.7220458984375e-06, -0.00038863811641931534, -7.62939453125e-06, -0.01646709442138672, -0.0022335052490234375, -0.000225067138671875, -1.9073486328125e-06, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.000156402587890625, 0.0, -0.0002288818359375, 0.0, -0.00010156631469726562, 0.0, -0.012646317481994629, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -3.2631108264883864, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -3.063483715057373, -2.503394853192731e-06, -0.0001468658447265625, -0.11893177032470703, -0.0015163421630859375, -0.000202178955078125, -3.814697265625e-06, -0.0017572701908648014, -7.62939453125e-06, -0.011363029479980469, -0.0037670135498046875, -0.0002593994140625, -1.9073486328125e-06, 0.0, -0.0001125335693359375, -2.09808349609375e-05, -0.000102996826171875, 0.0, -0.00026428699493408203, 0.0, -0.00015485286712646484, 0.0, -0.02045273780822754, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n"}, {"score": -4.162595575440591, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -4.009884834289551, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-05, 0.0, -0.001224517822265625, -1.9073486328125e-06, -1.1444091796875e-05, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00017368793487548828, -0.0001609325408935547, -0.0013347864151000977, 0.0, -0.005888938903808594, -0.0018405914306640625, -2.09808349609375e-05, -0.000194549560546875, -0.000164031982421875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -0.08721135556697845, -4.768370445162873e-07, -0.00093841552734375, -0.014776229858398438, -0.003009796142578125, -0.0003108978271484375, -5.7220458984375e-06, -0.00038851937279105186, -7.62939453125e-06, -0.01646900177001953, -0.0022335052490234375, -0.000225067138671875, -1.9073486328125e-06, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.0001583099365234375, 0.0, -0.00022983551025390625, 0.0, -0.00010156631469726562, 0.0, -0.012642502784729004, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -4.624009929825192, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "Give", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "Give", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -4.507379055023193, -4.41074053014745e-06, -0.007311820983886719, -0.01876354217529297, -0.0026731491088867188, -0.0009975433349609375, -9.5367431640625e-06, -0.00012113526463508606, -3.814697265625e-06, -0.029892921447753906, -0.0015010833740234375, -0.000247955322265625, -1.9073486328125e-06, 0.0, -0.000110626220703125, -1.52587890625e-05, -0.00016021728515625, 0.0, -0.000194549560546875, -1.9073486328125e-06, -0.00011098384857177734, 0.0, -0.01394951343536377, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.Give(1 - self.target.calculate_attack())\n"}, {"score": -5.130374275376184, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "calculate_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -4.995819091796875, -2.3841830625315197e-06, -0.004703521728515625, -0.04152488708496094, -0.0020694732666015625, -0.0002288818359375, -5.7220458984375e-06, -0.0004112906754016876, -1.9073486328125e-06, -0.028779029846191406, -0.0012073516845703125, -0.0002536773681640625, -1.9073486328125e-06, 0.0, -6.103515625e-05, -1.52587890625e-05, -0.0001697540283203125, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -7.486343383789062e-05, 0.0, -0.01434028148651123, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack(1 - self.target.calculate_attack())\n"}, {"score": -5.525384020291071, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 1, "_type": "Num"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -3.063483715057373, -2.503394853192731e-06, -0.0001468658447265625, -2.410734176635742, -0.0012035369873046875, -0.009252317249774933, -1.9073486328125e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score": -5.562625591874038, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -0.08753727376461029, -4.768370445162873e-07, -0.00093841552734375, -0.014775276184082031, -0.0030107498168945312, -0.000308990478515625, -5.7220458984375e-06, -0.00038863811641931534, -7.62939453125e-06, -0.01646709442138672, -0.0022335052490234375, -0.000225067138671875, -1.9073486328125e-06, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.000156402587890625, 0.0, -0.0002288818359375, 0.0, -0.00010156631469726562, 0.0, -5.395568370819092, -1.9073486328125e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_max_health())\n"}, {"score": -5.731137622350602, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "add_effect", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -5.482437610626221, -7.510157047363464e-06, -0.00037288665771484375, -0.16772174835205078, -0.00146484375, -0.00022125244140625, -7.62939453125e-06, -0.00029818713665008545, -3.814697265625e-06, -0.01773357391357422, -0.0010128021240234375, -0.0001964569091796875, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -2.6702880859375e-05, -0.00018310546875, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.191036224365234e-05, 0.0, -0.018626928329467773, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(1 - self.target.calculate_attack())\n"}, {"score": -5.792053152105709, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "<UNK>", "_type": "Name"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -0.08753727376461029, -4.768370445162873e-07, -0.00093841552734375, -4.770973205566406, -3.814697265625e-06, -0.8920376300811768, -3.3378591979271732e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n"}, {"score": -6.006328154586164, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -0.08753727376461029, -4.768370445162873e-07, -0.00093841552734375, -5.763491630554199, -1.9073486328125e-06, -0.0003223419189453125, -7.05718994140625e-05, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -1.33514404296875e-05, -0.0002995729446411133, -1.1920928244535389e-07, -0.1130439043045044, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n"}, {"score": -6.231692021012222, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 51, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "op": {"_type": "Add"}, "_type": "BinOp"}]}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -0.08753727376461029, -4.768370445162873e-07, -0.00093841552734375, -0.014775276184082031, -0.0030107498168945312, -0.000308990478515625, -5.7220458984375e-06, -0.00038863811641931534, -7.62939453125e-06, -5.6190104484558105, -0.038170814514160156, 0.0, -0.013897895812988281, 0.0, -0.36143064498901367, 0.0, -0.051650047302246094, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 + self.target)\n"}, {"score": -6.752899840475251, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 12, 83, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"left": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}, "_type": "Assign"}, {"value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Humility", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -5.19379997253418, -5.14984130859375e-05, -0.00023651123046875, 0.0, -0.000911712646484375, -5.7220458984375e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0005846023559570312, -7.62939453125e-06, -3.814697265625e-06, -0.00044524669647216797, 0.0, -0.6471776962280273, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -4.1961669921875e-05, -2.09808349609375e-05, -3.814697265625e-06, -0.0009441375732421875, 0.0, -4.291534423828125e-06, 0.0, -0.0003299713134765625, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001448390685254708, 0.0, -0.20995807647705078, -0.000179290771484375, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.09666931629180908, -3.099436753473128e-06, -0.12237739562988281, -0.0002803802490234375, -3.814697265625e-05, 0.0, -0.00081634521484375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.863739013671875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.019302498549222946, 0.0, -0.0021686553955078125, -0.049752235412597656, -0.0008716583251953125, 0.0, 0.0, -0.000278472900390625, -9.5367431640625e-06, -0.0002307891845703125, 0.0, -0.00122833251953125, 0.0, -2.1219253540039062e-05, 0.0, -0.03645133972167969, 0.0, -0.0027246475219726562, -1.9073486328125e-06, -3.814697265625e-06, -0.000640869140625, -1.9073486328125e-06, -5.7220458984375e-06, -0.00030231475830078125, -0.0003108978271484375, -0.0001773834228515625, 0.0, -0.00021398067474365234, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.09050416946411133, -9.5367431640625e-06, -3.814697265625e-06, -0.0022783279418945312, 0.0, -0.23755156993865967, -5.6028297876764555e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(<UNK>)\n"}, {"score": -11.52277457714078, "choice_history": [50, 111, 176, 59, 93, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>"], "model_output": {"body": [{"value": {"func": {"attr": "change_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -9.064342498779297, -0.00543975830078125, -0.011516571044921875, -1.8277320861816406, -9.5367431640625e-05, 0.0, -0.024741172790527344, -5.7220458984375e-05, -0.024694442749023438, 0.0, -0.022337913513183594, -4.589557647705078e-05, -6.508827209472656e-05, -2.3841855067985307e-07, -0.541668176651001, 0.0], "inferred_code": "self.target.change_attack()\n"}, {"score": -14.802099227905273, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -14.802061080932617], "inferred_code": "break\n"}, {"score": -24.067855834960938, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -24.067819595336914], "inferred_code": ""}], "index": 54}
{"beams": [{"score": -1.9726214644312492, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.6627148389816284, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0005741119384765625, 0.0, -1.1444091796875e-05, -0.0009746551513671875, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013614892959594727, 0.0, -0.001552581787109375, -0.0018787384033203125, -3.814697265625e-06, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -1.2811505794525146, -3.576278118089249e-07, -3.0517578125e-05, -0.012418746948242188, 0.0, -0.005736827850341797, -1.71661376953125e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -2.0940580603479972, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.7663983106613159, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0007915496826171875, 0.0, -9.5367431640625e-06, -0.0011081695556640625, 0.0, -3.24249267578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013422966003417969, 0.0, -0.0015506744384765625, -0.00188446044921875, -3.814697265625e-06, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -1.2986119985580444, -3.576278118089249e-07, -3.0517578125e-05, -0.012366294860839844, 0.0, -0.005724430084228516, -1.71661376953125e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -2.1532407638430513, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 1, "_type": "Num"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.6627148389816284, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0005741119384765625, 0.0, -1.1444091796875e-05, -0.0009746551513671875, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013614892959594727, 0.0, -0.001552581787109375, -0.0018787384033203125, -3.814697265625e-06, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -0.9928605556488037, -2.3841855067985307e-07, -0.0001087188720703125, -0.4819326400756836, -0.0012912750244140625, -0.003780066967010498, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score": -2.2473982323706068, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 37, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"n": 1, "_type": "Num"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.7663983106613159, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0007915496826171875, 0.0, -9.5367431640625e-06, -0.0011081695556640625, 0.0, -3.24249267578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013422966003417969, 0.0, -0.0015506744384765625, -0.00188446044921875, -3.814697265625e-06, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -0.9813836812973022, -2.3841855067985307e-07, -0.0001087188720703125, -0.4834918975830078, -0.001323699951171875, -0.0037827007472515106, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score": -2.782079775147153, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.6627148389816284, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0005741119384765625, 0.0, -1.1444091796875e-05, -0.0009746551513671875, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013614892959594727, 0.0, -0.001552581787109375, -0.0018787384033203125, -3.814697265625e-06, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.009793519973755, -1.1920928244535389e-07, -0.00035381317138671875, -0.032204627990722656, -0.001773834228515625, -0.0002269744873046875, -3.814697265625e-06, -0.0005932413041591644, -1.9073486328125e-06, -0.013949394226074219, -0.03394508361816406, -0.0007343292236328125, -1.9073486328125e-06, 0.0, -0.0001049041748046875, -7.62939453125e-06, -0.000141143798828125, 0.0, -0.0002633333206176758, 0.0, -0.00016069412231445312, 0.0, -0.014552234672009945, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -2.794498483445487, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.6627148389816284, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0005741119384765625, 0.0, -1.1444091796875e-05, -0.0009746551513671875, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013614892959594727, 0.0, -0.001552581787109375, -0.0018787384033203125, -3.814697265625e-06, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -0.9928605556488037, -2.3841855067985307e-07, -0.0001087188720703125, -1.0239763259887695, -0.002552032470703125, -0.00022125244140625, -3.814697265625e-06, -0.003898398485034704, -3.814697265625e-06, -0.01255035400390625, -0.05914306640625, -0.0009403228759765625, -1.9073486328125e-06, 0.0, -0.0001239776611328125, -2.09808349609375e-05, -0.0001392364501953125, 0.0, -0.0002442598342895508, 0.0, -0.00022733211517333984, 0.0, -0.024214625358581543, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n"}, {"score": -2.8782445995882284, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.7663983106613159, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0007915496826171875, 0.0, -9.5367431640625e-06, -0.0011081695556640625, 0.0, -3.24249267578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013422966003417969, 0.0, -0.0015506744384765625, -0.00188446044921875, -3.814697265625e-06, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.0018231868743896, -1.1920928244535389e-07, -0.00035190582275390625, -0.03208351135253906, -0.0017795562744140625, -0.0002269744873046875, -3.814697265625e-06, -0.0005951505154371262, -1.9073486328125e-06, -0.013935089111328125, -0.03414344787597656, -0.0007343292236328125, -1.9073486328125e-06, 0.0, -0.0001049041748046875, -7.62939453125e-06, -0.000141143798828125, 0.0, -0.00026619434356689453, 0.0, -0.00016057491302490234, 0.0, -0.01457595732063055, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -2.8842330372705973, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.7663983106613159, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0007915496826171875, 0.0, -9.5367431640625e-06, -0.0011081695556640625, 0.0, -3.24249267578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013422966003417969, 0.0, -0.0015506744384765625, -0.00188446044921875, -3.814697265625e-06, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -0.9813836812973022, -2.3841855067985307e-07, -0.0001087188720703125, -1.020970344543457, -0.00255584716796875, -0.00022125244140625, -3.814697265625e-06, -0.003909842111170292, -3.814697265625e-06, -0.012557029724121094, -0.0592498779296875, -0.000942230224609375, -1.9073486328125e-06, 0.0, -0.0001239776611328125, -2.09808349609375e-05, -0.0001392364501953125, 0.0, -0.0002461671829223633, 0.0, -0.00022733211517333984, 0.0, -0.024259448051452637, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n"}, {"score": -2.9335609597896948, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "calculate_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.6627148389816284, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0005741119384765625, 0.0, -1.1444091796875e-05, -0.0009746551513671875, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013614892959594727, 0.0, -0.001552581787109375, -0.0018787384033203125, -3.814697265625e-06, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.0112955570220947, -7.152555099310121e-07, -0.00160980224609375, -0.17248821258544922, -0.000980377197265625, -0.0001697540283203125, -5.7220458984375e-06, -0.0019572661258280277, -1.9073486328125e-06, -0.03465557098388672, -0.019321441650390625, -0.0016117095947265625, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.00016021728515625, 0.0, -0.00028336048126220703, 0.0, -8.034706115722656e-05, 0.0, -0.015580177307128906, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack(1 - self.target.calculate_attack())\n"}, {"score": -3.0434759792683437, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "calculate_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "op": {"_type": "Sub"}, "_type": "BinOp"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.7663983106613159, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0007915496826171875, 0.0, -9.5367431640625e-06, -0.0011081695556640625, 0.0, -3.24249267578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013422966003417969, 0.0, -0.0015506744384765625, -0.00188446044921875, -3.814697265625e-06, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.017595052719116, -7.152555099310121e-07, -0.0016117095947265625, -0.17214202880859375, -0.0009784698486328125, -0.0001697540283203125, -5.7220458984375e-06, -0.0019628703594207764, -1.9073486328125e-06, -0.034621238708496094, -0.0192718505859375, -0.0016078948974609375, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.00016021728515625, 0.0, -0.0002862215042114258, 0.0, -8.034706115722656e-05, 0.0, -0.015581130981445312, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack(1 - self.target.calculate_attack())\n"}, {"score": -5.281402492224963, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "calculate_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.6627148389816284, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0005741119384765625, 0.0, -1.1444091796875e-05, -0.0009746551513671875, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013614892959594727, 0.0, -0.001552581787109375, -0.0018787384033203125, -3.814697265625e-06, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.0112955570220947, -7.152555099310121e-07, -0.00160980224609375, -2.3325729370117188, 0.0, -0.26265621185302734, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack(self)\n"}, {"score": -5.394340777098925, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 163, 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "calculate_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.7663983106613159, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0007915496826171875, 0.0, -9.5367431640625e-06, -0.0011081695556640625, 0.0, -3.24249267578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013422966003417969, 0.0, -0.0015506744384765625, -0.00188446044921875, -3.814697265625e-06, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.017595052719116, -7.152555099310121e-07, -0.0016117095947265625, -2.335516929626465, 0.0, -0.26230907440185547, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack(self)\n"}, {"score": -6.81719147345278, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_spell_damage", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 21, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"args": [{"left": {"n": 1, "_type": "Num"}, "right": {"n": 1, "_type": "Num"}, "op": {"_type": "Sub"}, "_type": "BinOp"}], "func": {"attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "<UNK>Mark", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.6627148389816284, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0005741119384765625, 0.0, -1.1444091796875e-05, -0.0009746551513671875, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013614892959594727, 0.0, -0.001552581787109375, -0.0018787384033203125, -3.814697265625e-06, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -4.357896327972412, -1.1920928244535389e-07, -0.007424354553222656, -0.00150299072265625, -0.000640869140625, -0.0005035400390625, 0.0, -0.0010051727294921875, 0.0, -0.033127784729003906, 0.0, -0.026236653327941895, -5.602820692729438e-06, -1.33514404296875e-05, -0.0843191146850586, -0.007886886596679688, -0.2810325622558594, -2.288818359375e-05, -4.757195711135864e-06, -9.536738616588991e-07, -0.5889482498168945, -0.711827278137207, -0.00434112548828125, -0.00014314986765384674, 0.0, -0.031592369079589844, -3.814697265625e-06, -0.005442380905151367, -1.9073486328125e-06], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1 - 1), self)\n"}, {"score": -18.025171279907227, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -18.025081634521484], "inferred_code": "break\n"}, {"score": -22.69855499267578, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-8.20159912109375e-05, -3.814697265625e-06, -22.698469161987305], "inferred_code": ""}], "index": 55}
{"beams": [{"score": -0.11518109441475843, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.02064990997314453, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.775161743164062e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.0007978677749633789, 0.0, -1.9073486328125e-06, -0.00177001953125, -7.43865966796875e-05, -0.014542706310749054, -1.621246337890625e-05, -0.0003414154052734375, -0.024158477783203125, -0.0001506805419921875, 0.0, -0.00016617774963378906, -0.00012838833208661526, -7.82012939453125e-05, -0.000331878662109375, -5.7220458984375e-06, -5.91278076171875e-05, -0.00035858154296875, -1.52587890625e-05, -8.58306884765625e-05, -4.9591064453125e-05, -0.0021495819091796875, -0.00015270709991455078, 0.0, -4.1961669921875e-05, 0.0, -0.0017875432968139648, -1.1444091796875e-05, -0.0001850128173828125, -9.5367431640625e-06, -0.0001373291015625, -7.700920104980469e-05, 0.0, -0.0006542205810546875, -5.91278076171875e-05, -1.1920922133867862e-06, -3.2186455882765586e-06, -1.5497182630497264e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -3.4082483708154925, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Ironforge Rifleman", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -3.3566064834594727, -0.0001678466796875, -2.396077979938127e-05, -0.00012493133544921875, -2.0265579223632812e-06, 0.0, -3.838539123535156e-05, -2.0265579223632812e-06, -0.0001087188720703125, 0.0, -0.001438140869140625, 0.0, -0.0001544952392578125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0012311935424804688, 0.0, -9.5367431640625e-06, -0.0018520355224609375, -6.4849853515625e-05, -0.03187031298875809, -3.0279157726909034e-05, -0.0002155303955078125, -0.006805419921875, -7.62939453125e-05, 0.0, -0.00017762184143066406, -7.486333925044164e-05, -6.4849853515625e-05, -0.000335693359375, -2.09808349609375e-05, -5.340576171875e-05, -0.0002536773681640625, -7.62939453125e-06, -0.0001373291015625, -2.09808349609375e-05, -0.001415252685546875, -0.00011265277862548828, 0.0, -5.14984130859375e-05, 0.0, -0.002144336700439453, -5.7220458984375e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0001354217529296875, -7.510185241699219e-05, 0.0, -0.0008907318115234375, -5.7220458984375e-05, -1.311301275563892e-06, -3.099436753473128e-06, -1.6689270978531567e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -4.0447814524525185, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 89, 19, 112, "Character", "Selector", "<EOS>", 163, 36, 114, "Null", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.02064990997314453, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.775161743164062e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.0007978677749633789, 0.0, -1.9073486328125e-06, -0.00177001953125, -7.43865966796875e-05, -0.014542706310749054, -1.621246337890625e-05, -0.0003414154052734375, -3.743967056274414, -0.0001201629638671875, 0.0, -0.0002727508544921875, -0.0001583099365234375, -5.91278076171875e-05, -0.008669853210449219, -0.11350250244140625, -0.0061435699462890625, -2.2768957933294587e-05, -5.7220458984375e-06, -0.04713916778564453, -0.000164031982421875, -7.82012939453125e-05, -0.031247735023498535, -0.0002231597900390625, -0.000141143798828125, -1.71661376953125e-05, -0.0008487701416015625, -0.00045621395111083984, 0.0, -0.0071582794189453125, -5.14984130859375e-05, -1.907346586449421e-06, -1.7881377516459906e-06, -8.821454684948549e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -4.3363726124521165, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "2", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 2, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.02064990997314453, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.775161743164062e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.0007978677749633789, 0.0, -1.9073486328125e-06, -0.00177001953125, -7.43865966796875e-05, -4.243633270263672, -3.4809112548828125e-05, -7.43865966796875e-05, -0.016775131225585938, -4.1961669921875e-05, 0.0, -0.00044655799865722656, -0.0001031159918056801, -9.34600830078125e-05, -0.0002880096435546875, -7.62939453125e-06, -9.5367431640625e-05, -0.0003719329833984375, -1.71661376953125e-05, -0.0001239776611328125, -5.7220458984375e-05, -0.002048492431640625, -0.00018131732940673828, 0.0, -4.00543212890625e-05, 0.0, -0.0013622045516967773, -1.1444091796875e-05, -0.0001811981201171875, -1.1444091796875e-05, -0.0001430511474609375, -7.891654968261719e-05, 0.0, -0.00066375732421875, -5.91278076171875e-05, -1.311301275563892e-06, -3.3378546504536644e-06, -1.5497182630497264e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -4.994547786570358, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "find_spell_target", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "find_spell_target", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -4.898662567138672, 0.0, -0.0007877349853515625, -5.7220458984375e-06, -0.00017213821411132812, 0.0, -0.0001049041748046875, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.0008494853973388672, 0.0, -3.814697265625e-06, -0.0021266937255859375, -6.67572021484375e-05, -0.014758173376321793, -1.4185905456542969e-05, -0.00029754638671875, -0.024351119995117188, -0.0001735687255859375, 0.0, -0.00015866756439208984, -0.0001147984730778262, -5.14984130859375e-05, -0.0003070831298828125, -7.62939453125e-06, -6.29425048828125e-05, -0.0003185272216796875, -1.33514404296875e-05, -8.20159912109375e-05, -5.91278076171875e-05, -0.00208282470703125, -0.00015461444854736328, 0.0, -4.1961669921875e-05, 0.0, -0.0018104314804077148, -1.1444091796875e-05, -0.0001850128173828125, -9.5367431640625e-06, -0.0001373291015625, -7.700920104980469e-05, 0.0, -0.0006313323974609375, -5.91278076171875e-05, -1.1920922133867862e-06, -3.2186455882765586e-06, -1.5497182630497264e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.find_spell_target,\n            battlecry=Battlecry(Damage(1), CharacterSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -5.950383786491322, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -5.8472771644592285, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.00016999244689941406, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -0.00036466121673583984, 0.0, -3.814697265625e-06, -0.001514434814453125, -6.29425048828125e-05, -0.018050795421004295, -1.239776611328125e-05, -0.0003108978271484375, -0.029850006103515625, -0.0001544952392578125, 0.0, -0.00017380714416503906, -0.00014746181841474026, -5.14984130859375e-05, -0.0003108978271484375, -7.62939453125e-06, -6.67572021484375e-05, -0.0003299713134765625, -1.52587890625e-05, -8.58306884765625e-05, -6.4849853515625e-05, -0.0021839141845703125, -0.00018513202667236328, 0.0, -4.38690185546875e-05, 0.0, -0.0019458532333374023, -1.1444091796875e-05, -0.0001850128173828125, -9.5367431640625e-06, -0.0001373291015625, -7.700920104980469e-05, 0.0, -0.000640869140625, -5.91278076171875e-05, -1.1920922133867862e-06, -3.2186455882765586e-06, -1.5497182630497264e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.018148697367899, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -5.922597408294678, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.0002644062042236328, 0.0, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -0.00041425228118896484, 0.0, -3.814697265625e-06, -0.0013065338134765625, -4.57763671875e-05, -0.01321891788393259, -1.2278556823730469e-05, -0.0003223419189453125, -0.027463912963867188, -0.00016021728515625, 0.0, -0.00016617774963378906, -0.00012207024701638147, -5.7220458984375e-05, -0.0003185272216796875, -5.7220458984375e-06, -6.29425048828125e-05, -0.000324249267578125, -1.33514404296875e-05, -8.58306884765625e-05, -5.91278076171875e-05, -0.0020961761474609375, -0.00014889240264892578, 0.0, -4.1961669921875e-05, 0.0, -0.0017913579940795898, -1.1444091796875e-05, -0.00018310546875, -1.1444091796875e-05, -0.0001373291015625, -7.700920104980469e-05, 0.0, -0.0006313323974609375, -5.91278076171875e-05, -1.1920922133867862e-06, -3.2186455882765586e-06, -1.5497182630497264e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.203882855734257, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -6.102478981018066, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.250640141544864e-05, 0.0, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.0006681680679321289, 0.0, -3.814697265625e-06, -0.0018405914306640625, -6.103515625e-05, -0.013578935526311398, -1.251697449333733e-05, -0.00028228759765625, -0.03219795227050781, -0.000133514404296875, 0.0, -0.00017583370208740234, -0.0001363753544865176, -6.29425048828125e-05, -0.0003185272216796875, -7.62939453125e-06, -6.4849853515625e-05, -0.000347137451171875, -1.52587890625e-05, -8.7738037109375e-05, -5.7220458984375e-05, -0.002197265625, -0.00016987323760986328, 0.0, -4.1961669921875e-05, 0.0, -0.0018676519393920898, -1.1444091796875e-05, -0.0001850128173828125, -9.5367431640625e-06, -0.0001373291015625, -7.700920104980469e-05, 0.0, -0.00064849853515625, -5.91278076171875e-05, -1.1920922133867862e-06, -3.2186455882765586e-06, -1.5497182630497264e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.433994231671242, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 49, 152, "combo", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}, {"arg": "combo", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -5.713894844055176, 0.0, -6.866455078125e-05, 0.0, -1.9073486328125e-06, -0.000308990478515625, -0.0001531839370727539, 0.0, -7.62939453125e-06, -0.0013179779052734375, -2.6702880859375e-05, -0.006829464342445135, -6.198883056640625e-06, -0.0003108978271484375, -0.023950576782226562, -0.0001049041748046875, 0.0, -0.00017368793487548828, -0.00010693070362322032, -3.4332275390625e-05, -0.00030517578125, -7.62939453125e-06, -6.4849853515625e-05, -0.000278472900390625, -1.1444091796875e-05, -9.5367431640625e-05, -7.62939453125e-05, -0.002017974853515625, -0.00015461444854736328, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0018142461776733398, -9.5367431640625e-06, -0.00018310546875, -9.5367431640625e-06, -0.0001373291015625, -7.700920104980469e-05, 0.0, -3.814697265625e-06, -3.24249267578125e-05, -0.5112111568450928, 0.0, -0.0003414154052734375, -7.62939453125e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.07518613338470459, 0.0, -9.5367431640625e-06, -0.0006160736083984375, -4.38690185546875e-05, -0.005781626328825951, -9.775159924174659e-06, -0.00014495849609375, -0.04068946838378906, -8.7738037109375e-05, 0.0, -0.00017201900482177734, -8.380410145036876e-05, -4.1961669921875e-05, -0.0004024505615234375, -7.62939453125e-06, -6.29425048828125e-05, -0.0002193450927734375, -7.62939453125e-06, -0.0001220703125, -7.05718994140625e-05, -0.0022897720336914062, -0.00010311603546142578, 0.0, -4.1961669921875e-05, 0.0, -0.0013145208358764648, -9.5367431640625e-06, -0.0001811981201171875, -1.1444091796875e-05, -0.0001354217529296875, -8.082389831542969e-05, 0.0, -0.0006427764892578125, -5.7220458984375e-05, -1.311301275563892e-06, -3.2186455882765586e-06, -1.6689270978531567e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(1), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.838464616181447, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "2", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "battlecry", "hole2": "COMMON", "hole4": {"args": [{"hole0": 2, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole0": "Ironforge Rifleman", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -3.3566064834594727, -0.0001678466796875, -2.396077979938127e-05, -0.00012493133544921875, -2.0265579223632812e-06, 0.0, -3.838539123535156e-05, -2.0265579223632812e-06, -0.0001087188720703125, 0.0, -0.001438140869140625, 0.0, -0.0001544952392578125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0012311935424804688, 0.0, -9.5367431640625e-06, -0.0018520355224609375, -6.4849853515625e-05, -3.465763807296753, -9.429454803466797e-05, -0.0002117156982421875, -0.0027942657470703125, -3.24249267578125e-05, 0.0, -0.0007172822952270508, -5.877009607502259e-05, -4.76837158203125e-05, -0.00032806396484375, -1.9073486328125e-05, -8.7738037109375e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0001773834228515625, -3.0517578125e-05, -0.0014858245849609375, -0.00015842914581298828, 0.0, -4.9591064453125e-05, 0.0, -0.0017609596252441406, -3.814697265625e-06, -0.000247955322265625, -9.5367431640625e-06, -0.000141143798828125, -7.891654968261719e-05, 0.0, -0.00089263916015625, -5.7220458984375e-05, -1.311301275563892e-06, -3.099436753473128e-06, -1.6689270978531567e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.943066006981439, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 89, 19, 112, "Character", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.02064990997314453, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.775161743164062e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.0007978677749633789, 0.0, -1.9073486328125e-06, -0.00177001953125, -7.43865966796875e-05, -0.014542706310749054, -1.621246337890625e-05, -0.0003414154052734375, -3.743967056274414, -0.0001201629638671875, 0.0, -0.0002727508544921875, -0.0001583099365234375, -5.91278076171875e-05, -0.008669853210449219, -2.2581396102905273, 0.0, -0.06204867362976074, -5.924701690673828e-05, -1.9073486328125e-06, -0.0004215240478515625, -2.6702880859375e-05, -1.9073486328125e-06, -0.78106689453125, -5.7220458984375e-05, -0.002651214599609375, -2.09808349609375e-05, -0.000354766845703125, -4.267692565917969e-05, 0.0, -0.0005435943603515625, -5.53131103515625e-05, -1.5497195136049413e-06, -2.0265558760002023e-06, -1.3113001386955148e-06, 0.0], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.964431282349523, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 89, 19, 112, "Character", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 171, 49, 152, "value", "<EOS>", 21, 117, "0", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "keywords": [{"arg": "value", "value": {"n": 0, "_type": "Num"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.02064990997314453, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.775161743164062e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.0007978677749633789, 0.0, -1.9073486328125e-06, -0.00177001953125, -7.43865966796875e-05, -0.014542706310749054, -1.621246337890625e-05, -0.0003414154052734375, -3.743967056274414, -0.0001201629638671875, 0.0, -0.0002727508544921875, -0.0001583099365234375, -5.91278076171875e-05, -0.008669853210449219, -2.2581396102905273, 0.0, -0.06204867362976074, -5.924701690673828e-05, -1.9073486328125e-06, -0.0004215240478515625, -2.6702880859375e-05, -1.9073486328125e-06, -0.8009309768676758, 0.0, -0.0015811920166015625, -4.9591064453125e-05, -0.002402774291113019, 0.0, -0.0010833740234375, -4.1961669921875e-05, -2.8848207875853404e-05, -2.3841855067985307e-07, -4.3868050852324814e-05, 0.0], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(EnemyPlayer(), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -7.046233500718692, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template5"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -6.953112602233887, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00011265276407357305, 0.0, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -0.0005553960800170898, 0.0, -3.814697265625e-06, -0.00177001953125, -6.103515625e-05, -0.012898650951683521, -1.4185905456542969e-05, -0.0003032684326171875, -0.024885177612304688, -0.000148773193359375, 0.0, -0.00016999244689941406, -0.00012254707689862698, -7.05718994140625e-05, -0.0003261566162109375, -5.7220458984375e-06, -6.103515625e-05, -0.00034332275390625, -1.52587890625e-05, -8.58306884765625e-05, -5.53131103515625e-05, -0.002117156982421875, -0.00015461444854736328, 0.0, -4.1961669921875e-05, 0.0, -0.0018123388290405273, -1.1444091796875e-05, -0.0001850128173828125, -9.5367431640625e-06, -0.0001373291015625, -7.700920104980469e-05, 0.0, -0.0006465911865234375, -5.91278076171875e-05, -1.1920922133867862e-06, -3.2186455882765586e-06, -1.5497182630497264e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -9.379449127142266, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "2", "<EOS>", 172, 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"args": [{"hole0": 1, "_type": "Template17"}, {"keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 2, "_type": "Num"}], "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "IronforgeRifleman", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.02064990997314453, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.775161743164062e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.0007978677749633789, 0.0, -1.9073486328125e-06, -0.00177001953125, -7.43865966796875e-05, -0.014542706310749054, -1.621246337890625e-05, -0.0003414154052734375, -0.024158477783203125, -0.0001506805419921875, 0.0, -0.00016617774963378906, -0.00012838833208661526, -7.82012939453125e-05, -0.000331878662109375, -5.7220458984375e-06, -5.91278076171875e-05, -0.00035858154296875, -1.52587890625e-05, -8.58306884765625e-05, -4.9591064453125e-05, -0.0021495819091796875, -0.00015270709991455078, 0.0, -4.1961669921875e-05, 0.0, -0.0017875432968139648, -1.1444091796875e-05, -0.0001850128173828125, -9.5367431640625e-06, -0.0001373291015625, -7.700920104980469e-05, 0.0, -7.554873466491699, -9.34600830078125e-05, -0.036479949951171875, -4.38690185546875e-05, -3.814697265625e-06, -0.00106048583984375, -9.34600830078125e-05, -0.000118255615234375, 0.0, -5.7220458984375e-06, -0.0007157325744628906, -2.1457672119140625e-06, -0.08921337127685547, -0.0014438629150390625, -4.9591064453125e-05, -9.5367431640625e-06, -0.09985733032226562, -0.00016021728515625, 0.0, -0.012314796447753906, -0.0001506805419921875, -0.00043487548828125, -0.00092315673828125, -3.814697265625e-06, -1.7881377516459906e-06, -4.768370445162873e-07, -0.000152587890625, -9.5367431640625e-06, -2.253007005492691e-05, 0.0, -0.012053489685058594, -0.0001773834228515625, -6.29425048828125e-05, -0.11745785921812057, 0.0, -0.000362396240234375, -0.012150764465332031, -0.049114346504211426, -5.7220458984375e-06, -0.0001049041748046875, -8.7738037109375e-05, -1.1748629808425903, 0.0, -0.030851364135742188, -0.011918067932128906, -0.05753517150878906, -3.814697265625e-06], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_weapon(self, player):\n        return Minion(2, 2, taunt=True, taunt=True)\n"}, {"score": -19.8839168548584, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -19.883907318115234], "inferred_code": ""}], "index": 56}
{"beams": [{"score": -0.020503246790127605, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -0.012510299682617188, -7.62939453125e-06, -1.1920926823449918e-07, 0.0, -4.3023906073358376e-06, 0.0, -0.0010859961621463299, 0.0, -6.866455078125e-05, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -4.5030063781884095, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 67, 129, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template12", "hole2": "taunt"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -4.429603576660156, -0.006122589111328125, -0.000518798828125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001220703125, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.03977680206298828, -2.3841855067985307e-07, -3.814697265625e-05, -0.01607036590576172, -0.0005512237548828125, -1.5139394236030057e-05, -1.1920922133867862e-06, -0.0021354814525693655, 0.0, -0.0008563995361328125, 0.0, -0.0002422332763671875, -1.52587890625e-05, -0.00011444091796875, 0.0], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -5.950738606289846, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Ironfur", " ", "Grizzly", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -5.870663642883301, -3.814697265625e-06, -1.9073486328125e-05, -0.0001163482666015625, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.675719760096399e-06, -3.576278118089249e-07, -5.805492037325166e-05, 0.0, -0.0011539459228515625, -0.000415802001953125, -3.814697265625e-06, -4.2556890548439696e-05, -5.233287811279297e-05, -1.3709059203392826e-05, -0.000118255615234375, 0.0, -1.9073486328125e-06, -1.4066834410186857e-05, -4.768370445162873e-07, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.0006511211395263672, -1.1920928244535389e-07, -0.00032458442728966475, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0021420717239379883, -3.62396240234375e-05, -1.71661376953125e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -0.0003911256790161133, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -1.3470647900248878e-05, -1.9073486328125e-06, -0.0007305145263671875, 0.0, -3.814697265625e-06, 0.0, -5.91278076171875e-05, 0.0, -0.0016678571701049805, -1.9073486328125e-06, -0.0686798095703125, -7.62939453125e-06, 0.0, 0.0, -5.250847607385367e-06, 0.0, -0.0009602286736480892, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -7.016131039837084, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "ForceTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -6.850253582000732, -0.128243088722229, -0.013253798708319664, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -1.251697449333733e-05, -6.079673767089844e-06, -1.52587890625e-05, -7.43865966796875e-05, -9.5367431640625e-06, -7.867813110351562e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -1.1920928244535389e-07, 0.0, -0.0032482147216796875, -7.05718994140625e-05, -6.6756979322235566e-06, -5.543231964111328e-05, -1.3470649719238281e-05, 0.0, -4.768430699186865e-07, 0.0, -0.000759124755859375, 0.0, -0.0003207879781257361, 0.0, -0.000156402587890625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021374225616455078, -2.0265579223632812e-06, -0.01800537109375, -7.62939453125e-06, 0.0, 0.0, -4.302070010453463e-06, 0.0, -0.0011044734856113791, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -7.950923158309216, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template5"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -7.943839073181152, -0.0003070831298828125, 0.0, 0.0, -3.5766245787272055e-07, 0.0], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"score": -8.347686765581699, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "<UNK>Grizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.328588485717773, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -0.012510299682617188, -7.62939453125e-06, -1.1920926823449918e-07, 0.0, -4.3023906073358376e-06, 0.0, -0.0010859961621463299, 0.0, -6.866455078125e-05, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06], "inferred_code": "class <UNK>Grizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -8.410581164408015, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "FREE", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -8.379229545593262, 0.0, -0.004279581364244223, 0.0, -0.0001220703125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -0.00039136409759521484, -4.0531158447265625e-06, -0.020086288452148438, -9.5367431640625e-06, 0.0, -1.1920928244535389e-07, -4.419693141244352e-06, 0.0, -0.0010145892156288028, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -8.545683934428197, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "3", "<EOS>", 37, 117, "3", "<EOS>", 172, 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 3, "_type": "Num"}], "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -4.429603576660156, -0.006122589111328125, -0.000518798828125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001220703125, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -3.4289655685424805, -2.3841855067985307e-07, -0.000278472900390625, -0.0005283355712890625, -0.0001239776611328125, -0.0001239776611328125, -0.000125885009765625, -9.5367431640625e-06, 0.0, -0.01093757152557373, -3.62396240234375e-05, -0.0005931854248046875, -3.62396240234375e-05, -1.33514404296875e-05, -4.649113179766573e-06, -2.3841855067985307e-07, -5.7220458984375e-06, -2.6702880859375e-05, -4.482332951738499e-05, 0.0, -0.0010833740234375, -5.7220458984375e-06, -0.000583648681640625, -0.5712006092071533, -1.1920928244535389e-07, -3.62396240234375e-05, -7.62939453125e-06, -4.9948692321777344e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -0.08712279796600342, 0.0, -0.000225067138671875, 0.0, -0.00021016597747802734, 0.0], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True, taunt=True)\n"}, {"score": -8.973818632727586, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "<UNK>", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "Ironfur<UNK>", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -8.953447341918945, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -0.012510299682617188, -7.62939453125e-06, -1.1920926823449918e-07, 0.0, -4.3023906073358376e-06, 0.0, -0.0010859961621463299, 0.0, -6.866455078125e-05, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06], "inferred_code": "class Ironfur<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -9.076258147234427, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "windfury", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "windfury"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -0.012510299682617188, -7.62939453125e-06, -1.1920926823449918e-07, 0.0, -4.3023906073358376e-06, 0.0, -9.056629180908203, 0.0, -0.00028228759765625, -1.9073486328125e-06, -4.57763671875e-05, 0.0], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, windfury=True)\n"}, {"score": -9.082094517416799, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "BEAST", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "BEAST", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -9.037581443786621, -6.29425048828125e-05, -0.01573169231414795, -1.9073486328125e-06, -0.0002956390380859375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, 0.0, -0.00019860267639160156, -2.0265579223632812e-06, -0.021760940551757812, -9.5367431640625e-06, 0.0, 0.0, -3.94425296690315e-06, 0.0, -0.0009948009392246604, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.BEAST, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -9.122153723711477, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "Ended", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "Ended"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -0.012510299682617188, -7.62939453125e-06, -1.1920926823449918e-07, 0.0, -4.3023906073358376e-06, 0.0, -9.10233211517334, 0.0, -0.00048065185546875, -5.7220458984375e-06, -3.62396240234375e-05, 0.0], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, Ended=True)\n"}, {"score": -9.162692385471864, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 3, "hole0": "Ironfur Grizzly", "_type": "Template1", "hole2": "ALL"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -9.067526817321777, -0.00087738037109375, -5.221230458118953e-05, -3.2424919481854886e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.0728839470175444e-06, -1.1920922133867862e-06, -0.00011610983347054571, 0.0, -0.0914306640625, -1.71661376953125e-05, 0.0, -1.1920928244535389e-07, -7.51199149817694e-06, 0.0, -0.0009618996409699321, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -9.25189406140671, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Ironfur Grizzly", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 3, "hole0": 3, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "IronfurGrizzly", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -4.429603576660156, -0.006122589111328125, -0.000518798828125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001220703125, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.03977680206298828, -2.3841855067985307e-07, -3.814697265625e-05, -4.606114387512207, -0.0010662078857421875, -0.006899884436279535, -9.560585021972656e-05, -0.15471142530441284, -1.9073486328125e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3)\n"}, {"score": -23.617176055908203, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -23.61716651916504], "inferred_code": ""}], "index": 57}
{"beams": [{"score": -0.7689011335337739, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -0.01599133014678955, -9.5367431640625e-06, -0.0001964569091796875, -0.0076694488525390625, -0.0015239715576171875, -1.33514404296875e-05, -0.04923057556152344, -1.52587890625e-05, -0.0023813247680664062, -4.649158654501662e-06, -3.814697265625e-05, -0.05398845672607422, -0.008131027221679688, -0.005710601806640625, -0.00023651123046875, -0.00029003614326938987, -7.62939453125e-06, -0.0035600662231445312, -0.06006622314453125, -9.34600830078125e-05, -0.002330780029296875, -8.58306884765625e-05, -0.23779968917369843, -4.649161837733118e-06, -0.005019187927246094, -0.0016326904296875, -5.14984130859375e-05, -0.0017948150634765625, -0.0002384185791015625, -0.013887154869735241, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -2.116376495544529, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -0.01599133014678955, -9.5367431640625e-06, -0.0001964569091796875, -0.0076694488525390625, -0.0015239715576171875, -1.33514404296875e-05, -0.04923057556152344, -1.52587890625e-05, -0.0023813247680664062, -4.649158654501662e-06, -3.814697265625e-05, -0.05398845672607422, -0.008131027221679688, -0.005710601806640625, -0.00023651123046875, -0.00029003614326938987, -7.62939453125e-06, -0.0035600662231445312, -0.06006622314453125, -9.34600830078125e-05, -0.002330780029296875, -8.58306884765625e-05, -1.5852158069610596, -1.9073486328125e-06, -0.00043487548828125, -0.002941131591796875, -2.288818359375e-05, -0.0031385421752929688, -0.0001697540283203125, -0.015980467200279236, -3.814697265625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -4.0004383237456125, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "game", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"func": {"attr": "check_delayed", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -3.207188606262207, -0.0049591064453125, -4.9710157327353954e-05, -1.9073486328125e-06, -0.06488990783691406, -3.0517578125e-05, -2.6702880859375e-05, -0.061969757080078125, -3.814697265625e-06, 0.0, -0.010488510131835938, 0.0, -0.3044259548187256, 0.0, -0.0954885482788086, -5.1975250244140625e-05], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is Null)\n        game.check_delayed()\n"}, {"score": -4.184540120645146, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -3.374737501144409, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -2.09808349609375e-05, -0.0001697540283203125, -0.028348922729492188, -5.7220458984375e-06, -0.0013217926025390625, 0.0, -0.0006630419520661235, -1.1920928244535389e-07, -0.0018203258514404297, -1.33514404296875e-05, -0.14509475231170654, 0.0, -0.0016994476318359375, -0.00048828125, -0.0002117156982421875, -0.009167671203613281, 0.0, -0.0020427703857421875, 0.0, -0.0020240540616214275, 0.0, -0.0018939971923828125, -8.20159912109375e-05, -0.0001678466796875, -6.103515625e-05, -7.62939453125e-05, -0.0030230283737182617, -5.91278076171875e-05, -0.004191398620605469, -0.002140045166015625, -9.72747802734375e-05, -2.288818359375e-05, -0.0002346038818359375, -1.9073486328125e-06, -0.0031719207763671875, 0.0, -0.006249427795410156, -3.814697265625e-06, -0.0059604644775390625, -0.00011658668518066406, -0.0024148225784301758, -0.00037384033203125, -4.76837158203125e-05, -0.028072357177734375, -0.0001544952392578125, -0.044625282287597656, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.00016796588897705078, 0.0, -0.015744328498840332, -1.1444091796875e-05, -0.0001964569091796875, -0.007602691650390625, -0.00152587890625, -1.33514404296875e-05, -0.048386573791503906, -1.52587890625e-05, -0.0023632049560546875, -4.649158654501662e-06, -3.814697265625e-05, -0.054099082946777344, -0.00811767578125, -0.005726814270019531, -0.00023651123046875, -0.00029003614326938987, -7.62939453125e-06, -0.0035467147827148438, -0.060042381286621094, -9.34600830078125e-05, -0.0023288726806640625, -8.58306884765625e-05, -0.2378440946340561, -4.649161837733118e-06, -0.0050182342529296875, -0.0016307830810546875, -5.14984130859375e-05, -0.0017910003662109375, -0.0002384185791015625, -0.013881909660995007, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.\n            card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -4.221794671934759, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 7, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "IsNot"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -0.01599133014678955, -9.5367431640625e-06, -0.0001964569091796875, -0.0076694488525390625, -0.0015239715576171875, -1.33514404296875e-05, -0.04923057556152344, -1.52587890625e-05, -0.0023813247680664062, -4.649158654501662e-06, -3.814697265625e-05, -3.5269956588745117, -0.0018548965454101562, -0.005576133728027344, -0.000152587890625, -0.00017487996956333518, -1.9073486328125e-06, -0.0051784515380859375, -0.052379608154296875, -0.0001373291015625, -0.002674102783203125, -8.58306884765625e-05, -0.22740814089775085, -4.5299530029296875e-06, -0.0059642791748046875, -0.0020427703857421875, -5.91278076171875e-05, -0.0016574859619140625, -0.000232696533203125, -0.01524184737354517, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is not Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.048725879373279, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -0.01599133014678955, -9.5367431640625e-06, -0.0001964569091796875, -0.0076694488525390625, -0.0015239715576171875, -1.33514404296875e-05, -0.04923057556152344, -1.52587890625e-05, -0.0023813247680664062, -4.649158654501662e-06, -3.814697265625e-05, -0.05398845672607422, -0.008131027221679688, -0.005710601806640625, -0.00023651123046875, -0.00029003614326938987, -7.62939453125e-06, -0.0035600662231445312, -0.06006622314453125, -9.34600830078125e-05, -0.002330780029296875, -8.58306884765625e-05, -0.23779968917369843, -4.649161837733118e-06, -0.005019187927246094, -0.0016326904296875, -5.14984130859375e-05, -0.0017948150634765625, -0.0002384185791015625, -4.2936930656433105, -2.4557111828471534e-05], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -5.111251810422374, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "calculate_attack", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "calculate_attack", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -4.379899024963379, 0.0, -0.0008563995361328125, -0.0011053085327148438, -7.43865966796875e-05, -0.00666046142578125, 0.0, -0.020059585571289062, 0.0, -0.0039002893026918173, 0.0, -0.0018320083618164062, -7.82012939453125e-05, -0.0001049041748046875, -7.82012939453125e-05, -6.67572021484375e-05, -0.004323363304138184, -6.496906280517578e-05, -0.00409698486328125, -0.0023250579833984375, -0.0001010894775390625, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-06, -0.00362396240234375, 0.0, -0.006346702575683594, -3.814697265625e-06, -0.005671501159667969, -0.00011658668518066406, -0.0023823976516723633, -0.00038814544677734375, -4.76837158203125e-05, -0.0299835205078125, -0.00016021728515625, -0.06310749053955078, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.00017178058624267578, 0.0, -0.016077160835266113, -1.1444091796875e-05, -0.0001964569091796875, -0.0074462890625, -0.001529693603515625, -1.33514404296875e-05, -0.04787445068359375, -1.52587890625e-05, -0.002384185791015625, -4.649158654501662e-06, -3.814697265625e-05, -0.053951263427734375, -0.008104324340820312, -0.0056514739990234375, -0.00023651123046875, -0.00029003614326938987, -7.62939453125e-06, -0.0035200119018554688, -0.06012535095214844, -9.5367431640625e-05, -0.002338409423828125, -8.392333984375e-05, -0.23824501037597656, -4.649161837733118e-06, -0.005017280578613281, -0.0016307830810546875, -5.14984130859375e-05, -0.00179290771484375, -0.0002384185791015625, -0.01381229143589735, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.calculate_attack(player.game, lambda\n            x: x.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.163241887087253, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 7, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "IsNot"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -4.416443824768066, -6.29425048828125e-05, -0.03116130828857422, 0.0, -0.0014133453369140625, 0.0, -0.00245821475982666, 0.0, -0.020209431648254395, -5.7220458984375e-06, -0.000148773193359375, -0.008007049560546875, -0.00151824951171875, -1.1444091796875e-05, -0.0711221694946289, -1.9073486328125e-05, -0.0020896196365356445, -5.125993993715383e-06, -4.76837158203125e-05, -0.044112205505371094, -0.009160041809082031, -0.005551338195800781, -0.0002307891845703125, -0.00029897683998569846, -5.7220458984375e-06, -0.004500389099121094, -0.05752849578857422, -9.34600830078125e-05, -0.0023441314697265625, -8.7738037109375e-05, -0.2408166378736496, -4.649161837733118e-06, -0.004748344421386719, -0.001659393310546875, -5.14984130859375e-05, -0.00179290771484375, -0.0002422332763671875, -0.013406860642135143, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is not MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.323109586318452, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -4.523190498352051, 0.0, -0.0001544952392578125, -0.007503509521484375, -0.001110076904296875, -2.288818359375e-05, -0.06676292419433594, -1.33514404296875e-05, -0.0022687911987304688, -4.52994936495088e-06, -3.814697265625e-05, -0.05210590362548828, -0.008665084838867188, -0.006628990173339844, -0.0002574920654296875, -0.00027763834805227816, -5.7220458984375e-06, -0.0028924942016601562, -0.09404850006103516, -9.72747802734375e-05, -0.0022144317626953125, -8.58306884765625e-05, -0.23440252244472504, -4.5299530029296875e-06, -0.0055389404296875, -0.001667022705078125, -5.340576171875e-05, -0.0018520355224609375, -0.0002384185791015625, -0.0141057800501585, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.DEMON)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.422695214018432, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -4.538957595825195, 0.0, -0.1779613494873047, -0.0036439895629882812, -0.000698089599609375, -0.0014944076538085938, 0.0, -0.006911277770996094, 0.0, -0.0058748722076416016, 0.0, -0.00179290771484375, -0.000148773193359375, -0.0001125335693359375, -5.340576171875e-05, -5.7220458984375e-05, -0.004357576370239258, -3.814697265625e-05, -0.005000114440917969, -0.0021181106567382812, -9.34600830078125e-05, -2.288818359375e-05, -0.0002193450927734375, -1.9073486328125e-06, -0.0032672882080078125, 0.0, -0.006442070007324219, -3.814697265625e-06, -0.005564689636230469, -0.00011277198791503906, -0.0024453401565551758, -0.000385284423828125, -4.9591064453125e-05, -0.02944469451904297, -0.000164031982421875, -0.05250263214111328, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.00016224384307861328, 0.0, -0.01586735248565674, -1.1444091796875e-05, -0.0001964569091796875, -0.00757598876953125, -0.00151824951171875, -1.33514404296875e-05, -0.04809093475341797, -1.52587890625e-05, -0.00238037109375, -4.649158654501662e-06, -3.814697265625e-05, -0.053734779357910156, -0.008172035217285156, -0.005671501159667969, -0.0002384185791015625, -0.00029003614326938987, -7.62939453125e-06, -0.0035247802734375, -0.05979633331298828, -9.34600830078125e-05, -0.002330780029296875, -8.392333984375e-05, -0.23775358498096466, -4.649161837733118e-06, -0.0049877166748046875, -0.0016307830810546875, -5.14984130859375e-05, -0.00179290771484375, -0.0002384185791015625, -0.013886797241866589, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.find_spell_target(player.game, lambda\n            x: x.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.841195170453858, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "test": {"left": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -0.01599133014678955, -9.5367431640625e-06, -0.0001964569091796875, -0.0076694488525390625, -0.0015239715576171875, -1.33514404296875e-05, -3.0418968200683594, -1.71661376953125e-05, -0.2982301712036133, -4.1961669921875e-05, -3.4332275390625e-05, 0.0, -0.038958072662353516, -1.9073486328125e-06, -0.03781330585479736, 0.0, -0.18980592489242554, -1.33514404296875e-05, -1.52587890625e-05, -1.3367986679077148, -0.000244140625, -0.007965087890625, -0.0027170181274414062, -8.463859558105469e-05, 0.0, -0.08287239074707031, -0.0045108795166015625, -4.38690185546875e-05, -0.0045146942138671875, -0.0001201629638671875, -0.3902878761291504, -1.52587890625e-05, -0.0548095703125, -0.000751495361328125, -4.57763671875e-05, -0.0017871856689453125, -0.0001468658447265625, -0.024348868057131767, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if self.target.health is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -8.818450064015252, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 62, 98, 15, 91, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 177, 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "5", "<EOS>", 35, 112, "self", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"body": [{"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 5, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "test": {"left": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -0.01599133014678955, -9.5367431640625e-06, -0.0001964569091796875, -0.0076694488525390625, -0.0015239715576171875, -1.33514404296875e-05, -0.04923057556152344, -1.52587890625e-05, -0.0023813247680664062, -4.649158654501662e-06, -3.814697265625e-05, -0.05398845672607422, -0.008131027221679688, -0.005710601806640625, -0.00023651123046875, -0.00029003614326938987, -7.62939453125e-06, -0.0035600662231445312, -3.6553144454956055, -0.0034236907958984375, -0.0020856857299804688, -8.20159912109375e-05, -0.0012388229370117188, -3.814697265625e-06, -0.001140594482421875, 0.0, -0.0001010894775390625, 0.0, -0.10332131385803223, 0.0, -0.01306915283203125, 0.0, -0.047605037689208984, -1.9073486328125e-06, -3.814697265625e-06, -1.5599489212036133, -3.814697265625e-05, -0.08719539642333984, -0.00211334228515625, -4.518031710176729e-05, 0.0, -0.3364877700805664, -0.0004863739013671875, -1.9073486328125e-05, -1.52587890625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.3749260902404785, 0.0, -0.0007724761962890625, 0.0, -1.9073486328125e-05, 0.0, -0.10774993896484375, -1.9073486328125e-06, -0.10397147387266159, -9.655952453613281e-06, -0.010250329971313477, -9.5367431640625e-06, -7.62939453125e-06, -0.00041866302490234375, -1.9073486328125e-06, -0.0021157264709472656, -1.9073486328125e-06, -0.0053997039794921875, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -3.24249267578125e-05, -0.0001201629638671875, -8.0108642578125e-05, 0.0, -1.0257325172424316, -2.0265558760002023e-06, -0.001252293586730957, -3.814697265625e-06, -2.09808349609375e-05, -0.47063159942626953, -3.0517578125e-05, -0.025257812812924385, -3.814697265625e-06, -5.7220458984375e-05, -3.814697265625e-06, -6.29425048828125e-05, -1.9073468138230965e-06, -0.0010738372802734375, -0.026584625244140625, -5.7220458984375e-06, -0.07213878631591797, -8.58306884765625e-05, -0.329927921295166, 0.0], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            if self.target.health is Null:\n                target = game.random_choice(targets)\n                target.damage(5, self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -9.712824119804537, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 62, 98, 15, 91, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 177, 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, "args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"body": [{"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "test": {"left": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If"}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}]}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "KillCommand", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -0.01599133014678955, -9.5367431640625e-06, -0.0001964569091796875, -0.0076694488525390625, -0.0015239715576171875, -1.33514404296875e-05, -0.04923057556152344, -1.52587890625e-05, -0.0023813247680664062, -4.649158654501662e-06, -3.814697265625e-05, -0.05398845672607422, -0.008131027221679688, -0.005710601806640625, -0.00023651123046875, -0.00029003614326938987, -7.62939453125e-06, -0.0035600662231445312, -3.6553144454956055, -0.0034236907958984375, -0.0020856857299804688, -8.20159912109375e-05, -0.0012388229370117188, -3.814697265625e-06, -0.001140594482421875, 0.0, -0.0001010894775390625, 0.0, -0.10332131385803223, 0.0, -0.01306915283203125, 0.0, -0.047605037689208984, -1.9073486328125e-06, -3.814697265625e-06, -1.5599489212036133, -3.814697265625e-05, -0.08719539642333984, -0.00211334228515625, -4.518031710176729e-05, 0.0, -0.3364877700805664, -0.0004863739013671875, -1.9073486328125e-05, -1.52587890625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.3749260902404785, 0.0, -0.0007724761962890625, 0.0, -1.9073486328125e-05, 0.0, -0.10774993896484375, -1.9073486328125e-06, -0.10397147387266159, -9.655952453613281e-06, -0.010250329971313477, -9.5367431640625e-06, -7.62939453125e-06, -0.00041866302490234375, -1.9073486328125e-06, -0.0021157264709472656, -1.9073486328125e-06, -0.0053997039794921875, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -3.24249267578125e-05, -0.0001201629638671875, -8.0108642578125e-05, 0.0, -1.0257325172424316, -2.0265558760002023e-06, -0.001252293586730957, -3.814697265625e-06, -2.09808349609375e-05, -0.9874153137207031, -0.000614166259765625, -0.44793200492858887, -2.9802317840221804e-06, -0.0001049041748046875, -1.9073486328125e-06, -4.9591064453125e-05, -1.728534698486328e-05, -8.392333984375e-05, -0.036998748779296875, -5.7220458984375e-06, -0.0780496597290039, -7.2479248046875e-05, -0.26889172196388245, 0.0], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            if self.target.health is Null:\n                target = game.random_choice(targets)\n                target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -16.887718200683594, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -16.8876953125], "inferred_code": "break\n"}, {"score": -22.535606384277344, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -22.53558921813965], "inferred_code": ""}], "index": 58}
{"beams": [{"score": -0.01338361861564863, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"n": 1, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damage"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -0.011492729187011719, -0.000308990478515625, -0.00026702880859375, -3.814697265625e-05, -0.0002609454677440226, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -5.771255980241101, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -4.601591110229492, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -9.918212890625e-05, -7.62939453125e-06, -0.000209808349609375, -9.5367431640625e-06, -1.9073486328125e-06, -0.002732515335083008, -3.099440846199286e-06, -2.47955322265625e-05, -0.10536766052246094, -0.018988609313964844, -7.2479248046875e-05, -1.9073486328125e-06, -0.026906609535217285, -0.8933809995651245, -6.568431854248047e-05, -0.000339508056640625, -9.918212890625e-05, -5.7220458984375e-06, -0.0006541013717651367, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.06397294998168945, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.254413604736328e-05, -0.000316619873046875, 0.0, -0.000125885009765625, -0.0016765594482421875, 0.0, -5.14984130859375e-05, -7.62939453125e-06, -0.025545233860611916, -2.0384783056215383e-05, -7.62939453125e-06, -0.00986480712890625, -0.0001239776611328125, -0.016687890514731407, -1.1920928244535389e-07, -0.0001010894775390625, 0.0, -0.0010266304016113281, -3.266334533691406e-05, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(player=BothPlayer()\n            ), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -6.725955630647938, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Used", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnUsed", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -4.601591110229492, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -9.918212890625e-05, -7.62939453125e-06, -0.000209808349609375, -9.5367431640625e-06, -1.9073486328125e-06, -0.002732515335083008, -3.099440846199286e-06, -2.47955322265625e-05, -0.10536766052246094, -0.018988609313964844, -7.2479248046875e-05, -1.9073486328125e-06, -0.026906609535217285, -1.822137713432312, -0.001074671745300293, -0.0021953582763671875, -8.392333984375e-05, -3.814697265625e-06, -0.010535955429077148, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0769873857498169, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, -0.000331878662109375, 0.0, -0.0001163482666015625, -0.0019359588623046875, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -0.027064194902777672, -2.0623201635316946e-05, -7.62939453125e-06, -0.009087562561035156, -0.000125885009765625, -0.015801826491951942, -1.1920928244535389e-07, -0.0001087188720703125, 0.0, -0.0010950565338134766, -3.457069396972656e-05, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnUsed(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -7.148779974288452, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Minion", "Died", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "MinionDied", "_type": "Template18"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -4.601591110229492, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -9.918212890625e-05, -7.62939453125e-06, -0.000209808349609375, -9.5367431640625e-06, -1.9073486328125e-06, -0.002732515335083008, -3.099440846199286e-06, -2.47955322265625e-05, -2.3060922622680664, -1.1444091796875e-05, -0.09947369992733002, -0.06314229965209961, -4.88758041683468e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.801417031150777e-05, -0.00024247169494628906, 0.0, -8.96453857421875e-05, -0.0014314651489257812, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04449423775076866, -2.7060490538133308e-05, -7.62939453125e-06, -0.005274772644042969, -0.0001277923583984375, -0.020491043105721474, -1.1920928244535389e-07, -0.0001678466796875, 0.0, -0.0018118619918823242, -3.826618194580078e-05, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(MinionDied(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -7.695190402652649, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Damaged", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "1", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "TurnDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": 1, "_type": "Template15"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "effects"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -4.601591110229492, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -9.918212890625e-05, -7.62939453125e-06, -0.000209808349609375, -9.5367431640625e-06, -1.9073486328125e-06, -0.002732515335083008, -3.099440846199286e-06, -2.47955322265625e-05, -0.10536766052246094, -0.018988609313964844, -7.2479248046875e-05, -1.9073486328125e-06, -0.026906609535217285, -2.280219793319702, -1.0132769602932967e-05, -0.0047550201416015625, -0.00066375732421875, -2.6702880859375e-05, -0.11490213871002197, -9.34600830078125e-05, -6.29425048828125e-05, 0.0, -0.4898388385772705, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.491474151611328e-05, -0.00028228759765625, 0.0, -9.72747802734375e-05, -0.001544952392578125, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.019646035507321358, -2.0980827684979886e-05, -7.62939453125e-06, -0.008869171142578125, -0.0001201629638671875, -0.015726199373602867, -1.1920928244535389e-07, -0.000102996826171875, 0.0, -0.0010025501251220703, -3.266334533691406e-05, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnDamaged(player=EnemyPlayer(\n            )), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score": -8.017648083624977, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "buffs", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": "2", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "buffs"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -7.153002738952637, 0.0, -0.000438690185546875, -1.33514404296875e-05, -0.00016021728515625, -3.0517578125e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.07576370239257812, -5.841255187988281e-06, -0.47394275665283203, -0.0203094482421875, -1.1444091796875e-05, -0.2924172282218933, -0.0004944079555571079], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, buffs=[Buff(2())])\n"}, {"score": -8.884613018811137, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 69, 137, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template2", "hole2": "ALL"}, {"hole1": 2, "hole3": {"n": 1, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damage"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -8.866086959838867, -0.0014820098876953125, -0.00015376816736534238, -5.888938903808594e-05, -2.1576648578047752e-05, -1.9073486328125e-06, -1.0014482541009784e-05, 0.0, -6.079670856706798e-05, 0.0, -0.00102996826171875, -0.0009365081787109375, -4.768370445162873e-07, 0.0, -9.894840331980959e-06, 0.0, -0.012585163116455078, -0.00115203857421875, -9.34600830078125e-05, -2.86102294921875e-05, -0.00043356092646718025, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -9.122775192373979, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 11, 81, 19, 112, "spare_part_list", "<EOS>", "MURLOC", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"attr": "MURLOC", "value": {"id": "spare_part_list", "_type": "Name"}, "_type": "Attribute"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damage"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -0.011492729187011719, -0.000308990478515625, -8.362255096435547, -0.00366973876953125, -0.0007152557373046875, -3.814697265625e-06, -0.271881103515625, 0.0, -0.47143077850341797, -1.9073486328125e-06], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=spare_part_list.MURLOC)\n"}, {"score": -9.339678878897416, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 117, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"n": 2, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damage"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -0.011492729187011719, -0.000308990478515625, -0.00026702880859375, -3.814697265625e-05, -9.326556205749512, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=2)\n"}, {"score": -9.81353103649019, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 117, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"n": 5, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damage"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -0.011492729187011719, -0.000308990478515625, -0.00026702880859375, -3.814697265625e-05, -9.800400733947754, -7.62939453125e-06], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=5)\n"}, {"score": -9.86790000926851, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 117, "0", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"n": 0, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damage"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -0.011492729187011719, -0.000308990478515625, -0.00026702880859375, -3.814697265625e-05, -9.854763984680176, -1.33514404296875e-05], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=0)\n"}, {"score": -9.887089000492438, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "Is", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"n": 1, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damageIs"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -0.011492729187011719, -9.833884239196777, -0.03273212909698486, -0.007399559020996094, -4.38690185546875e-05, -0.0005206972709856927, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damageIs=1)\n"}, {"score": -9.93047683482439, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"n": 1, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "MAGE"}], "name": "KoboldGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -9.923067092895508, -5.841255187988281e-06, -0.0054569244384765625, -3.814697265625e-05, -0.0008930515614338219, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, MAGE=1)\n"}, {"score": -10.102607402311605, "choice_history": [50, 111, 176, 58, 90, "Force", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template1", "hole2": "ALL"}, {"hole1": 2, "hole3": {"n": 1, "_type": "Num"}, "hole0": 2, "_type": "Template4", "hole2": "spell_damage"}], "name": "ForceGeomancer", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.445549964904785, -0.641315221786499, -0.0016726627945899963, -1.9073486328125e-06, 0.0, 0.0, -2.288818359375e-05, -2.0742414562846534e-05, -2.0265579223632812e-06, -0.000370025634765625, -0.0002117156982421875, -0.000141143798828125, -5.006777428206988e-06, -2.2768967028241605e-05, -3.516612196108326e-05, -1.9073486328125e-06, -3.337912858114578e-06, 0.0, -2.562999361543916e-05, 0.0, -0.000133514404296875, -6.29425048828125e-05, -9.536738616588991e-07, 0.0, -1.5259120118571445e-05, 0.0, -0.012101054191589355, -0.0002918243408203125, -0.000263214111328125, -3.814697265625e-05, -0.00025450772955082357, 0.0], "inferred_code": "class ForceGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -22.409610748291016, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -22.40958595275879], "inferred_code": ""}], "index": 59}
{"beams": [{"score": -0.15026369214160695, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "<UNK>Elite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -0.07562899589538574, 0.0, -0.0035266876220703125, -7.62939453125e-06, -6.675719760096399e-06, -9.536738616588991e-07, -0.00013566015695687383, 0.0, -0.0031852673273533583, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -2.8861445457637274, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "ALL"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "<UNK>Elite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -2.814216375350952, 0.0, -0.0015716552734375, -7.62939453125e-06, -9.179114385915454e-06, -1.1920922133867862e-06, -0.0001443624496459961, 0.0, -0.002405163599178195, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -2.09808349609375e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -3.180366435664837, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "ForceTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.026803731918335, -0.07397225499153137, -0.001212610979564488, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.318092346191406e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0007171630859375, -0.0001201629638671875, -2.2172682292875834e-05, -3.337859743623994e-05, -1.6689286894688848e-06, -5.7220458984375e-06, -7.391003236989491e-06, 0.0, -0.07088446617126465, 0.0, -0.0031795501708984375, -5.7220458984375e-06, -8.58306884765625e-06, -9.536738616588991e-07, -0.00013566015695687383, 0.0, -0.003039474366232753, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -4.755842115385235, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "MAGE"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "<UNK>Elite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -4.681447505950928, 0.0, -0.0018405914306640625, -1.71661376953125e-05, -9.298322765971534e-06, -8.344646857949556e-07, -0.00013220308755990118, 0.0, -0.004636045079678297, 0.0, -4.00543212890625e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -5.400441902578905, "choice_history": [50, 111, 176, 58, 90, "Kor'kron", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "Kor'kronElite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.3158183097839355, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -0.07562899589538574, 0.0, -0.0035266876220703125, -7.62939453125e-06, -6.675719760096399e-06, -9.536738616588991e-07, -0.00013566015695687383, 0.0, -0.0031852673273533583, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -5.890229252055292, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "ROGUE"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "<UNK>Elite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -5.816503047943115, 0.0, -0.0024280548095703125, -1.71661376953125e-05, -6.914137884450611e-06, -1.4305104514278355e-06, -0.00013959406351204962, 0.0, -0.0033421486150473356, 0.0, -6.67572021484375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -5.985101621489662, "choice_history": [50, 111, 176, 58, 90, "Force", "Tank", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "ALL"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "ForceTank", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.026803731918335, -0.07397225499153137, -0.001212610979564488, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.318092346191406e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0007171630859375, -0.0001201629638671875, -2.2172682292875834e-05, -3.337859743623994e-05, -1.6689286894688848e-06, -5.7220458984375e-06, -7.391003236989491e-06, 0.0, -2.877885580062866, 0.0, -0.001720428466796875, -7.62939453125e-06, -8.940695806813892e-06, -1.0728830375228426e-06, -0.00014257431030273438, 0.0, -0.0022100182250142097, 0.0, -6.67572021484375e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -6.149369388956302, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 3, "hole0": 4, "_type": "Template5"}], "name": "<UNK>Elite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -0.07562899589538574, 0.0, -6.005268096923828, -0.0006656646728515625, -1.1682510375976562e-05, 0.0, -0.00010895729064941406, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -6.897846341720879, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "<UNK>", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "<UNK><UNK>", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -6.748759746551514, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -0.07562899589538574, 0.0, -0.0035266876220703125, -7.62939453125e-06, -6.675719760096399e-06, -9.536738616588991e-07, -0.00013566015695687383, 0.0, -0.0031852673273533583, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -6.906456858041793, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "taunt"}], "name": "<UNK>Elite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -0.07562899589538574, 0.0, -0.0035266876220703125, -7.62939453125e-06, -6.675719760096399e-06, -9.536738616588991e-07, -0.00013566015695687383, 0.0, -6.759347915649414, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n"}, {"score": -7.161707919874061, "choice_history": [50, 111, 176, 58, 90, "hand", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "charge"}], "name": "handElite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.079835414886475, -0.00039403344271704555, -7.092952728271484e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -5.066394805908203e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.00057220458984375, -8.96453857421875e-05, -1.3232143828645349e-05, -3.6954868846805766e-05, -1.6689286894688848e-06, -5.7220458984375e-06, -7.629419087606948e-06, 0.0, -0.07358300685882568, 0.0, -0.0037021636962890625, -7.62939453125e-06, -8.463859558105469e-06, -9.536738616588991e-07, -0.00013375280832406133, 0.0, -0.003046984551474452, 0.0, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class handElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -7.270276934030562, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "stealth", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "stealth"}], "name": "<UNK>Elite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -0.07562899589538574, 0.0, -0.0035266876220703125, -7.62939453125e-06, -6.675719760096399e-06, -9.536738616588991e-07, -0.00013566015695687383, 0.0, -7.123208045959473, -1.9073486328125e-06, -4.1961669921875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, stealth=True)\n"}, {"score": -8.119453579259464, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "4", "<EOS>", 37, 117, "3", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template1", "hole2": "WARRIOR"}, {"body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"n": 3, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Elite", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -0.07562899589538574, 0.0, -7.029119491577148, -1.52587890625e-05, -0.000942230224609375, -3.814697265625e-06, 0.0, -0.0003528594970703125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.7008695602416992, -1.1920928244535389e-07, -0.0004215240478515625, -0.0033130645751953125, -0.000164031982421875, -0.0025262832641601562, -0.006350517272949219, -0.001117706298828125, 0.0, -0.00016653536295052618, -1.33514404296875e-05, -0.000202178955078125, -0.0001277923583984375, -3.814697265625e-06, -3.6954807001166046e-06, -9.298280929215252e-06, -0.027747154235839844, -1.9073486328125e-06, -0.010775327682495117, 0.0, -0.054518699645996094, -3.4332275390625e-05, -0.000148773193359375, -0.007855653762817383, -1.33514404296875e-05, -3.814697265625e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0003948211669921875, -0.0007915496826171875, -0.12783825397491455, 0.0, -0.00012969970703125, -5.7220458984375e-06, -4.00543212890625e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, taunt=True)\n"}, {"score": -18.001296997070312, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -18.001277923583984], "inferred_code": "break\n"}, {"score": -22.576419830322266, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -22.576404571533203], "inferred_code": ""}], "index": 60}
{"beams": [{"score": -0.14971357070302815, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 46, 135, "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"hole0": "MinionSelector", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "auras"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -0.11322402954101562, -7.62939453125e-06, -5.722029527532868e-06, 0.0, -0.00279911607503891, -1.0728830375228426e-06, -0.005867588333785534, -2.2053714928915724e-05, -0.0003032684326171875, -0.00037384033203125, -0.0002613067626953125, -0.0012722015380859375, -6.4849853515625e-05, -3.24249267578125e-05, 0.0, -7.832050323486328e-05, -2.09808349609375e-05, -0.0009059906005859375, -0.0008296966552734375, -0.0001506805419921875, -0.0003097057342529297, -8.785724639892578e-05, -0.007015228271484375, -1.33514404296875e-05, -0.0005190644878894091, -0.0053555965423583984, -4.5299530029296875e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -2.605828041536114, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "4", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 46, 135, "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 4, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"hole0": "MinionSelector", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -2.241002082824707, -2.6702880859375e-05, -0.0002899169921875, -0.0001811981201171875, -2.47955322265625e-05, -0.000743865966796875, -0.000186920166015625, -1.9073486328125e-05, -1.9073486328125e-06, -0.000797271728515625, -0.14966511726379395, -4.768370445162873e-07, -1.33514404296875e-05, -0.00196075439453125, -0.0005664825439453125, -8.20159912109375e-05, -0.00086212158203125, -1.1444091796875e-05, 0.0, -0.0004302262095734477, -2.288818359375e-05, -0.0004291534423828125, -0.0002079010009765625, -1.9073486328125e-06, -0.00030894222436472774, -4.768370445162873e-07, -0.019689559936523438, -6.29425048828125e-05, -0.0014979835832491517, -7.152555099310121e-07, -0.037573814392089844, -3.814697265625e-06, -2.86102294921875e-05, -0.012719745747745037, -2.0265579223632812e-06, -0.0010700225830078125, -5.14984130859375e-05, -0.0035630464553833008, 0.0, -0.0002536773681640625, -9.5367431640625e-06, -0.02576267719268799, 0.0, -0.0075016021728515625, -2.86102294921875e-05, -0.0002346038818359375, -0.0022487640380859375, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -8.821487426757812e-05, -7.62939453125e-06, -0.00018310546875, -0.08131980895996094, -0.0002040863037109375, -0.0003173327131662518, -1.3470649719238281e-05, -0.0016002655029296875, -3.814697265625e-06, -0.0003989674150943756, -0.001332402229309082, -2.622604142743512e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, charge=True, auras=[Aura(ChangeAttack(1),\n            MinionSelector())])\n"}, {"score": -5.296139666646752, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 67, 129, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 46, 135, "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"hole0": "MinionSelector", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template12", "hole2": "auras"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -2.241002082824707, -2.6702880859375e-05, -0.0002899169921875, -0.0001811981201171875, -2.47955322265625e-05, -0.000743865966796875, -0.000186920166015625, -1.9073486328125e-05, -1.9073486328125e-06, -0.000797271728515625, -2.207084894180298, -6.198883056640625e-06, -3.24249267578125e-05, -0.1435556411743164, -0.0062274932861328125, -8.916457591112703e-05, -2.0503857740550302e-05, -0.2875426709651947, -2.3841855067985307e-07, -0.05146943777799606, -4.768370445162873e-07, -0.29465198516845703, -0.0006866455078125, -0.0002689361572265625, -0.0020647048950195312, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.0001914501190185547, -7.62939453125e-06, -0.001613616943359375, -0.03372478485107422, -0.0001201629638671875, -0.00018465517496224493, -2.491474151611328e-05, -0.007816314697265625, -7.62939453125e-06, -0.0013497211039066315, -0.0038895606994628906, -4.649161837733118e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -5.657312805284022, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 46, 135, "Minion", "Died", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"hole0": "MinionDied", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "auras"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -0.11322402954101562, -7.62939453125e-06, -5.722029527532868e-06, 0.0, -0.00279911607503891, -1.0728830375228426e-06, -0.005867588333785534, -2.2053714928915724e-05, -0.0003032684326171875, -0.00037384033203125, -0.0002613067626953125, -0.0012722015380859375, -6.4849853515625e-05, -3.24249267578125e-05, 0.0, -7.832050323486328e-05, -2.09808349609375e-05, -0.0009059906005859375, -0.0008296966552734375, -0.0001506805419921875, -0.0003097057342529297, -8.785724639892578e-05, -0.007015228271484375, -1.33514404296875e-05, -0.0005190644878894091, -5.512955188751221, -4.172325134277344e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionDied())])\n"}, {"score": -5.794385222004934, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "auras"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -0.11322402954101562, -7.62939453125e-06, -5.722029527532868e-06, 0.0, -0.00279911607503891, -1.0728830375228426e-06, -0.005867588333785534, -2.2053714928915724e-05, -0.0003032684326171875, -0.00037384033203125, -0.0002613067626953125, -0.0012722015380859375, -6.4849853515625e-05, -3.24249267578125e-05, 0.0, -7.832050323486328e-05, -2.09808349609375e-05, -0.0009059906005859375, -0.0008296966552734375, -0.0001506805419921875, -0.0003097057342529297, -8.785724639892578e-05, -4.986715316772461, -0.0003032684326171875, -5.340576171875e-05, 0.0, -0.00017547607421875, -6.103515625e-05, 0.0, -1.9073486328125e-06, -0.5041446685791016, -5.7220458984375e-05, -0.0004520416259765625, 0.0, -0.0011540651321411133, -0.0002676248550415039, -4.38690185546875e-05, -1.1444091796875e-05, -6.103515625e-05, 0.0, -0.1621236801147461, -0.0002460479736328125, -1.919269561767578e-05, -1.9073486328125e-06, -0.001667022705078125, -1.919269561767578e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n"}, {"score": -6.142129752773911, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "enrage", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 46, 135, "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"hole0": "MinionSelector", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "enrage"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -0.11322402954101562, -7.62939453125e-06, -5.722029527532868e-06, 0.0, -0.00279911607503891, -1.0728830375228426e-06, -5.998488903045654, -1.9073486328125e-05, -0.000125885009765625, -0.000171661376953125, -0.000247955322265625, -0.001312255859375, -4.76837158203125e-05, -2.288818359375e-05, 0.0, -7.641315460205078e-05, -1.9073486328125e-05, -0.0007915496826171875, -0.000637054443359375, -0.000152587890625, -0.00034332275390625, -7.641315460205078e-05, -0.007350921630859375, -1.33514404296875e-05, -0.0004721225704997778, -0.0055310726165771484, -4.5299530029296875e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -6.183628509699673, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "2", "<EOS>", 37, 117, "4", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 46, 135, "Minion", "<UNK>", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 4, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"elts": [{"args": [{"hole0": "Minion<UNK>", "_type": "Template18"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -2.241002082824707, -2.6702880859375e-05, -0.0002899169921875, -0.0001811981201171875, -2.47955322265625e-05, -0.000743865966796875, -0.000186920166015625, -1.9073486328125e-05, -1.9073486328125e-06, -0.000797271728515625, -0.14966511726379395, -4.768370445162873e-07, -1.33514404296875e-05, -0.00196075439453125, -0.0005664825439453125, -8.20159912109375e-05, -0.00086212158203125, -1.1444091796875e-05, 0.0, -0.0004302262095734477, -2.288818359375e-05, -0.0004291534423828125, -0.0002079010009765625, -1.9073486328125e-06, -0.00030894222436472774, -4.768370445162873e-07, -0.019689559936523438, -6.29425048828125e-05, -0.0014979835832491517, -7.152555099310121e-07, -0.037573814392089844, -3.814697265625e-06, -2.86102294921875e-05, -0.012719745747745037, -2.0265579223632812e-06, -0.0010700225830078125, -5.14984130859375e-05, -0.0035630464553833008, 0.0, -0.0002536773681640625, -9.5367431640625e-06, -0.02576267719268799, 0.0, -0.0075016021728515625, -2.86102294921875e-05, -0.0002346038818359375, -0.0022487640380859375, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -8.821487426757812e-05, -7.62939453125e-06, -0.00018310546875, -2.5977954864501953, -0.0020952224731445312, -0.09922601282596588, -0.2264576554298401, -0.012182565405964851, -0.006413459777832031, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.07367706298828125, -5.91278076171875e-05, 0.0, -5.53131103515625e-05, -0.4297962188720703, -3.4332275390625e-05, -0.0001220703125, -1.9073486328125e-06, -0.005433559417724609, -0.0003707408905029297, -4.971027374267578e-05, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.20768356323242188, -6.4849853515625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.001377105712890625, -1.33514404296875e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, charge=True, auras=[Aura(Minion<UNK>(),\n            MinionSelector(IsType(MINION_TYPE.BEAST)))])\n"}, {"score": -6.499080054455902, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 46, 135, "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"hole0": "MinionSelector", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "auras"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -6.387828826904297, -1.9073486328125e-06, -0.0001277923583984375, -7.033342626527883e-06, -1.0251998901367188e-05, -3.814697265625e-06, 0.0, -0.0005077123641967773, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -3.0875205993652344e-05, 0.0, -0.004954312928020954, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, -5.53131103515625e-05, -1.9073486328125e-05, -0.000774383544921875, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -1.9073486328125e-06, -3.123283386230469e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -9.918212890625e-05, 0.0, -0.0018036365509033203, -2.861022494471399e-06, -0.07431602478027344, -7.62939453125e-06, -5.483612312673358e-06, 0.0, -0.002268653130158782, -1.0728830375228426e-06, -0.005287664942443371, -2.5987619665102102e-05, -0.0002880096435546875, -0.00034332275390625, -0.000278472900390625, -0.0013904571533203125, -6.67572021484375e-05, -3.4332275390625e-05, 0.0, -7.832050323486328e-05, -2.09808349609375e-05, -0.000896453857421875, -0.0006389617919921875, -0.0001506805419921875, -0.00030982494354248047, -8.404254913330078e-05, -0.0075664520263671875, -1.33514404296875e-05, -0.00048225652426481247, -0.0054166316986083984, -4.5299530029296875e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -6.737434434922392, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Minion", "Has", "Attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"hole0": "MinionHasAttack", "_type": "Template18"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "auras"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -0.11322402954101562, -7.62939453125e-06, -5.722029527532868e-06, 0.0, -0.00279911607503891, -1.0728830375228426e-06, -0.005867588333785534, -2.2053714928915724e-05, -0.0003032684326171875, -0.00037384033203125, -0.0002613067626953125, -0.0012722015380859375, -6.4849853515625e-05, -3.24249267578125e-05, 0.0, -7.832050323486328e-05, -2.09808349609375e-05, -0.0009059906005859375, -0.0008296966552734375, -0.0001506805419921875, -0.0003097057342529297, -8.785724639892578e-05, -4.986715316772461, -0.0003032684326171875, -5.340576171875e-05, 0.0, -0.00017547607421875, -6.103515625e-05, 0.0, -1.9073486328125e-06, -0.9380578994750977, -0.00133514404296875, -0.22882038354873657, -0.4160810708999634, -0.02902122400701046, -2.503394853192731e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MinionHasAttack()))])\n"}, {"score": -6.9141659419085215, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Leokk", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 46, 135, "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"hole1": 3, "hole3": "minion_type", "hole2": "COMMON", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole0": "Leokk", "_type": "Template6"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"hole0": "MinionSelector", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template4", "hole2": "auras"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -6.857666969299316, -0.0049762725830078125, -0.00040344358421862125, -1.4305104514278355e-06, -0.0016479298938065767, -9.655952453613281e-06, -0.005262494087219238, 0.0, -0.0005401372327469289, 0.0, -1.9073486328125e-05, 0.0, -0.0001850128173828125, 0.0, -4.00543212890625e-05, 0.0, -0.0007195472717285156, -5.7220440794480965e-06, -0.010345458984375, -1.1444091796875e-05, -7.033323527139146e-06, 0.0, -0.00841648131608963, -1.0728830375228426e-06, -0.003981652203947306, -2.6702873583417386e-05, -0.00026702880859375, -0.0002651214599609375, -0.0001888275146484375, -0.0014905929565429688, -0.000171661376953125, -4.1961669921875e-05, 0.0, -7.832050323486328e-05, -1.52587890625e-05, -0.000843048095703125, -0.0008029937744140625, -0.000141143798828125, -0.00028216835926286876, -6.496906280517578e-05, -0.006539344787597656, -2.6702880859375e-05, -0.0009911998640745878, -0.007113933563232422, -4.5299530029296875e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -7.172096999948707, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 2, "hole0": 2, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -2.241002082824707, -2.6702880859375e-05, -0.0002899169921875, -0.0001811981201171875, -2.47955322265625e-05, -0.000743865966796875, -0.000186920166015625, -1.9073486328125e-05, -1.9073486328125e-06, -0.000797271728515625, -2.207084894180298, -6.198883056640625e-06, -3.24249267578125e-05, -2.541769027709961, -0.01314544677734375, -0.0014321062481030822, -5.483625955093885e-06, -0.15516021847724915, 0.0], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(2, 2)\n"}, {"score": -7.262394586799786, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "4", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template4", "hole2": "4"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -0.11322402954101562, -7.62939453125e-06, -5.722029527532868e-06, 0.0, -0.00279911607503891, -1.0728830375228426e-06, -6.7885894775390625, 0.0, -0.3269195556640625, -0.0011615753173828125, -0.01949131488800049, -7.62939453125e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, 4=True)\n"}, {"score": -7.671356396937334, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template5"}], "name": "Leokk", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -7.661105155944824, -3.0517578125e-05, -8.225406418205239e-06, -1.1920928244535389e-07, -2.4557097276556306e-05, -3.576278118089249e-07], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -18.20667266845703, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -18.206666946411133], "inferred_code": "break\n"}, {"score": -24.12417221069336, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -24.12416648864746], "inferred_code": ""}], "index": 61}
{"beams": [{"score": -0.5890108607890667, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 70, 138, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": "<UNK> Justice", "_type": "Template3", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -0.3551759719848633, -8.392333984375e-05, -0.023113638162612915, -0.000629425048828125, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00014197865675669163, -2.0265579223632812e-06, -0.01928555965423584, -1.9073486328125e-06, -0.14394080638885498, 0.0, -0.0005321502685546875, 0.0, -0.003894805908203125, -0.00028228759765625, 0.0, -0.0008258819580078125, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -8.0108642578125e-05, -0.0001659393310546875, -5.14984130859375e-05, -0.03731250762939453, -0.0001220703125, 0.0, -0.0002881288528442383, -0.000247955322265625, -7.05718994140625e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0002499441907275468, -3.576278118089249e-07, 0.0, -3.814697265625e-06, -0.0004193781642243266, -2.5033950805664062e-05], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -1.9633494460321614, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Gallywix's", " ", "Justice", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Gallywix's Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -1.2296686172485352, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0004100799560546875, -0.5783166885375977, -7.62939453125e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -5.14984130859375e-05, -0.0001239776611328125, -1.71661376953125e-05, -1.9073486328125e-06, -0.005649566650390625, -7.62939453125e-06, -1.1444091796875e-05, -0.09580443799495697, -0.00023746490478515625, -0.0002461671538185328, -0.0002880096435546875, -3.0517578125e-05, 0.0, -0.00020313261484261602, 0.0, -7.62939453125e-06, 0.0, -0.0034017562866210938, 0.0, -0.0002843141555786133, -1.1920928244535389e-07, -0.026186347007751465, 0.0, -2.6702880859375e-05, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.0077056884765625, 0.0, -0.000537872314453125, -0.000629425048828125, -0.0003814697265625, -3.814697265625e-06, -0.000728607177734375, -1.33514404296875e-05, -0.00092315673828125, -8.0108642578125e-05, 0.0, -0.0002689361572265625, -0.0001678466796875, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0001983642578125, -5.7220458984375e-06, -5.14984130859375e-05, -0.0045909881591796875, -0.0004291534423828125, -8.0108642578125e-05, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0010225772857666016, -0.000797271728515625, -9.5367431640625e-05, -2.288818359375e-05, -9.5367431640625e-06, -0.0007544565014541149, -3.576278118089249e-07, -1.9073486328125e-06, -5.7220458984375e-06, -0.0005493012140505016, -9.655952453613281e-06], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -2.466483858635847, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 70, 138, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "EPIC", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "EPIC", "hole0": "<UNK> Justice", "_type": "Template3", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -0.3551759719848633, -8.392333984375e-05, -0.023113638162612915, -0.000629425048828125, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00014197865675669163, -2.0265579223632812e-06, -0.01928555965423584, -1.9073486328125e-06, -2.0165154933929443, -2.6702880859375e-05, -4.00543212890625e-05, 0.0, -0.0034046173095703125, -9.918212890625e-05, 0.0, -0.00063323974609375, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-05, -0.0001392364501953125, -5.53131103515625e-05, -0.04356098175048828, -0.000133514404296875, 0.0, -0.0002880096435546875, -0.0002422332763671875, -6.67572021484375e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0002457730006426573, -3.576278118089249e-07, -1.9073486328125e-06, -3.814697265625e-06, -0.0004258154658600688, -2.6941299438476562e-05], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -4.814056064340484, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 70, 138, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "EPIC", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "EPIC", "hole0": "<UNK> Justice", "_type": "Template3", "hole2": "HUNTER"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -0.3551759719848633, -8.392333984375e-05, -0.023113638162612915, -0.000629425048828125, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00014197865675669163, -2.0265579223632812e-06, -4.132498264312744, 0.0, -0.2644193172454834, -2.47955322265625e-05, -0.0001068115234375, 0.0, -0.0027751922607421875, -0.000118255615234375, 0.0, -0.0005931854248046875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -7.05718994140625e-05, -0.0001544952392578125, -5.14984130859375e-05, -0.030591964721679688, -0.0001316070556640625, 0.0, -0.00028228759765625, -0.000240325927734375, -6.866455078125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002506588352844119, -3.576278118089249e-07, -1.9073486328125e-06, -3.814697265625e-06, -0.00043308723252266645, -2.6941299438476562e-05], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -4.99409032579927, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "<UNK>", " ", "Justice", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -1.2296686172485352, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0004100799560546875, -0.5783166885375977, -7.62939453125e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -5.14984130859375e-05, -0.0001239776611328125, -1.71661376953125e-05, -1.9073486328125e-06, -0.005649566650390625, -7.62939453125e-06, -1.1444091796875e-05, -3.1223952770233154, -8.392333984375e-05, -0.006476879119873047, -0.0001544952392578125, -5.7220458984375e-06, 0.0, -9.202952787745744e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0030498504638671875, 0.0, -0.00021183490753173828, -1.1920928244535389e-07, -0.02552473545074463, 0.0, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.007198333740234375, 0.0, -0.0005474090576171875, -0.0006122589111328125, -0.0003814697265625, -3.814697265625e-06, -0.0007381439208984375, -1.52587890625e-05, -0.000904083251953125, -8.0108642578125e-05, 0.0, -0.000270843505859375, -0.0001678466796875, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0001983642578125, -5.7220458984375e-06, -4.9591064453125e-05, -0.0045528411865234375, -0.0004253387451171875, -7.82012939453125e-05, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0010225772857666016, -0.0008001327514648438, -9.5367431640625e-05, -2.288818359375e-05, -9.5367431640625e-06, -0.0007543446263298392, -3.576278118089249e-07, -1.9073486328125e-06, -5.7220458984375e-06, -0.0005451292963698506, -9.655952453613281e-06], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -5.212550516564022, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 70, 138, " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": " Justice", "_type": "Template3", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -0.3551759719848633, -8.392333984375e-05, -4.156618595123291, -0.5654317140579224, -0.0005284547805786133, -0.0002000332169700414, -2.0265579223632812e-06, -0.019013643264770508, -1.9073486328125e-06, -0.07122683525085449, 0.0, -0.0003662109375, 0.0, -0.0032405853271484375, -0.0003299713134765625, 0.0, -0.000823974609375, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.52587890625e-05, -7.2479248046875e-05, -0.0001697540283203125, -4.76837158203125e-05, -0.035759925842285156, -0.000125885009765625, 0.0, -0.00028228759765625, -0.00025653839111328125, -7.2479248046875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0002499439287930727, -3.576278118089249e-07, 0.0, -3.814697265625e-06, -0.0004231928614899516, -2.5033950805664062e-05], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(' Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -5.632266488279072, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 70, 138, " ", "<UNK>", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"hole1": 1, "hole3": "FREE", "hole0": " <UNK>", "_type": "Template3", "hole2": "PALADIN"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -0.3551759719848633, -8.392333984375e-05, -4.156618595123291, -0.9097322821617126, -1.3470649719238281e-05, -0.0001514282776042819, -2.0265579223632812e-06, -0.13002872467041016, -3.814697265625e-06, -0.04656720161437988, 0.0, -0.0006084442138671875, 0.0, -0.0032291412353515625, -0.000316619873046875, 0.0, -0.000919342041015625, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.09808349609375e-05, -7.05718994140625e-05, -0.00017547607421875, -4.1961669921875e-05, -0.025035858154296875, -0.0001220703125, 0.0, -0.0002841949462890625, -0.00026226043701171875, -7.2479248046875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.000253876147326082, -3.576278118089249e-07, -1.9073486328125e-06, -3.814697265625e-06, -0.00042736518662422895, -2.5033950805664062e-05], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(' <UNK>', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.FREE\n            )\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -5.795888558415754, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Justice", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 164, 41, 128, "1", "<EOS>", 40, 127, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "1", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template11"}, {"hole0": 1, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 1, "_type": "Template5"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -1.2296686172485352, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0004100799560546875, -0.8266811370849609, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -0.000934600830078125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0016027061501517892, -0.000209808349609375, -0.00011575221287785098, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0005090238410048187, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -0.00043582916259765625, 0.0, -0.000141143798828125, -2.1457672119140625e-06, -0.2133791446685791, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00070953369140625, 0.0, -0.2643623352050781, -1.9073486328125e-06, -1.9073486328125e-06, -0.5856351852416992, 0.0, -0.000537872314453125, 0.0, -4.9591064453125e-05, 0.0, -0.0004769563674926758, 0.0, -0.0001735687255859375, -0.04594707489013672, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.16768229007720947, -0.0006778240203857422, -0.000461578369140625, -0.9174337387084961, -2.47955322265625e-05, -0.0005283355712890625, -0.06421470642089844, -0.0011615753173828125, -0.00032895803451538086, -2.09808349609375e-05, -0.23449420928955078, -0.00079345703125, -0.13689111173152924, -1.9073486328125e-06, -0.00096893310546875, -0.5952272415161133, -7.62939453125e-06, 0.0, -0.0005875825881958008, -9.72747802734375e-05, -1.33514404296875e-05, -0.000797271728515625, -0.052216529846191406, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.014925241470336914, -0.0022891759872436523, -7.069110870361328e-05, -0.00061798095703125, -9.5367431640625e-06, 0.0, -0.0006055831909179688, -9.5367431640625e-06, -0.0007572174072265625, 0.0, -0.013548851013183594, 0.0, -0.10407257080078125, -0.0002288818359375, -3.0755454645259306e-05, -5.7220458984375e-06, -0.30948150157928467, -1.9073486328125e-06], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(1))]), MinionSelector(IsType(MINION_TYPE.\n            BEAST))))\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n"}, {"score": -6.112241923950755, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Justice", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 164, 41, 128, "1", "<EOS>", 40, 127, "1", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "Random", "Picker", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template11"}, {"hole0": 1, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template18"}, "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -1.2296686172485352, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0004100799560546875, -0.8266811370849609, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -0.000934600830078125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0016027061501517892, -0.000209808349609375, -0.00011575221287785098, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0005090238410048187, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -0.00043582916259765625, 0.0, -0.000141143798828125, -2.1457672119140625e-06, -0.2133791446685791, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00070953369140625, 0.0, -0.2643623352050781, -1.9073486328125e-06, -1.9073486328125e-06, -0.5856351852416992, 0.0, -0.000537872314453125, 0.0, -4.9591064453125e-05, 0.0, -0.0004769563674926758, 0.0, -0.0001735687255859375, -0.04594707489013672, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.16768229007720947, -0.0006778240203857422, -0.000461578369140625, -0.9174337387084961, -2.47955322265625e-05, -0.0005283355712890625, -0.06421470642089844, -0.0011615753173828125, -0.00032895803451538086, -2.09808349609375e-05, -0.23449420928955078, -0.00079345703125, -0.13689111173152924, -1.9073486328125e-06, -0.00096893310546875, -0.8047466278076172, -1.71661376953125e-05, 0.0, -7.2479248046875e-05, -9.918212890625e-05, -5.7220458984375e-06, -0.29216861724853516, -1.9073486328125e-06, -1.9073486328125e-06, -0.08446133136749268, -2.6702880859375e-05, -0.000896453857421875, 0.0, -0.07777988910675049, -0.0004194974899291992, -5.960462772236497e-07, -0.13341712951660156, -1.52587890625e-05, -0.0018863677978515625, -0.011926651000976562, 0.0, -0.0005893707275390625, -3.814697265625e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.47955322265625e-05, -0.0008296966552734375, -0.00018310546875, -0.000110626220703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003380775451660156, -0.0004863739013671875, -7.05718994140625e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.000976129958871752, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814697265625e-06, -0.0002844329865183681, -1.9431114196777344e-05], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(1))]), MinionSelector(picker=RandomPicker()))\n            )\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.811272636441572, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Justice", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 164, 41, 128, "1", "<EOS>", 40, 127, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template11"}, {"hole0": 1, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -1.2296686172485352, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0004100799560546875, -0.8266811370849609, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -0.000934600830078125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0016027061501517892, -0.000209808349609375, -0.00011575221287785098, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0005090238410048187, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -0.00043582916259765625, 0.0, -0.000141143798828125, -2.1457672119140625e-06, -0.2133791446685791, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00070953369140625, 0.0, -0.2643623352050781, -1.9073486328125e-06, -1.9073486328125e-06, -0.5856351852416992, 0.0, -0.000537872314453125, 0.0, -4.9591064453125e-05, 0.0, -0.0004769563674926758, 0.0, -0.0001735687255859375, -0.04594707489013672, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.16768229007720947, -0.0006778240203857422, -0.000461578369140625, -0.9174337387084961, -2.47955322265625e-05, -0.0005283355712890625, -0.06421470642089844, -0.0011615753173828125, -0.00032895803451538086, -2.09808349609375e-05, -0.23449420928955078, -0.00079345703125, -0.13689111173152924, -1.9073486328125e-06, -0.00096893310546875, -0.5952272415161133, -7.62939453125e-06, 0.0, -0.0005875825881958008, -9.72747802734375e-05, -1.33514404296875e-05, -0.000797271728515625, -0.052216529846191406, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.014925241470336914, -0.0022891759872436523, -7.069110870361328e-05, -0.00061798095703125, -9.5367431640625e-06, 0.0, -0.0006055831909179688, -9.5367431640625e-06, -0.0007572174072265625, 0.0, -0.013548851013183594, 0.0, -0.10407257080078125, -0.0002288818359375, -3.0755454645259306e-05, -5.7220458984375e-06, -1.3248674869537354, 0.0], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(1))]), MinionSelector(IsType(MINION_TYPE.\n            BEAST))))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.902492888042616, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Justice", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 164, 41, 128, "1", "<EOS>", 40, 127, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template11"}, {"hole0": 1, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -1.2296686172485352, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0004100799560546875, -0.8266811370849609, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -0.000934600830078125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0016027061501517892, -0.000209808349609375, -0.00011575221287785098, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0005090238410048187, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -0.00043582916259765625, 0.0, -0.000141143798828125, -2.1457672119140625e-06, -0.2133791446685791, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00070953369140625, 0.0, -0.2643623352050781, -1.9073486328125e-06, -1.9073486328125e-06, -0.5856351852416992, 0.0, -0.000537872314453125, 0.0, -4.9591064453125e-05, 0.0, -0.0004769563674926758, 0.0, -0.0001735687255859375, -0.04594707489013672, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.16768229007720947, -0.0006778240203857422, -0.000461578369140625, -0.9174337387084961, -2.47955322265625e-05, -0.0005283355712890625, -0.06421470642089844, -0.0011615753173828125, -0.00032895803451538086, -2.09808349609375e-05, -0.23449420928955078, -0.00079345703125, -0.13689111173152924, -1.9073486328125e-06, -0.00096893310546875, -0.5952272415161133, -7.62939453125e-06, 0.0, -0.0005875825881958008, -9.72747802734375e-05, -1.33514404296875e-05, -0.000797271728515625, -0.052216529846191406, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.014925241470336914, -0.0022891759872436523, -7.069110870361328e-05, -0.00061798095703125, -9.5367431640625e-06, 0.0, -0.0006055831909179688, -9.5367431640625e-06, -0.0007572174072265625, 0.0, -0.013548851013183594, 0.0, -2.484927177429199, 0.0, -0.01380157470703125, -0.018238067626953125, -3.814697265625e-06, -0.0012054443359375, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.71661376953125e-05, -8.7738037109375e-05, -0.0002574920654296875, -2.47955322265625e-05, -0.0002689361572265625, -1.71661376953125e-05, 0.0, -0.0005435943603515625, -0.0004901885986328125, -4.9591064453125e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.0001194393917103298, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, -0.00028526753885671496, -2.1338462829589844e-05], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(1))]), MinionSelector(IsType(MINION_TYPE.\n            BEAST))))\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -8.427167526780977, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Justice", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "battlecry", "<EOS>", 25, 145, 164, 30, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 164, 41, 128, "1", "<EOS>", 40, 127, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "1", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"elts": [{"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template11"}, {"hole0": 1, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Tuple"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 1, "_type": "Template5"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -1.2296686172485352, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0004100799560546875, -0.8266811370849609, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -0.000934600830078125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0016027061501517892, -0.000209808349609375, -0.00011575221287785098, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0005090238410048187, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -0.00043582916259765625, 0.0, -0.000141143798828125, -2.1457672119140625e-06, -0.2133791446685791, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00070953369140625, 0.0, -1.462143898010254, -3.814697265625e-06, -3.814697265625e-06, -0.33212757110595703, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.06765460968017578, 0.0, 0.0, 0.0, -0.003025054931640625, -0.000293731689453125, -0.40102577209472656, -2.86102294921875e-05, -0.005970001220703125, -1.1444091796875e-05, -8.7738037109375e-05, -1.1444091796875e-05, -0.032367706298828125, 0.0, -0.5733394622802734, -0.0031299591064453125, -0.004261016845703125, -0.001163482666015625, -1.9073486328125e-06, -0.00020599365234375, 0.0, -0.02364349365234375, 0.0, -5.14984130859375e-05, -0.04604339599609375, -9.5367431640625e-06, -6.4849853515625e-05, 0.0, -0.2205408811569214, -0.001821279525756836, -6.67572021484375e-05, -0.8255491256713867, -2.6702880859375e-05, -0.000492095947265625, -0.044330596923828125, -0.0010280609130859375, -0.00030159950256347656, -1.9073486328125e-05, -0.24688243865966797, -0.00098419189453125, -0.06265927106142044, -1.9073486328125e-06, -0.00099945068359375, -0.4704914093017578, -3.814697265625e-06, 0.0, -0.0003644227981567383, -0.000133514404296875, -9.5367431640625e-06, -0.0008831024169921875, -0.03603076934814453, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.012087345123291016, -0.0026488304138183594, -6.496906280517578e-05, -0.0004100799560546875, -9.5367431640625e-06, 0.0, -0.000476837158203125, -9.5367431640625e-06, -0.0008115768432617188, 0.0, -0.013507843017578125, 0.0, -0.35607433319091797, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -0.36487114429473877, -0.0048084259033203125, -1.9073486328125e-06, -0.0198822021484375, -0.1361217498779297, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.011340141296386719, -0.0013077259063720703, -9.930133819580078e-05, -0.0011806488037109375, -9.5367431640625e-06, 0.0, -0.000522613525390625, -5.7220458984375e-06, -0.000629425048828125, 0.0, -0.010318756103515625, 0.0, -0.11600112915039062, -0.000194549560546875, -4.386749424156733e-05, -5.7220458984375e-06, -0.22597648203372955, -1.9073486328125e-06], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, battlecry=(Battlecry(Give([Buff(\n            ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            IsType(MINION_TYPE.BEAST))), MinionSelector(IsType(MINION_TYPE.\n            BEAST))))\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n"}, {"score": -10.06797070939956, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Justice", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "battlecry", "<EOS>", 25, 145, 164, 30, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 164, 41, 128, "1", "<EOS>", 40, 127, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>", 72, 140, "1", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "<UNK> Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "battlecry", "value": {"elts": [{"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template11"}, {"hole0": 1, "_type": "Template10"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "Tuple"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 4, "hole0": 1, "_type": "Template5"}], "name": "<UNK>Justice", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -1.2296686172485352, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0004100799560546875, -0.8266811370849609, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -0.000934600830078125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0016027061501517892, -0.000209808349609375, -0.00011575221287785098, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0005090238410048187, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -0.00043582916259765625, 0.0, -0.000141143798828125, -2.1457672119140625e-06, -0.2133791446685791, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00070953369140625, 0.0, -1.462143898010254, -3.814697265625e-06, -3.814697265625e-06, -0.33212757110595703, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -0.06765460968017578, 0.0, 0.0, 0.0, -0.003025054931640625, -0.000293731689453125, -0.40102577209472656, -2.86102294921875e-05, -0.005970001220703125, -1.1444091796875e-05, -8.7738037109375e-05, -1.1444091796875e-05, -0.032367706298828125, 0.0, -0.5733394622802734, -0.0031299591064453125, -0.004261016845703125, -0.001163482666015625, -1.9073486328125e-06, -0.00020599365234375, 0.0, -0.02364349365234375, 0.0, -5.14984130859375e-05, -0.04604339599609375, -9.5367431640625e-06, -6.4849853515625e-05, 0.0, -0.2205408811569214, -0.001821279525756836, -6.67572021484375e-05, -0.8255491256713867, -2.6702880859375e-05, -0.000492095947265625, -0.044330596923828125, -0.0010280609130859375, -0.00030159950256347656, -1.9073486328125e-05, -0.24688243865966797, -0.00098419189453125, -0.06265927106142044, -1.9073486328125e-06, -0.00099945068359375, -0.4704914093017578, -3.814697265625e-06, 0.0, -0.0003644227981567383, -0.000133514404296875, -9.5367431640625e-06, -0.0008831024169921875, -0.03603076934814453, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.012087345123291016, -0.0026488304138183594, -6.496906280517578e-05, -0.0004100799560546875, -9.5367431640625e-06, 0.0, -0.000476837158203125, -9.5367431640625e-06, -0.0008115768432617188, 0.0, -0.013507843017578125, 0.0, -0.35607433319091797, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.4699164628982544, -0.0004494190216064453, 0.0, -0.0058155059814453125, 0.0, -1.0066546201705933, -0.007210791576653719, -0.005013465881347656, -2.86102294921875e-05, -3.576272320060525e-06, -1.9073486328125e-06, -0.039048947393894196, -1.9073486328125e-06], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, battlecry=(Battlecry(Give([Buff(\n            ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            IsType(MINION_TYPE.BEAST))), Buff(Frozen())))\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n"}, {"score": -17.59438705444336, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -17.593530654907227], "inferred_code": "break\n"}, {"score": -22.119216918945312, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-0.00080108642578125, -4.9591064453125e-05, -22.118366241455078], "inferred_code": ""}], "index": 62}
{"beams": [{"score": -0.07768421489890898, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template4", "hole2": "taunt"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -0.05807685852050781, -3.0517578125e-05, -0.0017340299673378468, -0.0001417398452758789, -4.6491586545016617e-05, 0.0, -0.0012596844462677836, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -4.461895729253229, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "6", "<EOS>", 37, 117, "5", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 6, "_type": "Num"}, {"n": 5, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -2.876781463623047, -9.5367431640625e-06, -0.0096282958984375, -0.0001239776611328125, 0.0, -0.0001888275146484375, -9.5367431640625e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -0.00010144710540771484, -9.918212890625e-05, -0.0005397796630859375, -0.000789642333984375, -0.006724357604980469, -8.96453857421875e-05, -0.094390869140625, 0.0, -0.4699949026107788, -5.14984130859375e-05, -7.62939453125e-05, -0.000232696533203125, 0.0, -0.0009740589885041118, -5.602834789897315e-06, -1.33514404296875e-05, -6.103515625e-05, -0.00032328133238479495, -1.9073486328125e-05, -0.005951881408691406, -9.5367431640625e-06, -2.288818359375e-05, -0.047871947288513184, -7.82012939453125e-05, -0.000179290771484375, -4.1961669921875e-05, -0.0002346038818359375, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.9255486726760864, 0.0, -0.004070281982421875, -1.1444091796875e-05, -0.0002689361572265625, -3.814697265625e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Weapon(6, 5, charge=True, taunt=True)\n"}, {"score": -5.338091171928681, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Minion", "<EOS>", 164, 37, 117, "6", "<EOS>", 37, 117, "5", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 6, "_type": "Num"}, {"n": 5, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -2.876781463623047, -9.5367431640625e-06, -0.0096282958984375, -0.0001239776611328125, 0.0, -0.0001888275146484375, -9.5367431640625e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -0.00010144710540771484, -9.918212890625e-05, -0.0005397796630859375, -0.000789642333984375, -0.006724357604980469, -8.96453857421875e-05, -0.094390869140625, 0.0, -0.9891351461410522, -3.24249267578125e-05, -0.0001087188720703125, -9.72747802734375e-05, -1.71661376953125e-05, -0.0001299379946431145, -1.0251998901367188e-05, -9.5367431640625e-06, -0.000202178955078125, -0.004763481672853231, -3.814697265625e-06, -0.0037298202514648438, -1.9073486328125e-05, -8.96453857421875e-05, -0.10210907459259033, -5.91278076171875e-05, -0.000148773193359375, -4.00543212890625e-05, -0.0003091096878051758, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.2270928621292114, 0.0, -0.003726959228515625, -1.1444091796875e-05, -0.000396728515625, -3.814697265625e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, charge=True, taunt=True)\n"}, {"score": -5.672969494789868, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the the Arena", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template4", "hole2": "taunt"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -5.5078864097595215, -0.006257057189941406, -0.0036671848502010107, -9.5367431640625e-05, -2.4320193915627897e-05, -1.9073486328125e-06, -0.00011897087097167969, 0.0, -0.1395111083984375, -3.0517578125e-05, -0.001871392596513033, -0.0001341104507446289, -4.172320768702775e-05, 0.0, -0.0013513563899323344, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -6.299752429755927, "choice_history": [50, 111, 176, 58, 90, "Lord", "The", "the", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template4", "hole2": "taunt"}], "name": "LordThethe", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -6.080806732177734, -0.13725711405277252, -0.005387425422668457, -0.0002460479736328125, -1.9073486328125e-06, 0.0, -0.0014131502248346806, -2.0980718545615673e-05, -3.099436753473128e-06, -4.57763671875e-05, -0.0013885498046875, -9.5367431640625e-06, -8.225102646974847e-05, -0.00019311130745336413, -0.00040554982842877507, -0.00019359588623046875, -8.010863530216739e-05, -0.0020093917846679688, -0.0028281183913350105, -0.000133514404296875, -2.5392353563802317e-05, -1.9073486328125e-06, -0.00011873245239257812, 0.0, -0.06298446655273438, -2.86102294921875e-05, -0.001874842680990696, -0.0001302957534790039, -4.3272932089166716e-05, 0.0, -0.0012304781703278422, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06], "inferred_code": "class LordThethe(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -6.308193610933813, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", "__init__", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the__init__", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template4", "hole2": "taunt"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -6.233078479766846, 0.0, -1.6279227565973997e-06, -2.0265579223632812e-06, -0.0001239776611328125, 0.0, -0.06323814392089844, -2.47955322265625e-05, -0.0021342532709240913, -0.0002541542053222656, -6.198879418661818e-05, 0.0, -0.0013740061549469829, 0.0, -8.7738037109375e-05, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the__init__', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -6.551098729321893, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "6", "<EOS>", 37, 117, "5", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "enrage", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 6, "_type": "Num"}, {"n": 5, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "enrage", "value": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -2.876781463623047, -9.5367431640625e-06, -0.0096282958984375, -0.0001239776611328125, 0.0, -0.0001888275146484375, -9.5367431640625e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -0.00010144710540771484, -9.918212890625e-05, -0.0005397796630859375, -0.000789642333984375, -0.006724357604980469, -8.96453857421875e-05, -0.094390869140625, 0.0, -0.4699949026107788, -5.14984130859375e-05, -7.62939453125e-05, -0.000232696533203125, 0.0, -0.0009740589885041118, -5.602834789897315e-06, -1.33514404296875e-05, -6.103515625e-05, -0.00032328133238479495, -1.9073486328125e-05, -0.005951881408691406, -9.5367431640625e-06, -2.288818359375e-05, -0.047871947288513184, -7.82012939453125e-05, -0.000179290771484375, -4.1961669921875e-05, -0.0002346038818359375, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.3859082460403442, -9.5367431640625e-06, -0.12303924560546875, -5.7220458984375e-06, -0.0020427703857421875, -0.001239776611328125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001163482666015625, -0.28989338874816895, -7.62939453125e-06, -0.013018608093261719, -0.284820556640625, -0.00067138671875, -0.8937931060791016, -1.9073486328125e-06, -0.02242279052734375, -1.1444091796875e-05, -0.001311182975769043, -0.0007867813110351562, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Weapon(6, 5, charge=True, enrage=[Aura(ChangeAttack(2),\n            SelfSelector())])\n"}, {"score": -6.5700906764959655, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 89, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "6", "<EOS>", 37, 117, "5", "<EOS>", 172, 49, 152, "charge", "<EOS>", 20, 113, "True", "<EOS>", 49, 152, "enrage", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "6", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"body": [{"value": {"args": [{"n": 6, "_type": "Num"}, {"n": 5, "_type": "Num"}], "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "enrage", "value": {"elts": [{"args": [{"hole0": 6, "_type": "Template15"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "_type": "keyword"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -2.876781463623047, -9.5367431640625e-06, -0.0096282958984375, -0.0001239776611328125, 0.0, -0.0001888275146484375, -9.5367431640625e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -0.00010144710540771484, -9.918212890625e-05, -0.0005397796630859375, -0.000789642333984375, -0.006724357604980469, -8.96453857421875e-05, -0.094390869140625, 0.0, -0.4699949026107788, -5.14984130859375e-05, -7.62939453125e-05, -0.000232696533203125, 0.0, -0.0009740589885041118, -5.602834789897315e-06, -1.33514404296875e-05, -6.103515625e-05, -0.00032328133238479495, -1.9073486328125e-05, -0.005951881408691406, -9.5367431640625e-06, -2.288818359375e-05, -0.047871947288513184, -7.82012939453125e-05, -0.000179290771484375, -4.1961669921875e-05, -0.0002346038818359375, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.3859082460403442, -9.5367431640625e-06, -0.12303924560546875, -5.7220458984375e-06, -0.0020427703857421875, -0.001239776611328125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001163482666015625, -0.28989338874816895, -7.62939453125e-06, -0.013018608093261719, -0.284820556640625, -0.00067138671875, -0.9318990707397461, -0.0003948211669921875, -0.001739501953125, -1.9073486328125e-05, -0.0019038915634155273, -0.0013608932495117188, -3.814697265625e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Weapon(6, 5, charge=True, enrage=[Aura(ChangeAttack(6),\n            SelfSelector())])\n"}, {"score": -7.288072863797424, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template4", "hole2": "taunt"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -0.05807685852050781, -3.0517578125e-05, -7.212664604187012, -1.9073486328125e-06, -1.5020326827652752e-05, 0.0, -0.0008985996246337891, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}, {"score": -7.591064958196512, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template4", "hole2": "taunt"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -7.507508277893066, -0.0001938184432219714, -2.0265579223632812e-06, -4.9948692321777344e-05, 0.0, -0.07164764404296875, -2.86102294921875e-05, -0.0020097552333027124, -0.0003154277801513672, -6.818766996730119e-05, 0.0, -0.001341104507446289, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -3.4332275390625e-05, -3.814697265625e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the', 6, CHARACTER_CLASS.ALL, CARD_RARITY\n            .COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -7.750517169020782, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "4", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template4", "hole2": "taunt"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -0.05807685852050781, -3.0517578125e-05, -7.674529075622559, -4.768370445162873e-07, -3.397464024601504e-05, 0.0, -0.001455187564715743, 0.0, -7.62939453125e-05, -3.814697265625e-06, -7.2479248046875e-05, -3.814697265625e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, taunt=True)\n"}, {"score": -7.801225343955593, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "5", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 5, "_type": "Template4", "hole2": "taunt"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -0.05807685852050781, -3.0517578125e-05, -7.7254791259765625, -5.7220458984375e-06, -3.516672950354405e-05, 0.0, -0.0011878013610839844, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 5, taunt=True)\n"}, {"score": -8.209343263813935, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "the", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 6, "hole0": "Lord the the Arena", "_type": "Template1", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template4", "hole2": "taunt"}], "name": "LordOfTheArena", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -8.088699340820312, -0.0006999969482421875, -0.007079005241394043, -0.010725021362304688, -0.0025893445126712322, -0.0001544952392578125, -1.0254130756948143e-05, -1.9073486328125e-06, -0.00010347366333007812, 0.0, -0.08872032165527344, -3.0517578125e-05, -0.0018054535612463951, -0.0001436471939086914, -4.7087629354791716e-05, 0.0, -0.0012918709544464946, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord the the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -16.481510162353516, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -16.481220245361328], "inferred_code": "break\n"}, {"score": -21.644081115722656, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-0.0002231597900390625, -5.91278076171875e-05, -21.643798828125], "inferred_code": ""}], "index": 63}
{"beams": [{"score": -0.32610643752730084, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.30060338973999023, 0.0, -0.001373291015625, -2.288818359375e-05, -0.0018178224563598633, -7.271740287251305e-06, -1.5974042980815284e-05, -2.3841855067985307e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -1.5236754501885557, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -1.4884533882141113, 0.0, -0.0001354217529296875, -2.86102294921875e-05, -0.012782931327819824, -1.7881377516459906e-06, -7.629387255292386e-06, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -4.211249031780341, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.018547058105469, -2.6702880859375e-05, -1.1444091796875e-05, -1.71661376953125e-05, -9.72747802734375e-05, -1.6212408809224144e-05, -2.2649765014648438e-06, -2.872943878173828e-05, 0.0, -0.01755809783935547, -0.0001583099365234375, -2.09808349609375e-05, -2.145764938177308e-06, -7.128713332349434e-05, -2.2649765014648438e-06, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0002477822999935597, -1.311301275563892e-06, -0.0009765625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9206255931057967e-05, -5.7220458984375e-06, -0.0001633167266845703, 0.0, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -4.792213439941406e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.00021779537200927734, 0.0, -0.17177963256835938, -1.33514404296875e-05, -0.00020646551274694502, -2.3841830625315197e-06, -9.655950270825997e-05, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -4.653912195031715, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "target", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "target", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -4.629040241241455, 0.0, -0.0004119873046875, -1.52587890625e-05, -0.002134561538696289, -9.65590606938349e-06, -3.4809112548828125e-05, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.target)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -5.082672723634822, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -5.058055400848389, -9.5367431640625e-06, -0.0001316070556640625, -1.52587890625e-05, -0.002171635627746582, -3.4570634852570947e-06, -2.0146368115092628e-05, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -5.616650828223463, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "RARE", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "RARE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -5.587596893310547, 0.0, -0.00107574462890625, -9.5367431640625e-06, -0.005692005157470703, -4.0531076592742465e-06, -6.914136520208558e-06, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -5.807029494124343, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -5.782133102416992, -1.9073486328125e-06, -0.00022125244140625, -1.33514404296875e-05, -0.0023605823516845703, -7.986990567587782e-06, -2.5629995434428565e-05, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -5.87768114458256, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "DRAGON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -1.4884533882141113, 0.0, -0.0001354217529296875, -2.86102294921875e-05, -4.366790294647217, -4.768370445162873e-07, -7.271762569871498e-06, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.993291056782169, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"hole1": 1, "hole0": 2, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.018547058105469, -2.6702880859375e-05, -1.1444091796875e-05, -1.71661376953125e-05, -9.72747802734375e-05, -1.6212408809224144e-05, -2.2649765014648438e-06, -2.872943878173828e-05, 0.0, -0.01755809783935547, -0.0001583099365234375, -2.09808349609375e-05, -2.145764938177308e-06, -7.128713332349434e-05, -2.2649765014648438e-06, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0002477822999935597, -1.311301275563892e-06, -0.0009765625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.9206255931057967e-05, -5.7220458984375e-06, -0.0001633167266845703, 0.0, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -4.792213439941406e-05, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.00021779537200927734, 0.0, -1.8645524978637695, -7.82012939453125e-05, -0.0004369020462036133, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -6.29425048828125e-05, -3.814697265625e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0026187896728515625, -7.62939453125e-06, -7.82012939453125e-05, -0.02035808563232422, -0.0024671554565429688, -0.01065965835005045, -5.9604644775390625e-06, -0.052648454904556274, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, p):\n        return Minion(2, 1)\n"}, {"score": -6.561668285212704, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MINION_TYPE", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MINION_TYPE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -6.520696640014648, 0.0, -0.0003185272216796875, -5.53131103515625e-05, -0.018305301666259766, -4.768360213347478e-06, -2.1934491087449715e-05, -2.3841855067985307e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MINION_TYPE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -6.638099678865295, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"arg": "minion_type", "value": {"attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.30060338973999023, 0.0, -0.001373291015625, -2.288818359375e-05, -6.313816070556641, -8.344646857949556e-07, -1.7523765563964844e-05, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -10.256842755091604, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 68, 131, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 1, "hole0": "Mechanical Dragonling", "_type": "Template1", "hole2": "ALL"}, {"body": [{"hole1": 1, "hole0": 2, "_type": "Template14"}], "name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -10.183704376220703, -7.43865966796875e-05, -7.152531907195225e-06, -6.484984623966739e-05, -2.3841855067985307e-07, 0.0, -3.330374602228403e-05, -4.768370445162873e-07, -0.00025522708892822266, 0.0, -0.024720191955566406, -7.62939453125e-06, -0.0002918243408203125, -1.9073486328125e-06, -7.62939453125e-06, -0.000133514404296875, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -0.028969764709472656, -1.9073486328125e-06, -0.000209808349609375, -0.0018854141235351562, -0.0007114410400390625, -0.0012589253019541502, -4.3034549889853224e-05, -0.014249607920646667, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(2, 1)\n"}, {"score": -10.828932141193398, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -10.787662506103516, -1.1444091796875e-05, 0.0, -0.0001316070556640625, -4.57763671875e-05, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004696846008300781, 0.0, -0.039615631103515625, -3.814697265625e-06, -9.751319885253906e-05, -7.092700980138034e-05, -8.392333984375e-05, -1.1920928244535389e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__()\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -11.827018476094423, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"body": [{"value": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template5"}], "name": "MechanicalDragonling", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -11.714542388916016, -1.1444091796875e-05, -0.000873565673828125, -4.76837158203125e-05, -6.902217864990234e-05, -4.0531158447265625e-06, -0.0010148286819458008, 0.0, -0.10946178436279297, -5.7220458984375e-06, -0.00010561943054199219, -4.2199197196168825e-05, -0.00016415119171142578, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -23.08860206604004, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -23.088581085205078], "inferred_code": ""}], "index": 64}
{"beams": [{"score": -0.9113022402864814, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template3", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.7888154983520508, -1.52587890625e-05, -5.960462203802308e-06, -8.058540697675198e-05, -4.1723224057932384e-06, -5.7220458984375e-06, -5.960462772236497e-07, -5.960462772236497e-07, -0.007534025702625513, -0.0005054473876953125, -0.0014357566833496094, 0.0, -0.014617919921875, -0.0012960433959960938, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003757476806640625, -0.000797271728515625, -0.010183334350585938, 0.0, -0.024983525276184082, -1.9073486328125e-06, -0.03730595111846924, -3.814697265625e-06, -0.021772807464003563, -2.7656173188006505e-05, -0.0003335473593324423, 0.0, -4.9591064453125e-05, -0.000274658203125, -7.2479248046875e-05, -0.0001069306890713051, -1.7881377516459906e-06, 0.0, -3.814697265625e-06, -8.0108642578125e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -2.6693348842921267, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Mind", " ", "Blast", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "5", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mind Blast", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.8910074234008789, -0.00022125244140625, -4.0531158447265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003414154052734375, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.1444091796875e-05, -2.0265579223632812e-06, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.510157047363464e-06, -9.369850158691406e-05, -4.172316494077677e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.504691267153248e-05, -1.1920928244535389e-07, -4.00543212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -7.867813110351562e-06, -2.1457672119140625e-06, -0.3378037214279175, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00048065185546875, 0.0, -0.0020198822021484375, -0.0001316070556640625, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.008443832397460938, -2.288818359375e-05, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.01454925537109375, -1.9073486328125e-06, -0.7096483707427979, 0.0, -0.010311126708984375, -0.000171661376953125, -3.4332275390625e-05, 0.0, -5.340576171875e-05, -5.14984130859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0018500089645385742, -4.768370445162873e-07, -0.0006237030029296875, -3.0517578125e-05, -3.814697265625e-06, -7.05718994140625e-05, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.001163482666015625, -5.91278076171875e-05, -5.8649467973737046e-05, -4.172325134277344e-06, -0.0003299713134765625, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.04731178283691406, -0.00029754638671875, -0.005634307861328125, -0.0015163421630859375, -0.037068843841552734, -2.0265579223632812e-06, -0.0006809234619140625, -5.7220458984375e-06, -0.0302886962890625, -0.0128631591796875, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.5083713531494141, 0.0, -0.000171661376953125, 0.0, -0.006474137306213379, -3.814697265625e-06, -0.031082510948181152, -5.7220458984375e-06, -0.0030364098493009806, -4.291525328881107e-06, -0.0021554231643676758, 0.0, -2.288818359375e-05, -0.0005054473876953125, -7.43865966796875e-05, -0.00012338127999100834, -7.510157047363464e-06, 0.0, 0.0, -4.00543212890625e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -2.9323243184339063, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Mind", " ", "Blast", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "5", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mind Blast", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.8910074234008789, -0.00022125244140625, -4.0531158447265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003414154052734375, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.1444091796875e-05, -2.0265579223632812e-06, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.510157047363464e-06, -9.369850158691406e-05, -4.172316494077677e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.504691267153248e-05, -1.1920928244535389e-07, -4.00543212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -7.867813110351562e-06, -2.1457672119140625e-06, -0.3378037214279175, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00048065185546875, 0.0, -0.0020198822021484375, -0.0001316070556640625, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.008443832397460938, -2.288818359375e-05, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.01454925537109375, -1.9073486328125e-06, -1.012808084487915, 0.0, -0.02477550506591797, -0.0003871917724609375, -9.918212890625e-05, 0.0, -1.52587890625e-05, -4.9591064453125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009542703628540039, -1.1920928244535389e-07, -0.0006046295166015625, -3.4332275390625e-05, -3.814697265625e-06, -8.7738037109375e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0022296905517578125, -5.53131103515625e-05, -0.00010430307884234935, -4.172325134277344e-06, -0.000301361083984375, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -0.05026054382324219, -0.000270843505859375, -0.0062694549560546875, -0.001468658447265625, -0.03748929500579834, -2.0265579223632812e-06, -0.0003814697265625, -5.7220458984375e-06, -0.04387664794921875, -0.012594223022460938, -9.5367431640625e-06, 0.0, -7.05718994140625e-05, 0.0, -0.4369840621948242, 0.0, -0.000179290771484375, 0.0, -0.006065964698791504, -3.814697265625e-06, -0.03123605251312256, -7.62939453125e-06, -0.002834385959431529, -4.0531076592742465e-06, -0.0019980669021606445, 0.0, -2.288818359375e-05, -0.0005054473876953125, -7.43865966796875e-05, -0.00012278524809516966, -7.510157047363464e-06, 0.0, 0.0, -4.00543212890625e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -3.0601753668413423, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template2", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -2.0624866485595703, -0.0002593994140625, -6.5565000113565475e-06, -0.00038773505366407335, -0.00015221897047013044, -1.9073486328125e-06, -1.0013529390562326e-05, -3.576278118089249e-07, -0.23372113704681396, -0.001110076904296875, -0.41008758544921875, -0.027996063232421875, -1.71661376953125e-05, 0.0, -0.0004329681396484375, -0.0003662109375, -0.005401611328125, 0.0, -0.25354111194610596, -5.7220458984375e-06, -0.053226470947265625, -5.7220458984375e-06, -0.00917260441929102, -5.6980417866725475e-05, -0.00026559815159998834, 0.0, -0.0001811981201171875, -0.000263214111328125, -0.0001277923583984375, -0.00011420241207815707, -1.4305104514278355e-06, 0.0, -9.5367431640625e-06, -0.0001659393310546875, -1.9073486328125e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -3.6287966906268565, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Mind", " ", "Blast", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "5", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mind Blast", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}], "func": {"attr": "damage", "value": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.8910074234008789, -0.00022125244140625, -4.0531158447265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003414154052734375, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.1444091796875e-05, -2.0265579223632812e-06, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.510157047363464e-06, -9.369850158691406e-05, -4.172316494077677e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.504691267153248e-05, -1.1920928244535389e-07, -4.00543212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -7.867813110351562e-06, -2.1457672119140625e-06, -1.2772215604782104, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -0.000385284423828125, 0.0, -0.0024671554565429688, -7.2479248046875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.008997917175292969, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0006561279296875, -1.9073486328125e-06, -0.015352249145507812, -1.9073486328125e-06, -0.7280924320220947, 0.0, -0.010297775268554688, -0.0001697540283203125, -3.4332275390625e-05, 0.0, -5.340576171875e-05, -5.14984130859375e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0018709897994995117, -4.768370445162873e-07, -0.0006237030029296875, -3.0517578125e-05, -3.814697265625e-06, -7.05718994140625e-05, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0011615753173828125, -6.103515625e-05, -5.876866998733021e-05, -4.172325134277344e-06, -0.0003299713134765625, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.04730510711669922, -0.00029754638671875, -0.00565338134765625, -0.0015163421630859375, -0.037038326263427734, -2.0265579223632812e-06, -0.00067138671875, -5.7220458984375e-06, -0.0304107666015625, -0.012821197509765625, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.5081186294555664, 0.0, -0.000171661376953125, 0.0, -0.006479859352111816, -3.814697265625e-06, -0.03107583522796631, -5.7220458984375e-06, -0.0030368848238140345, -4.291525328881107e-06, -0.0021573305130004883, 0.0, -2.288818359375e-05, -0.0005054473876953125, -7.43865966796875e-05, -0.00012338127999100834, -7.510157047363464e-06, 0.0, 0.0, -4.00543212890625e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -4.147541518952757, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Mind", " ", "Blast", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "5", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 163, 37, 117, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mind Blast", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.8910074234008789, -0.00022125244140625, -4.0531158447265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003414154052734375, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.1444091796875e-05, -2.0265579223632812e-06, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.510157047363464e-06, -9.369850158691406e-05, -4.172316494077677e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.504691267153248e-05, -1.1920928244535389e-07, -4.00543212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -7.867813110351562e-06, -2.1457672119140625e-06, -0.3378037214279175, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00048065185546875, 0.0, -0.0020198822021484375, -0.0001316070556640625, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.008443832397460938, -2.288818359375e-05, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.01454925537109375, -1.9073486328125e-06, -0.7096483707427979, 0.0, -0.010311126708984375, -0.000171661376953125, -3.4332275390625e-05, 0.0, -5.340576171875e-05, -5.14984130859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0018500089645385742, -4.768370445162873e-07, -0.0006237030029296875, -3.0517578125e-05, -3.814697265625e-06, -7.05718994140625e-05, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.001163482666015625, -5.91278076171875e-05, -5.8649467973737046e-05, -4.172325134277344e-06, -0.0003299713134765625, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.04731178283691406, -0.00029754638671875, -0.005634307861328125, -0.0015163421630859375, -0.037068843841552734, -2.0265579223632812e-06, -0.0006809234619140625, -5.7220458984375e-06, -0.0302886962890625, -0.0128631591796875, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.9332971572875977, 0.0, -0.16872119903564453, -3.814697265625e-06, -0.04953324794769287, -3.814697265625e-06, -0.41090261936187744, -1.1920928244535389e-07, -0.002048492431640625, -0.044414520263671875, -4.76837158203125e-05, -0.42131295800209045, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        game.other_player.hero(5)\n"}, {"score": -4.334123396333489, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template2", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -2.0624866485595703, -0.0002593994140625, -6.5565000113565475e-06, -0.00038773505366407335, -0.00015221897047013044, -1.9073486328125e-06, -1.0013529390562326e-05, -3.576278118089249e-07, -0.23372113704681396, -0.001110076904296875, -0.41008758544921875, -0.027996063232421875, -1.71661376953125e-05, 0.0, -0.0004329681396484375, -0.0003662109375, -0.005401611328125, 0.0, -1.5550347566604614, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -0.0352855920791626, 0.0, -6.4849853515625e-05, 0.0, -5.53131103515625e-05, -0.0002288818359375, -0.000152587890625, -0.00011420238297432661, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, -9.918212890625e-05, -5.7220458984375e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage.damage(player.effective_spell_damage(5), self)\n"}, {"score": -4.598719291265667, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Mind", " ", "Blast", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "5", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 163, 37, 117, "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"body": [{"value": {"args": [{"s": "Mind Blast", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}], "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "func": {"attr": "__init__", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}, {"body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"attr": "use", "value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Expr"}], "name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef"}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.8910074234008789, -0.00022125244140625, -4.0531158447265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003414154052734375, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.1444091796875e-05, -2.0265579223632812e-06, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.510157047363464e-06, -9.369850158691406e-05, -4.172316494077677e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.504691267153248e-05, -1.1920928244535389e-07, -4.00543212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -7.867813110351562e-06, -2.1457672119140625e-06, -0.3378037214279175, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00048065185546875, 0.0, -0.0020198822021484375, -0.0001316070556640625, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.008443832397460938, -2.288818359375e-05, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.01454925537109375, -1.9073486328125e-06, -1.012808084487915, 0.0, -0.02477550506591797, -0.0003871917724609375, -9.918212890625e-05, 0.0, -1.52587890625e-05, -4.9591064453125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009542703628540039, -1.1920928244535389e-07, -0.0006046295166015625, -3.4332275390625e-05, -3.814697265625e-06, -8.7738037109375e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0022296905517578125, -5.53131103515625e-05, -0.00010430307884234935, -4.172325134277344e-06, -0.000301361083984375, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -2.6702880859375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -0.05026054382324219, -0.000270843505859375, -0.0062694549560546875, -0.001468658447265625, -0.03748929500579834, -2.0265579223632812e-06, -0.0003814697265625, -5.7220458984375e-06, -0.04387664794921875, -0.012594223022460938, -9.5367431640625e-06, 0.0, -7.05718994140625e-05, 0.0, -1.0535163879394531, 0.0, -0.1499919891357422, -3.814697265625e-06, -0.051650285720825195, -3.814697265625e-06, -0.41921985149383545, -1.1920928244535389e-07, -0.002170562744140625, -0.046874046325683594, -4.76837158203125e-05, -0.42300280928611755, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        game.other_player.hero(5)\n"}, {"score": -4.709474649588564, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template3", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"attr": "damage", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.7888154983520508, -1.52587890625e-05, -5.960462203802308e-06, -8.058540697675198e-05, -4.1723224057932384e-06, -5.7220458984375e-06, -5.960462772236497e-07, -5.960462772236497e-07, -0.007534025702625513, -0.0005054473876953125, -0.0014357566833496094, 0.0, -0.014617919921875, -0.0012960433959960938, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003757476806640625, -0.000797271728515625, -0.010183334350585938, 0.0, -3.784646987915039, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.09783482551574707, 0.0, -0.00011336803436279297, 0.0, -5.91278076171875e-05, -0.00018310546875, -0.00012969970703125, -0.00012612335558515042, -4.768370445162873e-07, 0.0, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage.damage(player.effective_spell_damage(5), self)\n"}, {"score": -4.9971149190084105, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template3", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"attr": "hero", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.7888154983520508, -1.52587890625e-05, -5.960462203802308e-06, -8.058540697675198e-05, -4.1723224057932384e-06, -5.7220458984375e-06, -5.960462772236497e-07, -5.960462772236497e-07, -0.007534025702625513, -0.0005054473876953125, -0.0014357566833496094, 0.0, -0.014617919921875, -0.0012960433959960938, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003757476806640625, -0.000797271728515625, -0.010183334350585938, 0.0, -0.024983525276184082, -1.9073486328125e-06, -4.142189025878906, -1.1920928244535389e-07, -0.0022702773567289114, -1.597391747054644e-05, -0.000619172933511436, 0.0, -6.29425048828125e-05, -0.0003452301025390625, -0.00012969970703125, -0.00011718270980054513, -8.344646857949556e-07, 0.0, -1.9073486328125e-06, -9.34600830078125e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.current_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.178136910866037, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template3", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"attr": "hero", "value": {"attr": "hero", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.7888154983520508, -1.52587890625e-05, -5.960462203802308e-06, -8.058540697675198e-05, -4.1723224057932384e-06, -5.7220458984375e-06, -5.960462772236497e-07, -5.960462772236497e-07, -0.007534025702625513, -0.0005054473876953125, -0.0014357566833496094, 0.0, -0.014617919921875, -0.0012960433959960938, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003757476806640625, -0.000797271728515625, -0.010183334350585938, 0.0, -0.024983525276184082, -1.9073486328125e-06, -4.259666442871094, -3.6238969187252223e-05, -0.06608843803405762, -1.311301275563892e-06, -0.00038659569690935314, 0.0, -5.7220458984375e-05, -0.0003032684326171875, -9.918212890625e-05, -0.0001287459599552676, -1.1920922133867862e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.hero.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.495060529619472, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "5", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template3", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"attr": "5", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.7888154983520508, -1.52587890625e-05, -5.960462203802308e-06, -8.058540697675198e-05, -4.1723224057932384e-06, -5.7220458984375e-06, -5.960462772236497e-07, -5.960462772236497e-07, -0.007534025702625513, -0.0005054473876953125, -0.0014357566833496094, 0.0, -0.014617919921875, -0.0012960433959960938, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003757476806640625, -0.000797271728515625, -0.010183334350585938, 0.0, -0.024983525276184082, -1.9073486328125e-06, -0.03730595111846924, -3.814697265625e-06, -4.604532241821289, -1.9073486328125e-06, -0.0011056660441681743, 0.0, -4.57763671875e-05, -0.000457763671875, -9.918212890625e-05, -0.00014018992078490555, -1.6689286894688848e-06, 0.0, -5.7220458984375e-06, -9.1552734375e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.5.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.748989310266602, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "Mind", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template3", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"attr": "Mind", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template0", "hole2": [{"hole0": 5, "_type": "Template13"}, {"id": "self", "_type": "Name"}]}], "name": "MindBlast", "_type": "ClassDef"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.7888154983520508, -1.52587890625e-05, -5.960462203802308e-06, -8.058540697675198e-05, -4.1723224057932384e-06, -5.7220458984375e-06, -5.960462772236497e-07, -5.960462772236497e-07, -0.007534025702625513, -0.0005054473876953125, -0.0014357566833496094, 0.0, -0.014617919921875, -0.0012960433959960938, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003757476806640625, -0.000797271728515625, -0.010183334350585938, 0.0, -0.024983525276184082, -1.9073486328125e-06, -0.03730595111846924, -3.814697265625e-06, -4.808043479919434, -0.00038480747025460005, -0.05051875114440918, 0.0, -0.000152587890625, -0.000988006591796875, -0.0001354217529296875, -0.00010240067058475688, -2.9802276912960224e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.Mind.damage(player.effective_spell_damage(5), self)\n"}, {"score": -15.83172607421875, "choice_history": [50, 111, 176, 57], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -15.831716537475586], "inferred_code": "break\n"}, {"score": -22.660490036010742, "choice_history": [50, 111, 175], "model_output": {"body": [], "_type": "Module"}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -22.660484313964844], "inferred_code": ""}], "index": 65}
