{"beams": [{"score_history": [0.0, -5.53131103515625e-05, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004499138449318707, -0.0265777800232172, -0.0010486169485375285, -7.068899867590517e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.245203283266164e-06, -2.622600959512056e-06, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0023365020751953125, -0.000110626220703125, -0.0031695151701569557, -7.092952728271484e-05, -0.00019465127843432128, -9.1552734375e-05, -0.00011920928227482364, -0.0003643035888671875, -0.000804506242275238, 0.0, -1.52587890625e-05, 0.0, -0.00030350685119628906, 0.0, -0.01916217803955078, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -9.34600830078125e-05, 0.0, -0.000152587890625, -0.0009555816650390625, -1.9073486328125e-06, -0.06710052490234375, -0.000527244876138866, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0017986297607421875, -5.161762237548828e-05, -1.33514404296875e-05, -4.57763671875e-05, -0.0008258819580078125, 0.0, -0.004451628774404526, -4.076919867657125e-05, -1.9073486328125e-06, -0.000102996826171875, -2.86102294921875e-05, -4.780292510986328e-05, -7.152555099310121e-07, -2.741813204920618e-06, 0.0], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"hole4": {"args": [{"hole0": "Destroy", "_type": "Template18"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template18"}], "func": {"_type": "Name", "id": "WeaponSelector"}, "_type": "Call"}], "func": {"_type": "Name", "id": "Battlecry"}, "_type": "Call"}, "_type": "Template6", "hole2": "COMMON", "hole0": "Acidic Swamp Ooze", "hole1": 2, "hole3": "battlecry"}]}, {"hole0": 3, "_type": "Template5", "hole1": 2}], "name": "AcidicSwampOoze", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.13143889009143095, "choice_history": [50, 111, 176, 58, 90, "Acidic", "Swamp", "Ooze", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 46, 135, "Destroy", "<EOS>", 30, 88, 19, 112, "Weapon", "Selector", "<EOS>", 163, 46, 135, "Enemy", "Player", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"]}], "index": 0}
{"beams": [{"score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -5.4210424423217773e-05, -0.00017631053924560547, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -1.52587890625e-05, -0.0003795623779296875, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.700920104980469e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-06, -6.437291176553117e-06, -8.308887481689453e-05, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.986703712958843e-05, -4.792213439941406e-05, -6.29425048828125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -0.0011830329895019531, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004825592041015625, 0.0, -0.0018243789672851562, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0001621246337890625, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, -0.003756880760192871, 0.0, -0.051036834716796875, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, 0.0, -0.00035512447357177734, -1.71661376953125e-05, -1.9073486328125e-06, -0.00035810464760288596, -1.6689286894688848e-06, -0.0017566680908203125, -1.33514404296875e-05, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.7523716451250948e-05, -1.5735626220703125e-05, -0.0001583099365234375, 0.0, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, 0.0, 0.0, -5.114077066536993e-05, 0.0, -0.00324249267578125, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0003376007080078125, 0.0, -1.52587890625e-05, 0.0, -8.583067392464727e-05, 0.0, -3.0517578125e-05, 0.0, -0.05465269088745117, 0.0, -6.4849853515625e-05, -0.00016021728515625, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000537872314453125, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0018634796142578125, 0.0, -3.814697265625e-06, -0.00165557861328125, -0.0030422210693359375, -0.000396728515625, 0.0, -0.008746147155761719, -1.52587890625e-05, -0.00186920166015625, 0.0, -0.005458950996398926, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.005672812461853027, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0008382797241210938, 0.0, -0.020391464233398438, -0.0003719329833984375, 0.0, -1.33514404296875e-05, 0.0, -0.0005130767822265625, 0.0, -0.0007228851318359375, 0.0, -0.004006385803222656, 0.0, -1.33514404296875e-05, 0.0, -0.04453694820404053, 0.0, -0.001739501953125, -3.814697265625e-06, -0.0009784698486328125, 0.0], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"_type": "Name", "id": "self"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}]}], "name": "AncestralHealing", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.22549232506339933, "choice_history": [50, 111, 176, 58, 90, "Ancestral", "Healing", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ancestral", " ", "Healing", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 30, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 35, 112, "self", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 1}
{"beams": [{"score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0874729418428615e-05, -8.106198947643861e-06, -8.940656698541716e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1086431186413392e-05, -5.614747351501137e-05, -2.622600959512056e-06, -0.004962921142578125, -0.000415802001953125, -1.9073486328125e-05, -0.00018559163436293602, -4.351138341007754e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.00014041850226931274, 0.0, -0.009179115295410156, 0.0, -5.7220458984375e-06, -0.00012969970703125, -5.53131103515625e-05, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -4.57763671875e-05, -4.291534423828125e-06, 0.0, -9.23864427022636e-05, -2.145764938177308e-06, -0.17549800872802734, -0.00033092498779296875, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -4.24381360062398e-05, -5.841255187988281e-06, -0.0001125335693359375, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001811981201171875, -0.0001125335693359375, -1.2040129149681889e-05, 0.0, -0.005637168884277344, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0014650732045993209, -6.198873961693607e-06, -0.0023593902587890625, -0.0018253326416015625, -0.0031633377075195312, -0.014360427856445312, -0.0050811767578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.00064849853515625, -5.7220458984375e-05, -0.001708984375, -2.288818359375e-05, -0.015005111694335938, -2.6702880859375e-05, -0.15442657470703125, 0.0, -0.0003529787063598633, -4.1961669921875e-05, -0.002419114112854004, -1.6689286894688848e-06, -0.0016736970283091068, -2.3841855067985307e-07, -0.01545690931379795, -2.3841855067985307e-07, -0.8587067723274231, -2.1457672119140625e-06, -0.0012502670288085938, -0.0049495697021484375, -3.0517578125e-05, -0.0003070831298828125, -0.0015382766723632812, -5.7220458984375e-05, -0.001811981201171875, -1.9073486328125e-05, -0.018118858337402344, -3.24249267578125e-05, -0.16265392303466797, 0.0, -0.00020599365234375, -8.594989776611328e-05, -0.0032216310501098633, -2.622600959512056e-06, -0.001481889747083187, -2.3841855067985307e-07, -0.020821452140808105, -8.344646857949556e-07, -0.8935983777046204, -6.16312026977539e-05, -0.0031175613403320312, -0.0012054443359375, -1.1444091796875e-05, -0.0007228851318359375, -0.0006999969482421875, -9.5367431640625e-06, -0.0020503997802734375, -3.814697265625e-06, -0.02773284912109375, -1.71661376953125e-05, -0.12137889862060547, 0.0, -0.0001697540283203125, -0.00010883808135986328, -0.002759099006652832, -2.145764938177308e-06, -0.0018780225655063987, -2.3841855067985307e-07, -0.02214634418487549, -7.152555099310121e-07, -0.8765286207199097, -4.8160552978515625e-05, -0.0005321502685546875, -0.0004940032958984375, -0.0001087188720703125, -3.814697265625e-05, -1.9073486328125e-06, -0.006089905742555857, -4.9590184062253684e-05, -0.0009136199951171875, -7.62939453125e-06, -0.000244140625, 0.0, -0.0002460479736328125, -7.62939453125e-06, -0.008702874183654785, -7.62939453125e-06, -0.002729058265686035, -2.1457672119140625e-05, -3.814697265625e-06, -0.000240325927734375, -1.33514404296875e-05, -0.02564084343612194, -3.3854863431770355e-05, -0.004810333251953125, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.000820159912109375, -0.000225067138671875, -0.00724558113142848, -0.00036549477954395115, -0.0012531280517578125, -1.9073486328125e-06, -3.0517578125e-05, -0.0035724639892578125, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.00331878662109375, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0002689361572265625, -7.62939453125e-06, -0.0022355583496391773, -7.62939453125e-06, -0.0005464553833007812, -0.0004119873046875, -8.58306884765625e-05, 0.0, -0.0004279518034309149, -4.2676914745243266e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.000415802001953125, 0.0, -0.0001186131194117479, -6.29425048828125e-05, -0.001522463164292276, 0.0, -6.866455078125e-05, 0.0, -0.0011806488037109375, -3.814697265625e-06, -7.62939453125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, 0.0, -1.1444091796875e-05, -2.2649765014648438e-06, 0.0, -7.20012976671569e-05, -2.145764938177308e-06, -0.0046329498291015625, -0.0007305145263671875, -0.00018310546875, -0.0037593841552734375, -4.1961669921875e-05, -8.96453857421875e-05, -0.09646224975585938, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.000553131103515625, 0.0, -0.0005534767406061292, -0.0003299713134765625, -0.0001773834228515625, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0017757415771484375, -0.0007228851318359375, -4.100799196748994e-05, -1.9073486328125e-05, -0.01721477508544922, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0008751052082516253, -4.887576324108522e-06, -9.5367431640625e-06, -0.000152587890625, 0.0, -0.07509040832519531, 0.0, -6.616101745748892e-05, -1.9073486328125e-06, -0.0022343441378325224, 0.0, -2.288818359375e-05, -0.0026788711547851562, -2.288818359375e-05, -0.001064300537109375, -2.47955322265625e-05, -0.0004153251356910914, -3.445148468017578e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"body": [{"body": [{"hole0": "Animal Companion", "hole2": "HUNTER", "_type": "Template1", "hole1": 3}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"func": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "_type": "Attribute", "attr": "Huffer"}, "_type": "Call"}, {"func": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "_type": "Attribute", "attr": "Misha"}, "_type": "Call"}, {"func": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "_type": "Attribute", "attr": "Misha"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"_type": "Name", "id": "len"}, "_type": "Call"}], "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef", "body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "can_use"}, "_type": "Call"}, {"ops": [{"_type": "Lt"}], "left": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"_type": "Name", "id": "len"}, "_type": "Call"}, "comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare"}]}, "_type": "Return"}]}], "name": "AnimalCompanion", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7331463186834526, "choice_history": [50, 111, 176, 58, 90, "Animal", "Companion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 179, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 17, 107, 165, 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 30, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 55, 80, 163, 35, 112, "card", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "<UNK>", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "card", "<EOS>", "summon", "<EOS>", 165, 35, 112, "player", "<EOS>", 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 30, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 160, 8, 163, 37, 117, "7", "<EOS>"]}], "index": 2}
{"beams": [{"score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -3.099440846199286e-06, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, -1.52587890625e-05, -9.08970832824707e-06, -0.0004737377166748047, -1.1920928244535389e-07, -1.9073486328125e-05, -0.011622428894042969, -6.866455078125e-05, -8.809272549115121e-05, -0.00037000072188675404, -0.00026544436695985496, -1.1920928244535389e-07, -0.00010656736412784085, -1.1920928244535389e-07, -0.40812528133392334, -0.0017014741897583008, -0.00106048583984375, -7.43865966796875e-05, -6.29425048828125e-05, 0.0, -0.00011444091796875, -0.0001068115234375, -0.00311279296875, -7.748603820800781e-06, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0004316568374633789, -2.0265579223632812e-06, -0.020989418029785156, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -7.82012939453125e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.9604562920867465e-06, -1.9073486328125e-06, -0.00041961669921875, 0.0, -2.47955322265625e-05, -5.91278076171875e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.555152165470645e-05, 0.0, -0.0001773834228515625, -5.7220458984375e-06, -0.0002155303955078125, 0.0, -0.004002690315246582, -4.768370445162873e-07, -0.0005512237548828125, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.00012969970703125, 0.0, -0.0007653236389160156, -1.52587890625e-05, -0.0003719329833984375, -2.288818359375e-05, -1.1444091796875e-05, -5.7220458984375e-05, -7.62939453125e-06, -0.00022792816162109375, 0.0, -9.5367431640625e-06, 0.0, -0.00067901611328125, -3.62396240234375e-05, -0.017728805541992188, -1.9073486328125e-06, -0.0001865616359282285, 0.0, -0.0001678466796875, -0.000743865966796875, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0011655092239379883, 0.0, -0.0001506805419921875, -5.7220458984375e-06, -0.0005931854248046875, -0.0009708404541015625, -0.00035858154296875, -0.0008402552339248359, -4.768360213347478e-06, 0.0, -0.0001125335693359375, -0.00029659271240234375, -1.3470649719238281e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"body": [{"body": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "_type": "Template2", "hole1": 2}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}}]}], "name": "ArcaneExplosion", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.48066213618724873, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Explosion", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 69, 137, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 3}
{"beams": [{"score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.960462772236497e-07, -9.298297300119884e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -2.0263250917196274e-06, -4.935263859806582e-05, -6.318072337307967e-06, -1.33514404296875e-05, -0.1069803237915039, -9.5367431640625e-06, -1.4305104514278355e-06, -0.00034463341580703855, -4.887569048150908e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.024340510368347168, -3.266334533691406e-05, -0.0002796649932861328, -2.3841855067985307e-07, -4.57763671875e-05, -2.47955322265625e-05, -4.00543212890625e-05, 0.0, -4.38690185546875e-05, -3.62396240234375e-05, -7.82012939453125e-05, -1.2397762475302443e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.121924626408145e-05, -1.2397762475302443e-05, -0.024034500122070312, -1.71661376953125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.741813204920618e-06, -6.198883056640625e-06, -6.67572021484375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.801417031150777e-05, -1.1801719665527344e-05, -0.000690460205078125, -9.5367431640625e-06, -0.0001392364501953125, -9.5367431640625e-06, -0.021147608757019043, -8.702239938429557e-06, -1.9073486328125e-05, -0.000118255615234375, -0.00213623046875, -1.9073486328125e-06, -0.0012739417143166065, -3.814689989667386e-06, -8.0108642578125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.00022207203437574208, -7.62939453125e-06, -0.0031118392944335938, -3.814697265625e-06, -0.008337738923728466, 0.0, -5.7220458984375e-05, -0.0009403228759765625, -4.1961669921875e-05, -0.0001316070556640625, -0.0034465789794921875, -3.814697265625e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -0.0009418558911420405, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"body": [{"body": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "_type": "Template3", "hole3": "FREE", "hole1": 3}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "c"}, "_type": "For", "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "range"}, "_type": "Call"}}]}], "name": "ArcaneIntellect", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.2000471768015899, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Intellect", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "c", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 176, 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"]}], "index": 4}
{"beams": [{"score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -5.722038622479886e-06, -1.1920928244535389e-07, -0.0001544952392578125, -5.7220458984375e-06, -3.814697265625e-06, -1.2759119272232056e-06, -8.571147918701172e-05, -7.152555099310121e-07, -7.62939453125e-06, -0.13257694244384766, -7.05718994140625e-05, -1.883488948806189e-05, -0.00021862980793230236, -3.397406908334233e-05, 0.0, -1.9073484054388246e-06, -1.311301275563892e-06, -0.03322124481201172, -7.62939453125e-06, -0.0006122589111328125, 0.0, -0.000263214111328125, -1.1444091796875e-05, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.73532485961914e-05, 0.0, -0.0010395050048828125, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -2.110004425048828e-05, -0.000263214111328125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0001983642578125, -3.814697265625e-06, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.0022344589233398438, -8.392333984375e-05, -0.001613616943359375, -0.000102996826171875, -0.002178788185119629, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0005817413330078125, -0.0028076171875, 0.0, -0.00022971619910094887, -3.0517578125e-05, -0.003082275390625, -0.0011997222900390625, 0.0, -0.00021183489297982305, -1.9073486328125e-06, -0.0018863677978515625, -0.0029430389404296875, -0.011730888858437538, -6.19888032815652e-06, -0.011959075927734375, -0.000133514404296875, -0.0002803802490234375, -0.0002899169921875, -0.00159454345703125, -8.7738037109375e-05, -0.0019561052322387695, -2.6702880859375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.29425048828125e-05, 0.0, -0.0023603439331054688, 0.0, -0.0022444725036621094, -9.942054748535156e-05, -0.0029172897338867188, -3.24249267578125e-05, -7.62939453125e-06, -0.0012359619140625, -0.0003814697265625, -2.86102294921875e-05, 0.0, -0.0006694793701171875, 0.0, -0.0012645721435546875, -1.71661376953125e-05, -0.0007801055908203125, -1.1920928244535389e-07, -0.0053538978099823, 0.0, -0.0005435943603515625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.000722050666809082, -9.5367431640625e-06, -0.013411521911621094, -5.7220458984375e-06, -5.7220458984375e-06, -0.0024433135986328125, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0012054443359375, 0.0, -0.007945060729980469, -1.9073486328125e-06, -0.05441582202911377, -2.1457672119140625e-06, -0.001149293384514749, -3.099436753473128e-06, -0.0032520294189453125, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0007114410400390625, 0.0, -0.002819061279296875, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0002765655517578125, 0.0, -0.005232572555541992, -5.7220458984375e-06, -0.006648063659667969, -1.537799835205078e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.00035500526428222656, 0.0, -0.025267601013183594, -0.0001506805419921875, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.005325436592102051, -8.344646857949556e-07, -0.0021371841430664062, -2.86102294921875e-05, -2.09808349609375e-05, -0.02841949462890625, -0.000476837158203125, -0.0023129615001380444, -1.9073486328125e-06, -0.0037136077880859375, -0.0010051727294921875, -0.00045680999755859375, -1.1920928244535389e-07], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"body": [{"body": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "_type": "Template3", "hole3": "FREE", "hole1": 1}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "append"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"args": [{"_type": "Name", "id": "targets"}], "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "i"}, "_type": "For", "iter": {"args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template13"}], "func": {"_type": "Name", "id": "range"}, "_type": "Call"}}]}], "name": "ArcaneMissiles", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.405282589501752, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Missiles", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 42, 130, "3", "<EOS>", 179, 55, 80, 163, 35, 112, "targets", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "targets", "<EOS>", "append", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 55, 80, 163, 35, 112, "target", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "targets", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "1", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 5}
{"beams": [{"score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.814689989667386e-06, -1.2516897186287679e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -3.9696693420410156e-05, -8.64267349243164e-05, -1.1920928244535389e-07, -0.0001125335693359375, -3.814697265625e-06, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.1444091796875e-05, -5.7220458984375e-06, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.3232202945800964e-05, -4.470348358154297e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0132788702321704e-05, -2.0265558760002023e-06, -0.001079559326171875, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.1457672119140625e-06, -2.741813204920618e-06, -0.008749127388000488, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000179290771484375, -3.814697265625e-06, -0.001178741455078125, 0.0, -0.0052433013916015625, -3.814697265625e-06, -6.103515625e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -0.0015010833740234375, -7.867813110351562e-06, -0.0053375959396362305, -0.00010502338409423828, -0.0025043487548828125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.000247955322265625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0003211498260498047, 0.0, -3.814697265625e-06, -0.000377655029296875, -0.0001316070556640625, -0.0016275644302368164, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 2, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "damage"}], "name": "ArcaneShot", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.03003203857097958, "choice_history": [50, 111, 176, 58, 90, "Arcane", "Shot", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Arcane", " ", "Shot", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 6}
{"beams": [{"score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.6212332411669195e-05, -5.483612312673358e-06, -9.405205491930246e-05, -1.9073486328125e-06, 0.0, 0.0, -2.9682909371331334e-05, -5.2690491429530084e-05, -2.2649765014648438e-06, -4.00543212890625e-05, -0.04689979553222656, -0.0001239776611328125, -0.00016866691294126213, -2.0265579223632812e-05, -8.344646857949556e-07, -2.0265579223632812e-06, -0.009581446647644043, 0.0, -0.004195190500468016, -2.0265579223632812e-06, -0.000576019287109375, 0.0, -0.00128936767578125, -5.7220458984375e-06, 0.0, -0.000202178955078125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.1444091796875e-05, 0.0, -0.005741119384765625, -7.82012939453125e-05, -0.0001163482666015625, -1.33514404296875e-05, -0.000823974609375, -8.20159912109375e-05, 0.0, -0.0021211709827184677, -0.0006849765777587891, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.6689286894688848e-06, -8.940656698541716e-06, -4.76837158203125e-05, -7.62939453125e-06, -0.0032024383544921875, -1.1920928244535389e-07], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"body": [{"body": [{"hole0": "Arcanite Reaper", "hole2": "WARRIOR", "_type": "Template1", "hole1": 5}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "Weapon"}, "_type": "Call"}, "_type": "Return"}]}], "name": "ArcaniteReaper", "bases": [{"_type": "Name", "id": "WeaponCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.07634250205739335, "choice_history": [50, 111, 176, 58, 90, "Arcanite", "Reaper", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 66, 126, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "5", "<EOS>", 37, 117, "2", "<EOS>"]}], "index": 7}
{"beams": [{"score_history": [-2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -1.0728830375228426e-06, -3.266281055402942e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6635825634002686e-06, -0.0006529092788696289, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -7.05718994140625e-05, -0.0002307891845703125, 0.0, -5.7220458984375e-06, -0.00023651123046875, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.288818359375e-05, -0.000244140625, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, -4.1961669921875e-05, -5.14984130859375e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.8412379075889476e-06, -9.894371032714844e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -1.1920928244535389e-07, -0.021592259407043457, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.000438690185546875, 0.0, -0.5699729919433594, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -0.00067901611328125, -4.57763671875e-05, -0.002766251564025879, -1.9073486328125e-06, -0.0006084442138671875, -0.03891754150390625, -1.9073486328125e-06, 0.0, -0.00025177001953125, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.005530714988708496, 0.0, -2.6702880859375e-05, -0.00038242340087890625, 0.0, -0.0002843141555786133, -7.62939453125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"n": 5, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "die"}], "name": "Assassinate", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.6439596818821514, "choice_history": [50, 111, 176, 58, 90, "Assassinate", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Assassinate", "<EOS>", 37, 117, "5", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"]}], "index": 8}
{"beams": [{"score_history": [-9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.0001392364501953125, -3.4332275390625e-05, -4.768370445162873e-07, -0.0001062098381225951, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -2.2664666175842285e-05, -0.0002862215042114258, -1.1920928244535389e-07, -0.00012969970703125, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001125335693359375, 0.0, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.1552734375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -6.198883056640625e-06, -3.814697265625e-06, -3.814697265625e-06, -7.867804924899247e-06, -9.655952453613281e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.4373016357421875e-06, -8.022785186767578e-05, -0.011938095092773438, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.000499725341796875, 0.0, -0.010223388671875, -5.7220458984375e-06, -0.0001068115234375, -6.67572021484375e-05, 0.0, -2.6702880859375e-05, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-05, -3.24249267578125e-05, -0.0010852813720703125, -1.9073486328125e-06, -0.03737151622772217, 0.0, -0.022535324096679688, -0.00016021728515625, -0.001491546630859375, 0.0, -0.00032806396484375, -0.0002651214599609375, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0009222030639648438, -0.0005168914794921875, -0.0015811920166015625, -0.0009098052978515625, -0.0010929107666015625, -0.0014801025390625, -8.392333984375e-05, 0.0, -0.0042934417724609375, 0.0, -0.0014438629150390625, 0.0, -0.010663032531738281, 0.0, -0.0002460479736328125, -0.14925003051757812, -9.5367431640625e-06, -0.0027256011962890625, -0.0005550384521484375, -1.1444091796875e-05, 0.0, -0.00025177001953125, -1.9073486328125e-06, -0.0005645751953125, 0.0, -0.006284594535827637, -3.814697265625e-06, -0.00873565673828125, -0.000270843505859375, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.001789093017578125, 0.0, -0.06008172035217285, 0.0, -0.047580718994140625, -0.0003681182861328125, -2.6702880859375e-05, 0.0, -0.0001010894775390625, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001226663589477539, 0.0, -3.814697265625e-06, -0.0005207061767578125, -0.0002193450927734375, -1.6450869225081988e-05, -9.536738616588991e-07, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Backstab"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"ops": [{"_type": "Eq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}, "comparators": [{"func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "_type": "Compare"}, {"func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "spell_targetable"}, "_type": "Call"}]}, "_type": "Lambda"}, "_type": "keyword", "arg": "filter_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 2, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "damage"}], "name": "Backstab", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.39129997223822954, "choice_history": [50, 111, 176, 58, 90, "Backstab", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Backstab", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 2, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 9}
{"beams": [{"score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -8.439661905867979e-05, -0.0008110907510854304, -0.0009777533123269677, -2.861018856492592e-06, -2.47955322265625e-05, 0.0, 0.0, -1.1909287422895432e-07, -0.00014364706294145435, -2.3841855067985307e-07, -0.00012969970703125, -8.96453857421875e-05, 0.0, -1.3828277587890625e-05, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -4.00543212890625e-05, -0.0007724761962890625, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -5.841253368998878e-06, -9.655952453613281e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00017200454021804035, -4.410743713378906e-05, -1.3828227565682027e-05, -3.62396240234375e-05, -1.537799835205078e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00020585325546562672, -7.152555099310121e-07, -6.29425048828125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.1219222617219202e-05, -0.0001811827241908759, -0.03260574862360954, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.01781749725341797, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00013744831085205078, -3.159046173095703e-05, -0.0055915117263793945, -1.1920928244535389e-07, -0.00078582763671875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, 0.0, -2.872943878173828e-05, -4.076957702636719e-05, -3.814697265625e-06, -0.0001316053094342351, -9.536738616588991e-07, -0.004763603210449219, -1.33514404296875e-05, 0.0, -0.000217437744140625, -4.9591064453125e-05, -3.0517578125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.000707334722392261, -7.867813110351562e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -8.82148651726311e-06, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000682949845213443, -1.1920928244535389e-07, -0.000156402587890625, -0.000209808349609375, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.62396240234375e-05, -5.91278076171875e-05, -4.57763671875e-05, 0.0, -3.36169614456594e-05, -1.1920928244535389e-07, -4.398822784423828e-05, -2.3841855067985307e-07, -0.005155086517333984, -5.7220458984375e-06, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-05, -0.0009980201721191406, -0.0009205341339111328, -1.52587890625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.000255584716796875, -0.0002269744873046875, -0.00016021728515625, 0.0, -9.119507012655959e-05, -2.384185791015625e-06, -5.14984130859375e-05, -2.3841855067985307e-07, -0.060642361640930176, -4.00543212890625e-05, -1.9073486328125e-06, -0.000102996826171875, -4.38690185546875e-05, -0.0009628236293792725, -0.00023090839385986328], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "change_attack"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "BlessingOfKings", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.13952631727318732, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Kings", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Kings", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 37, 117, "4", "<EOS>"]}], "index": 10}
{"beams": [{"score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.0517578125e-05, -4.8040190449682996e-05, -0.0006091552204452455, -0.00044907975825481117, -7.867782187531702e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.948015213012695e-05, -0.00011289119720458984, 0.0, -0.000102996826171875, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, 0.0, -0.00055694580078125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -0.0004787445068359375, -6.866455078125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.9206275939941406e-05, -4.38690185546875e-05, -1.9073486328125e-05, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0005486910813488066, -4.208087921142578e-05, -0.00013612800103146583, -3.814697265625e-05, -1.1682510375976562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -6.31761213298887e-06, 0.0, -0.0006732940673828125, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, -1.1920928244535389e-07, -0.0094832181930542, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00026702880859375, -7.62939453125e-06, -0.0008411407470703125, 0.0, -0.038758277893066406, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-05, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.00014495849609375, -2.86102294921875e-05, -8.58306884765625e-05, -3.898143768310547e-05, -0.009621739387512207, 0.0, -0.0040435791015625, -0.0009136199951171875, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.537799835205078e-05, 0.0, -0.011319157667458057, 0.0, -7.2479248046875e-05, -0.0003108978271484375, -0.0002155303955078125, -0.003830322064459324, -3.24249267578125e-05], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template0", "hole1": "change_attack"}], "name": "BlessingOfMight", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.0850729143803548, "choice_history": [50, 111, 176, 58, 90, "Blessing", "Of", "Might", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Blessing", " ", "of", " ", "Might", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"]}], "index": 11}
{"beams": [{"score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006254147156141698, -0.00036483307485468686, -3.3378591979271732e-06, -3.24249267578125e-05, 0.0, 0.0, -2.7492642402648926e-06, -1.1563293810468167e-05, -2.861022494471399e-06, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.4955482482910156e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -0.04599571228027344, -3.4332275390625e-05, -1.1324817933200393e-05, -4.57763671875e-05, -2.3841855067985307e-07, 0.0, -9.655952453613281e-06, 0.0, -0.001468658447265625, 0.0, -0.0006898641586303711, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00034356117248535156, -0.00027382373809814453, -0.0003299713134765625, -0.0002899169921875, -0.0008595855324529111, -1.1920928244535389e-07, -1.9669332687044516e-05, 0.0], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "Template6", "hole2": "FREE", "hole0": "Bloodfen Raptor", "hole1": 2, "hole3": "minion_type"}]}, {"hole0": 3, "_type": "Template5", "hole1": 2}], "name": "BloodfenRaptor", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.05170495352964366, "choice_history": [50, 111, 176, 58, 90, "Bloodfen", "Raptor", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "3", "<EOS>", "2", "<EOS>"]}], "index": 12}
{"beams": [{"score_history": [-5.7220458984375e-06, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -9.34600830078125e-05, -5.113947918289341e-05, -0.00046184295206330717, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.276897430419922e-05, -8.547305333195254e-05, -1.9073486328125e-06, -0.00020599365234375, -0.00048828125, -7.62939453125e-05, -5.5073280236683786e-05, -9.1552734375e-05, -3.0278701160568744e-05, 0.0, -0.001556396484375, -5.7220458984375e-06, -0.0001659393310546875, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0004100799560546875, 0.0, -3.24249267578125e-05, -6.35385513305664e-05, -1.1920928244535389e-07, -0.000392913818359375, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.00019083621737081558, -1.71661376953125e-05, -0.0003719329833984375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004444122314453125, -0.00016808509826660156, -2.1457672119140625e-06, -0.0042781829833984375, -4.57763671875e-05, -0.00054931640625, 0.0, -0.001157522201538086, -3.814697265625e-06, -0.0011034011840820312, -0.003398895263671875, -0.00028228759765625, 0.0, -0.0003032684326171875, -0.0001392364501953125, -0.0006322690169326961, 0.0, -0.0008258819580078125, -0.05233001708984375, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -0.000728607177734375, 0.0, -0.0008689165115356445, -1.573559347889386e-05, -0.014947056770324707, -2.110004425048828e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-05, -0.034299254417419434, -1.9073486328125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"body": [{"body": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "_type": "Template1", "hole1": 5}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "change_temp_attack"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}]}], "name": "Bloodlust", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.12241576905943674, "choice_history": [50, 111, 176, 58, 90, "Bloodlust", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"]}], "index": 13}
{"beams": [{"score_history": [-3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.0006268443539738655, -0.0007439510081894696, -6.079655122448457e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -1.1086449376307428e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0035114288330078125, -3.0517578125e-05, -5.006777428206988e-06, -0.00015854835510253906, -2.6822088329936378e-05, 0.0, -0.0001973943435586989, 0.0, -9.930133819580078e-05, 0.0, -0.00023078906815499067, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -0.03623056411743164, 0.0, -0.000362396240234375, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -1.8477374396752566e-05, -2.3841855067985307e-07, -0.0033549065701663494, 0.0, -0.0001316070556640625, -1.1444091796875e-05, -8.20159912109375e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "_type": "Template6", "hole2": "COMMON", "hole0": "Bluegill Warrior", "hole1": 2, "hole3": "minion_type"}]}, {"hole0": 2, "hole2": "charge", "_type": "Template4", "hole3": {"value": true, "_type": "NameConstant"}, "hole1": 1}], "name": "BluegillWarrior", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.04687546764350259, "choice_history": [50, 111, 176, 58, 90, "Bluegill", "Warrior", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 14}
{"beams": [{"score_history": [-1.33514404296875e-05, -0.00014495849609375, -8.392333984375e-05, -5.53131103515625e-05, -1.9073486328125e-06, -4.672895011026412e-05, -6.425174069590867e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.42178750038147e-05, -2.0742414562846534e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.001357759378152e-05, -9.536738616588991e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0002994537353515625, -9.655952453613281e-06, -3.480910891084932e-05, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.000148773193359375, -0.02740764617919922, -5.7220458984375e-06, 0.0, -0.0001087188720703125, -8.7738037109375e-05, -0.00017368793487548828, -1.52587890625e-05, -4.780292510986328e-05, 0.0, -0.0006961822509765625, -7.2479248046875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -3.0875205993652344e-05, -0.000102996826171875, -5.7220458984375e-06, -0.0008080961415544152, 0.0, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, -3.4332275390625e-05, -8.976459503173828e-05, -1.9073486328125e-06, -0.00013744831085205078, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, 0.0, -6.67572021484375e-05, -0.000164031982421875, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.000118255615234375, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.0001049041748046875, 0.0, -8.96453857421875e-05, 0.0, -0.034737586975097656, -1.9073486328125e-06, -0.00075531005859375, -1.1444091796875e-05, -6.74694892950356e-05, -1.1920928244535389e-07, -1.073625753633678e-06, -1.1920928244535389e-07], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}]}, "_type": "Expr"}]}, {"hole0": 1, "_type": "Template5", "hole1": 1}], "name": "Boar", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.06816060173739658, "choice_history": [50, 111, 176, 58, 90, "Boar", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Boar", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"]}], "index": 15}
{"beams": [{"score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -4.0531076592742465e-06, -9.5367431640625e-06, 0.0, 0.0, -4.503130912780762e-05, -0.0001245737075805664, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -0.0004596710205078125, -1.9073486328125e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -3.814697265625e-06, 2.3841852225814364e-07, -0.0005955696105957031, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013791407400276512, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.330013275146484e-05, -3.814697265625e-06, -0.009596824645996094, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0016727447509765625, 0.0, -0.04097461700439453, -7.62939453125e-06, -3.0517578125e-05, -4.9591064453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -8.7738037109375e-05, -7.748603820800781e-06, -0.0384448766708374, -7.62939453125e-06, -0.00095367431640625, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -0.0008440017700195312, -8.213520050048828e-05, -3.814697265625e-06, -0.0007383823394775391, -7.152555099310121e-07, -0.0018892288208007812, -1.9073486328125e-05, -3.814697265625e-06, -4.00543212890625e-05, -5.340576171875e-05, -2.288818359375e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -8.344650268554688e-06, -1.9073486328125e-06, -0.000293731689453125, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -3.1113624572753906e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.001270294189453125, -0.0001239776611328125, -1.33514404296875e-05, -0.0001087188720703125, -1.33514404296875e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.218649362679571e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.1280064582824707, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -7.62939453125e-06, -0.6272567510604858, -6.103515625e-05, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -8.0108642578125e-05, -5.7220458984375e-06, -5.412101745605469e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.7363065481185913, 0.0, -3.814697265625e-06, -0.0076389312744140625, -1.9073486328125e-05, -7.82012939453125e-05, 0.0, -0.00040161609649658203, -0.0001157522201538086, -0.0001430511474609375, -0.008707046508789062, -3.814697265625e-06, -0.024165987968444824, -0.011186289601027966], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "change_attack"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "<UNK>", "_type": "Template18"}], "func": {"_type": "Name", "id": "Buff"}, "_type": "Call"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "Charge", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.645024544636783, "choice_history": [50, 111, 176, 58, 90, "Charge", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Charge", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "4", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "<UNK>", "<EOS>"]}], "index": 16}
{"beams": [{"score_history": [-1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03442776948213577, -0.00038842763751745224, -3.933906555175781e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-07, -0.0001621246337890625, -3.814697265625e-05, -6.103515625e-05, -0.0013580322265625, -0.000102996826171875, -0.00018130090029444546, -3.0994415283203125e-05, -6.437280717364047e-06, -1.71661376953125e-05, -0.0002377025957684964, 0.0, -3.2901763916015625e-05, 0.0, -0.0006847381591796875, -0.0009975433349609375, -8.630000229459256e-05, -1.1920928244535389e-07, -0.001204364001750946, -7.152555099310121e-07], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"body": [{"body": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "_type": "Template1", "hole1": 4}, {"hole0": 4, "_type": "Template5", "hole1": 5}], "name": "ChillwindYeti", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.04014577388510787, "choice_history": [50, 111, 176, 58, 90, "Chillwind", "Yeti", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 140, "4", "<EOS>", "5", "<EOS>"]}], "index": 17}
{"beams": [{"score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -1.03711727206246e-05, -7.152543730626348e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.0005132555961608887, -0.0001392364501953125, -1.3470649719238281e-05, -9.5367431640625e-06, -0.48711490631103516, -0.001068115234375, -7.152555099310121e-07, -7.867813110351562e-06, -0.00016891141422092915, -1.7881377516459906e-06, -0.0021982192993164062, -3.4332275390625e-05, -0.0037490129470825195, 0.0, -2.288818359375e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.53131103515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0024785995483398438, -3.0517578125e-05, -5.7220458984375e-06, -0.0016145706176757812, -3.576278118089249e-07, -0.0025882720947265625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -4.6849247155478224e-05, -0.00018131732940673828, -0.0004100799560546875, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0009250640869140625, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -0.00024819374084472656, -1.1444091796875e-05, -0.006667137145996094, -0.0011005401611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00018024444580078125, 0.0, -6.29425048828125e-05, 0.0, -0.0013532638549804688, 0.0, -0.00040554997394792736, -8.344646857949556e-07, -0.29608166217803955, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.29425048828125e-05, -0.0023635104298591614, -7.62939453125e-06, -0.0008678436279296875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.00045871734619140625, 0.0, -0.00046539306640625, 0.0, -0.0007123947143554688, 0.0, -0.0004386875662021339, -5.960446742392378e-06, -0.21822965145111084, -5.7220458984375e-06, -1.9073486328125e-06, -0.004459381103515625, -6.866455078125e-05, -0.006466329097747803, -3.24249267578125e-05], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"body": [{"body": [{"hole0": "Claw", "hole2": "DRUID", "_type": "Template3", "hole3": "FREE", "hole1": 1}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "change_temp_attack"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "Claw", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.0450118149893228, "choice_history": [50, 111, 176, 58, 90, "Claw", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 163, 37, 117, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 163, 37, 117, "2", "<EOS>"]}], "index": 18}
{"beams": [{"score_history": [-5.91278076171875e-05, -0.0002155303955078125, -8.0108642578125e-05, -0.0001373291015625, -3.814697265625e-06, -1.1920928244535389e-07, -7.283422019099817e-05, -7.62939453125e-06, 0.0, 0.0, -1.5497146250709193e-06, -0.00015508552314713597, -4.529942543740617e-06, -0.0027828216552734375, -0.024059295654296875, -2.6702880859375e-05, -2.9802276912960224e-06, -2.9801984055666253e-05, -5.757640246883966e-05, -1.9073486328125e-06, -0.07696723937988281, 0.0, -5.14984130859375e-05, 0.0, -0.000518798828125, -1.9073486328125e-06, 0.0, -9.5367431640625e-05, -0.0003204345703125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0018297384958714247, -1.4305104514278355e-06, -0.0004940032958984375, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0009212493896484375, 0.0, -3.313963316031732e-05, 0.0, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -1.5497207641601562e-05, -4.1961669921875e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.00011610396177275106, -3.814697265625e-06, -0.0008907318115234375, -0.0003662109375, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011543245054781437, -1.1920928244535389e-07, -5.91278076171875e-05, -3.814697265625e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.00037384033203125, 0.0, -0.0026160383131355047, -8.70227722771233e-06, -0.0011283159255981445, -1.52587890625e-05, -1.1444091796875e-05, -0.0003185272216796875, -2.288818359375e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.022268295288085938, 0.0, -0.0011944770812988281, -0.0001010894775390625, -0.008304595947265625, -5.7220458984375e-06, -4.589534364640713e-05, 0.0, -0.0024776458740234375, -9.34600830078125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.004279136657714844, -4.172325134277344e-06, -1.52587890625e-05, -0.0001010894775390625, -0.011996269226074219, -2.288818359375e-05, -0.0059562320820987225, -2.384185791015625e-06, -0.0038785934448242188, -0.0014362335205078125, -5.7220458984375e-06, -0.0001459121413063258, -5.91278076171875e-05, -0.019637107849121094, -7.62939453125e-06, -0.11015608161687851, 0.0, -0.009126663208007812, -4.57763671875e-05, -0.000141143798828125, -0.0073871612548828125, -0.0006170272827148438, -1.52587890625e-05, -0.0014599921414628625, -9.5367431640625e-06, -0.000423431396484375, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -0.0002689361572265625, 0.0, -0.015977976843714714, -5.91278076171875e-05, -0.001329183578491211, -5.161762237548828e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.52587890625e-05, -0.029924267902970314, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.96453857421875e-05, -7.05718994140625e-05, -5.53131103515625e-05, 0.0, -0.0017180204158648849, -2.50339189733495e-06, -0.016447067260742188, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0015456777764484286, -7.62939453125e-06, -0.0019359588623046875, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.918212890625e-05, -9.918212890625e-05, 0.0, -0.11294042319059372, -1.4185804502631072e-05, -0.0027823448181152344, -1.52587890625e-05, -6.29425048828125e-05, -0.005523681640625, -0.0002384185791015625, -0.04516412317752838, -5.125986263010418e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.63724099972751e-05, -1.1920928244535389e-07, -0.001461029052734375, -6.29425048828125e-05, -0.0019321441650390625, 0.0, 0.0, -0.0006046295166015625, -9.5367431640625e-06, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -0.0009090898674912751, -3.576278118089249e-07, -0.01137542724609375, -0.000400543212890625, -0.000102996826171875, -0.012612342834472656, -0.0001621246337890625, -8.7738037109375e-05, -0.0027990341186523438, -0.00020599365234375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00128173828125, 0.0, -0.00025999543140642345, -3.62396240234375e-05, -0.0024967193603515625, 0.0, -8.7738037109375e-05, -7.05718994140625e-05, 0.0, -4.780292510986328e-05, -2.47955322265625e-05, -0.00012969970703125, -7.62939453125e-06, -3.337840098538436e-05, -1.52587890625e-05, -0.00116729736328125, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, 0.0, -0.00304410420358181, -0.00010716361430240795, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.010288238525390625, 0.0, -0.0002996887778863311, -6.67572021484375e-05, -0.07719802856445312, -6.198883056640625e-06, -9.072665125131607e-05, 0.0, -0.0002231597900390625, -0.01488494873046875, -6.866455078125e-05, -0.0002498626708984375, -3.814697265625e-06, -0.1290571242570877, -1.9073486328125e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"body": [{"body": [{"hole0": "Cleave", "hole2": "WARRIOR", "_type": "Template1", "hole1": 2}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "minion"}], "func": {"value": {"_type": "Name", "id": "minions"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "i"}, "_type": "For", "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "range"}, "_type": "Call"}}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef", "body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "can_use"}, "_type": "Call"}, {"ops": [{"_type": "GtE"}], "left": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"_type": "Name", "id": "len"}, "_type": "Call"}, "comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare"}]}, "_type": "Return"}]}], "name": "Cleave", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.8398397199939964, "choice_history": [50, 111, 176, 58, 90, "Cleave", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 178, 66, 126, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "minions", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 60, 94, 19, 112, "i", "<EOS>", 14, 88, 19, 112, "range", "<EOS>", 164, 37, 117, "0", "<EOS>", 37, 117, "2", "<EOS>", 178, 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "game", "<EOS>", "random_choice", "<EOS>", 163, 35, 112, "minions", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minions", "<EOS>", "remove", "<EOS>", 163, 35, 112, "minion", "<EOS>", 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 61, 95, "can_use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 176, 64, 119, 13, 84, 0, 164, 30, 88, 11, 81, 23, 135, "super", "<EOS>", "can_use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 31, 91, 14, 88, 19, 112, "len", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 160, 4, 163, 37, 117, "2", "<EOS>"]}], "index": 19}
{"beams": [{"score_history": [-5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.169585604860913e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.1173771023750305e-06, -0.00015997886657714844, -2.264974000354414e-06, -0.00022125244140625, -0.000530242919921875, -1.52587890625e-05, -9.059865078597795e-06, -2.2053474822314456e-05, -9.655922440288123e-06, -3.576278118089249e-07, -0.007360572926700115, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003796815872192383, 0.0, -0.0029325485229492188, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003662109375, -7.62939453125e-06, -0.00013697060057893395, -5.7220458984375e-06, -0.00011444091796875, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.239776611328125e-05, -1.9073486328125e-06, -0.0004596710205078125, -0.0002536773681640625, -0.0044803619384765625, -9.5367431640625e-06, -0.005422353744506836, -2.861018856492592e-06, -0.00012969970703125, -7.62939453125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00020706653594970703, -1.9073486328125e-05, -0.0002766847610473633, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.0005893707275390625, 0.0, -0.000164031982421875, -1.1444091796875e-05, -0.0383683443069458, -1.9073486328125e-05, -0.010821937583386898, 0.0, -0.0009937286376953125, -0.0075626373291015625, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0002486685407347977, -1.1920928244535389e-07, -0.00139617919921875, 0.0, -0.0001926422119140625, -0.0006275177001953125, -0.0002269744873046875, -0.0003419741115067154, -2.264974000354414e-06, -1.9073486328125e-06, -0.0005359649658203125, -6.103515625e-05, 0.0, -0.04553031921386719, -5.7220458984375e-06, -0.008663177490234375, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00047016143798828125, -1.1444091796875e-05, -0.0007162094116210938, -3.814697265625e-06, -0.11233901977539062, 0.0, -0.012793421745300293, -3.814697265625e-06, -0.10356307029724121, -9.5367431640625e-06, -0.0012018283596262336, -6.794906312279636e-06, -0.0006666183471679688, 0.0, -4.1961669921875e-05, -0.0006771087646484375, -0.0007152557373046875, -0.0001158695959020406, -8.344646857949556e-07, 0.0, -0.000438690185546875, -1.728534698486328e-05, 0.0], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"body": [{"body": [{"hole0": "Consecration", "hole2": "PALADIN", "_type": "Template1", "hole1": 4}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}}, {"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "Consecration", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.3749689818942201, "choice_history": [50, 111, 176, 58, 90, "Consecration", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 20}
{"beams": [{"score_history": [-1.33514404296875e-05, -5.14984130859375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.006574665661901236, -0.0010670708725228906, -4.1723224057932384e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.205371856689453e-06, -7.748603820800781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004405975341796875, -1.9073486328125e-06, -1.728534698486328e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.002071380615234375, -3.4332275390625e-05, -1.2278481335670222e-05, -0.00018787384033203125, -1.1920928244535389e-07, 0.0, -0.03715009614825249, 0.0, -0.00080108642578125, 0.0, -0.00037801265716552734, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0013217926025390625, -5.7220458984375e-06, -0.0002956390380859375, -2.86102294921875e-05, -0.0022081895731389523, -7.677078247070312e-05, -0.007792545948177576, -2.3841855067985307e-07], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "Template6", "hole2": "COMMON", "hole0": "Core Hound", "hole1": 7, "hole3": "minion_type"}]}, {"hole0": 9, "_type": "Template5", "hole1": 5}], "name": "CoreHound", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.06473754350187022, "choice_history": [50, 111, 176, 58, 90, "Core", "Hound", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 140, "9", "<EOS>", "5", "<EOS>"]}], "index": 21}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -5.1854887715307996e-05, -0.0001404202193953097, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.1790543794631958e-06, -0.0004544258117675781, -1.9073486328125e-06, -0.000331878662109375, -0.000152587890625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -3.814697265625e-05, -0.00026702880859375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -0.012926101684570312, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -3.814697265625e-06, -1.0728830375228426e-06, -2.7418136596679688e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.492736868793145e-05, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -0.04203808307647705, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -9.918212890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.010404706001281738, -1.9073486328125e-05, -0.5230417251586914, -0.008267402648925781, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.06517958641052246, 0.0, -0.0011968612670898438, -0.0062408447265625, -7.62939453125e-05, -0.0014591217041015625, -1.9073486328125e-06, -0.001415252685546875, 0.0, -5.53131103515625e-05, -0.0034809112548828125, -0.0011653900146484375, -4.1961669921875e-05, 0.0, -0.02191162109375, -0.006537675857543945, -3.814697265625e-06, -0.0027456283569335938, -1.52587890625e-05, -3.62396240234375e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.00193023681640625, -5.7220458984375e-06, -0.028557658195495605, -5.53131103515625e-05, 0.0, -4.1961669921875e-05, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -5.352497100830078e-05, -7.05718994140625e-05, 0.0, -0.0002689361572265625, -0.015865325927734375, 0.0, -0.0010755062103271484, -2.1457672119140625e-06, -0.00041961669921875, -1.9073486328125e-06, -0.0019969940185546875, -3.4332275390625e-05, 0.0], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Corruption"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"args": [{"func": {"_type": "Name", "id": "TurnStarted"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template18"}, "_type": "keyword", "arg": "player"}]}, {"args": [{"hole0": "Kill", "_type": "Template18"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"_type": "Name", "id": "ActionTag"}, "_type": "Call"}], "func": {"_type": "Name", "id": "Effect"}, "_type": "Call"}], "_type": "Template0", "hole1": "add_effect"}], "name": "Corruption", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.7624193195254634, "choice_history": [50, 111, 176, 58, 90, "Corruption", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Corruption", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Turn", "Started", "<EOS>", 171, 49, 152, "player", "<EOS>", 23, 135, "Enemy", "Player", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 46, 135, "Kill", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"]}], "index": 22}
{"beams": [{"score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004909025738015771, -2.7894804588868283e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.382439561188221e-07, -1.4662741705251392e-05, -2.0265579223632812e-06, -0.00023651123046875, -0.0002765655517578125, -4.1961669921875e-05, -2.0265373677830212e-05, -1.990795135498047e-05, -1.0371208190917969e-05, 0.0, -4.053113570989808e-06, 0.0, -3.361701965332031e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -3.933898369723465e-06, 0.0, -0.011338472366333008, -0.0012569427490234375, -0.000446319580078125, -2.288818359375e-05, -0.0003305660211481154, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"body": [{"body": [{"hole0": "Dalaran Mage", "hole2": "ALL", "_type": "Template1", "hole1": 3}, {"hole0": 1, "hole2": "spell_damage", "_type": "Template4", "hole3": {"n": 1, "_type": "Num"}, "hole1": 4}], "name": "DalaranMage", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.014770504631762549, "choice_history": [50, 111, 176, 58, 90, "Dalaran", "Mage", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"]}], "index": 23}
{"beams": [{"score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.0013580322265625e-05, -4.768367489305092e-06, -1.847726889536716e-05, -9.5367431640625e-06, 0.0, 0.0, -1.564621925354004e-05, -0.0002580881118774414, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00202178955078125, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-05, -2.288818359375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001621246337890625, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -0.0001239776611328125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -8.02278082119301e-05, -0.0003393766237422824, -1.4781842764932662e-05, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.053033626405522e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.028242826461791992, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -0.000461578369140625, -1.33514404296875e-05, -7.62939453125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002765655517578125, -4.971027374267578e-05, -0.0012042522430419922, 0.0, -0.004520416259765625, -0.006671905517578125, -1.9073486328125e-06, -1.71661376953125e-05, -0.0023899078369140625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.3136638402938843, -1.9073486328125e-06, -9.5367431640625e-05, -0.05634307861328125, 0.0, -0.000102996826171875, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-05, -6.103515625e-05, 0.0, -0.008815407752990723, 0.0], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}], "_type": "Template0", "hole1": "increase_health"}], "name": "DivineSpirit", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.4271675512568365, "choice_history": [50, 111, 176, 58, 90, "Divine", "Spirit", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Divine", " ", "Spirit", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"]}], "index": 24}
{"beams": [{"score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -9.583967766957358e-05, -1.2516963579400908e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0251998901367188e-05, -2.3841855067985307e-07, -7.62939453125e-06, -1.52587890625e-05, -4.57763671875e-05, -3.015955189766828e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.622604142743512e-06, -2.622604142743512e-06, -8.0108642578125e-05, -0.0072803497314453125, -7.05718994140625e-05, -2.145764938177308e-06, -0.00022625838755629957, -8.106231689453125e-06, 0.0, -0.006843585520982742, -1.1920928244535389e-07, -3.826618194580078e-05, 0.0, -0.0008807182312011719, 0.0, -0.0001049041748046875, -3.814697265625e-06, -1.1444091796875e-05, -0.0001125335693359375, -0.00024509301874786615, 0.0, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -0.0007171630859375, -1.9073486328125e-06, -0.0005867335712537169, -0.005068567581474781, -0.00019073486328125, -0.00051116943359375, -3.814697265625e-06, -0.003493126016110182, -0.001839515520259738, -0.00022004345373716205, -0.0001220703125, 0.0, -1.3828277587890625e-05, -7.152556463552173e-06, -5.7220458984375e-06, -4.76837158203125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"hole4": {"args": [{"args": [{"hole0": "MechanicalDragonling", "_type": "Template18"}], "func": {"_type": "Name", "id": "Summon"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template18"}], "func": {"_type": "Name", "id": "Battlecry"}, "_type": "Call"}, "_type": "Template6", "hole2": "COMMON", "hole0": "Dragonling Mechanic", "hole1": 4, "hole3": "battlecry"}]}, {"hole0": 2, "_type": "Template5", "hole1": 4}], "name": "DragonlingMechanic", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.02923232301021983, "choice_history": [50, 111, 176, 58, 90, "Dragonling", "Mechanic", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Summon", "<EOS>", 163, 46, 135, "Mechanical", "Dragonling", "<EOS>", 46, 135, "Player", "Selector", "<EOS>", 72, 140, "2", "<EOS>", "4", "<EOS>"]}], "index": 25}
{"beams": [{"score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.629365427419543e-06, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -2.078898251056671e-05, -3.266327621531673e-05, -5.960446742392378e-06, -5.7220458984375e-05, -0.004810333251953125, -2.09808349609375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -7.05718994140625e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, -6.67572021484375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00046433156239800155, -4.6849247155478224e-05, -2.9802317840221804e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0007666348828934133, -3.576278118089249e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.179109838441946e-06, -1.4066696166992188e-05, -0.025842785835266113, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0019397735595703125, 0.0, -0.0014495849609375, -3.0517578125e-05, -9.5367431640625e-06, -0.0002593994140625, 0.0, -0.000598907470703125, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.002208709716796875, -3.814697265625e-06, -0.011552810668945312, -1.9073486328125e-06, -0.0004749298095703125, -2.47955322265625e-05, -4.76837158203125e-05, 0.0, -8.96453857421875e-05, -6.103515625e-05, -4.00543212890625e-05, -4.649161837733118e-06, 0.0, -1.1444091796875e-05, -3.4809112548828125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0008319605840370059, -1.1920928244535389e-07, -0.0014295578002929688, -3.814697265625e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.000202178955078125, -2.86102294921875e-05, -5.3286508773453534e-05, -1.1801719665527344e-05, -0.0001697540283203125, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.626678466796875e-05, -1.9073486328125e-06, -0.00052642822265625, -0.0004062652587890625, -0.0055179595947265625, -0.0014829635620117188, -0.00015794446517247707, -5.960462772236497e-07, -0.0002880096435546875, -1.9073486328125e-06, -0.014070510864257812, -0.000789642333984375, -9.5367431640625e-06, 0.0, -0.0005435943603515625, -4.57763671875e-05, -0.00563812255859375, 0.0, -0.018204808235168457, 0.0, -0.00028169091092422605, -1.1920928244535389e-07, -0.0524522066116333, 0.0, -0.000133514404296875, -0.0009212493896484375, -3.814697265625e-06, -0.0010280609130859375, -1.1444091796875e-05, -0.000835418701171875, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028727054595947266, 0.0, -7.62939453125e-06, -0.0002002716064453125, -0.0003566741943359375, -0.00010662339627742767, -7.152555099310121e-07, -3.814697265625e-06, -1.1444091796875e-05, -3.8862068322487175e-05, -3.933898824470816e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"_type": "Name", "id": "self"}], "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "DrainLife", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.1617820053903074, "choice_history": [50, 111, 176, 58, 90, "Drain", "Life", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Drain", " ", "Life", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "2", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 26}
{"beams": [{"score_history": [-5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00031471101101487875, -0.00018620447372086346, -5.841255187988281e-06, -9.5367431640625e-06, 0.0, 0.0, -0.0001869992120191455, -5.674351268680766e-05, -4.410734163684538e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.0517578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -4.38690185546875e-05, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0005283355712890625, -3.62396240234375e-05, -3.814697265625e-06, -0.000133514404296875, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -0.0002384185791015625, -3.814697265625e-06, -2.6702880859375e-05, -6.079673767089844e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.564294092939235e-05, -0.00010526180267333984, -1.0728823326644488e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.164517693221569e-06, -2.396077979938127e-05, -0.00018310546875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.384185791015625e-06, -0.009636521339416504, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -2.86102294921875e-05, -0.0001990795135498047, 0.0, -0.0001583099365234375, -1.52587890625e-05, -0.0005970001220703125, -0.00011646747589111328, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.006018638610839844, 0.0, -0.0009479522705078125, -3.814697265625e-06, -0.0011768341064453125, 0.0, -0.0026531219482421875, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -0.00036072731018066406, 0.0, -7.62939453125e-06, -0.0006008148193359375, -6.866455078125e-05, -0.00033630430698394775, -9.775153557711747e-06, -0.008466720581054688, -0.0024166107177734375, -0.0001087188720703125, 0.0, -0.000858306884765625, -0.00015461444854736328, -7.62939453125e-06, -0.0009212493896484375, 0.0, -4.38690185546875e-05, -0.0005779266357421875, -4.57763671875e-05, -0.00337982177734375, -1.9073486328125e-06, -0.000156402587890625, -9.5367431640625e-05, 0.0, -0.0004329681396484375, -0.0001163482666015625, -0.0002103954611811787, -1.776205863279756e-05, -0.0009121395996771753, -2.50339189733495e-06], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"n": 6, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "_type": "keyword", "arg": "minion_type"}, {"value": {"args": [{"hole0": 1, "_type": "Template17"}, {"func": {"_type": "Name", "id": "CharacterSelector"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword", "arg": "players"}]}], "func": {"_type": "Name", "id": "Battlecry"}, "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}, "_type": "Expr"}]}, {"hole0": 6, "_type": "Template5", "hole1": 6}], "name": "DreadInfernal", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.044445254111899146, "choice_history": [50, 111, 176, 58, 90, "Dread", "Infernal", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Dread", " ", "Infernal", "<EOS>", 37, 117, "6", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 171, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 72, 140, "6", "<EOS>", "6", "<EOS>"]}], "index": 27}
{"beams": [{"score_history": [-3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.169585604860913e-05, -2.50339189733495e-06, -1.4305012882687151e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, 0.0, -8.368380076717585e-05, -1.7881377516459906e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4570680327306036e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.9604644775390625e-06, -1.6331669030478224e-05, -7.05718994140625e-05, -0.4661293029785156, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.924701690673828e-05, -1.7404556274414062e-05, -1.52587890625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.38690185546875e-05, -5.8412379075889476e-06, -8.285045623779297e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.0728881534305401e-06, -8.106212590064388e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, 0.0, -8.2254373410251e-06, -4.863735375693068e-05, -6.484984623966739e-05, 0.0, -0.000347137451171875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0002976655960083008, -1.9073486328125e-06, -6.306171417236328e-05, 0.0, -0.001567840576171875, -0.0002689361572265625, -3.814697265625e-06, -0.0008223056793212891, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00025177001953125, 0.0, -0.016046524047851562, 0.0, -0.0001964569091796875, 0.0, -0.00013434886932373047, 0.0, -8.58306884765625e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0006952285766601562, 0.0, -1.9073486328125e-06, -0.00147247314453125, -4.9591064453125e-05, -0.00031084194779396057, -5.006789251638111e-06, -0.0003223419189453125, -0.008615493774414062, -0.0001468658447265625, 0.0, -0.00011467933654785156, -8.809561404632404e-05, -6.4849853515625e-05, -0.0003910064697265625, -5.7220458984375e-06, -7.2479248046875e-05, -0.000324249267578125, -1.33514404296875e-05, -8.7738037109375e-05, -1.33514404296875e-05, -0.0013294219970703125, -4.398822784423828e-05, 0.0, -5.14984130859375e-05, 0.0, -0.0010492801666259766, -9.5367431640625e-06, -0.00014495849609375, -7.62939453125e-06, -0.0001544952392578125, -9.572505950927734e-05, 0.0, -0.000209808349609375, -3.814697265625e-05, -3.576308245101245e-07, -8.344646857949556e-07, -4.2926658352371305e-06, -1.1920928244535389e-07], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "minion_type"}, {"value": {"args": [{"hole0": 1, "_type": "Template17"}, {"func": {"_type": "Name", "id": "CharacterSelector"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword", "arg": "picker"}]}], "func": {"_type": "Name", "id": "Battlecry"}, "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}, "_type": "Expr"}]}, {"hole0": 1, "_type": "Template5", "hole1": 1}], "name": "ElvenArcher", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.5033244523228788, "choice_history": [50, 111, 176, 58, 90, "Elven", "Archer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Elven", " ", "Archer", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "1", "<EOS>", "1", "<EOS>"]}], "index": 28}
{"beams": [{"score_history": [-0.0001068115234375, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.000203827497898601, 0.0, 0.0, -1.9073486328125e-06, -2.8437934815883636e-06, -0.002241014502942562, -2.837150896084495e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -1.7881393432617188e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0006237030029296875, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.658358425833285e-05, -0.0006196498870849609, -0.000102996826171875, -1.9073486328125e-06, -0.013959884643554688, -7.62939453125e-06, -7.62939453125e-06, -0.0004065413377247751, -0.0001087188720703125, -0.00012516239075921476, -0.0008754730224609375, -1.9073486328125e-05, 0.0, -1.764281842042692e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -4.76837158203125e-05, -2.753734588623047e-05, -3.814689989667386e-06, -0.002442240249365568, -4.9591064453125e-05, -0.0001583099365234375, -0.000629425048828125, -3.814697265625e-06, -3.814697265625e-06, -0.00014889240264892578, -0.0003833770751953125, -0.0023919343948364258, -1.9073486328125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -0.0022912020795047283, -0.005138397216796875, -0.052776336669921875, -0.012525558471679688, -8.58306884765625e-05, -2.09808349609375e-05, -0.00011539459228515625, -1.9073486328125e-06, -0.013508914969861507, 0.0], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}]}, {"hole0": {"_type": "Name", "id": "player"}, "_type": "Template0", "hole1": "draw"}], "name": "ExcessMana", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.11287998086021389, "choice_history": [50, 111, 176, 58, 90, "Excess", "Mana", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Excess", " ", "Mana", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 65, 124, 19, 112, "player", "<EOS>", "draw", "<EOS>"]}], "index": 29}
{"beams": [{"score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, -3.814697265625e-06, -4.768370445162873e-07, -1.3232143828645349e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.520880222320557e-06, -0.00025844573974609375, -1.9073486328125e-06, -0.0003948211669921875, -1.33514404296875e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.814697265625e-06, -0.00083160400390625, -3.0517578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.000244140625, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.00104522705078125, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -5.960455382592045e-07, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.2649765014648438e-06, 0.0, -0.016259431838989258, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.5367431640625e-06, -0.00186920166015625, 0.0, -0.015383720397949219, -1.9073486328125e-06, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.000247955322265625, -4.1961669921875e-05, -0.010060429573059082, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.004426121711730957, 0.0, -0.0004100799560546875, -0.000446319580078125, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.0009098052978515625, -0.000293731689453125, -0.00023651123046875, -0.003040313720703125, -0.000453948974609375, -8.58306884765625e-05, -9.5367431640625e-05, 0.0, -0.0009593963623046875, 0.0, -0.000396728515625, 0.0, -0.00256764842197299, -1.9073486328125e-06, -0.00031757354736328125, -0.11300086975097656, -0.0005941390991210938, -0.0014858245849609375, -0.00041961669921875, -9.5367431640625e-06, 0.0, -0.0035867691040039062, 0.0, -0.0007696151733398438, -1.1920928244535389e-07, -0.005979180335998535, -1.9073486328125e-06, -0.011231422424316406, -0.000415802001953125, -1.9073486328125e-06, -1.9073486328125e-06, -0.002094268798828125, 0.0, -8.106231689453125e-05, 0.0, -0.012670636177062988, 0.0, -0.3232688903808594, -0.0005741119384765625, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.007128357887268066, 0.0, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -0.0017313957214355469, -5.7220458984375e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Execute"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}, "comparators": [{"func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "_type": "Compare"}, {"func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "spell_targetable"}, "_type": "Call"}]}, "_type": "Lambda"}, "_type": "keyword", "arg": "filter_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "die"}], "name": "Execute", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.5480382809462228, "choice_history": [50, 111, 176, 58, 90, "Execute", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Execute", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 49, 152, "filter_func", "<EOS>", 16, 105, 150, 156, 149, "target", "<EOS>", 13, 84, 0, 164, 31, 91, 11, 81, 19, 112, "target", "<EOS>", "health", "<EOS>", 160, 10, 163, 30, 86, 11, 81, 19, 112, "target", "<EOS>", "calculate_max_health", "<EOS>", 30, 86, 11, 81, 19, 112, "target", "<EOS>", "spell_targetable", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 163, 35, 112, "self", "<EOS>"]}], "index": 30}
{"beams": [{"score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.000141143798828125, -2.47955322265625e-05, -8.868777513271198e-05, -0.0002723856014199555, -0.00020549609325826168, -5.602820692729438e-06, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -1.1918018572032452e-07, -8.845322008710355e-05, -2.9802276912960224e-06, -0.0010433197021484375, -0.0031299591064453125, -1.71661376953125e-05, -0.00029345019720494747, -0.00030624866485595703, -3.8743019104003906e-05, -0.000118255615234375, -2.3245802367455326e-05, 0.0, -1.3351351299206726e-05, -2.0265579223632812e-06, -0.014660120010375977, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -2.0265579223632812e-06, 0.0, -0.000821232795715332, -3.576278118089249e-07, -0.000606536865234375, -2.288818359375e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, -7.62939453125e-06, -2.157687231374439e-05, -1.1563301086425781e-05, -0.000141143798828125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -8.0108642578125e-05, -3.302069671917707e-05, -2.0265579223632812e-06, -0.0036954879760742188, -5.14984130859375e-05, -0.00066375732421875, -5.7220458984375e-06, -0.0015559196472167969, -7.152555099310121e-07, -0.0002288818359375, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.003772735595703125, 0.0, -0.00014698503946419805, -2.288818359375e-05, -8.96453857421875e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00040435791015625, 0.0, -0.00054931640625, -1.33514404296875e-05, -0.01514744758605957, -3.62396240234375e-05, -7.832050323486328e-05, 0.0, -0.000194549560546875, -0.0012531280517578125, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -0.000217437744140625, 0.0, -2.288818359375e-05, 0.0, -0.0006958245649002492, -1.1920928244535389e-07, -0.0008411407470703125, -1.9073486328125e-06, -0.0009059906005859375, -0.0040912628173828125, -0.000186920166015625, -0.0001325594203080982, -3.1709168979432434e-05, -3.814697265625e-06, -8.96453857421875e-05, -0.0036373138427734375, -2.3841855067985307e-07, -0.0032978057861328125, -0.000102996826171875, -0.00046539306640625, -0.0003871917724609375, -3.814697265625e-06, 0.0, -0.000133514404296875, 0.0, -0.00047072244342416525, 0.0, -0.003902912139892578, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"body": [{"body": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "_type": "Template1", "hole1": 3}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}}, {"value": {"func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "FanOfKnives", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.07044649766171318, "choice_history": [50, 111, 176, 58, 90, "Fan", "Of", "Knives", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "1", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"]}], "index": 31}
{"beams": [{"score_history": [-9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -6.389413465512916e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.34600830078125e-05, -0.00028008222579956055, -0.0005619525909423828, -2.0265558760002023e-06, -3.62396240234375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -7.069110870361328e-05, 0.0, 0.0, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002288818359375, -3.814697265625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.1920928244535389e-07, -2.1457672119140625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265558760002023e-06, -1.9073486328125e-06, -0.000396728515625, 0.0, -6.103515625e-05, 0.0, -5.91278076171875e-05, -9.536738616588991e-07, -0.005803465843200684, -0.000110626220703125, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0005645751953125, -1.9073486328125e-06, -0.0008945465087890625, 0.0, -0.00799560546875, -0.0001068115234375, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-05, -0.003139495849609375, -5.7220458984375e-06, -0.0009979009628295898, -9.167194366455078e-05, -0.009410858154296875, -0.000102996826171875, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -0.0005259513854980469, 0.0, -5.7220458984375e-06, -0.000736236572265625, -0.0001125335693359375, -0.00016164773842319846, -3.4570680327306036e-06, 0.0, -3.24249267578125e-05, -0.00011348724365234375, 0.0], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Fireball"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "MAGE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 6, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "damage"}], "name": "Fireball", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.03361481217276463, "choice_history": [50, 111, 176, 58, 90, "Fireball", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Fireball", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "6", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 32}
{"beams": [{"score_history": [-0.000118255615234375, -2.6702880859375e-05, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -2.3841855067985307e-07, -6.067568756407127e-05, -9.5367431640625e-06, 0.0, 0.0, -1.7827842384576797e-06, -0.00017511844635009766, -2.0265579223632812e-06, -0.0023593902587890625, -0.0013294219970703125, -2.47955322265625e-05, -1.7165990357170813e-05, -9.179109838441946e-06, -3.0040289857424796e-05, -7.867813110351562e-06, -0.005543231964111328, -3.814697265625e-06, -8.20159912109375e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -0.00012969970703125, -0.000362396240234375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, -0.0001804828643798828, 0.0, -0.002185821533203125, -0.0007543563842773438, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814624506048858e-05, -1.9073486328125e-06, -0.000255584716796875, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.09808349609375e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.8610222216229886e-05, 0.0, -0.0001316070556640625, -1.52587890625e-05, -0.00095367431640625, -1.9073486328125e-06, -0.0004748106002807617, -8.106222594506107e-06, -0.00067901611328125, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020923614501953125, 0.0, -0.00034224987030029297, -2.86102294921875e-05, -0.0002918243408203125, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -3.24249267578125e-05, -0.0002002716064453125, -5.7220458984375e-06, -0.0005950927734375, 0.0, -0.0007476806640625, -5.7220458984375e-06, -0.00421905517578125, -5.7220458984375e-06, -0.00024282913364004344, 0.0, -0.0001010894775390625, -0.003978729248046875, 0.0, -3.24249267578125e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0006074905395507812, 0.0, -0.0001581844117026776, -2.3841855067985307e-07, -0.00016021728515625, -5.7220458984375e-06, -0.001499176025390625, -0.003490447998046875, -0.000164031982421875, -0.0003649814461823553, -1.3589766240329482e-05, -5.7220458984375e-05, -0.0001373291015625, -0.0007592439651489258, -3.933906555175781e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"body": [{"body": [{"hole0": "Flamestrike", "hole2": "MAGE", "_type": "Template1", "hole1": 7}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 4, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}}]}], "name": "Flamestrike", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.036910838993151174, "choice_history": [50, 111, 176, 58, 90, "Flamestrike", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "4", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 33}
{"beams": [{"score_history": [-1.1444091796875e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.003244138788431883, -1.62123869813513e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, 0.0, -3.2779411412775517e-05, -2.1457672119140625e-06, 0.0, -9.5367431640625e-06, -0.07482528686523438, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -5.14984130859375e-05, -0.0001926422119140625, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, 0.0, -1.0848020792764146e-05, -0.0001163482666015625, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.793414675281383e-05, -4.053115117130801e-05, -0.0002009868621826172, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.003395317355170846, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.6133995056152344e-05, -2.6702880859375e-05, -0.0038366317749023438, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004730224609375, -0.0023479461669921875, 0.0, -0.00043976306915283203, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -0.0002307891845703125, 0.0, -0.0021953582763671875, -3.814697265625e-06, -0.018808722496032715, 0.0, -0.05160331726074219, -1.1444091796875e-05, -3.576278118089249e-07, -3.576278118089249e-07, -2.5033634301507846e-05, -2.2649765014648438e-06, -0.0018600219627842307, -1.537799835205078e-05, -0.0017795562744140625, -7.05718994140625e-05, -0.00034332275390625, -0.00017547607421875, -0.0001010894775390625, -3.814697265625e-06, 0.0, -8.654594421386719e-05, -7.05718994140625e-05, -0.0002384185791015625, -0.0008563995361328125, -0.00030517578125, -0.0009503355831839144, -1.9073486328125e-05, -0.0008983612060546875, -0.0002040863037109375, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003097057342529297, -0.00074005126953125, 0.0, -1.9073486328125e-05, -0.003996849060058594, -8.58306884765625e-05, -0.0017030350863933563, -5.209347000345588e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "_type": "keyword", "arg": "minion_type"}]}, "_type": "Expr"}]}, {"hole0": 0, "hole2": "auras", "_type": "Template4", "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template15"}, {"args": [{"hole0": "Adjacent", "_type": "Template18"}], "func": {"_type": "Name", "id": "MinionSelector"}, "_type": "Call"}], "func": {"_type": "Name", "id": "Aura"}, "_type": "Call"}], "_type": "List"}, "hole1": 3}], "name": "FlametongueTotem", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.17778144181726674, "choice_history": [50, 111, 176, 58, 90, "Flametongue", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Flametongue", " ", "Totem", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "2", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 163, 46, 135, "Adjacent", "<EOS>"]}], "index": 34}
{"beams": [{"score_history": [0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.4066597032069694e-05, -0.0003552436246536672, 0.0, -1.9073486328125e-06, 0.0, -2.023414708673954e-06, -9.179088920063805e-06, -4.768370445162873e-07, -7.2479248046875e-05, -0.0001277923583984375, -1.71661376953125e-05, -5.9604644775390625e-06, -5.960462772236497e-07, 0.0, -9.5367431640625e-06, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07, 0.0, -0.001728057861328125, 0.0, -3.814697265625e-06, -0.0006046295166015625, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0251998901367188e-05, -8.344646857949556e-07, -8.070463809417561e-05, 0.0, -0.0003108978271484375, -2.6702880859375e-05, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002938508987426758, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044142809929326177, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00013256072998046875, 0.0, -0.00018048252968583256, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.589557647705078e-05, -0.0001430511474609375, -4.57763671875e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0004178285598754883, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -0.0008993148803710938, 0.0, -0.0262908935546875, -4.57763671875e-05, -0.000141143798828125, -2.288818359375e-05, -1.9073486328125e-06, -0.0002498626708984375, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00202178955078125, -2.0265579223632812e-06, -3.4332275390625e-05, -0.014301300048828125, -0.0014476776123046875, -6.5565000113565475e-06, -1.4305104514278355e-06, -0.0002932351198978722, 0.0, -0.0013830617535859346, 0.0, -8.20159912109375e-05, -1.33514404296875e-05, -0.000110626220703125, 0.0], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "name": "create_minion", "_type": "FunctionDef", "body": [{"hole0": 0, "hole2": "taunt", "_type": "Template12", "hole3": {"value": true, "_type": "NameConstant"}, "hole1": 1}]}], "name": "Frog", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.05296703975193395, "choice_history": [50, 111, 176, 58, 90, "Frog", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Frog", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 61, 95, "create_minion", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "p", "<EOS>", 176, 67, 129, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 35}
{"beams": [{"score_history": [-1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -1.1324875231366605e-05, -7.62939453125e-06, 0.0, 0.0, -4.599615931510925e-05, -9.548664093017578e-05, 0.0, -0.0055217742919921875, -0.00058746337890625, -1.71661376953125e-05, -1.0847986231965479e-05, -0.00010061264038085938, -8.344646857949556e-07, -1.1444091796875e-05, -0.001805462408810854, 0.0, -0.011458396911621094, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0001558065414428711, 0.0, -0.0031538009643554688, -0.0001049041748046875, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.000244140625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -6.508627848234028e-05, -3.814697265625e-06, -0.0003814697265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -4.565715789794922e-05, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -0.0008106231689453125, 0.0, -0.003219008445739746, -1.1920919860131107e-05, -0.08027267456054688, -0.000904083251953125, -2.6702880859375e-05, -7.05718994140625e-05, -0.00225830078125, 0.0, -0.005167961120605469, -1.9073486328125e-06, -0.0190659761428833, -3.814697265625e-06, -0.00017762091010808945, 0.0, -0.000507354736328125, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0003147125244140625, -2.09808349609375e-05, -1.9073486328125e-06, -0.028879165649414062, 0.0, -6.19886995991692e-05, -0.00011146068572998047, -0.2359304428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0005865097045898438, 0.0, -0.000286102294921875, -1.9073486328125e-06, -0.0018024444580078125, -6.914137884450611e-06, -0.0005626678466796875, -0.0002002716064453125, -3.814697265625e-06, -0.0036104850005358458, -6.92605972290039e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "model_output": {"body": [{"body": [{"hole0": "Frost Nova", "hole2": "MAGE", "_type": "Template1", "hole1": 3}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"_type": "Name", "id": "Buff"}, "_type": "Call"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}]}], "name": "FrostNova", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.4107458683516825, "choice_history": [50, 111, 176, 58, 90, "Frost", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"]}], "index": 36}
{"beams": [{"score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -2.276871418871451e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.53131103515625e-05, -8.830800652503967e-06, -0.00032842159271240234, -5.960462772236497e-07, -6.29425048828125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -2.0265579223632812e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0002155303955078125, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.245195097813848e-06, -5.924701690673828e-05, -3.3378546504536644e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.990509917959571e-05, -1.1920928244535389e-07, -0.0023860931396484375, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -3.933906555175781e-06, -2.503394853192731e-06, -0.004417538642883301, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0003604888916015625, 0.0, -0.12801074981689453, -0.000110626220703125, -3.814697265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000385284423828125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.001117706298828125, 0.0, -0.008560419082641602, 0.0, -0.0060367584228515625, -0.000156402587890625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, -0.00039803978870622814, -2.0265579223632812e-06, -0.0025854110717773438, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -3.576277322281385e-06, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00011444091796875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -2.944469451904297e-05, -1.33514404296875e-05, -0.0002593994140625, -0.0001392364501953125, -0.02996063232421875, -0.00066375732421875, -9.999959729611874e-05, -1.311301275563892e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0028705596923828125, -3.814697265625e-06, -5.7220458984375e-06, -0.0012445449829101562, 0.0, -0.000579833984375, 0.0, -0.0009108776575885713, 0.0, -2.47955322265625e-05, 0.0, -0.08949577808380127, 0.0, 0.0, -0.0015764236450195312, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.044386863708496094, -2.5153160095214844e-05, -0.0006504058837890625, -0.0001373291015625, -1.33514404296875e-05, -0.0032849302515387535, -3.814697265625e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template9"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"hole0": "Frozen", "_type": "Template18"}], "func": {"_type": "Name", "id": "Buff"}, "_type": "Call"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "FrostShock", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.332976090524447, "choice_history": [50, 111, 176, 58, 90, "Frost", "Shock", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frost", " ", "Shock", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "1", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 163, 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Frozen", "<EOS>"]}], "index": 37}
{"beams": [{"score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.576278118089249e-07, -2.407998726994265e-05, -2.288818359375e-05, 0.0, -0.0001049041748046875, -6.936490535736084e-06, -0.00013113004388287663, -3.576278118089249e-07, -0.0001087188720703125, -9.1552734375e-05, -4.57763671875e-05, -5.555152893066406e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -1.52587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -2.3841855067985307e-07, -1.3589859008789062e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.0728806500992505e-06, 0.0, -6.866455078125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.0038045644760131836, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.00011646747589111328, -1.9073486328125e-06, -8.785724639892578e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.000102996826171875, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0040961503982543945, 0.0, -0.0002346038818359375, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -9.1552734375e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001913309097290039, -3.576278118089249e-07, -0.001010894775390625, -7.62939453125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002956390380859375, -3.814697265625e-06, -0.0001264810562133789, -2.2649765014648438e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.41074053014745e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.5987619665102102e-05, 0.0, -0.0013675689697265625, -8.58306884765625e-05, -0.39346885681152344, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000141143798828125, -3.4332275390625e-05, -9.1552734375e-05, 0.0, -1.4305092918220907e-05, 0.0, -7.43865966796875e-05, 0.0, -0.18759167194366455, 0.0, -5.7220458984375e-06, -0.00197601318359375, -4.76837158203125e-05, -0.016947627067565918, -2.622604142743512e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.200241088867188e-05, -2.3841855067985307e-07, -0.0007419586181640625, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -2.09808349609375e-05, -0.000644683837890625, 0.0, -7.68899917602539e-05, 0.0, -8.96453857421875e-05, 0.0, -0.5099325180053711, -1.9073486328125e-06, -3.814697265625e-06, -0.000213623046875, -9.5367431640625e-06, -0.0987730398774147, -4.5299530029296875e-06], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        self.target.change_attack(3)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "MAGE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}, {"_type": "Name", "id": "self"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "change_attack"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "Frostbolt", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.2247733468748265, "choice_history": [50, 111, 176, 58, 90, "Frostbolt", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Frostbolt", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 37, 117, "3", "<EOS>", 35, 112, "self", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 37, 117, "3", "<EOS>"]}], "index": 38}
{"beams": [{"score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00011097769311163574, -5.400034933700226e-05, -6.556489552167477e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.01327859738376e-05, -4.053113570989808e-06, -2.288818359375e-05, -0.00139617919921875, -2.86102294921875e-05, -5.364412118069595e-06, -2.8490991098806262e-05, -9.357491217087954e-05, -1.9073486328125e-06, -4.053161319461651e-06, 0.0, -5.364411117625423e-05, 0.0, -0.010805130004882812, -1.52587890625e-05, -1.311301275563892e-06, -2.3841855067985307e-07, -1.4066612493479624e-05, -1.1920928244535389e-07, -0.0016204117564484477, 0.0, -5.53131103515625e-05, -3.4332275390625e-05, -0.00020611286163330078, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"body": [{"body": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "_type": "Template1", "hole1": 2}, {"hole0": 2, "hole2": "taunt", "_type": "Template4", "hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2}], "name": "FrostwolfGrunt", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.014614688989659896, "choice_history": [50, 111, 176, 58, 90, "Frostwolf", "Grunt", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 39}
{"beams": [{"score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.00013958434283267707, -6.603976362384856e-05, -1.7881377516459906e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.0371204552939162e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0016040802001953125, -4.00543212890625e-05, -1.2397689715726301e-05, -2.0861623852397315e-05, -2.3841855067985307e-07, 0.0, -3.242588718421757e-05, -1.9073468138230965e-06, -9.977815352613106e-05, 0.0, -0.0066967010498046875, -1.52587890625e-05, -8.463859558105469e-06, -8.344646857949556e-07, -1.4185799955157563e-05, -1.1920928244535389e-07, -0.0020712614059448242, 0.0, -5.340576171875e-05, -2.6702880859375e-05, -0.0002709627151489258, -3.814697265625e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"body": [{"body": [{"hole0": "Goldshire Footman", "hole2": "ALL", "_type": "Template1", "hole1": 1}, {"hole0": 1, "hole2": "taunt", "_type": "Template4", "hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2}], "name": "GoldshireFootman", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.011263001714802101, "choice_history": [50, 111, 176, 58, 90, "Goldshire", "Footman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 71, 139, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 40}
{"beams": [{"score_history": [-7.62939453125e-06, -0.0001583099365234375, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.425174069590867e-05, -8.344629350176547e-06, -5.602820692729438e-06, -5.7220458984375e-06, -0.0016002655029296875, 0.0, -1.1897645890712738e-07, -0.0001727336348267272, -9.179073458653875e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.800059908418916e-05, 0.0, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -3.8504600524902344e-05, -1.919269561767578e-05, -1.9073486328125e-06, -0.006870269775390625, -1.71661376953125e-05, -1.0490362910786644e-05, -0.00011932846246054396, -5.364412118069595e-06, 0.0, -7.5102425398654304e-06, -1.9073468138230965e-06, -0.00017571449279785156, 0.0, -0.0002543926239013672, 0.0, -2.6702880859375e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, 0.0, -0.024892568588256836, -1.1920928244535389e-07, -0.0031414031982421875, -2.6702880859375e-05, 1.8189894035458565e-12, -8.344646857949556e-07, -1.426431117579341e-05, -1.1920928244535389e-07, -0.010456765070557594, -2.0265579223632812e-06, -0.0011844635009765625, -1.33514404296875e-05, -0.000286102294921875, -0.000244140625, -0.000507354736328125, -3.814697265625e-06, 0.0, -0.0001442432403564453, -4.57763671875e-05, -0.000225067138671875, -0.000560760498046875, -0.000209808349609375, -0.0006608979310840368, -1.33514404296875e-05, -0.00032806396484375, -0.012970924377441406, -5.7220458984375e-06, 0.0, -0.0001430511474609375, -4.76837158203125e-05, 0.0, -0.011133193969726562, -0.00051116943359375, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, -0.0003743171691894531, -0.0002027750015258789, -0.0006963014602661133, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0006715059280395508, -7.748603820800781e-06, -0.005743265151977539, -1.9073486328125e-05, -0.0002269744873046875, 0.0, -0.004580970387905836, -0.0014080449473112822, -1.1563301086425781e-05], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "_type": "Template6", "hole2": "COMMON", "hole0": "Grimscale Oracle", "hole1": 1, "hole3": "minion_type"}]}, {"hole0": 1, "hole2": "auras", "_type": "Template4", "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"_type": "Name", "id": "IsType"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template18"}], "func": {"_type": "Name", "id": "MinionSelector"}, "_type": "Call"}], "func": {"_type": "Name", "id": "Aura"}, "_type": "Call"}], "_type": "List"}, "hole1": 1}], "name": "GrimscaleOracle", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.09190998683844498, "choice_history": [50, 111, 176, 58, 90, "Grimscale", "Oracle", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 139, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 30, 88, 19, 112, "Minion", "Selector", "<EOS>", 164, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 135, "Both", "Player", "<EOS>"]}], "index": 41}
{"beams": [{"score_history": [0.0, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -6.663577369181439e-05, -0.0006440791767090559, -0.0005819296347908676, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, 0.0, -2.860986569430679e-06, -6.532455881824717e-05, -0.00011777184408856556, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.3470649719238281e-05, -7.2479248046875e-05, -5.14984130859375e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.867813110351562e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -7.092700980138034e-05, -5.066394805908203e-05, -2.8967839170945808e-05, -8.58306884765625e-05, -2.5033950805664062e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0013012884883210063, -3.337836096761748e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -2.1815170839545317e-05, -2.264974000354414e-06, -0.005812999326735735, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.05243110656738281, -2.09808349609375e-05, -3.814697265625e-06, -0.0007516145706176758, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.0002002716064453125, -7.62939453125e-05, -0.0008032321929931641, 0.0, -0.0006313323974609375, -0.0003948211669921875, 0.0, -7.43865966796875e-05, 0.0, -0.008455869741737843, -0.00010883276263484731, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.00647579925134778, -6.794917680963408e-06, -0.0004825592041015625, -3.62396240234375e-05, -0.0009995698928833008, -0.00019848346710205078, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -5.817412966280244e-05, 0.0, -0.00021302467212080956, -1.1920928244535389e-07], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"n": 7, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"args": [{"args": [{"n": 6, "_type": "Num"}], "func": {"_type": "Name", "id": "Heal"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template18"}], "func": {"_type": "Name", "id": "Battlecry"}, "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}, "_type": "Expr"}]}, {"hole0": 5, "_type": "Template5", "hole1": 6}], "name": "GuardianOfKings", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.08202185789217964, "choice_history": [50, 111, 176, 58, 90, "Guardian", "Of", "Kings", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Guardian", " ", "of", " ", "Kings", "<EOS>", 37, 117, "7", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "6", "<EOS>", 46, 135, "Hero", "Selector", "<EOS>", 72, 140, "5", "<EOS>", "6", "<EOS>"]}], "index": 42}
{"beams": [{"score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0003034608089365065, -4.935142715112306e-05, -2.861018856492592e-06, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -5.4747797548770905e-06, -8.570912905270234e-05, -8.344650268554688e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0005035400390625, -0.00011443436960689723, -2.753734588623047e-05, -6.437280717364047e-06, 0.0, -4.649062975659035e-05, 0.0, -3.445148468017578e-05, 0.0, -0.0001277923583984375, -3.24249267578125e-05, -1.0848020792764146e-05, -3.2186455882765586e-06, -0.00017784576630219817, -5.245195097813848e-06, -0.00030362606048583984, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002613067626953125, -2.09808349609375e-05, -0.0001678466796875, -5.7220458984375e-06, 0.0, -0.0002726316452026367, -1.1920928244535389e-07, -3.814697265625e-05, -0.0063762664794921875, -0.0029010772705078125, -0.0003814697265625, 0.0, -0.004022717475891113, -0.0033681392669677734, -0.0003873109817504883, -0.0021190643310546875, -1.9073486328125e-06, -1.71661376953125e-05, -0.012023803777992725, -2.503394853192731e-06, -0.019380569458007812, -4.38690185546875e-05, -0.047437071800231934, -0.002614589175209403, -0.01665305159986019, -0.0031872407998889685, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -5.91278076171875e-05, -0.0003814697265625, 0.0, -4.00543212890625e-05, -0.005237579345703125, -3.814697265625e-06, -0.000156402587890625, 0.0, -0.001293778419494629, -8.106231689453125e-06, -2.86102294921875e-05, -0.0012521743774414062, -8.20159912109375e-05, -0.06326937675476074, -4.2438507080078125e-05, 0.0, -3.814697265625e-06, -0.0011307001113891602, -9.655945177655667e-06, 0.0], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"body": [{"body": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "_type": "Template1", "hole1": 5}, {"hole0": 2, "hole2": "effects", "_type": "Template4", "hole3": {"elts": [{"args": [{"func": {"_type": "Name", "id": "CharacterDamaged"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template18"}, "_type": "keyword", "arg": "condition"}]}, {"args": [{"args": [{"hole0": 3, "_type": "Template15"}], "func": {"_type": "Name", "id": "Give"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template18"}], "func": {"_type": "Name", "id": "ActionTag"}, "_type": "Call"}], "func": {"_type": "Name", "id": "Effect"}, "_type": "Call"}], "_type": "List"}, "hole1": 7}], "name": "GurubashiBerserker", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.19725567101385622, "choice_history": [50, 111, 176, 58, 90, "Gurubashi", "Berserker", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 30, 87, 19, 112, "Character", "Damaged", "<EOS>", 171, 49, 152, "condition", "<EOS>", 23, 135, "Minion", "Is", "Target", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 43, 132, "3", "<EOS>", 46, 135, "Self", "Selector", "<EOS>"]}], "index": 43}
{"beams": [{"score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -9.1552734375e-05, -1.33514404296875e-05, -0.00014530715998262167, -0.0004197074449621141, -0.00011526874004630372, -1.5497138520004228e-05, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, -1.1920201359316707e-07, -0.00036883336724713445, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -7.62939453125e-06, -6.43729799776338e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -0.000171661376953125, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002765655517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -6.4373016357421875e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0006721144891344011, -9.882449376164004e-05, -1.1920928955078125e-05, -5.7220458984375e-05, -3.4689903259277344e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.914134246471804e-06, -4.768370445162873e-07, -0.001529693603515625, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -8.344646857949556e-07, -1.645074735279195e-05, -0.01379704475402832, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0001659393310546875, 0.0, -0.020601511001586914, 0.0, -0.00290679931640625, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001220703125, -9.894371032714844e-06, -0.0032737255096435547, -7.748603820800781e-06, -4.9591064453125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.0517578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.295608520507812e-05, -2.861022494471399e-06, 0.0, -3.933904736186378e-06, -3.814697265625e-06, 0.0, -0.0004099319048691541, -6.079655122448457e-06, -0.0008087158203125, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -2.09808349609375e-05, -2.2172927856445312e-05, -2.193450927734375e-05, -4.1961669921875e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.2676889279391617e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-05, -0.014243125915527344, -0.0002346038818359375, -0.0007017723401077092, -6.4373016357421875e-06, -0.0001430511474609375, -5.7220458984375e-06, -0.0016689300537109375, -0.0051746368408203125, -7.62939453125e-06, 0.0, -0.00029754638671875, 0.0, -1.9669532775878906e-05, 0.0, -0.0009747743024490774, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}, {"value": {"func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "HammerOfWrath", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.07168249870221644, "choice_history": [50, 111, 176, 58, 90, "Hammer", "Of", "Wrath", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 59, 93, 24, 144, "3", "<EOS>", 59, 93, 14, 86, 11, 81, 19, 112, "player", "<EOS>", "draw", "<EOS>"]}], "index": 44}
{"beams": [{"score_history": [-6.103515625e-05, -5.14984130859375e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -8.785355021245778e-05, -0.016642091795802116, -0.00031001531169749796, -9.417489309271332e-06, -6.866455078125e-05, 0.0, 0.0, -1.9907631212845445e-05, -0.0001014470326481387, -1.1920928244535389e-07, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.417532055522315e-06, 0.0, 0.0, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-05, -0.000133514404296875, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -2.503394853192731e-06, -2.5153160095214844e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.8967540856683627e-05, -0.0008271905244328082, -0.00016831091488711536, -4.76837158203125e-05, -1.1801719665527344e-05, -4.398822784423828e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1920838005607948e-07, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.9802317840221804e-06, -1.5497195136049413e-06, -0.02267022244632244, 0.0, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0011310577392578125, 0.0, -0.001964569091796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0003299713134765625, -2.6702880859375e-05, -0.0002498626708984375, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.000316619873046875, -1.263618378288811e-05, -0.004044889006763697, -1.1920928244535389e-07, -0.0024394989013671875, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.655950634623878e-06, -2.3841855067985307e-07, 0.0, -3.5643577575683594e-05, -8.118152618408203e-05, -3.814697265625e-06, -0.0010984311811625957, -1.9311717551317997e-05, -0.028687477111816406, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.6821824576472864e-05, -6.079673767089844e-06, -0.0007114410400390625, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.291534423828125e-06, -5.841255187988281e-06, 0.0, 0.0, -9.190742275677621e-05, -2.2649765014648438e-06, -0.08765888214111328, -0.0002460479736328125, -2.47955322265625e-05, -0.06078052520751953, -5.53131103515625e-05, -8.20159912109375e-05, 0.0, -9.34600830078125e-05, 0.0, -0.00054168701171875, 0.0, -5.7220458984375e-06, 0.0, -0.006569027900695801, 0.0, -0.000583648681640625, -3.814697265625e-05, -0.00014495849609375, 0.0], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}]}], "name": "HandOfProtection", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.24035624182651816, "choice_history": [50, 111, 176, 58, 90, "Hand", "Of", "Protection", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hand", " ", "of", " ", "Protection", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 177, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 27, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 45}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00015948961663525552, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0002537369728088379, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0005092620849609375, -3.814697265625e-06, -2.5153160095214844e-05, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0010929107666015625, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -5.45969232916832e-05, -4.6133995056152344e-05, -0.000911712646484375, 0.0, -0.0014095306396484375, -0.0001125335693359375, -0.000484466552734375, -7.033323527139146e-06, -8.20159912109375e-05, -5.412046812125482e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0005166828632354736, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000179290771484375, -2.47955322265625e-05, -0.0007610321044921875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0002117156982421875, 0.0, -8.20159912109375e-05, -8.392333984375e-05, -4.57763671875e-05, 0.0, -0.000843048095703125, 0.0, -0.0019121170043945312, 0.0, -0.0002460479736328125, 0.0, -0.0094146728515625, 0.0, -0.002681732177734375, -3.24249267578125e-05, -2.503394853192731e-06, -4.768370445162873e-07, -4.291530785849318e-06, 0.0, -0.00022494792938232422, 0.0, -1.71661376953125e-05, 0.0, -0.000274658203125, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0006544589996337891, 0.0, -2.86102294921875e-05, -0.000446319580078125, -5.14984130859375e-05, -0.0004525099939201027, -0.0021497011184692383, -1.52587890625e-05, -0.0002422332763671875, -1.9073486328125e-06, -5.340576171875e-05, -0.0006866455078125, -0.00024485585163347423, -0.0002460479736328125, 0.0, -0.0003795623779296875, -0.0002384185791015625, -1.9073486328125e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.007868646644055843, -0.00040351611096411943, -4.00543212890625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -0.00026836752658709884, -1.0371154530730564e-05, -0.007007598876953125, -0.000110626220703125, -0.00012969970703125, 0.0, -0.0001506805419921875, -0.000179290771484375, -7.62939453125e-06, -0.00153350830078125, -2.09808349609375e-05, 0.0, -0.0006238222122192383, 0.0, -0.0046234130859375, -0.0001354217529296875, -0.00038909912109375, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}]}, {"hole0": 0, "hole2": "effects", "_type": "Template4", "hole3": {"elts": [{"args": [{"hole0": "TurnEnded", "_type": "Template18"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Heal"}, "_type": "Call"}, {"func": {"_type": "Name", "id": "MinionSelector"}, "_type": "Call", "keywords": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}]}], "func": {"_type": "Name", "id": "ActionTag"}, "_type": "Call"}], "func": {"_type": "Name", "id": "Effect"}, "_type": "Call"}], "_type": "List"}, "hole1": 2}], "name": "HealingTotem", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.05318328405824957, "choice_history": [50, 111, 176, 58, 90, "Healing", "Totem", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 168, 38, 121, "Healing", " ", "Totem", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 113, "False", "<EOS>", 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 71, 139, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Effect", "<EOS>", 164, 46, 135, "Turn", "Ended", "<EOS>", 30, 88, 19, 112, "Action", "Tag", "<EOS>", 164, 30, 88, 19, 112, "Heal", "<EOS>", 163, 37, 117, "1", "<EOS>", 30, 87, 19, 112, "Minion", "Selector", "<EOS>", 171, 49, 152, "condition", "<EOS>", 20, 114, "Null", "<EOS>"]}], "index": 46}
{"beams": [{"score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.340471398085356e-05, -3.099436753473128e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.221498966217041e-05, -0.00044560429523698986, -1.6689286894688848e-06, -3.62396240234375e-05, -2.47955322265625e-05, -2.09808349609375e-05, -4.1723224057932384e-06, 0.0, 0.0, -0.00012969970703125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.919269561767578e-05, -2.1219253540039062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073468138230965e-06, -5.245208740234375e-05, -8.344646857949556e-07, -3.814697265625e-06, -0.0005168914794921875, -1.9073486328125e-06, -2.384185791015625e-06, -1.1920928244535389e-07, -2.09808349609375e-05, -2.09808349609375e-05, -6.4849853515625e-05, -3.814697265625e-06, -2.1576881408691406e-05, -1.4305104514278355e-06, -0.008929014205932617, -1.52587890625e-05, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0028558969497680664, -1.1920928244535389e-07, -0.00107574462890625, -1.9073486328125e-06, -7.62939453125e-06, -8.404254913330078e-05, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-05, -0.00016033649444580078, -1.5377996533061378e-05, -0.003223896026611328, -2.2649765014648438e-06, -0.0024356842041015625, -0.0005474090576171875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.00044286251068115234, 0.0, -0.013181090354919434, 0.0, -0.000362396240234375, -0.000133514404296875, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -0.0032100677490234375, 0.0, -9.357929229736328e-05, -5.006789251638111e-06, -0.002232074737548828, 0.0, -7.62939453125e-06, -0.0002460479736328125, -0.0001316070556640625, -0.0006370748742483556, -9.894123650155962e-05, 0.0, -7.2479248046875e-05, -0.000588591443374753, -2.6225699912174605e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "heal"}], "name": "HealingTouch", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.04336246567775248, "choice_history": [50, 111, 176, 58, 90, "Healing", "Touch", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Healing", " ", "Touch", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "8", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 47}
{"beams": [{"score_history": [-5.53131103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -4.7205765440594405e-05, -4.529942543740617e-06, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -5.952268838882446e-05, -0.0002442598342895508, -1.9073486328125e-06, -0.000518798828125, -0.0005130767822265625, -0.0001888275146484375, -0.0002582072338555008, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -0.018250465393066406, -4.00543212890625e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00048828125, -1.9073486328125e-06, -1.2278556823730469e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.933906555175781e-06, -7.748603820800781e-06, -3.814697265625e-06, 0.0, -2.7656080419546925e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.1457672119140625e-06, -0.011385798454284668, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0003528594970703125, 0.0, -0.06983661651611328, -0.000476837158203125, -3.814697265625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -0.00011861324310302734, -3.612032742239535e-05, -0.006834570784121752, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.125998541188892e-06, -1.1920928244535389e-07, 0.0, -0.00017178058624267578, -1.0251998901367188e-05, -5.7220458984375e-06, -3.945821663364768e-05, -2.0265558760002023e-06, -0.024970054626464844, -8.392333984375e-05, -2.86102294921875e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.00018298521172255278, -3.814697265625e-06, -0.0011997222900390625, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001468658447265625, -0.0010019540786743164, 0.0, -0.000553131103515625, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.10195040702819824, -2.47955322265625e-05, -0.000431060791015625, -0.0017232894897460938, -1.1444091796875e-05, 0.0, -0.0025873184204101562, -1.9073486328125e-06, -0.000835418701171875, -1.9073486328125e-06, -0.014678955078125, -1.9073486328125e-06, -0.06859397888183594, 0.0, -0.005105018615722656, -1.9073486328125e-06, -0.02982497215270996, -4.076874756719917e-05, -0.0032616346143186092, 0.0, -0.007615896873176098, -4.0531076592742465e-06, -0.03936564177274704, -3.993511199951172e-05, -4.57763671875e-05, -2.288818359375e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.00012969970703125, -0.0022859573364257812, 0.0, -0.000762939453125, -2.47955322265625e-05, -0.002735137939453125, 0.0, -0.012105941772460938, 0.0, -0.03187847137451172, -0.000102996826171875, -0.0025396347045898438, 0.0, -2.09808349609375e-05, -0.013471603393554688, -0.0021419525146484375, -0.0025305747985839844, 0.0, -0.000701904296875, -4.00543212890625e-05, -0.0001811981201171875, -0.006903648376464844, -2.47955322265625e-05, -0.0001125335693359375, -6.866455078125e-05, -0.009874343872070312, -3.814697265625e-06, -0.0027151107788085938, -1.9073486328125e-06, -0.0014324188232421875, 0.0, -0.03320598602294922, -5.7220458984375e-05, -0.006290435791015625, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.002231597900390625, -1.52587890625e-05, -0.0011577606201171875, -9.5367431640625e-06, -0.0014069080352783203, -2.264974000354414e-06, -4.982948303222656e-05, 0.0, -0.0008238535956479609, 0.0, -0.0001659393310546875, -0.001651763916015625, -1.9073486328125e-06, -0.009235382080078125, -1.1920928244535389e-07], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"func": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Attribute", "attr": "Frog"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "minion"}], "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "Hex", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.564961205289805, "choice_history": [50, 111, 176, 58, 90, "Hex", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Hex", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 180, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "frog", "<EOS>", 14, 86, 11, 81, 11, 81, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 55, 80, 163, 35, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "frog", "<EOS>", "create_minion", "<EOS>", 163, 36, 114, "Null", "<EOS>", 55, 80, 163, 27, 81, 19, 112, "minion", "<EOS>", "card", "<EOS>", 19, 112, "frog", "<EOS>", 59, 93, 14, 88, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 163, 35, 112, "minion", "<EOS>"]}], "index": 48}
{"beams": [{"score_history": [-5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -2.884823152271565e-05, -6.437291176553117e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -2.014636993408203e-05, -0.0003371238417457789, -6.556489552167477e-06, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.079673767089844e-06, 0.0, 0.0, -0.0001926422119140625, 0.0, -4.0531158447265625e-06, -2.0265579223632812e-06, -9.5367431640625e-06, -1.33514404296875e-05, -2.6702880859375e-05, -4.38690185546875e-05, -4.00543212890625e-05, -4.9591064453125e-05, 0.0, -0.000179290771484375, 0.0, -1.9431114196777344e-05, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.483612312673358e-06, -0.00012218952178955078, -3.2186455882765586e-06, -5.7220458984375e-06, -0.0002460479736328125, -1.9073486328125e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -0.000118255615234375, -1.33514404296875e-05, -6.330013275146484e-05, -2.50339189733495e-06, -0.013285624794661999, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000209808349609375, 0.0, -0.001293182373046875, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -7.62939453125e-06, -6.67572021484375e-05, -7.82012939453125e-05, -4.38690185546875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, 0.0, -4.9591064453125e-05, -9.918212890625e-05, -0.00018310546875, -2.1338462829589844e-05, -0.0016022920608520508, -4.172325134277344e-06, -0.006590843200683594, -0.0002613067626953125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.004410147666931152, 0.0, -0.008988014422357082, 0.0, -0.000194549560546875, -0.000118255615234375, -0.000102996826171875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, 0.0, -4.971027374267578e-05, -5.483625955093885e-06, -0.0028374195098876953, 0.0, -1.9073486328125e-05, -0.000518798828125, -0.000179290771484375, -0.008036650717258453, -2.5987455956055783e-05, 0.0, -1.33514404296875e-05, -0.00010096922778757289, -8.4638240878121e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "heal"}], "name": "HolyLight", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.053218975776857746, "choice_history": [50, 111, 176, 58, 90, "Holy", "Light", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Light", "<EOS>", 37, 117, "2", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "6", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 49}
{"beams": [{"score_history": [-5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.3841855067985307e-07, -1.4662635294371285e-05, -8.225431884056889e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -9.924173355102539e-06, -3.516674041748047e-05, -4.887569048150908e-06, -0.00019073486328125, -0.0005741119384765625, -1.1444091796875e-05, -2.372236667724792e-05, -0.0001550912857055664, -3.313963316031732e-05, -3.814697265625e-06, -0.0009508162620477378, 0.0, -0.011045455932617188, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -1.71661376953125e-05, -9.918212890625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004659891128540039, -1.1920928244535389e-07, -0.0014047622680664062, -0.0003337860107421875, 0.0, -1.33514404296875e-05, -5.14984130859375e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.340576171875e-05, -1.9073486328125e-06, -2.0623165255528875e-05, -2.1457672119140625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.706050690903794e-05, -1.9073486328125e-06, -0.0003833770751953125, -7.2479248046875e-05, -0.001094818115234375, -9.5367431640625e-06, -0.0016255378723144531, -8.344646857949556e-07, -0.0003604888916015625, -3.62396240234375e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002269744873046875, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000202178955078125, 0.0, -0.0014934539794921875, -7.62939453125e-06, -0.11880147457122803, -1.9073486328125e-05, -0.004250526428222656, 0.0, -0.0007076263427734375, -0.0001049041748046875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, -1.33514404296875e-05, 0.0, -0.0005649328231811523, -3.576278118089249e-07, -0.5123805999755859, -1.9073486328125e-06, -0.00016021728515625, -0.0025310516357421875, -0.0006313323974609375, -0.0018190708942711353, -3.6954811548639555e-06, -3.814697265625e-06, -0.00144195556640625, -2.7418136596679688e-05, -1.9073486328125e-06, -0.11806488037109375, -4.38690185546875e-05, -0.0023956298828125, -3.814697265625e-06, -0.0020346641540527344, -2.2649765014648438e-06, -0.03507041931152344, -0.0001049041748046875, -0.12978076934814453, 0.0, -0.001995086669921875, 0.0, -0.0027033090591430664, 0.0, -0.0008678436279296875, -0.0040912628173828125, 0.0, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.0002155303955078125, -2.47955322265625e-05, 0.0, -0.00031650063465349376, -4.768370445162873e-07, -0.02684807777404785, 0.0, -0.0001659393310546875, -0.0008144378662109375, -3.814697265625e-06, -0.0002002716064453125, -2.09808349609375e-05, -4.00543212890625e-05, 0.0, -5.543231964111328e-05, -2.86102294921875e-05, -0.013885855674743652, -2.3841855067985307e-07, -7.62939453125e-06, -0.000766754150390625, -0.000110626220703125, -0.00048363208770751953, -1.1920928244535389e-07, -1.1444091796875e-05, -2.6702880859375e-05, -0.00015616416931152344, -2.3841855067985307e-07], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"body": [{"body": [{"hole0": "Holy Nova", "hole2": "PRIEST", "_type": "Template1", "hole1": 5}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 2, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}}, {"body": [{"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"_type": "Name", "id": "self"}], "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}]}], "name": "HolyNova", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.0071025775476556, "choice_history": [50, 111, 176, 58, 90, "Holy", "Nova", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 66, 126, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 14, 88, 11, 81, 19, 112, "copy", "<EOS>", "copy", "<EOS>", 163, 27, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>", 60, 94, 19, 112, "minion", "<EOS>", 11, 81, 19, 112, "player", "<EOS>", "minions", "<EOS>", 176, 59, 93, 14, 88, 11, 81, 19, 112, "minion", "<EOS>", "heal", "<EOS>", 164, 30, 88, 11, 81, 19, 112, "player", "<EOS>", "effective_heal_power", "<EOS>", 163, 37, 117, "2", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 50}
{"beams": [{"score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.3841855067985307e-07, -1.537788011773955e-05, -4.768370445162873e-07, -2.288818359375e-05, 0.0, -2.09808349609375e-05, -0.00018787384033203125, -0.0001989603042602539, -1.1920928244535389e-07, -2.86102294921875e-05, -9.5367431640625e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -5.7220458984375e-06, -5.91278076171875e-05, -6.67572021484375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00016021728515625, -5.7220458984375e-06, -1.52587890625e-05, -5.841255187988281e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.2186455882765586e-06, -9.930133819580078e-05, -5.960462772236497e-07, 0.0, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, -7.152555099310121e-07, -0.0017070770263671875, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -0.058068037033081055, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0002899169921875, -5.7220458984375e-06, -0.0008335113525390625, 0.0, -0.007572174072265625, -7.62939453125e-06, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0001583099365234375, -3.0517578125e-05, -0.0010623931884765625, -1.3470649719238281e-05, -0.006260514259338379, -0.0002824068069458008, -0.001415252685546875, -0.00016021728515625, -7.62939453125e-06, 0.0, -0.0001239776611328125, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00041282176971435547, 0.0, -1.9073486328125e-06, -0.0004215240478515625, -0.0001544952392578125, -0.0019108057022094727, 0.0, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, 0.0], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 2, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "damage"}], "name": "HolySmite", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.08240151392927686, "choice_history": [50, 111, 176, 58, 90, "Holy", "Smite", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Holy", " ", "Smite", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 164, 42, 130, "2", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 51}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.000409161759307608, -0.00010323524475097656, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.8236867617815733e-05, -7.152556463552173e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.0531158447265625e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000232696533203125, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -9.357929229736328e-05, -2.47955322265625e-05, 0.0, -0.0006728173466399312, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.3947486877441406e-05, -2.1457672119140625e-06, -0.028980374336242676, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.003971099853515625, 0.0, -0.003543853759765625, -3.814697265625e-06, -9.34600830078125e-05, -4.5299530029296875e-06, 0.0, -3.814697265625e-06, 0.0, -0.0004863739013671875, 0.0, -0.0001087188720703125, 0.0, -0.010274052619934082, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002492666244506836, -1.1920928244535389e-07, -0.00060272216796875, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -3.1948089599609375e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0009634867310523987, -0.0003966044168919325, -0.0004596710205078125, -0.0016622543334960938, -6.4849853515625e-05, -0.033222198486328125, -0.026566505432128906, -0.009365081787109375, -0.005141006782650948, -0.0003718137741088867, -0.00232696533203125, -0.00048828125, -0.0013260840205475688, -1.9073486328125e-06, -0.4367713928222656, -0.00012969970703125, -5.7220458984375e-06, 0.0, -0.0024704933166503906, -1.537799835205078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -0.006576331332325935, -3.433215897530317e-05, -3.814697265625e-06, -0.0022792816162109375, -0.000133514404296875, 0.0, -0.00040435791015625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006198883056640625, -0.0007429122924804688, -9.5367431640625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0003091096878051758, -0.00014543533325195312, -4.4226646423339844e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00031280517578125, -3.4332275390625e-05, -3.0517578125e-05, 0.0, -0.0014734268188476562, 0.0, -0.0001621246337890625, -4.00543212890625e-05, -0.0002155303955078125, -0.0006983280181884766, -3.814697265625e-06, -0.000270843505859375, 0.0, -0.0006697177886962891, -1.943111237778794e-05, -1.9073486328125e-06, -0.013942718505859375, -5.7220458984375e-06, -2.0265579223632812e-06, 0.0, -8.20159912109375e-05, 0.0], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "minion_type"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template10"}, {"hole0": 2, "_type": "Template11"}, {"args": [{"hole0": "Taunt", "_type": "Template18"}], "func": {"_type": "Name", "id": "Buff"}, "_type": "Call"}], "_type": "List"}], "func": {"_type": "Name", "id": "Give"}, "_type": "Call"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"_type": "Name", "id": "IsType"}, "_type": "Call"}], "func": {"_type": "Name", "id": "MinionSelector"}, "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword", "arg": "picker"}]}], "func": {"_type": "Name", "id": "Battlecry"}, "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}, "_type": "Expr"}]}, {"hole0": 4, "_type": "Template5", "hole1": 3}], "name": "Houndmaster", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.6016960985988504, "choice_history": [50, 111, 176, 58, 90, "Houndmaster", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Houndmaster", "<EOS>", 37, 117, "4", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 30, 88, 19, 112, "Give", "<EOS>", 163, 33, 107, 165, 40, 127, "2", "<EOS>", 41, 128, "2", "<EOS>", 30, 88, 19, 112, "Buff", "<EOS>", 163, 46, 135, "Taunt", "<EOS>", 30, 89, 19, 112, "Minion", "Selector", "<EOS>", 163, 30, 88, 19, 112, "Is", "Type", "<EOS>", 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 171, 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "4", "<EOS>", "3", "<EOS>"]}], "index": 52}
{"beams": [{"score_history": [-1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.001964662689715624, -0.00011097810784121975, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -3.6600977182388306e-05, -6.198873961693607e-06, -1.1920928244535389e-07, -0.0001697540283203125, -0.0078125, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, -0.002197265625, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -7.748603820800781e-06, -3.576278118089249e-07, -6.4373016357421875e-06, 0.0, -0.0014476776123046875, -2.09808349609375e-05, -1.52587890625e-05, -2.872943878173828e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.010292766615748405, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.000675201416015625, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.65595172601752e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.7642974853515625e-05, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001341104507446289, 0.0, -0.00452423095703125, -1.9073486328125e-06, -0.00026702880859375, -2.3841855067985307e-07, -1.0728830375228426e-06, 0.0, -0.009191988036036491, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.000759124755859375, 0.0], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}]}, "_type": "Expr"}]}, {"hole0": 4, "hole2": "charge", "_type": "Template4", "hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2}], "name": "Huffer", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.04097768507678268, "choice_history": [50, 111, 176, 58, 90, "Huffer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Huffer", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 53}
{"beams": [{"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.00022992871527094394, -0.00023767507809679955, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1709281504154205e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00018310546875, -0.0002384185791015625, -3.814697265625e-05, -5.53131103515625e-05, 0.0, 0.0, -0.00011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -4.57763671875e-05, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -0.0001316070556640625, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -8.0108642578125e-05, 0.0, -3.62396240234375e-05, -0.0001506805419921875, -7.62939453125e-06, -5.924700963078067e-05, -0.00010514259338378906, -4.38690185546875e-05, -1.9073486328125e-06, -7.152611942728981e-07, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.026837468147277832, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00095367431640625, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -0.00016987323760986328, -0.0001647472381591797, -0.001339554786682129, 0.0, -0.0059356689453125, -0.0018310546875, -2.09808349609375e-05, -0.000194549560546875, -0.0001659393310546875, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9431114196777344e-05, 0.0, -0.08753727376461029, -4.768370445162873e-07, -0.00093841552734375, -0.014775276184082031, -0.0030107498168945312, -0.000308990478515625, -5.7220458984375e-06, -0.00038863811641931534, -7.62939453125e-06, -0.01646709442138672, -0.0022335052490234375, -0.000225067138671875, -1.9073486328125e-06, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.000156402587890625, 0.0, -0.0002288818359375, 0.0, -0.00010156631469726562, 0.0, -0.012646317481994629, 0.0], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Humility"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"left": {"n": 1, "_type": "Num"}, "right": {"func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}, "_type": "BinOp", "op": {"_type": "Sub"}}], "_type": "Template0", "hole1": "change_attack"}], "name": "Humility", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.1797016311883084, "choice_history": [50, 111, 176, 58, 90, "Humility", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Humility", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 163, 28, 83, 21, 117, "1", "<EOS>", 52, 14, 86, 11, 81, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"]}], "index": 54}
{"beams": [{"score_history": [-8.20159912109375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-05, -6.29425048828125e-05, -0.00012206576502649114, -0.00032669928623363376, -1.3709065569855738e-05, -1.1444091796875e-05, 0.0, 0.0, -3.9334408938884735e-06, -5.602836608886719e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.00043487548828125, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.29425048828125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.000664674851577729, -0.0008077621459960938, -6.067640788387507e-05, -0.0001811981201171875, -7.62939453125e-06, 0.0, -7.152551916078664e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, 0.0, -7.987022399902344e-06, -7.152555099310121e-07, -0.6627148389816284, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0005741119384765625, 0.0, -1.1444091796875e-05, -0.0009746551513671875, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.340576171875e-05, -6.389617919921875e-05, -0.0013614892959594727, 0.0, -0.001552581787109375, -0.0018787384033203125, -3.814697265625e-06, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -0.9928605556488037, -2.3841855067985307e-07, -0.0001087188720703125, -0.4819326400756836, -0.0012912750244140625, -0.003780066967010498, 0.0], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"n": 1, "_type": "Num"}], "_type": "Template0", "hole1": "set_health_to"}], "name": "<UNK>Mark", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.1532407638430513, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Mark", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "<UNK>", " ", "Mark", "<EOS>", 37, 117, "0", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 65, 125, 11, 81, 19, 112, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 163, 37, 117, "1", "<EOS>"]}], "index": 55}
{"beams": [{"score_history": [-3.814697265625e-06, -5.7220458984375e-06, -0.00016021728515625, -2.86102294921875e-05, -5.7220458984375e-06, -1.537788011773955e-05, -2.0265558760002023e-06, -2.13382354559144e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.808128430042416e-05, -4.6491513785440475e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -8.34464663057588e-06, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.106231689453125e-06, -1.6570085790590383e-05, -0.0006561279296875, -0.035797119140625, -1.71661376953125e-05, -0.0001049041748046875, -2.288818359375e-05, -0.0001811981201171875, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.450580596923828e-05, -1.7404556274414062e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.3708974620385561e-05, -7.11679458618164e-05, -2.861018856492592e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00013208389282226562, -5.006789251638111e-06, -2.86102294921875e-05, 0.0, -7.82012939453125e-05, 0.0, -7.033347174001392e-06, -4.315365731599741e-05, -0.00020420548389665782, 0.0, -0.0004863739013671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012981891632080078, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.002044677734375, -0.0003223419189453125, -7.62939453125e-06, -0.0041735172271728516, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.02064990997314453, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.775161743164062e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.0007978677749633789, 0.0, -1.9073486328125e-06, -0.00177001953125, -7.43865966796875e-05, -0.014542706310749054, -1.621246337890625e-05, -0.0003414154052734375, -0.024158477783203125, -0.0001506805419921875, 0.0, -0.00016617774963378906, -0.00012838833208661526, -7.82012939453125e-05, -0.000331878662109375, -5.7220458984375e-06, -5.91278076171875e-05, -0.00035858154296875, -1.52587890625e-05, -8.58306884765625e-05, -4.9591064453125e-05, -0.0021495819091796875, -0.00015270709991455078, 0.0, -4.1961669921875e-05, 0.0, -0.0017875432968139648, -1.1444091796875e-05, -0.0001850128173828125, -9.5367431640625e-06, -0.0001373291015625, -7.700920104980469e-05, 0.0, -0.0006542205810546875, -5.91278076171875e-05, -1.1920922133867862e-06, -3.2186455882765586e-06, -1.5497182630497264e-06, -1.1920928244535389e-07], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "minion_type"}, {"value": {"args": [{"hole0": 1, "_type": "Template17"}, {"func": {"_type": "Name", "id": "CharacterSelector"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template18"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template18"}, "_type": "keyword", "arg": "picker"}]}], "func": {"_type": "Name", "id": "Battlecry"}, "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}, "_type": "Expr"}]}, {"hole0": 2, "_type": "Template5", "hole1": 2}], "name": "IronforgeRifleman", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.11518109441475843, "choice_history": [50, 111, 176, 58, 90, "Ironforge", "Rifleman", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Ironforge", " ", "Rifleman", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 172, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 49, 152, "battlecry", "<EOS>", 14, 88, 19, 112, "Battlecry", "<EOS>", 164, 45, 134, "1", "<EOS>", 30, 87, 19, 112, "Character", "Selector", "<EOS>", 172, 49, 152, "players", "<EOS>", 23, 135, "Both", "Player", "<EOS>", 49, 152, "picker", "<EOS>", 23, 135, "User", "Picker", "<EOS>", 72, 140, "2", "<EOS>", "2", "<EOS>"]}], "index": 56}
{"beams": [{"score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001404966926202178, -0.00013195598148740828, -1.0371208190917969e-05, -5.7220458984375e-06, 0.0, 0.0, 0.0, -6.556507287314162e-06, -3.576278118089249e-07, -4.00543212890625e-05, -0.0001239776611328125, -9.5367431640625e-06, -6.198883056640625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002461671829223633, -1.1920928244535389e-07, 0.0, -0.0031147003173828125, -6.29425048828125e-05, -6.556489552167477e-06, -5.733966827392578e-05, -1.3470649719238281e-05, 0.0, -2.384258550591767e-07, 0.0, -0.000762939453125, 0.0, -0.0003030263469554484, 0.0, -0.000164031982421875, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, 0.0, -0.00021564960479736328, -2.0265579223632812e-06, -0.012510299682617188, -7.62939453125e-06, -1.1920926823449918e-07, 0.0, -4.3023906073358376e-06, 0.0, -0.0010859961621463299, 0.0, -6.866455078125e-05, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "Template6", "hole2": "COMMON", "hole0": "Ironfur Grizzly", "hole1": 3, "hole3": "minion_type"}]}, {"hole0": 3, "hole2": "taunt", "_type": "Template4", "hole3": {"value": true, "_type": "NameConstant"}, "hole1": 3}], "name": "IronfurGrizzly", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.020503246790127605, "choice_history": [50, 111, 176, 58, 90, "Ironfur", "Grizzly", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 73, 141, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 57}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.4570634852570947e-06, -2.2172887838678434e-05, -1.811964830267243e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -1.2516684364527464e-05, -2.8491003831732087e-05, -5.960462772236497e-07, -0.0013942718505859375, -6.67572021484375e-05, -1.52587890625e-05, -6.556510470545618e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003814697265625, -1.33514404296875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.401333666872233e-05, -9.202957153320312e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.50339189733495e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.215934389620088e-05, -1.7881377516459906e-06, -0.00446927547454834, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -5.14984130859375e-05, -7.462501525878906e-05, 0.0, -0.003269195556640625, -0.0013141632080078125, -5.7220458984375e-05, -9.655952453613281e-06, -1.9073486328125e-06, -0.0001220703125, -0.000244140625, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.006254673004150391, -3.254413604736328e-05, -0.010999321937561035, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -9.34600830078125e-05, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00013792347454000264, -9.536738616588991e-07, -0.005162239074707031, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003185272216796875, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.000217437744140625, -3.62396240234375e-05, -1.4185905456542969e-05, -1.9073486328125e-06, -0.005518913269042969, -0.0003986358642578125, -3.814697265625e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.045814868062734604, -1.8477303456165828e-05, -0.00064849853515625, -0.00595855712890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.005954742431640625, 0.0, -0.000310182454995811, 0.0, -0.0013818740844726562, -5.7220458984375e-06, -0.07450830936431885, 0.0, -0.0012359619140625, -0.000614166259765625, -0.0001926422119140625, -0.00844573974609375, 0.0, -0.0016565322875976562, 0.0, -0.002352952491492033, 0.0, -0.0019378662109375, -9.5367431640625e-05, -0.000164031982421875, -5.7220458984375e-05, -6.866455078125e-05, -0.0029516220092773438, -5.53131103515625e-05, -0.004535675048828125, -0.0020751953125, -9.72747802734375e-05, -2.288818359375e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.002933502197265625, 0.0, -0.006360054016113281, -3.814697265625e-06, -0.0058441162109375, -0.00011277198791503906, -0.0024377107620239258, -0.000370025634765625, -4.57763671875e-05, -0.028832435607910156, -0.0001544952392578125, -0.04573345184326172, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.00016427040100097656, 0.0, -0.01599133014678955, -9.5367431640625e-06, -0.0001964569091796875, -0.0076694488525390625, -0.0015239715576171875, -1.33514404296875e-05, -0.04923057556152344, -1.52587890625e-05, -0.0023813247680664062, -4.649158654501662e-06, -3.814697265625e-05, -0.05398845672607422, -0.008131027221679688, -0.005710601806640625, -0.00023651123046875, -0.00029003614326938987, -7.62939453125e-06, -0.0035600662231445312, -0.06006622314453125, -9.34600830078125e-05, -0.002330780029296875, -8.58306884765625e-05, -0.23779968917369843, -4.649161837733118e-06, -0.005019187927246094, -0.0016326904296875, -5.14984130859375e-05, -0.0017948150634765625, -0.0002384185791015625, -0.013887154869735241, -5.7220458984375e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}, "_type": "Expr"}]}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "body": {"ops": [{"_type": "Is"}], "left": {"value": {"value": {"_type": "Name", "id": "x"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}, "comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare"}, "_type": "Lambda"}], "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"value": {"hole0": 3, "_type": "Template9"}, "_type": "Expr"}], "orelse": [{"value": {"hole0": 5, "_type": "Template9"}, "_type": "Expr"}], "_type": "If", "test": {"ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}, "comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare"}}]}], "name": "KillCommand", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.7689011335337739, "choice_history": [50, 111, 176, 58, 90, "Kill", "Command", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 166, 38, 121, "Kill", " ", "Command", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 171, 49, 152, "target_func", "<EOS>", 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 61, 95, "use", "<EOS>", 150, 158, 149, "self", "<EOS>", 149, "player", "<EOS>", 149, "game", "<EOS>", 178, 59, 93, 14, 88, 11, 81, 23, 135, "super", "<EOS>", "use", "<EOS>", 164, 35, 112, "player", "<EOS>", 35, 112, "game", "<EOS>", 55, 80, 163, 35, 112, "<UNK>", "<EOS>", 14, 88, 11, 81, 11, 81, 19, 112, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 164, 27, 81, 19, 112, "player", "<EOS>", "game", "<EOS>", 32, 105, 150, 156, 149, "x", "<EOS>", 15, 91, 11, 81, 11, 81, 19, 112, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 160, 6, 163, 27, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 62, 99, 15, 91, 19, 112, "<UNK>", "<EOS>", 160, 6, 163, 36, 114, "Null", "<EOS>", 176, 59, 93, 24, 144, "3", "<EOS>", 176, 59, 93, 24, 144, "5", "<EOS>"]}], "index": 58}
{"beams": [{"score_history": [-2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.107174992095679e-05, -9.65590606938349e-06, -1.5616295058862306e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, -2.4795515855657868e-05, -2.0265579223632812e-06, -0.0002727508544921875, -0.0002117156982421875, -6.103515625e-05, -7.987004210008308e-06, -2.4557106371503323e-05, -3.8265450712060556e-05, -3.814697265625e-06, -3.3379137676092796e-06, 0.0, -2.324580964341294e-05, 0.0, -0.00011444091796875, -4.57763671875e-05, -8.344646857949556e-07, 0.0, -1.3351822417462245e-05, 0.0, -0.011492729187011719, -0.000308990478515625, -0.00026702880859375, -3.814697265625e-05, -0.0002609454677440226, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"body": [{"body": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "_type": "Template1", "hole1": 2}, {"hole0": 2, "hole2": "spell_damage", "_type": "Template4", "hole3": {"n": 1, "_type": "Num"}, "hole1": 2}], "name": "KoboldGeomancer", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.01338361861564863, "choice_history": [50, 111, 176, 58, 90, "Kobold", "Geomancer", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 71, 139, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 117, "1", "<EOS>"]}], "index": 59}
{"beams": [{"score_history": [-1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.06564009934663773, -0.0011770969722419977, -6.198883056640625e-06, -5.7220458984375e-06, 0.0, 0.0, -1.1734664440155029e-07, -8.058547973632812e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00054168701171875, -0.0001010894775390625, -1.490105023549404e-05, -3.445147740421817e-05, -1.7881377516459906e-06, -7.62939453125e-06, -9.77518629952101e-06, 0.0, -0.07562899589538574, 0.0, -0.0035266876220703125, -7.62939453125e-06, -6.675719760096399e-06, -9.536738616588991e-07, -0.00013566015695687383, 0.0, -0.0031852673273533583, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"body": [{"body": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "_type": "Template1", "hole1": 4}, {"hole0": 4, "hole2": "charge", "_type": "Template4", "hole3": {"value": true, "_type": "NameConstant"}, "hole1": 3}], "name": "<UNK>Elite", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.15026369214160695, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Elite", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 71, 139, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 60}
{"beams": [{"score_history": [-3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001197991514345631, -2.288813811901491e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.1904706954956055e-05, -1.6331649021594785e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -7.62939453125e-06, -3.933906555175781e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.001087188720703125, -1.9073486328125e-06, -3.814697265625e-05, -0.0007228851318359375, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.794917680963408e-06, -6.61611557006836e-05, -0.0001125335693359375, 0.0, -0.001865386962890625, -8.0108642578125e-05, -1.33514404296875e-05, -3.0875205993652344e-05, -0.00012791156768798828, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013864038919564337, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012922286987304688, 0.0, -0.002574318088591099, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.001068115234375, 0.0, -2.09808349609375e-05, -2.09808349609375e-05, -0.00012290477752685547, -3.62396240234375e-05, -1.9073486328125e-05, -7.05718994140625e-05, 0.0, -4.220008850097656e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0009247064590454102, -2.9802317840221804e-06, -0.11322402954101562, -7.62939453125e-06, -5.722029527532868e-06, 0.0, -0.00279911607503891, -1.0728830375228426e-06, -0.005867588333785534, -2.2053714928915724e-05, -0.0003032684326171875, -0.00037384033203125, -0.0002613067626953125, -0.0012722015380859375, -6.4849853515625e-05, -3.24249267578125e-05, 0.0, -7.832050323486328e-05, -2.09808349609375e-05, -0.0009059906005859375, -0.0008296966552734375, -0.0001506805419921875, -0.0003097057342529297, -8.785724639892578e-05, -0.007015228271484375, -1.33514404296875e-05, -0.0005190644878894091, -0.0053555965423583984, -4.5299530029296875e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}]}, "_type": "Expr"}]}, {"hole0": 2, "hole2": "auras", "_type": "Template4", "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template15"}, {"hole0": "MinionSelector", "_type": "Template18"}], "func": {"_type": "Name", "id": "Aura"}, "_type": "Call"}], "_type": "List"}, "hole1": 4}], "name": "Leokk", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.14971357070302815, "choice_history": [50, 111, 176, 58, 90, "Leokk", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Leokk", "<EOS>", 37, 117, "3", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 139, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 107, 163, 30, 88, 19, 112, "Aura", "<EOS>", 164, 43, 132, "1", "<EOS>", 46, 135, "Minion", "Selector", "<EOS>"]}], "index": 61}
{"beams": [{"score_history": [-0.00080108642578125, -4.9591064453125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001010882479022257, -0.00038235029205679893, -3.290122185717337e-05, 0.0, 0.0, 0.0, -0.00015531908138655126, -0.0003038644790649414, -6.520748138427734e-05, -1.33514404296875e-05, -0.3551759719848633, -8.392333984375e-05, -0.023113638162612915, -0.000629425048828125, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00014197865675669163, -2.0265579223632812e-06, -0.01928555965423584, -1.9073486328125e-06, -0.14394080638885498, 0.0, -0.0005321502685546875, 0.0, -0.003894805908203125, -0.00028228759765625, 0.0, -0.0008258819580078125, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -8.0108642578125e-05, -0.0001659393310546875, -5.14984130859375e-05, -0.03731250762939453, -0.0001220703125, 0.0, -0.0002881288528442383, -0.000247955322265625, -7.05718994140625e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0002499441907275468, -3.576278118089249e-07, 0.0, -3.814697265625e-06, -0.0004193781642243266, -2.5033950805664062e-05], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"body": [{"body": [{"hole0": "<UNK> Justice", "hole2": "PALADIN", "_type": "Template3", "hole3": "FREE", "hole1": 1}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"_type": "Name", "id": "Weapon"}, "_type": "Call"}, "_type": "Return"}]}], "name": "<UNK>Justice", "bases": [{"_type": "Name", "id": "WeaponCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.5890108607890667, "choice_history": [50, 111, 176, 58, 90, "<UNK>", "Justice", "<EOS>", 163, 35, 112, "Weapon", "Card", "<EOS>", 177, 70, 138, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 61, 95, "create_weapon", "<EOS>", 150, 157, 149, "self", "<EOS>", 149, "player", "<EOS>", 176, 64, 119, 14, 88, 19, 112, "Weapon", "<EOS>", 164, 37, 117, "1", "<EOS>", 37, 117, "4", "<EOS>"]}], "index": 62}
{"beams": [{"score_history": [-0.0002231597900390625, -5.91278076171875e-05, -7.62939453125e-06, -4.00543212890625e-05, -0.0001888275146484375, -0.00012373158824630082, -0.0036450529005378485, -0.00055833556689322, -0.0001910924620460719, -0.00011002492828993127, -2.86102294921875e-05, 0.0, 0.0, -1.5136785805225372e-05, -9.238327766070142e-05, -4.649158654501662e-06, -3.814697265625e-05, -0.00147247314453125, -9.5367431640625e-06, -6.949660019017756e-05, -0.0002019321545958519, -0.00032663330784998834, -0.000301361083984375, -5.733966099796817e-05, -0.004039764404296875, -0.004094481002539396, -0.0002288818359375, -1.4783461665501818e-05, -2.0265579223632812e-06, -9.000301361083984e-05, 0.0, -0.05807685852050781, -3.0517578125e-05, -0.0017340299673378468, -0.0001417398452758789, -4.6491586545016617e-05, 0.0, -0.0012596844462677836, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"body": [{"body": [{"hole0": "Lord of the Arena", "hole2": "ALL", "_type": "Template1", "hole1": 6}, {"hole0": 6, "hole2": "taunt", "_type": "Template4", "hole3": {"value": true, "_type": "NameConstant"}, "hole1": 5}], "name": "LordOfTheArena", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.07768421489890898, "choice_history": [50, 111, 176, 58, 90, "Lord", "Of", "The", "Arena", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 66, 126, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 71, 139, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 113, "True", "<EOS>"]}], "index": 63}
{"beams": [{"score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -3.4570680327306036e-06, -9.5367431640625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -2.4810433387756348e-06, -1.0848044439626392e-05, -1.9073486328125e-06, -4.9591064453125e-05, -4.00543212890625e-05, -2.288818359375e-05, -2.3007374693406746e-05, -5.125986263010418e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -6.31808916295995e-06, -0.0002961158752441406, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.01878070831298828, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -4.5299530029296875e-06, -2.0265579223632812e-06, -2.7179718017578125e-05, 0.0, -0.000431060791015625, -5.340576171875e-05, -1.71661376953125e-05, -2.50339189733495e-06, -7.22406548447907e-05, -2.0265579223632812e-06, -4.208087921142578e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006343437125906348, -3.576272320060525e-06, -0.00054931640625, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -3.516668584779836e-05, -3.814697265625e-06, -0.00016677379608154297, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -4.410743713378906e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.33514404296875e-05, -0.00026929378509521484, 0.0, -4.57763671875e-05, -3.814697265625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.30060338973999023, 0.0, -0.001373291015625, -2.288818359375e-05, -0.0018178224563598633, -7.271740287251305e-06, -1.5974042980815284e-05, -2.3841855067985307e-07], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"body": [{"body": [{"args": {"args": [{"_type": "arg", "arg": "self"}], "_type": "arguments"}, "name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template18"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call", "keywords": [{"value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "_type": "keyword", "arg": "minion_type"}]}, "_type": "Expr"}]}, {"hole0": 2, "_type": "Template5", "hole1": 1}], "name": "MechanicalDragonling", "bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.32610643752730084, "choice_history": [50, 111, 176, 58, 90, "Mechanical", "Dragonling", "<EOS>", 163, 35, 112, "Minion", "Card", "<EOS>", 177, 61, 95, "__init__", "<EOS>", 150, 156, 149, "self", "<EOS>", 176, 59, 93, 14, 89, 11, 81, 23, 135, "super", "<EOS>", "__init__", "<EOS>", 167, 38, 121, "Mechanical", " ", "Dragonling", "<EOS>", 37, 117, "1", "<EOS>", 27, 81, 19, 112, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 27, 81, 19, 112, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 113, "False", "<EOS>", 171, 49, 152, "minion_type", "<EOS>", 11, 81, 19, 112, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 140, "2", "<EOS>", "1", "<EOS>"]}], "index": 64}
{"beams": [{"score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.940691259340383e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -5.809590220451355e-06, -0.0004557371139526367, -3.3378591979271732e-06, -5.53131103515625e-05, -0.7888154983520508, -1.52587890625e-05, -5.960462203802308e-06, -8.058540697675198e-05, -4.1723224057932384e-06, -5.7220458984375e-06, -5.960462772236497e-07, -5.960462772236497e-07, -0.007534025702625513, -0.0005054473876953125, -0.0014357566833496094, 0.0, -0.014617919921875, -0.0012960433959960938, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003757476806640625, -0.000797271728515625, -0.010183334350585938, 0.0, -0.024983525276184082, -1.9073486328125e-06, -0.03730595111846924, -3.814697265625e-06, -0.021772807464003563, -2.7656173188006505e-05, -0.0003335473593324423, 0.0, -4.9591064453125e-05, -0.000274658203125, -7.2479248046875e-05, -0.0001069306890713051, -1.7881377516459906e-06, 0.0, -3.814697265625e-06, -8.0108642578125e-05, 0.0], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "model_output": {"body": [{"body": [{"hole0": "Mind Blast", "hole2": "PRIEST", "_type": "Template3", "hole3": "FREE", "hole1": 2}, {"hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "hole2": [{"hole0": 5, "_type": "Template13"}, {"_type": "Name", "id": "self"}], "_type": "Template0", "hole1": "damage"}], "name": "MindBlast", "bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.9113022402864814, "choice_history": [50, 111, 176, 58, 90, "Mind", "Blast", "<EOS>", 163, 35, 112, "Spell", "Card", "<EOS>", 177, 70, 138, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 65, 125, 11, 81, 11, 81, 19, 112, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 164, 42, 130, "5", "<EOS>", 35, 112, "self", "<EOS>"]}], "index": 65}
