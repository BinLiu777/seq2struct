{"index": 0, "beams": [{"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 211, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 237, 63, 205, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "WeaponSelector", "_type": "Template6", "hole6": [{"hole0": "EnemyPlayer", "_type": "Template39"}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -0.3183419602259434, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -0.2713747024536133, -7.009273394942284e-05, -0.00037394929677248, -0.00018513202667236328, -8.463816629955545e-05, -4.172325134277344e-06, 0.0, -2.2649765014648438e-05, -2.3841855067985307e-07, -0.010124444030225277, 0.0, -0.0021538310684263706, -0.0016622429247945547, -0.011597216129302979, -2.384185791015625e-06, 0.0, -8.0108642578125e-05, -0.0010509490966796875, 0.0, -0.0006567233940586448, -0.00016963481903076172, 0.0, -4.0531158447265625e-06, 0.0, -1.728534698486328e-05, 0.0, 0.0, -0.00222015380859375, -2.288818359375e-05, -2.9206275939941406e-05, -1.1920928244535389e-07, -0.0034505128860473633, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 237, 46, 139, "2", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(2),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.116716513937682, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7920260429382324, -1.0847986231965479e-05, -0.0015189729165285826, -0.00030946708284318447, -0.0002005077840294689, -3.6597251892089844e-05, 0.0, -0.0003901721502188593, -1.1920928244535389e-07, -0.00025617520441301167, -0.00028133392333984375, -0.5522278547286987, -0.002804946154356003, -0.0002231597900390625, -0.07473182678222656, -3.814697265625e-06, -0.25791746377944946, -7.62939453125e-06, -0.17206180095672607, -4.768371127283899e-06, 0.0, -0.029783248901367188, -2.6702880859375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -5.14984130859375e-05, -7.62939453125e-06, -0.1805098056793213, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.008153915405273438, 0.0, -0.0008220672607421875, -1.9073486328125e-06, -0.01249539852142334, -5.805491309729405e-05, 0.0, -3.933906555175781e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.014486312866210938, -1.33514404296875e-05, -3.278255098848604e-05, 0.0, -0.0021649599075317383, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 237, 46, 139, "2", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Heal"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(2),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.625191968461841, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7920260429382324, -1.0847986231965479e-05, -0.0015189729165285826, -0.00030946708284318447, -0.0002005077840294689, -3.6597251892089844e-05, 0.0, -0.0003901721502188593, -1.1920928244535389e-07, -0.00025617520441301167, -0.00028133392333984375, -1.0204026699066162, -0.0017909388989210129, -0.0015621185302734375, -0.019258499145507812, -1.9073486328125e-06, -0.2608366310596466, -3.814697265625e-06, -0.15261085331439972, -4.649161837733118e-06, 0.0, -0.03342914581298828, -2.6702880859375e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.2907145023345947, 0.0, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.007595062255859375, 0.0, -0.0008220672607421875, -1.9073486328125e-06, -0.012239217758178711, -5.805491309729405e-05, 0.0, -3.933906555175781e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.013454437255859375, -1.33514404296875e-05, -3.480910891084932e-05, 0.0, -0.0021477937698364258, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Acidic", " ", "Ooze", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 237, 63, 205, "Frozen", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Ooze Ooze", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole4": [{"hole0": "Frozen", "_type": "Template39"}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Ooze Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(Frozen()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.640720707333244, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7927536964416504, -0.0966007262468338, -7.843964704079553e-05, -0.26813530921936035, -0.014425277709960938, -0.0010396242141723633, 0.0, -0.00012993812561035156, -1.1920928244535389e-07, -0.004134773276746273, -2.6226038244203664e-05, -0.011428950354456902, -0.007542382460087538, -3.4332275390625e-05, -0.4049530029296875, 0.0, -1.0147392749786377, -0.0037849785294383764, -0.006160315591841936, -5.125998541188892e-06, -5.722029527532868e-06, -1.3709019185625948e-05, 0.0, -4.88758041683468e-06, 0.0, -1.9073486328125e-06, -0.0006923675537109375, -2.09808349609375e-05, -8.463859558105469e-06, -5.960462772236497e-07, -0.0010148286819458008, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 211, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 237, 63, 205, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "FREE", "hole5": "WeaponSelector", "_type": "Template6", "hole6": [{"hole0": "EnemyPlayer", "_type": "Template39"}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Destroy(), WeaponSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.1249249663935, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -0.2713747024536133, -7.009273394942284e-05, -0.00037394929677248, -0.00018513202667236328, -8.463816629955545e-05, -4.172325134277344e-06, 0.0, -2.2649765014648438e-05, -2.3841855067985307e-07, -4.811541557312012, 0.0, -0.010850783437490463, -0.0008156742551364005, -0.009163660928606987, -2.503394853192731e-06, 0.0, -6.866455078125e-05, -0.0010318756103515625, 0.0, -0.0006154769216664135, -0.00020205974578857422, 0.0, -4.0531158447265625e-06, 0.0, -2.300739288330078e-05, 0.0, 0.0, -0.0021209716796875, -2.288818359375e-05, -2.9206275939941406e-05, -1.1920928244535389e-07, -0.0033322572708129883, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Acidic", " ", "Ooze", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 237, 63, 205, "Destroy", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Ooze Ooze", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole4": [{"hole0": "Destroy", "_type": "Template39"}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Ooze Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(Destroy()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.188953276297937, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7927536964416504, -0.0966007262468338, -7.843964704079553e-05, -0.26813530921936035, -0.014425277709960938, -0.0010396242141723633, 0.0, -0.00012993812561035156, -1.1920928244535389e-07, -0.004134773276746273, -2.6226038244203664e-05, -0.011428950354456902, -0.007542382460087538, -3.4332275390625e-05, -0.4049530029296875, 0.0, -1.3916680812835693, -0.17958895862102509, -0.0017502204282209277, -3.099440846199286e-06, -8.702239938429557e-06, -1.5973972040228546e-05, 0.0, -4.88758041683468e-06, 0.0, -1.9073486328125e-06, -0.0005435943603515625, -2.09808349609375e-05, -8.463859558105469e-06, -7.152555099310121e-07, -0.0010701417922973633, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(1),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.3975036689739255, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7920260429382324, -1.0847986231965479e-05, -0.0015189729165285826, -0.00030946708284318447, -0.0002005077840294689, -3.6597251892089844e-05, 0.0, -0.0003901721502188593, -1.1920928244535389e-07, -0.00025617520441301167, -0.00028133392333984375, -0.5522278547286987, -0.002804946154356003, -0.0002231597900390625, -0.07473182678222656, -3.814697265625e-06, -1.4974446296691895, -3.814697265625e-06, -0.15157388150691986, -4.5299530029296875e-06, -1.1920928244535389e-07, -0.08048534393310547, -2.288818359375e-05, -7.62939453125e-06, -3.254413604736328e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -0.18256402015686035, 0.0, 0.0, -5.340576171875e-05, -3.814697265625e-06, -0.0077190399169921875, 0.0, -0.001003265380859375, -1.9073486328125e-06, -0.02214181423187256, -6.151198613224551e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -0.01401519775390625, -1.33514404296875e-05, -3.0636783776571974e-05, 0.0, -0.0022202730178833008, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 237, 46, 139, "2", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Heal"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.708220046544703, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7920260429382324, -1.0847986231965479e-05, -0.0015189729165285826, -0.00030946708284318447, -0.0002005077840294689, -3.6597251892089844e-05, 0.0, -0.0003901721502188593, -1.1920928244535389e-07, -0.00025617520441301167, -0.00028133392333984375, -1.0204026699066162, -0.0017909388989210129, -0.0015621185302734375, -0.019258499145507812, -1.9073486328125e-06, -0.2608366310596466, -3.814697265625e-06, -0.15261085331439972, -4.649161837733118e-06, 0.0, -0.03342914581298828, -2.6702880859375e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.383486032485962, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0039768218994140625, 0.0, -0.0006809234619140625, -1.9073486328125e-06, -0.0036886930465698242, -5.9127800341229886e-05, 0.0, -3.933906555175781e-06, 0.0, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -0.015825271606445312, -1.33514404296875e-05, -3.290176027803682e-05, 0.0, -0.0023308992385864258, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 211, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Destroy", "<EOS>", 237, 63, 205, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "Destroy", "_type": "Template6", "hole6": [{"hole0": "EnemyPlayer", "_type": "Template39"}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), Destroy(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.708732841665032, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -0.2713747024536133, -7.009273394942284e-05, -0.00037394929677248, -0.00018513202667236328, -8.463816629955545e-05, -4.172325134277344e-06, 0.0, -2.2649765014648438e-05, -2.3841855067985307e-07, -0.010124444030225277, 0.0, -0.0021538310684263706, -0.0016622429247945547, -5.072317600250244, -0.0006112535484135151, -7.82012939453125e-05, -0.22517871856689453, -1.9073486328125e-06, -0.10390686988830566, -0.0002400874946033582, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, 0.0, 0.0, -0.0022525787353515625, -2.288818359375e-05, -3.2901763916015625e-05, -1.1920928244535389e-07, -0.005037426948547363, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 237, 46, 139, "2", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.735457310984167, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7920260429382324, -1.0847986231965479e-05, -0.0015189729165285826, -0.00030946708284318447, -0.0002005077840294689, -3.6597251892089844e-05, 0.0, -0.0003901721502188593, -1.1920928244535389e-07, -0.00025617520441301167, -0.00028133392333984375, -0.5522278547286987, -0.002804946154356003, -0.0002231597900390625, -0.07473182678222656, -3.814697265625e-06, -0.25791746377944946, -7.62939453125e-06, -0.17206180095672607, -4.768371127283899e-06, 0.0, -0.029783248901367188, -2.6702880859375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -5.14984130859375e-05, -7.62939453125e-06, -1.8099424839019775, -3.814697265625e-06, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0042247772216796875, 0.0, -0.0006809234619140625, -1.9073486328125e-06, -0.00374603271484375, -5.9008591051679105e-05, 0.0, -3.933906555175781e-06, 0.0, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -0.01641845703125, -1.33514404296875e-05, -3.290176027803682e-05, 0.0, -0.0023461580276489258, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 237, 63, 205, "Frozen", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole4": [{"hole0": "Frozen", "_type": "Template39"}], "hole3": "Destroy"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(Frozen()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.776101312447928, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7927536964416504, -0.0966007262468338, -7.843964704079553e-05, -1.4473440647125244, -0.0010045754024758935, -0.00034737586975097656, 0.0, -0.00012958049774169922, -3.576278118089249e-07, -0.0032410589046776295, -4.1365608922205865e-05, -0.010370368137955666, -0.008551191538572311, -3.4332275390625e-05, -0.42509937286376953, -1.9073486328125e-06, -0.9655601978302002, -0.004648719448596239, -0.005504521541297436, -5.245207830739673e-06, -6.198863957251888e-06, -1.2993770724278875e-05, 0.0, -4.88758041683468e-06, 0.0, -1.9073486328125e-06, -0.000690460205078125, -2.09808349609375e-05, -8.463859558105469e-06, -5.960462772236497e-07, -0.0010529756546020508, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Heal"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(1),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.839078497673164, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -2.7920260429382324, -1.0847986231965479e-05, -0.0015189729165285826, -0.00030946708284318447, -0.0002005077840294689, -3.6597251892089844e-05, 0.0, -0.0003901721502188593, -1.1920928244535389e-07, -0.00025617520441301167, -0.00028133392333984375, -1.0204026699066162, -0.0017909388989210129, -0.0015621185302734375, -0.019258499145507812, -1.9073486328125e-06, -1.5035722255706787, -1.9073486328125e-06, -0.11973537504673004, -4.291534423828125e-06, 0.0, -0.08686065673828125, -2.288818359375e-05, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -0.22905182838439941, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.0074977874755859375, 0.0, -0.00098419189453125, -1.9073486328125e-06, -0.024951815605163574, -6.151198613224551e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -0.012861251831054688, -1.33514404296875e-05, -3.0636783776571974e-05, 0.0, -0.0022069215774536133, 0.0]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 211, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 237, 63, 205, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "WeaponSelector", "_type": "Template6", "hole6": [{"hole0": "EnemyPlayer", "_type": "Template39"}], "hole3": "Destroy"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.986194361959335, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -0.2713747024536133, -7.009273394942284e-05, -0.00037394929677248, -0.00018513202667236328, -8.463816629955545e-05, -4.172325134277344e-06, 0.0, -2.2649765014648438e-05, -2.3841855067985307e-07, -0.010124444030225277, 0.0, -0.0021538310684263706, -0.0016622429247945547, -0.011597216129302979, -2.384185791015625e-06, 0.0, -8.0108642578125e-05, -0.0010509490966796875, 0.0, -0.0006567233940586448, -0.00016963481903076172, 0.0, -4.0531158447265625e-06, 0.0, -1.728534698486328e-05, 0.0, 0.0, -0.00222015380859375, -2.288818359375e-05, -2.9206275939941406e-05, -1.1920928244535389e-07, -5.671302795410156, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 39, 110, 21, 134, "Summon", "<EOS>", 238, 63, 205, "Destroy", "<UNK>", "<EOS>", 46, 139, "2", "<EOS>", 63, 205, "Player", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template22", "hole2": "enrage", "hole3": {"_type": "Call", "args": [{"_type": "Call", "args": [{"hole0": "Destroy<UNK>", "_type": "Template39"}, {"_type": "Num", "n": 2}], "func": {"id": "Summon", "_type": "Name"}}, {"hole0": "PlayerSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, enrage=Deathrattle(Summon(Destroy<UNK>(), 2),\n            PlayerSelector()))\n", "score": -7.119684105523248, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -4.471610069274902, -0.0001354217529296875, -2.3126451196731068e-05, -0.0001329183578491211, -0.00033283233642578125, -5.555152893066406e-05, -4.0531158447265625e-06, -2.09808349609375e-05, -2.1576874132733792e-05, 0.0, -0.0014591217041015625, 0.0, -0.12852764129638672, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-05, -0.5267399549484253, -5.960462772236497e-07, -4.935264587402344e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006847381591796875, -0.000255584716796875, -3.24249267578125e-05, -4.649161837733118e-06, 0.0, -0.00010919570922851562, 0.0, -0.4671787619590759, 0.0, -0.03357696533203125, -0.000141143798828125, -3.62396240234375e-05, -3.814697265625e-06, -0.0031949279364198446, -1.8477332559996285e-05, -0.0046024322509765625, -0.0211029052734375, -0.000102996826171875, -0.0029010772705078125, -3.4332275390625e-05, -0.12770476937294006, -0.0024721622467041016, -0.5199489593505859, -0.000591278076171875, -1.52587890625e-05, -0.07615635544061661, -0.6604816317558289, -1.0609570381348021e-05, -0.05430889129638672, -2.09808349609375e-05, -0.004074811935424805, 0.0, -0.008611679077148438, -1.71661376953125e-05, -0.000629425048828125, -3.814697265625e-06, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 39, 110, 21, 134, "Summon", "<EOS>", 237, 63, 205, "Destroy", "3", "<EOS>", 53, 182, "Player", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "AcidicSwampOoze", "hole2": [{"hole1": 2, "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template22", "hole2": "enrage", "hole3": {"_type": "Call", "args": [{"_type": "Call", "args": [{"hole0": "Destroy3", "_type": "Template39"}], "func": {"id": "Summon", "_type": "Name"}}, {"hole1": "EnemyPlayer", "hole0": "PlayerSelector", "_type": "Template26"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, enrage=Deathrattle(Summon(Destroy3()),\n            PlayerSelector(EnemyPlayer())))\n", "score": -7.776762482146324, "score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -4.471610069274902, -0.0001354217529296875, -2.3126451196731068e-05, -0.0001329183578491211, -0.00033283233642578125, -5.555152893066406e-05, -4.0531158447265625e-06, -2.09808349609375e-05, -2.1576874132733792e-05, 0.0, -0.0014591217041015625, 0.0, -0.12852764129638672, 0.0, -0.00025177001953125, -5.53131103515625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-05, -0.5267399549484253, -5.960462772236497e-07, -4.935264587402344e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006847381591796875, -0.000255584716796875, -3.24249267578125e-05, -4.649161837733118e-06, 0.0, -0.00010919570922851562, 0.0, -0.4671787619590759, 0.0, -0.03357696533203125, -0.000141143798828125, -3.62396240234375e-05, -3.814697265625e-06, -0.0031949279364198446, -1.8477332559996285e-05, -0.0046024322509765625, -0.0211029052734375, -0.000102996826171875, -0.0029010772705078125, -3.4332275390625e-05, -0.12770476937294006, -0.0024721622467041016, -0.9040241241455078, -0.0062808990478515625, -6.103515625e-05, -0.2469594031572342, -0.4751048684120178, 0.0, -0.26551246643066406, -4.38690185546875e-05, -0.0119736073538661, -9.464805043535307e-05, -7.152555099310121e-07, -0.07184579968452454, -4.5061107812216505e-05, -4.649161837733118e-06]}]}
{"index": 1, "beams": [{"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "score": -0.24972317766442842, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.07146263122558594, -0.00030517578125, -3.0517578125e-05, -5.7220458984375e-06, -0.000179290771484375, -0.022188186645507812, 0.0, -0.0002651214599609375, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.055695533752441406, 0.0, -0.02946758270263672, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 21, 134, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "immune", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.immune = <UNK>\n", "score": -4.383529883139282, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.07146263122558594, -0.00030517578125, -3.0517578125e-05, -5.7220458984375e-06, -0.000179290771484375, -0.022188186645507812, 0.0, -0.0002651214599609375, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.4249744415283203, 0.0, -0.0665426254272461, -5.7220458984375e-06, -0.7275023460388184, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.change_attack(self)\n", "score": -4.4001023585726315, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.883206367492676, -6.866455078125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.0047245025634765625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.949249267578125, 0.0, -0.008687973022460938, -0.48240184783935547, -1.9073486328125e-06, -0.001617431640625, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.set_health_to(self)\n", "score": -4.521540385000854, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.883206367492676, -6.866455078125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.0047245025634765625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.5270633697509766, 0.0, -0.00978851318359375, -0.02328014373779297, 0.0, -0.0032644271850585938, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 21, 134, "player", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = player\n", "score": -4.703885775320678, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.07146263122558594, -0.00030517578125, -3.0517578125e-05, -5.7220458984375e-06, -0.000179290771484375, -0.022188186645507812, 0.0, -0.0002651214599609375, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.055695533752441406, 0.0, -3.61307430267334, -5.7220458984375e-06, -0.87060546875, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target = True\n", "score": -4.865801554434448, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.07146263122558594, -0.00030517578125, -3.0517578125e-05, -5.7220458984375e-06, -0.000179290771484375, -4.15632438659668, -1.52587890625e-05, -0.3981590270996094, 0.0, -0.0011243820190429688, 0.0, -0.16788482666015625, -0.0001850128173828125, -6.866455078125e-05, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n", "score": -4.938120346777588, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.883206367492676, -6.866455078125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.0047245025634765625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9402189254760742, 0.0, -4.57763671875e-05, -0.009562492370605469, -0.0001010894775390625, -0.000469207763671875, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.00042724609375, -1.52587890625e-05, -0.0026339292526245117, 0.0, -4.00543212890625e-05, -0.004563331604003906, -0.0001544952392578125, -0.012546539306640625, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -1.5854835510253906e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.007985353469848633, 0.0, -0.0010128021240234375, -3.814697265625e-06, -8.678436279296875e-05, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.taunt = True\n", "score": -5.0158045112905185, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.336858749389648, -7.62939453125e-06, -0.0034236907958984375, -0.033516883850097656, -0.0001201629638671875, -0.00026607513427734375, 0.0, -0.31432533264160156, -0.00048828125, -4.76837158203125e-05, -3.814697265625e-06, -3.0517578125e-05, -0.011624336242675781, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -3.933906555175781e-06, -0.23071300983428955, 0.0, -0.06214714050292969, -7.62939453125e-06, -4.00543212890625e-05, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 21, 134, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = <UNK>\n", "score": -5.18664429735437, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.07146263122558594, -0.00030517578125, -3.0517578125e-05, -5.7220458984375e-06, -0.000179290771484375, -0.022188186645507812, 0.0, -0.0002651214599609375, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.055695533752441406, 0.0, -3.61307430267334, -5.7220458984375e-06, -1.3533639907836914, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "0", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 0}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.change_attack(0)\n", "score": -5.4809585626055295, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -4.415541648864746, -0.000110626220703125, -0.04145526885986328, -0.0042572021484375, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.058170437812805176, -1.71661376953125e-05, -0.8912618160247803, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -5.49791953552559, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.883206367492676, -6.866455078125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.0047245025634765625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.949249267578125, 0.0, -0.008687973022460938, -1.3258056640625, -0.00567626953125, -0.020940780639648438, -1.9073486328125e-06, -0.025259846821427345, 0.0, -0.1929035186767578, -0.0068206787109375, -4.57763671875e-05, -8.96453857421875e-05, 0.0, -4.1961669921875e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.0041970014572143555, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "target", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        target.taunt = True\n", "score": -5.550196390860229, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.07146263122558594, -0.00030517578125, -3.0517578125e-05, -5.7220458984375e-06, -0.000179290771484375, -4.15632438659668, -1.52587890625e-05, -1.198781967163086, 0.0, -0.044567108154296875, 0.0, -0.008431434631347656, -7.62939453125e-06, -2.86102294921875e-05, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.change_attack(2)\n", "score": -5.636966090910583, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -4.415541648864746, -0.000110626220703125, -0.04145526885986328, -0.0042572021484375, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.058170437812805176, -1.71661376953125e-05, -1.0472712516784668, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n", "score": -5.652651172648561, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -5.54692268371582, -0.0002899169921875, -3.24249267578125e-05, -0.000274658203125, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.3470649719238281e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -6.556510470545618e-06, -1.9073486328125e-05, -0.0048198699951171875, -0.000194549560546875, -7.43865966796875e-05, -7.05718994140625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0626063346862793, -1.1920928244535389e-07, -5.53131103515625e-05, -0.0005645751953125, -6.103515625e-05, -1.9073486328125e-05, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -0.0002269744873046875, -1.52587890625e-05, -0.0021938083227723837, -1.9073486328125e-06, -5.340576171875e-05, -0.0047321319580078125, -0.000186920166015625, -0.0067653656005859375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.2040138244628906e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.008483171463012695, 0.0, -0.0034465789794921875, -3.814697265625e-06, -9.918212890625e-05, 0.0]}, {"choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Ancestral", " ", "Healing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AncestralHealing", "hole2": [{"hole1": 0, "hole0": "Ancestral Healing", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n", "score": -7.894029725082866, "score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -7.421734809875488, -0.0006732940673828125, -7.152555099310121e-07, -6.830690836068243e-05, -3.576277322281385e-06, -3.814697265625e-06, -3.933904736186378e-06, -4.768370445162873e-07, -0.010127663612365723, -5.7220458984375e-06, -0.0041959285736083984, 0.0, -0.004433631896972656, 0.0, -5.8293338952353224e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -2.5033950805664062e-05, -4.768370445162873e-07, -0.3298673629760742, -7.82012939453125e-05, -1.71661376953125e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -5.125998541188892e-06, -2.86102294921875e-05, -0.005401611328125, -0.0002574920654296875, -8.58306884765625e-05, -6.103515625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.08828091621398926, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00052642822265625, -5.53131103515625e-05, -2.47955322265625e-05, -2.86102294921875e-05, -3.62396240234375e-05, 0.0, -0.000247955322265625, -1.52587890625e-05, -0.002187013393267989, -1.9073486328125e-06, -5.53131103515625e-05, -0.0046863555908203125, -0.0001850128173828125, -0.0071659088134765625, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.2040138244628906e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.008451700210571289, 0.0, -0.00321197509765625, -3.814697265625e-06, -9.822845458984375e-05, 0.0]}]}
{"index": 2, "beams": [{"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.2513297305026683, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -0.989697277545929, -7.152543730626348e-06, -0.01064300537109375, -3.62396240234375e-05, -0.0001392364501953125, -2.6702880859375e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0063953399658203125, -1.71661376953125e-05, -0.002391815185546875, -1.9073486328125e-06, -0.017845988273620605, -3.814697265625e-06, -0.002757668262347579, -5.960462772236497e-07, -0.0017214007675647736, -7.62939453125e-06, -0.010528206825256348, -3.063678741455078e-05, -0.9847579002380371, -2.1934378310106695e-05, -4.38690185546875e-05, 0.0, -2.288818359375e-05, -0.00011444091796875, -0.000118255615234375, -0.00244748592376709, -1.1920928244535389e-07, -0.0005035400390625, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.0071811676025390625, -1.9073486328125e-05, -0.001872998895123601, -1.1920928244535389e-07, -0.0004217624373268336, -2.861018856492592e-06, -1.71661376953125e-05, -0.0021076202392578125, -5.340576171875e-05, -0.019619107246398926, -1.4305104514278355e-06, -0.00299835205078125, -0.000118255615234375, -0.00160980224609375, -9.5367431640625e-06, -0.019208664074540138, -1.9550323486328125e-05, -0.012212991714477539, 0.0, -0.0003757476806640625, -0.0015735626220703125, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.0011425018310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006542205810546875, -1.9073486328125e-06, -0.00010132788156624883, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.76837158203125e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.0010460615158081055, 0.0, -0.0001316070556640625, -0.0001964569091796875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007823944091796875, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005089023616164923, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.507658601750215, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -1.2568767070770264, -3.576278118089249e-07, -0.0019960403442382812, -9.5367431640625e-06, -5.7220458984375e-05, -8.96453857421875e-05, -0.00026702880859375, -1.9073486328125e-06, -0.0024318695068359375, -5.7220458984375e-06, -0.008462905883789062, -3.814697265625e-06, -0.014230728149414062, -5.7220458984375e-06, -0.002333282260224223, -7.152555099310121e-07, -0.0018369059544056654, -7.62939453125e-06, -0.009705542586743832, -2.47955322265625e-05, -0.9839080572128296, -9.298310033045709e-06, -4.9591064453125e-05, 0.0, -2.09808349609375e-05, -0.000209808349609375, -0.000125885009765625, -0.002646923065185547, -1.1920928244535389e-07, -0.0005397796630859375, -0.0001010894775390625, -7.62939453125e-05, 0.0, -0.0072116851806640625, -1.9073486328125e-05, -0.001873357337899506, -1.1920928244535389e-07, -0.00041580197284929454, -2.622600959512056e-06, -1.71661376953125e-05, -0.002109527587890625, -5.340576171875e-05, -0.01940631866455078, -1.5497195136049413e-06, -0.0030117034912109375, -0.000118255615234375, -0.0016422271728515625, -9.5367431640625e-06, -0.020323390141129494, -1.7642974853515625e-05, -0.01223301887512207, 0.0, -0.0003795623779296875, -0.0015869140625, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.001148223876953125, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00064849853515625, -1.9073486328125e-06, -0.000101447083579842, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.76837158203125e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.001047968864440918, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007823944091796875, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005091407801955938, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.5190169179202186, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -0.989697277545929, -7.152543730626348e-06, -0.01064300537109375, -3.62396240234375e-05, -0.0001392364501953125, -2.6702880859375e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0063953399658203125, -1.71661376953125e-05, -0.002391815185546875, -1.9073486328125e-06, -0.017845988273620605, -3.814697265625e-06, -0.002757668262347579, -5.960462772236497e-07, -0.0017214007675647736, -7.62939453125e-06, -0.010528206825256348, -3.063678741455078e-05, -1.2466397285461426, -1.9788742065429688e-05, -3.0517578125e-05, 0.0, -4.9591064453125e-05, -0.00043487548828125, -9.1552734375e-05, -0.0024123191833496094, -1.1920928244535389e-07, -0.000400543212890625, -8.96453857421875e-05, -8.58306884765625e-05, 0.0, -0.008573532104492188, -1.9073486328125e-05, -0.0025975387543439865, -1.1920928244535389e-07, -0.0004681348509620875, -3.814689989667386e-06, -1.52587890625e-05, -0.002269744873046875, -5.14984130859375e-05, -0.020534753799438477, -1.5497195136049413e-06, -0.0029430389404296875, -0.0001163482666015625, -0.0016651153564453125, -9.5367431640625e-06, -0.021371478214859962, -1.7642974853515625e-05, -0.01243901252746582, 0.0, -0.000377655029296875, -0.001590728759765625, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.0011539459228515625, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006561279296875, -1.9073486328125e-06, -0.000101447083579842, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.630752563476562e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.57763671875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.001044154167175293, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007823944091796875, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005089023616164923, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.538255092628269, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -1.2560288906097412, -9.894371032714844e-06, -0.02651214599609375, -3.24249267578125e-05, -0.0001277923583984375, -9.1552734375e-05, -0.00030517578125, -3.814697265625e-06, -0.0048160552978515625, -9.5367431640625e-06, -0.006259918212890625, -3.814697265625e-06, -0.010603785514831543, -3.814697265625e-06, -0.0026600349228829145, -7.152555099310121e-07, -0.0017242484027519822, -9.5367431640625e-06, -0.009742259979248047, -3.24249267578125e-05, -0.9966435432434082, -1.215931297338102e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -0.000164031982421875, -0.0001049041748046875, -0.0026813745498657227, -1.1920928244535389e-07, -0.0005512237548828125, -9.34600830078125e-05, -7.43865966796875e-05, 0.0, -0.0076007843017578125, -1.9073486328125e-05, -0.0018374754581600428, -1.1920928244535389e-07, -0.0004217624373268336, -2.7418097943154862e-06, -1.71661376953125e-05, -0.0020999908447265625, -5.340576171875e-05, -0.019115686416625977, -1.5497195136049413e-06, -0.0030364990234375, -0.000118255615234375, -0.00165557861328125, -9.5367431640625e-06, -0.01801704801619053, -1.7642974853515625e-05, -0.011707544326782227, 0.0, -0.0003795623779296875, -0.001605987548828125, -2.288818359375e-05, -7.152557373046875e-05, -1.9073486328125e-06, -0.0011234283447265625, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006389617919921875, -1.9073486328125e-06, -9.942053293343633e-05, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.9591064453125e-05, 0.0, -7.2479248046875e-05, 0.0, -0.000118255615234375, 0.0, -0.001051783561706543, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007822990417480469, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00030086649348959327, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.000509021570906043, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.5386815850339346, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -0.989697277545929, -7.152543730626348e-06, -0.01064300537109375, -3.62396240234375e-05, -0.0001392364501953125, -2.6702880859375e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0063953399658203125, -1.71661376953125e-05, -0.002391815185546875, -1.9073486328125e-06, -0.017845988273620605, -3.814697265625e-06, -0.002757668262347579, -5.960462772236497e-07, -0.0017214007675647736, -7.62939453125e-06, -0.010528206825256348, -3.063678741455078e-05, -1.2665925025939941, -1.0728830375228426e-06, -3.814697265625e-05, 0.0, -2.288818359375e-05, -0.0001430511474609375, -0.0001316070556640625, -0.0035382509231567383, -1.1920928244535389e-07, -0.0003223419189453125, -8.96453857421875e-05, -7.82012939453125e-05, 0.0, -0.0063953399658203125, -1.71661376953125e-05, -0.00241290545091033, -1.1920928244535389e-07, -0.00042557716369628906, -2.50339189733495e-06, -1.71661376953125e-05, -0.0021820068359375, -5.340576171875e-05, -0.01984715461730957, -1.5497195136049413e-06, -0.0029697418212890625, -0.000118255615234375, -0.001659393310546875, -9.5367431640625e-06, -0.023095721378922462, -1.9550323486328125e-05, -0.012793779373168945, 0.0, -0.000377655029296875, -0.0015544891357421875, -2.288818359375e-05, -7.331371307373047e-05, -1.9073486328125e-06, -0.001209259033203125, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00067138671875, -1.9073486328125e-06, -0.00010347364150220528, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.630752563476562e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.57763671875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.00011444091796875, 0.0, -0.001040339469909668, 0.0, -0.0001316070556640625, -0.0001964569091796875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.0014286041259765625, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007824897766113281, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005092599894851446, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.7794898564107413, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -1.2560288906097412, -9.894371032714844e-06, -0.02651214599609375, -3.24249267578125e-05, -0.0001277923583984375, -9.1552734375e-05, -0.00030517578125, -3.814697265625e-06, -0.0048160552978515625, -9.5367431640625e-06, -0.006259918212890625, -3.814697265625e-06, -0.010603785514831543, -3.814697265625e-06, -0.0026600349228829145, -7.152555099310121e-07, -0.0017242484027519822, -9.5367431640625e-06, -0.009742259979248047, -3.24249267578125e-05, -1.2309927940368652, -1.3709068298339844e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.000762939453125, -8.0108642578125e-05, -0.0027490854263305664, -1.1920928244535389e-07, -0.00041961669921875, -8.0108642578125e-05, -7.62939453125e-05, 0.0, -0.009347915649414062, -1.9073486328125e-05, -0.0025680954568088055, -1.1920928244535389e-07, -0.00046980378101579845, -3.6954811548639555e-06, -1.52587890625e-05, -0.0022640228271484375, -5.14984130859375e-05, -0.019989967346191406, -1.6689286894688848e-06, -0.0029888153076171875, -0.000118255615234375, -0.0017185211181640625, -9.5367431640625e-06, -0.020518295466899872, -1.7642974853515625e-05, -0.011982202529907227, 0.0, -0.0003814697265625, -0.00162506103515625, -2.288818359375e-05, -7.152557373046875e-05, -1.9073486328125e-06, -0.0011348724365234375, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006389617919921875, -1.9073486328125e-06, -0.000101447083579842, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.76837158203125e-05, 0.0, -7.2479248046875e-05, 0.0, -0.000118255615234375, 0.0, -0.001047968864440918, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004051922878716141, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007822990417480469, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00030086649348959327, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005091407801955938, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.7845658151758172, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -1.2568767070770264, -3.576278118089249e-07, -0.0019960403442382812, -9.5367431640625e-06, -5.7220458984375e-05, -8.96453857421875e-05, -0.00026702880859375, -1.9073486328125e-06, -0.0024318695068359375, -5.7220458984375e-06, -0.008462905883789062, -3.814697265625e-06, -0.014230728149414062, -5.7220458984375e-06, -0.002333282260224223, -7.152555099310121e-07, -0.0018369059544056654, -7.62939453125e-06, -0.009705542586743832, -2.47955322265625e-05, -1.25540292263031, -4.768370445162873e-07, -5.14984130859375e-05, 0.0, -2.47955322265625e-05, -0.00034332275390625, -0.0001735687255859375, -0.0037366151809692383, -1.1920928244535389e-07, -0.0003032684326171875, -8.0108642578125e-05, -7.62939453125e-05, 0.0, -0.006702423095703125, -1.71661376953125e-05, -0.0019860179163515568, -1.1920928244535389e-07, -0.0004101991653442383, -2.3841830625315197e-06, -1.71661376953125e-05, -0.0021820068359375, -5.53131103515625e-05, -0.019062519073486328, -1.6689286894688848e-06, -0.0030384063720703125, -0.000118255615234375, -0.001682281494140625, -9.5367431640625e-06, -0.0245660487562418, -1.9669532775878906e-05, -0.012936830520629883, 0.0, -0.000377655029296875, -0.0015621185302734375, -2.288818359375e-05, -7.331371307373047e-05, -1.9073486328125e-06, -0.0012187957763671875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.000667572021484375, -1.9073486328125e-06, -0.00010347364150220528, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.630752563476562e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.57763671875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.00011444091796875, 0.0, -0.001040339469909668, 0.0, -0.0001316070556640625, -0.0001964569091796875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.0014286041259765625, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007824897766113281, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005094984080642462, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.797869186289489, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -1.2568767070770264, -3.576278118089249e-07, -0.0019960403442382812, -9.5367431640625e-06, -5.7220458984375e-05, -8.96453857421875e-05, -0.00026702880859375, -1.9073486328125e-06, -0.0024318695068359375, -5.7220458984375e-06, -0.008462905883789062, -3.814697265625e-06, -0.014230728149414062, -5.7220458984375e-06, -0.002333282260224223, -7.152555099310121e-07, -0.0018369059544056654, -7.62939453125e-06, -0.009705542586743832, -2.47955322265625e-05, -1.2673524618148804, -1.3828277587890625e-05, -3.814697265625e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.00090789794921875, -9.72747802734375e-05, -0.0027300119400024414, -2.3841855067985307e-07, -0.000385284423828125, -8.20159912109375e-05, -7.43865966796875e-05, 0.0, -0.009874343872070312, -1.9073486328125e-05, -0.0024531730450689793, -1.1920928244535389e-07, -0.0004683732695411891, -3.576272320060525e-06, -1.52587890625e-05, -0.0022430419921875, -5.14984130859375e-05, -0.019910335540771484, -1.6689286894688848e-06, -0.00299835205078125, -0.000118255615234375, -0.0016956329345703125, -9.5367431640625e-06, -0.02234148234128952, -1.7642974853515625e-05, -0.012384653091430664, 0.0, -0.0003814697265625, -0.001613616943359375, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.001155853271484375, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006465911865234375, -1.9073486328125e-06, -0.000101447083579842, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.76837158203125e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.001044154167175293, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007822990417480469, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005091407801955938, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.819850805911237, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -1.2560288906097412, -9.894371032714844e-06, -0.02651214599609375, -3.24249267578125e-05, -0.0001277923583984375, -9.1552734375e-05, -0.00030517578125, -3.814697265625e-06, -0.0048160552978515625, -9.5367431640625e-06, -0.006259918212890625, -3.814697265625e-06, -0.010603785514831543, -3.814697265625e-06, -0.0026600349228829145, -7.152555099310121e-07, -0.0017242484027519822, -9.5367431640625e-06, -0.009742259979248047, -3.24249267578125e-05, -1.2739167213439941, -4.768370445162873e-07, -5.14984130859375e-05, 0.0, -2.09808349609375e-05, -0.0002346038818359375, -0.000141143798828125, -0.0036803483963012695, -1.1920928244535389e-07, -0.0003261566162109375, -8.0108642578125e-05, -7.43865966796875e-05, 0.0, -0.006656646728515625, -1.71661376953125e-05, -0.002181760035455227, -1.1920928244535389e-07, -0.0004216432571411133, -2.50339189733495e-06, -1.71661376953125e-05, -0.002197265625, -5.53131103515625e-05, -0.01922607421875, -1.6689286894688848e-06, -0.003009796142578125, -0.000118255615234375, -0.001708984375, -9.5367431640625e-06, -0.021345607936382294, -1.7642974853515625e-05, -0.012184381484985352, 0.0, -0.0003814697265625, -0.0015850067138671875, -2.288818359375e-05, -7.331371307373047e-05, -1.9073486328125e-06, -0.0011692047119140625, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006465911865234375, -1.9073486328125e-06, -0.000101447083579842, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.76837158203125e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.0010460615158081055, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007822990417480469, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00030086649348959327, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005094984080642462, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.887037985343902, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -1.3632776737213135, -1.716609222057741e-05, -0.00653076171875, -3.814697265625e-06, -0.000194549560546875, -2.288818359375e-05, -0.0001964569091796875, -5.7220458984375e-06, -0.0044460296630859375, -1.1444091796875e-05, -0.0053863525390625, -1.9073486328125e-06, -0.013411879539489746, -7.62939453125e-06, -0.002872943179681897, -7.152555099310121e-07, -0.0018098587170243263, -9.5367431640625e-06, -0.01143956184387207, -4.589557647705078e-05, -0.9785041809082031, -1.4424267646973021e-05, -0.009579658508300781, -2.6702880859375e-05, -0.000164031982421875, -3.4332275390625e-05, -0.0002574920654296875, -3.814697265625e-06, -0.0073394775390625, -1.52587890625e-05, -0.0021209716796875, -1.9073486328125e-06, -0.02169644832611084, -3.814697265625e-06, -0.002751111751422286, -5.960462772236497e-07, -0.0017109415493905544, -7.62939453125e-06, -0.01050114631652832, -3.254413604736328e-05, -0.981843113899231, -1.6570011212024838e-05, -4.38690185546875e-05, 0.0, -2.288818359375e-05, -0.0001201629638671875, -0.000118255615234375, -0.0024427175521850586, -1.1920928244535389e-07, -0.0005092620849609375, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.007221221923828125, -1.9073486328125e-05, -0.0018582168268039823, -1.1920928244535389e-07, -0.0004218816466163844, -2.861018856492592e-06, -1.71661376953125e-05, -0.0020923614501953125, -5.340576171875e-05, -0.01954364776611328, -1.4305104514278355e-06, -0.00299835205078125, -0.000118255615234375, -0.001617431640625, -9.5367431640625e-06, -0.018627161160111427, -1.9550323486328125e-05, -0.012131929397583008, 0.0, -0.0003757476806640625, -0.0015697479248046875, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.0011425018310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.000652313232421875, -1.9073486328125e-06, -0.00010132788156624883, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.76837158203125e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.0010460615158081055, 0.0, -0.0001316070556640625, -0.0001964569091796875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007823944091796875, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005089023616164923, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -4.153655152270623, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -1.3632776737213135, -1.716609222057741e-05, -0.00653076171875, -3.814697265625e-06, -0.000194549560546875, -2.288818359375e-05, -0.0001964569091796875, -5.7220458984375e-06, -0.0044460296630859375, -1.1444091796875e-05, -0.0053863525390625, -1.9073486328125e-06, -0.013411879539489746, -7.62939453125e-06, -0.002872943179681897, -7.152555099310121e-07, -0.0018098587170243263, -9.5367431640625e-06, -0.01143956184387207, -4.589557647705078e-05, -1.2591142654418945, -8.344646857949556e-07, -0.002147674560546875, -1.33514404296875e-05, -6.29425048828125e-05, -0.0001068115234375, -0.0002689361572265625, -1.9073486328125e-06, -0.002655029296875, -5.7220458984375e-06, -0.00743865966796875, -3.814697265625e-06, -0.017808198928833008, -3.814697265625e-06, -0.0022093048319220543, -5.960462772236497e-07, -0.001798548735678196, -9.5367431640625e-06, -0.0096472492441535, -2.47955322265625e-05, -0.9786962270736694, -8.702266313775908e-06, -5.14984130859375e-05, 0.0, -2.09808349609375e-05, -0.00020599365234375, -0.000125885009765625, -0.002616405487060547, -1.1920928244535389e-07, -0.000545501708984375, -9.918212890625e-05, -7.62939453125e-05, 0.0, -0.0072231292724609375, -1.9073486328125e-05, -0.0018385484581813216, -1.1920928244535389e-07, -0.00041389462421648204, -2.7418097943154862e-06, -1.71661376953125e-05, -0.002086639404296875, -5.340576171875e-05, -0.01932990550994873, -1.5497195136049413e-06, -0.0030117034912109375, -0.000118255615234375, -0.0016498565673828125, -9.5367431640625e-06, -0.019671672955155373, -1.7642974853515625e-05, -0.012192010879516602, 0.0, -0.0003795623779296875, -0.0015773773193359375, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.0011501312255859375, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00064849853515625, -1.9073486328125e-06, -0.000101447083579842, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.76837158203125e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.001047968864440918, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007823944091796875, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.000509021570906043, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -4.164773085657423, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -1.3632776737213135, -1.716609222057741e-05, -0.00653076171875, -3.814697265625e-06, -0.000194549560546875, -2.288818359375e-05, -0.0001964569091796875, -5.7220458984375e-06, -0.0044460296630859375, -1.1444091796875e-05, -0.0053863525390625, -1.9073486328125e-06, -0.013411879539489746, -7.62939453125e-06, -0.002872943179681897, -7.152555099310121e-07, -0.0018098587170243263, -9.5367431640625e-06, -0.01143956184387207, -4.589557647705078e-05, -0.9785041809082031, -1.4424267646973021e-05, -0.009579658508300781, -2.6702880859375e-05, -0.000164031982421875, -3.4332275390625e-05, -0.0002574920654296875, -3.814697265625e-06, -0.0073394775390625, -1.52587890625e-05, -0.0021209716796875, -1.9073486328125e-06, -0.02169644832611084, -3.814697265625e-06, -0.002751111751422286, -5.960462772236497e-07, -0.0017109415493905544, -7.62939453125e-06, -0.01050114631652832, -3.254413604736328e-05, -1.253651738166809, -1.9669532775878906e-05, -2.86102294921875e-05, 0.0, -4.9591064453125e-05, -0.000446319580078125, -8.7738037109375e-05, -0.0024209022521972656, -1.1920928244535389e-07, -0.000408172607421875, -9.1552734375e-05, -8.58306884765625e-05, 0.0, -0.008697509765625, -1.9073486328125e-05, -0.0025716705713421106, -1.1920928244535389e-07, -0.0004700421995949, -3.814689989667386e-06, -1.52587890625e-05, -0.002254486083984375, -5.14984130859375e-05, -0.020489811897277832, -1.5497195136049413e-06, -0.0029430389404296875, -0.0001163482666015625, -0.0016727447509765625, -9.5367431640625e-06, -0.020809287205338478, -1.7642974853515625e-05, -0.012337923049926758, 0.0, -0.000377655029296875, -0.0015869140625, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.00115203857421875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006542205810546875, -1.9073486328125e-06, -0.000101447083579842, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.630752563476562e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.57763671875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.001044154167175293, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004051922878716141, -8.344646857949556e-07, -4.57763671875e-05, -0.000133514404296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007823944091796875, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005089023616164923, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -4.172003985219696, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -1.3632776737213135, -1.716609222057741e-05, -0.00653076171875, -3.814697265625e-06, -0.000194549560546875, -2.288818359375e-05, -0.0001964569091796875, -5.7220458984375e-06, -0.0044460296630859375, -1.1444091796875e-05, -0.0053863525390625, -1.9073486328125e-06, -0.013411879539489746, -7.62939453125e-06, -0.002872943179681897, -7.152555099310121e-07, -0.0018098587170243263, -9.5367431640625e-06, -0.01143956184387207, -4.589557647705078e-05, -0.9785041809082031, -1.4424267646973021e-05, -0.009579658508300781, -2.6702880859375e-05, -0.000164031982421875, -3.4332275390625e-05, -0.0002574920654296875, -3.814697265625e-06, -0.0073394775390625, -1.52587890625e-05, -0.0021209716796875, -1.9073486328125e-06, -0.02169644832611084, -3.814697265625e-06, -0.002751111751422286, -5.960462772236497e-07, -0.0017109415493905544, -7.62939453125e-06, -0.01050114631652832, -3.254413604736328e-05, -1.2613526582717896, -9.536738616588991e-07, -3.814697265625e-05, 0.0, -2.288818359375e-05, -0.0001506805419921875, -0.000133514404296875, -0.0035353899002075195, -1.1920928244535389e-07, -0.0003185272216796875, -8.7738037109375e-05, -7.82012939453125e-05, 0.0, -0.006427764892578125, -1.71661376953125e-05, -0.00240682577714324, -1.1920928244535389e-07, -0.00042557716369628906, -2.50339189733495e-06, -1.71661376953125e-05, -0.0021572113037109375, -5.340576171875e-05, -0.019764184951782227, -1.5497195136049413e-06, -0.0029697418212890625, -0.000118255615234375, -0.0016689300537109375, -9.5367431640625e-06, -0.02249288000166416, -1.9550323486328125e-05, -0.012693643569946289, 0.0, -0.000377655029296875, -0.0015506744384765625, -2.288818359375e-05, -7.331371307373047e-05, -1.9073486328125e-06, -0.0012035369873046875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006694793701171875, -1.9073486328125e-06, -0.00010347364150220528, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.630752563476562e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.57763671875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.00011444091796875, 0.0, -0.001040339469909668, 0.0, -0.0001316070556640625, -0.0001964569091796875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.0014286041259765625, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007824897766113281, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005092599894851446, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Huffer", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -4.195500342536086, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -1.3632776737213135, -1.716609222057741e-05, -0.00653076171875, -3.814697265625e-06, -0.000194549560546875, -2.288818359375e-05, -0.0001964569091796875, -5.7220458984375e-06, -0.0044460296630859375, -1.1444091796875e-05, -0.0053863525390625, -1.9073486328125e-06, -0.013411879539489746, -7.62939453125e-06, -0.002872943179681897, -7.152555099310121e-07, -0.0018098587170243263, -9.5367431640625e-06, -0.01143956184387207, -4.589557647705078e-05, -1.260575294494629, -1.2159347534179688e-05, -0.03349876403808594, -4.00543212890625e-05, -0.0001392364501953125, -0.0001010894775390625, -0.00031280517578125, -3.814697265625e-06, -0.005237579345703125, -9.5367431640625e-06, -0.00540924072265625, -3.814697265625e-06, -0.013945579528808594, -3.814697265625e-06, -0.0025174610782414675, -5.960462772236497e-07, -0.0017042409162968397, -9.5367431640625e-06, -0.009728670120239258, -3.4332275390625e-05, -0.9932337999343872, -1.215931297338102e-05, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, -0.00016021728515625, -0.0001049041748046875, -0.0026737451553344727, -1.1920928244535389e-07, -0.0005512237548828125, -9.34600830078125e-05, -7.43865966796875e-05, 0.0, -0.00757598876953125, -1.9073486328125e-05, -0.0018299653893336654, -1.1920928244535389e-07, -0.0004217624373268336, -2.7418097943154862e-06, -1.71661376953125e-05, -0.0020885467529296875, -5.53131103515625e-05, -0.01905667781829834, -1.5497195136049413e-06, -0.0030364990234375, -0.000118255615234375, -0.001667022705078125, -9.5367431640625e-06, -0.017441386356949806, -1.7642974853515625e-05, -0.011661767959594727, 0.0, -0.0003795623779296875, -0.0015964508056640625, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.0011234283447265625, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.000637054443359375, -1.9073486328125e-06, -9.942053293343633e-05, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.9591064453125e-05, 0.0, -7.2479248046875e-05, 0.0, -0.000118255615234375, 0.0, -0.001051783561706543, 0.0, -0.0001316070556640625, -0.000194549560546875, -1.9073486328125e-05, -0.0004051922878716141, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007822990417480469, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00030086649348959327, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.000509021570906043, -9.72747802734375e-05]}, {"choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "AnimalCompanion", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "List", "elts": [{"hole1": "Misha", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}]}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -4.220841965775286, "score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -1.715790033340454, -2.3841855067985307e-07, -0.0038537979125976562, -5.7220458984375e-06, -9.1552734375e-05, -6.29425048828125e-05, -0.000217437744140625, -3.814697265625e-06, -0.0026988983154296875, -7.62939453125e-06, -0.009325027465820312, -3.814697265625e-06, -0.011111736297607422, -7.62939453125e-06, -0.002583859721198678, -9.536738616588991e-07, -0.0018676973413676023, -9.5367431640625e-06, -0.010638951323926449, -2.6702880859375e-05, -0.972449004650116, -5.6028297876764555e-06, -0.012032508850097656, -4.76837158203125e-05, -0.0001468658447265625, -2.47955322265625e-05, -0.000244140625, -5.7220458984375e-06, -0.006801605224609375, -2.09808349609375e-05, -0.001613616943359375, -1.9073486328125e-06, -0.01344227697700262, -5.7220458984375e-06, -0.0033285615500062704, -5.960462772236497e-07, -0.001795410644263029, -7.62939453125e-06, -0.010425925254821777, -2.872943878173828e-05, -0.9785988926887512, -2.0861511075054295e-05, -4.38690185546875e-05, 0.0, -2.09808349609375e-05, -0.0001163482666015625, -0.0001220703125, -0.002436995506286621, -1.1920928244535389e-07, -0.0005054473876953125, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.00720977783203125, -1.9073486328125e-05, -0.0018786016153171659, -1.1920928244535389e-07, -0.0004217624373268336, -2.861018856492592e-06, -1.71661376953125e-05, -0.0020961761474609375, -5.340576171875e-05, -0.019631624221801758, -1.4305104514278355e-06, -0.0029926300048828125, -0.000118255615234375, -0.0016155242919921875, -9.5367431640625e-06, -0.019186371937394142, -1.9550323486328125e-05, -0.012247323989868164, 0.0, -0.0003757476806640625, -0.0015697479248046875, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.0011501312255859375, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006561279296875, -1.9073486328125e-06, -0.000101447083579842, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.57763671875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.0010460615158081055, 0.0, -0.0001316070556640625, -0.0001964569091796875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007823944091796875, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.000509021570906043, -9.72747802734375e-05]}]}
{"index": 3, "beams": [{"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -0.030377315091726587, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -0.0017070770263671875, -1.9073486328125e-06, -0.000339508056640625, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.9001584304496646e-05, 0.0, -5.340576171875e-05, -0.0003662109375, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020647048950195312, -3.814697265625e-06, 0.0, -0.0026092529296875, -0.00012969970703125, -9.5367431640625e-06, 0.0, -0.0041065216064453125, -1.9073486328125e-06, -0.00036752221058122814, 0.0, -0.0026068040169775486, 0.0, -0.001201629638671875, 0.0, -0.0001201629638671875, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "minion", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(minion.effective_spell_damage(1), self)\n", "score": -5.667222714047938, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -0.0017070770263671875, -1.9073486328125e-06, -0.000339508056640625, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.9001584304496646e-05, 0.0, -5.340576171875e-05, -0.0003662109375, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020647048950195312, -3.814697265625e-06, 0.0, -0.0026092529296875, -0.00012969970703125, -9.5367431640625e-06, 0.0, -5.513089179992676, -1.9073486328125e-06, -0.12942290306091309, 0.0, -0.0016621190588921309, 0.0, -0.0009517669677734375, -1.9073486328125e-06, -0.0001239776611328125, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -5.725150190144603, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -5.681818008422852, -8.20159912109375e-05, -0.0002269744873046875, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0010776519775390625, 0.0, -0.0028162002563476562, -2.09808349609375e-05, -0.00024831289192661643, 0.0, -0.000537872314453125, -0.001209259033203125, -5.7220458984375e-06, -0.000377655029296875, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.01361393928527832, -1.9073486328125e-06, 0.0, -0.0072231292724609375, -0.0001087188720703125, -1.9073486328125e-05, 0.0, -0.004398345947265625, -1.9073486328125e-06, -0.0004448889521881938, 0.0, -0.0025914546567946672, 0.0, -0.00162506103515625, 0.0, -0.000118255615234375, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -6.247827521725384, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -0.0017070770263671875, -1.9073486328125e-06, -0.000339508056640625, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.9001584304496646e-05, 0.0, -5.340576171875e-05, -0.0003662109375, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020647048950195312, -3.814697265625e-06, 0.0, -0.0026092529296875, -0.00012969970703125, -9.5367431640625e-06, 0.0, -0.0041065216064453125, -1.9073486328125e-06, -0.00036752221058122814, 0.0, -6.220402240753174, -1.9073486328125e-06, -0.0009098052978515625, -1.9073486328125e-06, -6.4849853515625e-05, -7.62939453125e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "ROGUE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -6.923890636931873, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -6.8814873695373535, 0.0, -0.015521049499511719, 0.0, -3.814697265625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -0.00012969970703125, -3.135204315185547e-05, -0.00011765954695874825, -0.0001888275146484375, -3.814697265625e-06, -2.288818359375e-05, -5.91278076171875e-05, -8.96453857421875e-05, -7.62939453125e-06, 0.0, -4.923342203255743e-05, 0.0, -3.814697265625e-06, 0.0, -0.00015461444854736328, 0.0, -6.079673767089844e-06, -1.52587890625e-05, -0.0002956390380859375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-05, 0.0, -0.0051593780517578125, -0.0011234283447265625, -4.9591064453125e-05, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -0.002826690673828125, -7.62939453125e-06, -0.0016994476318359375, -1.9073486328125e-06, -0.0003337860107421875, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.912074993830174e-05, 0.0, -5.14984130859375e-05, -0.00037384033203125, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020456314086914062, -3.814697265625e-06, 0.0, -0.0025959014892578125, -0.00012969970703125, -9.5367431640625e-06, 0.0, -0.0040760040283203125, -1.9073486328125e-06, -0.00036561486194841564, 0.0, -0.002606684807687998, 0.0, -0.001201629638671875, 0.0, -0.0001201629638671875, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self.target)\n", "score": -6.9513625369545196, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -0.0017070770263671875, -1.9073486328125e-06, -0.000339508056640625, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.9001584304496646e-05, 0.0, -5.340576171875e-05, -0.0003662109375, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020647048950195312, -3.814697265625e-06, 0.0, -0.0026092529296875, -0.00012969970703125, -9.5367431640625e-06, 0.0, -0.0041065216064453125, -1.9073486328125e-06, -0.00036752221058122814, 0.0, -0.0026068040169775486, 0.0, -6.9220380783081055, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -8.96453857421875e-05, -3.814697265625e-06, -0.000164031982421875, 0.0]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 30, 193, "range", "<EOS>", "3", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"hole1": 3, "hole0": "range", "_type": "Template34"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in range(3):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -7.30438192217477, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -7.065119743347168, -0.0013628005981445312, -0.034010887145996094, -0.000125885009765625, -0.09110948443412781, 0.0, -0.0896158218383789, -0.0024013519287109375, -2.288818359375e-05, -0.000217437744140625, -1.9073486328125e-06, -0.00012028217315673828, 0.0, -0.0023832321166992188, -5.7220458984375e-06, 0.0, -0.005000114440917969, -4.9591064453125e-05, -1.52587890625e-05, 0.0, -0.002902984619140625, 0.0, -0.000458596769021824, 0.0, -0.0014846203848719597, 0.0, -0.00128936767578125, 0.0, -0.0001430511474609375, -3.814697265625e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "WARRIOR", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -7.481353567603918, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -7.4531025886535645, 0.0, -0.0013561248779296875, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -0.000133514404296875, -2.944469451904297e-05, -0.00012159344623796642, -0.00019073486328125, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -8.7738037109375e-05, -7.62939453125e-06, 0.0, -4.935263132210821e-05, 0.0, -3.814697265625e-06, 0.0, -0.00015270709991455078, 0.0, -6.079673767089844e-06, -1.52587890625e-05, -0.00029754638671875, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-05, 0.0, -0.0051593780517578125, -0.00112152099609375, -4.9591064453125e-05, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -0.0028285980224609375, -7.62939453125e-06, -0.0016994476318359375, -1.9073486328125e-06, -0.000335693359375, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.912074993830174e-05, 0.0, -5.14984130859375e-05, -0.00037384033203125, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020456314086914062, -3.814697265625e-06, 0.0, -0.0025968551635742188, -0.00012969970703125, -9.5367431640625e-06, 0.0, -0.0040760040283203125, -1.9073486328125e-06, -0.00036561486194841564, 0.0, -0.002606684807687998, 0.0, -0.001201629638671875, 0.0, -0.0001201629638671875, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "targets", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in targets.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -7.776907608593291, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -7.7227606773376465, -1.9073486328125e-06, -0.026462554931640625, -1.9073486328125e-06, -0.001857757568359375, -0.0001430511474609375, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004864931106567383, -1.9073486328125e-06, -5.566560139413923e-05, 0.0, -4.38690185546875e-05, -0.00037384033203125, -5.7220458984375e-06, -0.0002117156982421875, 0.0, -1.33514404296875e-05, 0.0, -0.00021791458129882812, -3.814697265625e-06, 0.0, -0.0025730133056640625, -0.000133514404296875, -9.5367431640625e-06, 0.0, -0.004306793212890625, -1.9073486328125e-06, -0.00036752221058122814, 0.0, -0.0026351730339229107, 0.0, -0.001190185546875, 0.0, -0.0001201629638671875, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "SHAMAN", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.SHAMAN(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -7.81802133097878, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -7.738003730773926, -9.5367431640625e-06, -0.05103302001953125, -0.0005054473876953125, -7.62939453125e-05, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0004578828811645508, -1.9073486328125e-06, -7.771002128720284e-05, 0.0, -5.340576171875e-05, -0.0004062652587890625, -5.7220458984375e-06, -0.0001888275146484375, 0.0, -1.1444091796875e-05, 0.0, -0.00020825862884521484, -3.814697265625e-06, 0.0, -0.0026979446411132812, -0.0001316070556640625, -9.5367431640625e-06, 0.0, -0.0040569305419921875, -1.9073486328125e-06, -0.0003658532805275172, 0.0, -0.002649594796821475, 0.0, -0.0011806488037109375, 0.0, -0.0001201629638671875, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "random_choice", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.random_choice(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -7.842851200632111, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -7.770383834838867, 0.0, -1.52587890625e-05, -0.04383277893066406, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0004025697708129883, -1.9073486328125e-06, -5.661908653564751e-05, 0.0, -6.103515625e-05, -0.00052642822265625, -5.7220458984375e-06, -0.0001850128173828125, 0.0, -1.33514404296875e-05, 0.0, -0.00021779537200927734, -3.814697265625e-06, 0.0, -0.0025167465209960938, -0.000133514404296875, -9.5367431640625e-06, 0.0, -0.0043182373046875, -1.9073486328125e-06, -0.0003695487685035914, 0.0, -0.0026565049774944782, 0.0, -0.0011920928955078125, 0.0, -0.0001201629638671875, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(1, self)\n", "score": -7.871391733406163, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -0.0017070770263671875, -1.9073486328125e-06, -0.000339508056640625, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.9001584304496646e-05, 0.0, -5.340576171875e-05, -0.0003662109375, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020647048950195312, -3.814697265625e-06, 0.0, -7.836738109588623, -1.52587890625e-05, -0.010662762448191643, -1.1920928244535389e-07, -0.0028667449951171875, -7.62939453125e-06, -0.00188446044921875, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 111, 21, 134, "<UNK>", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 244, 68, 227, "taunt", "<EOS>", 22, 135, "True", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "<UNK>", "_type": "Name"}, "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, taunt=True):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -7.888490894951218, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -6.9245710372924805, -0.0103759765625, 0.0, -0.15111637115478516, -1.9073486328125e-06, -7.62939453125e-06, -0.1162862777709961, -0.0001010894775390625, -0.06195068359375, 0.0, -0.0025415420532226562, 0.0, -0.000118255615234375, -1.9073486328125e-06, -0.01111602783203125, -0.005200386047363281, -0.006098747253417969, -0.4321298599243164, 0.0, -0.0043277740478515625, -0.000354766845703125, -0.0001583099365234375, -5.7220458984375e-06, -0.1268930435180664, -0.008960723876953125, -0.0001125335693359375, -2.288818359375e-05, 0.0, -0.0001842975616455078, 0.0, -0.004887580871582031, -9.5367431640625e-06, 0.0, -0.0024785995483398438, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.003993988037109375, -1.9073486328125e-06, -0.0004992481553927064, 0.0, -0.0013617088552564383, 0.0, -0.0008220672607421875, 0.0, -0.0001277923583984375, -3.814697265625e-06]}, {"choice_history": [70, 150, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 1}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score": -8.08875524895501, "score_history": [-7.62939453125e-06, -6.717813491821289, -1.6689286894688848e-06, -2.288818359375e-05, -2.7417810997576453e-05, -2.5458866730332375e-05, -1.3470649719238281e-05, -3.814697265625e-06, -2.288818359375e-05, -0.0002918243408203125, -0.000408172607421875, -9.179073458653875e-06, -0.00010442733037052676, -3.612015279941261e-05, 0.0, -3.576278118089249e-07, -7.152555099310121e-07, -0.0006854534149169922, 0.0, -0.0015507936477661133, 0.0, -0.41962432861328125, 0.0, -6.29425048828125e-05, 0.0, -7.2479248046875e-05, -0.0002288818359375, -0.000290751428110525, -0.0007686614990234375, -0.42897605895996094, -1.9073486328125e-06, -4.76837158203125e-05, -4.1961669921875e-05, -7.43865966796875e-05, -2.09808349609375e-05, 0.0, -4.2319297790527344e-05, 0.0, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, 0.0, -5.841255187988281e-06, -5.7220458984375e-06, -0.0003223419189453125, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.0001125335693359375, 0.0, -0.005719184875488281, -0.0004711151123046875, -4.1961669921875e-05, -1.71661376953125e-05, -6.866455078125e-05, -3.814697265625e-06, -0.0026454925537109375, -7.62939453125e-06, -0.001758575439453125, -1.9073486328125e-06, -0.00030517578125, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0005151033401489258, -1.9073486328125e-06, -5.685647192876786e-05, 0.0, -4.9591064453125e-05, -0.0003814697265625, -5.7220458984375e-06, -0.00019073486328125, 0.0, -1.33514404296875e-05, 0.0, -0.00021028518676757812, -3.814697265625e-06, 0.0, -0.0025434494018554688, -0.0001316070556640625, -9.5367431640625e-06, 0.0, -0.0041027069091796875, -1.9073486328125e-06, -0.00036370751331560314, 0.0, -0.002632787683978677, 0.0, -0.00119781494140625, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -5.7220458984375e-06, -6.29425048828125e-05, -0.00026702880859375, -0.2516005039215088, 0.0, -0.0002765655517578125, -8.0108642578125e-05, -0.008825302124023438, -6.29425048828125e-05, -0.0019294023513793945, -0.0003337860107421875, -0.0012264251708984375, -0.017806053161621094, -5.7220458984375e-06, -0.0009136199951171875, -0.002719402313232422, -7.987022399902344e-06, -0.0006160736083984375, -0.0023403167724609375, -0.002277374267578125, -0.0001583099365234375, -0.000370025634765625, -0.0024871826171875, -2.09808349609375e-05, -0.0009441375732421875, -0.00052642822265625, -1.9073486328125e-05, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.00064849853515625, 0.0, -0.0061713457107543945, 0.0, -0.0005211830139160156, 0.0, -0.002933502197265625, -3.62396240234375e-05, -0.003204345703125, -0.0004367828369140625, -0.0003376007080078125, -1.9073486328125e-06, -0.13594722747802734, 0.0, -0.000202178955078125, -3.814697265625e-06, -2.09808349609375e-05, -0.0018978118896484375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0001201629638671875, 0.0, -0.0006084442138671875, -1.9073486328125e-06, -1.7523745555081405e-05, 0.0, -0.00087738037109375, -0.029656410217285156, -3.4332275390625e-05, -0.0010967254638671875, -1.1444091796875e-05, -0.012496955692768097, 0.0]}, {"choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", 237, 44, 134, "self", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneExplosion", "hole2": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(self), self)\n", "score": -9.100677839709505, "score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -0.0017070770263671875, -1.9073486328125e-06, -0.000339508056640625, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.9001584304496646e-05, 0.0, -5.340576171875e-05, -0.0003662109375, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020647048950195312, -3.814697265625e-06, 0.0, -6.781184196472168, -3.814697265625e-06, -5.53131103515625e-05, -0.0003681182861328125, -5.14984130859375e-05, -1.9073486328125e-06, -0.005513191223144531, -1.1444091796875e-05, -0.5627477169036865, 0.0, -0.0003604888916015625, -0.2251605987548828, -1.71661376953125e-05, -1.4299578666687012, 0.0, -0.0042514801025390625, 0.0, -0.0717782974243164, 0.0]}]}
{"index": 4, "beams": [{"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -0.030753068811783635, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009147286415100098, 0.0, -0.000522613525390625, -0.000732421875, -0.0020809173583984375, 0.0, -0.0006767511367797852, 0.0, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0007006946252658963, -5.7220458984375e-06, -0.000316619873046875, -2.86102294921875e-05, -0.0021980516612529755, -5.7220458984375e-06, -0.0015201568603515625, -0.000732421875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00063323974609375, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -5.574844762518161, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -5.5487260818481445, 0.0, -0.003391742706298828, 0.0, -4.1961669921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, -5.7220458984375e-06, -4.887576324108522e-06, -0.0008869171142578125, -1.71661376953125e-05, -5.53131103515625e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.181529998779297e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.649158654501662e-06, -3.814697265625e-06, -0.00104522705078125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009211182594299316, 0.0, -0.0005245208740234375, -0.0007495880126953125, -0.0021209716796875, 0.0, -0.0006710290908813477, 0.0, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0007083236705511808, -5.7220458984375e-06, -0.000316619873046875, -2.86102294921875e-05, -0.002192799001932144, -5.7220458984375e-06, -0.001529693603515625, -0.0007381439208984375, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00063323974609375, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n", "score": -6.13083127147943, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -6.1062493324279785, 0.0, -0.0036344528198242188, -0.00037384033203125, -2.09808349609375e-05, 0.0, -0.0004456043243408203, 0.0, -5.7220458984375e-06, -0.0002460479736328125, 0.0, -0.0010197097435593605, -5.7220458984375e-06, -0.000255584716796875, -2.6702880859375e-05, -0.002701200544834137, -1.9073486328125e-06, -0.0023250579833984375, -0.0016803741455078125, -6.866455078125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00061798095703125, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "3", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 3):\n            player.draw()\n", "score": -6.176900368369708, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009147286415100098, 0.0, -0.000522613525390625, -0.000732421875, -0.0020809173583984375, 0.0, -0.0006767511367797852, 0.0, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0007006946252658963, -5.7220458984375e-06, -0.000316619873046875, -2.86102294921875e-05, -6.148133277893066, -1.3709068298339844e-05, -0.0015354156494140625, -0.0007724761962890625, -2.47955322265625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.000759124755859375, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -7.285506349123217, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -7.256100654602051, 0.0, -0.006469011306762695, 0.0, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-05, -4.76837158203125e-05, -3.814697265625e-06, -5.364412118069595e-06, -0.001255035400390625, -1.71661376953125e-05, -3.814697265625e-05, -3.4332275390625e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009822845458984375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009145379066467285, 0.0, -0.000522613525390625, -0.0007343292236328125, -0.0020885467529296875, 0.0, -0.0006805658340454102, 0.0, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0007012905552983284, -5.7220458984375e-06, -0.000316619873046875, -2.86102294921875e-05, -0.002196192741394043, -5.7220458984375e-06, -0.0015087127685546875, -0.0007343292236328125, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00063323974609375, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -7.388396446196424, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009147286415100098, 0.0, -0.000522613525390625, -0.000732421875, -6.190895080566406, -2.6702880859375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.07034623622894287, 0.0, -0.0028095245361328125, 0.0, -0.0024471282958984375, -2.86102294921875e-05, -2.47955322265625e-05, -0.0004253387451171875, 0.0, -7.05718994140625e-05, 0.0, -0.0005246400833129883, -1.1920928244535389e-07, -0.0020492575131356716, 0.0, -0.10070480406284332, -1.9073486328125e-06, -2.6702880859375e-05, -0.000782012939453125, -1.33514404296875e-05, -0.001369476318359375, 0.0, -0.06229507923126221, 0.0, -0.03747880458831787, -1.9073486328125e-06, -3.814697265625e-06, -0.858677864074707, -1.9073486328125e-05, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.008775830268859863, -9.536738616588991e-07, -0.024191617965698242, -1.1920928244535389e-07, -0.0010967254638671875, 0.0, -0.0018262863159179688, 0.0]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "EPIC"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -7.53057699302358, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -7.500444412231445, 0.0, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.86102294921875e-05, -3.814697265625e-06, -6.556507287314162e-06, -0.0016632080078125, -1.52587890625e-05, -3.4332275390625e-05, -3.24249267578125e-05, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.562999725341797e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.52994936495088e-06, -3.814697265625e-06, -0.00093841552734375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009153008460998535, 0.0, -0.000522613525390625, -0.000762939453125, -0.0020694732666015625, 0.0, -0.0006862878799438477, 0.0, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0007003370556049049, -5.7220458984375e-06, -0.000316619873046875, -2.86102294921875e-05, -0.002193756401538849, -5.7220458984375e-06, -0.001495361328125, -0.0007419586181640625, -3.24249267578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00063323974609375, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.<UNK>()\n", "score": -7.531592898256449, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009147286415100098, 0.0, -0.000522613525390625, -0.000732421875, -0.0020809173583984375, 0.0, -0.0006767511367797852, 0.0, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0007006946252658963, -5.7220458984375e-06, -0.000316619873046875, -2.86102294921875e-05, -0.0021980516612529755, -5.7220458984375e-06, -0.0015201568603515625, -0.000732421875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.501472473144531, -7.152555099310121e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "HUNTER", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -7.592888884314426, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -7.562531471252441, 0.0, -0.007471203804016113, 0.0, -6.4849853515625e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -4.768367489305092e-06, -0.00121307373046875, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.193450927734375e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009918212890625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009151101112365723, 0.0, -0.0005207061767578125, -0.000736236572265625, -0.002079010009765625, 0.0, -0.0006767511367797852, 0.0, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0007010521367192268, -5.7220458984375e-06, -0.000316619873046875, -2.86102294921875e-05, -0.0021980516612529755, -5.7220458984375e-06, -0.0015201568603515625, -0.0007343292236328125, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000110626220703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00063323974609375, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "increase_health", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "increase_health", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for increase_health in range(0, 2):\n            player.draw()\n", "score": -7.6313542004903425, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -7.60477876663208, 0.0, -0.004261016845703125, -0.0004787445068359375, -2.86102294921875e-05, 0.0, -0.0011637210845947266, 0.0, -5.7220458984375e-06, -0.0003070831298828125, 0.0, -0.0015828420873731375, -5.7220458984375e-06, -0.0002593994140625, -2.86102294921875e-05, -0.0026972368359565735, -1.9073486328125e-06, -0.00250244140625, -0.00139617919921875, -6.67572021484375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0001506805419921875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00063323974609375, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "new_card", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "new_card", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for new_card in range(0, 2):\n            player.draw()\n", "score": -7.761883988580259, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -7.724201679229736, 0.0, -0.014413833618164062, -0.0004596710205078125, -0.0007495880126953125, 0.0, -0.0014444589614868164, 0.0, -3.814697265625e-06, -0.0003185272216796875, 0.0, -0.001641221810132265, -3.814697265625e-06, -0.000263214111328125, -3.4332275390625e-05, -0.002432890236377716, -1.9073486328125e-06, -0.0024280548095703125, -0.0016155242919921875, -7.43865966796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0001430511474609375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00064849853515625, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -7.949735952610219, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -6.734939098358154, 0.0, -0.013552665710449219, -0.07695198059082031, -0.016300201416015625, -4.9591064453125e-05, -0.0002574920654296875, -3.814697265625e-06, -0.009038925170898438, -1.9073486328125e-06, -0.00412750244140625, 0.0, -0.0009746551513671875, -1.71661376953125e-05, -3.62396240234375e-05, -0.000171661376953125, 0.0, -4.9591064453125e-05, 0.0, -0.0002899169921875, 0.0, -0.0020759692415595055, 0.0, -0.12202586233615875, -1.9073486328125e-06, -3.0517578125e-05, -0.0008563995361328125, -1.33514404296875e-05, -0.001079559326171875, 0.0, -0.06500458717346191, 0.0, -0.029204726219177246, -1.9073486328125e-06, -3.814697265625e-06, -0.8254966735839844, -1.9073486328125e-05, -1.52587890625e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.008649826049804688, -9.536738616588991e-07, -0.024386286735534668, -1.1920928244535389e-07, -0.0011081695556640625, 0.0, -0.0019989013671875, 0.0]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", 237, 60, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(player.draw()), self)\n", "score": -8.747654382674547, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009147286415100098, 0.0, -0.000522613525390625, -0.000732421875, -6.190895080566406, -2.6702880859375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.07034623622894287, 0.0, -0.0028095245361328125, 0.0, -0.0024471282958984375, -2.86102294921875e-05, -2.47955322265625e-05, -0.0004253387451171875, 0.0, -7.05718994140625e-05, 0.0, -0.0005246400833129883, -1.1920928244535389e-07, -0.0020492575131356716, 0.0, -0.10070480406284332, -1.9073486328125e-06, -2.6702880859375e-05, -0.000782012939453125, -1.33514404296875e-05, -0.001369476318359375, 0.0, -0.06229507923126221, 0.0, -0.03747880458831787, -1.9073486328125e-06, -3.814697265625e-06, -0.6720943450927734, -5.7220458984375e-06, -0.0011196136474609375, -0.00183868408203125, -3.4332275390625e-05, 0.0, -9.357929229736328e-05, 0.0, -0.45309972763061523, 0.0, -0.00019073486328125, -0.04068279266357422, -3.814697265625e-06, -0.5331363677978516, -1.9073486328125e-06, -0.3706766366958618, 0.0, -0.16317462921142578, 0.0, -0.001438140869140625, 0.0, -0.016289710998535156, 0.0]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "calculate_attack", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_attack", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(player.hero.\n                calculate_attack()), self)\n", "score": -9.005437472438963, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009147286415100098, 0.0, -0.000522613525390625, -0.000732421875, -6.190895080566406, -2.6702880859375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.07034623622894287, 0.0, -0.0028095245361328125, 0.0, -0.0024471282958984375, -2.86102294921875e-05, -2.47955322265625e-05, -0.0004253387451171875, 0.0, -7.05718994140625e-05, 0.0, -0.0005246400833129883, -1.1920928244535389e-07, -0.0020492575131356716, 0.0, -0.10070480406284332, -1.9073486328125e-06, -2.6702880859375e-05, -0.000782012939453125, -1.33514404296875e-05, -0.001369476318359375, 0.0, -0.06229507923126221, 0.0, -0.03747880458831787, -1.9073486328125e-06, -3.814697265625e-06, -0.6720943450927734, -5.7220458984375e-06, -0.0011196136474609375, -0.00183868408203125, -3.4332275390625e-05, 0.0, -9.357929229736328e-05, 0.0, -0.45309972763061523, 0.0, -0.00019073486328125, -0.04068279266357422, -3.814697265625e-06, -0.8862714767456055, -3.814697265625e-06, -0.000537872314453125, 0.0, -0.011894822120666504, 0.0, -0.011809383518993855, 0.0, -0.409673810005188, 0.0, -0.016478538513183594, -1.9073486328125e-06, -0.005828857421875, 0.0]}, {"choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 249, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneIntellect", "hole2": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "score": -9.227756380173886, "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -8.492928504943848, -0.7257452011108398, -7.62939453125e-06, -0.0004024505615234375, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.251697449333733e-05, 0.0, -3.814697265625e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -5.960462203802308e-06, -1.9073486328125e-06]}]}
{"index": 5, "beams": [{"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -0.11073110214987025, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021358094818424433, 0.0, -0.0012292861938476562, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00232541561126709, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037508010864257812, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.030335664749145508, -1.9073486328125e-06, -0.00016677379608154297, 0.0, -0.0011386871337890625, -7.62939453125e-06, -1.9073486328125e-05, -0.000823974609375, -0.000240325927734375, -0.0015937089920043945, -3.814697265625e-06, -0.0033111572265625, -9.5367431640625e-06, -0.0004119873046875, -0.000125885009765625, -0.0001163482666015625, -1.9073486328125e-06, -0.0029439926147460938, 0.0, -0.005218505859375, 0.0, -0.0002002716064453125, -0.0013332366943359375, -4.1961669921875e-05, -0.0022630691528320312, -3.814697265625e-06, -0.00067901611328125, -3.62396240234375e-05, -0.000423431396484375, -5.7220458984375e-06, -0.0011926889419555664, -3.814697265625e-06, -0.001171112060546875, -1.9073486328125e-06, -9.5367431640625e-06, -0.0017147064208984375, -0.0001392364501953125, -0.0004668449691962451, 0.0, -0.0038394927978515625, -1.9073486328125e-05, -0.00023365020751953125, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.current_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -3.7080591666183267, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021358094818424433, 0.0, -0.0012292861938476562, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00232541561126709, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037508010864257812, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -3.6247408390045166, 0.0, -0.001035928726196289, 0.0, -0.000858306884765625, -9.5367431640625e-06, -1.71661376953125e-05, -0.0012912750244140625, -0.000431060791015625, -0.0016385316848754883, -1.9073486328125e-06, -0.002532958984375, -1.1444091796875e-05, -0.0004024505615234375, -9.72747802734375e-05, -0.00012969970703125, -1.9073486328125e-06, -0.0046062469482421875, 0.0, -0.005213737487792969, 0.0, -0.00018310546875, -0.0020847320556640625, -4.57763671875e-05, -0.00225067138671875, -3.814697265625e-06, -0.0007228851318359375, -3.814697265625e-05, -0.0004291534423828125, -5.7220458984375e-06, -0.0011296272277832031, -3.814697265625e-06, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -0.0016937255859375, -0.0001373291015625, -0.000471253355499357, 0.0, -0.00390625, -1.9073486328125e-05, -0.0002307891845703125, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 30, 193, "range", "<EOS>", "3", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"hole1": 3, "hole0": "range", "_type": "Template34"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(3):\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -5.553925851340168, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -4.504834175109863, -0.011838912963867188, -0.012969017028808594, -1.71661376953125e-05, -0.4055580794811249, 0.0, -0.27274322509765625, -0.0009708404541015625, -3.62396240234375e-05, -0.13011550903320312, -8.96453857421875e-05, -6.4849853515625e-05, 0.0, -0.15265178680419922, 0.0, -2.09808349609375e-05, 0.0, -0.04187583923339844, 0.0, -3.814697265625e-06, -0.0041332244873046875, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, 0.0, -0.00067138671875, 0.0, -0.000770699349232018, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "extend", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "extend", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.extend(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -6.125156370110048, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021358094818424433, 0.0, -0.0012292861938476562, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00232541561126709, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -5.774779319763184, 0.0, -9.5367431640625e-06, 0.0, 0.0, -0.0082855224609375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -3.814697265625e-05, 0.0, -0.1387805938720703, -1.9073486328125e-06, -0.12047576904296875, 0.0, -0.0006580352783203125, -9.5367431640625e-06, -3.814697265625e-06, -0.000591278076171875, -0.0001201629638671875, -0.004303932189941406, -1.9073486328125e-06, -0.0016241073608398438, -1.1444091796875e-05, -0.000263214111328125, -9.918212890625e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.00907135009765625, 0.0, -0.00560760498046875, 0.0, -0.00018310546875, -0.0021800994873046875, -4.76837158203125e-05, -0.0021944046020507812, -3.814697265625e-06, -0.0006198883056640625, -3.4332275390625e-05, -0.00042724609375, -5.7220458984375e-06, -0.0011010169982910156, -3.814697265625e-06, -0.0011997222900390625, -1.9073486328125e-06, -9.5367431640625e-06, -0.001678466796875, -0.0001373291015625, -0.0004862663336098194, 0.0, -0.0039882659912109375, -1.9073486328125e-05, -0.00023174285888671875, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -6.3402508270973925, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -6.23502254486084, 0.0, -0.001247406005859375, 0.0, -0.00025177001953125, 0.0, -7.62939453125e-06, 0.0, -0.000244140625, -0.0006351470947265625, -1.9073486328125e-06, -3.218649908376392e-06, -0.0002593994140625, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2755393072438892e-05, 0.0, -9.72747802734375e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0026273727416992188, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0030117034912109375, 0.0, -0.012278556823730469, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005629062652587891, 0.0, -1.33514404296875e-05, -0.0008754730224609375, -1.9073486328125e-06, -0.001006007194519043, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.000148773193359375, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021334268967621028, 0.0, -0.0012331008911132812, -0.0006198883056640625, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.002329230308532715, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.00019073486328125, -1.9073486328125e-06, -0.0005092620849609375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.00042724609375, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037527084350585938, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.0303347110748291, -1.9073486328125e-06, -0.00016677379608154297, 0.0, -0.0011386871337890625, -7.62939453125e-06, -1.9073486328125e-05, -0.000823974609375, -0.000240325927734375, -0.0015937089920043945, -3.814697265625e-06, -0.0033102035522460938, -9.5367431640625e-06, -0.0004119873046875, -0.000125885009765625, -0.0001163482666015625, -1.9073486328125e-06, -0.0029449462890625, 0.0, -0.005218505859375, 0.0, -0.0002002716064453125, -0.0013332366943359375, -4.1961669921875e-05, -0.0022630691528320312, -3.814697265625e-06, -0.00067901611328125, -3.62396240234375e-05, -0.000423431396484375, -5.7220458984375e-06, -0.0011926889419555664, -3.814697265625e-06, -0.001171112060546875, -1.9073486328125e-06, -9.5367431640625e-06, -0.0017147064208984375, -0.0001392364501953125, -0.00046696412027813494, 0.0, -0.0038394927978515625, -1.9073486328125e-05, -0.00023365020751953125, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -6.501061893593928, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -6.395646095275879, 0.0, -0.00151824951171875, 0.0, -0.0001850128173828125, 0.0, -5.7220458984375e-06, 0.0, -0.0002193450927734375, -0.00057220458984375, -1.9073486328125e-06, -3.3378591979271732e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2993811651540454e-05, 0.0, -9.5367431640625e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.002712249755859375, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0030145645141601562, 0.0, -0.012331008911132812, -9.5367431640625e-06, -0.0004138946533203125, 0.0, -0.0005590915679931641, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.0028781890869140625, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021179277973715216, 0.0, -0.00122833251953125, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0023244619369506836, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037508010864257812, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.030335664749145508, -1.9073486328125e-06, -0.00016677379608154297, 0.0, -0.001140594482421875, -7.62939453125e-06, -1.9073486328125e-05, -0.000823974609375, -0.000240325927734375, -0.0015937089920043945, -3.814697265625e-06, -0.0033111572265625, -9.5367431640625e-06, -0.0004119873046875, -0.000125885009765625, -0.0001163482666015625, -1.9073486328125e-06, -0.0029439926147460938, 0.0, -0.005218505859375, 0.0, -0.0002002716064453125, -0.0013332366943359375, -4.1961669921875e-05, -0.0022630691528320312, -3.814697265625e-06, -0.00067901611328125, -3.62396240234375e-05, -0.000423431396484375, -5.7220458984375e-06, -0.0011926889419555664, -3.814697265625e-06, -0.001171112060546875, -1.9073486328125e-06, -9.5367431640625e-06, -0.0017147064208984375, -0.0001392364501953125, -0.0004668449691962451, 0.0, -0.0038394927978515625, -1.9073486328125e-05, -0.00023365020751953125, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 60, 195, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, player.effective_spell_damage())\n", "score": -6.509789444129851, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021358094818424433, 0.0, -0.0012292861938476562, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00232541561126709, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037508010864257812, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.030335664749145508, -1.9073486328125e-06, -0.00016677379608154297, 0.0, -0.0011386871337890625, -7.62939453125e-06, -1.9073486328125e-05, -0.000823974609375, -0.000240325927734375, -0.0015937089920043945, -3.814697265625e-06, -0.0033111572265625, -9.5367431640625e-06, -0.0004119873046875, -0.000125885009765625, -0.0001163482666015625, -1.9073486328125e-06, -0.0029439926147460938, 0.0, -0.005218505859375, 0.0, -0.0002002716064453125, -0.0013332366943359375, -4.1961669921875e-05, -0.0022630691528320312, -3.814697265625e-06, -0.00067901611328125, -3.62396240234375e-05, -0.000423431396484375, -5.7220458984375e-06, -0.0011926889419555664, -3.814697265625e-06, -0.001171112060546875, -1.9073486328125e-06, -9.5367431640625e-06, -0.0017147064208984375, -0.0001392364501953125, -0.0004668449691962451, 0.0, -5.654392242431641, -4.57763671875e-05, -0.001483917236328125, -1.9073486328125e-06, -0.5392732620239258, -5.7220458984375e-06, -0.20795345306396484, 0.0]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n", "score": -6.562278203435412, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021358094818424433, 0.0, -0.0012292861938476562, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00232541561126709, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037508010864257812, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.030335664749145508, -1.9073486328125e-06, -0.00016677379608154297, 0.0, -0.0011386871337890625, -7.62939453125e-06, -1.9073486328125e-05, -0.000823974609375, -0.000240325927734375, -0.0015937089920043945, -3.814697265625e-06, -0.0033111572265625, -9.5367431640625e-06, -0.0004119873046875, -0.000125885009765625, -0.0001163482666015625, -1.9073486328125e-06, -0.0029439926147460938, 0.0, -0.005218505859375, 0.0, -0.0002002716064453125, -0.0013332366943359375, -4.1961669921875e-05, -0.0022630691528320312, -3.814697265625e-06, -0.00067901611328125, -3.62396240234375e-05, -0.000423431396484375, -5.7220458984375e-06, -0.0011926889419555664, -3.814697265625e-06, -0.001171112060546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.453433990478516, -0.00040435791015625, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.003217935562133789, 0.0, -0.0007836587028577924, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -8.0108642578125e-05, 0.0]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(minions)\n            target.damage(1, self)\n", "score": -6.826647247131618, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021358094818424433, 0.0, -0.0012292861938476562, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00232541561126709, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037508010864257812, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.030335664749145508, -1.9073486328125e-06, -0.00016677379608154297, 0.0, -0.0011386871337890625, -7.62939453125e-06, -1.9073486328125e-05, -0.000823974609375, -0.000240325927734375, -0.0015937089920043945, -3.814697265625e-06, -0.0033111572265625, -9.5367431640625e-06, -0.0004119873046875, -0.000125885009765625, -0.0001163482666015625, -1.9073486328125e-06, -0.0029439926147460938, 0.0, -0.005218505859375, 0.0, -0.0002002716064453125, -0.0013332366943359375, -4.1961669921875e-05, -6.524704456329346, -1.9073486328125e-06, -0.015095710754394531, -2.6702880859375e-05, -0.0012149810791015625, -7.62939453125e-06, -0.17530333995819092, -1.9073486328125e-06, -0.00357818603515625, 0.0, -1.9073486328125e-05, -0.00455474853515625, -0.0001659393310546875, -0.000495204993057996, 0.0, -0.0026531219482421875, -1.9073486328125e-05, -0.00027942657470703125, -3.814697265625e-06]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n", "score": -6.95651072063832, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -6.647853851318359, -0.0003871917724609375, -0.0005340576171875, -6.103515625e-05, -0.000530242919921875, -1.1444091796875e-05, -0.000354766845703125, -1.9073486328125e-06, -0.0005273818969726562, 0.0, -0.02261829376220703, 0.0, -5.7220458984375e-06, -0.16564369201660156, -0.0005359649658203125, -0.08349555730819702, 0.0, -0.025066375732421875, -3.0517578125e-05, -0.000164031982421875, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.hero.heal(player.effective_heal_power(3), self)\n", "score": -7.023263702673134, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -6.5126752853393555, -0.0011119842529296875, -0.09959995001554489, 0.0, -0.002101898193359375, -0.00148773193359375, -0.0003452301025390625, -0.05087471008300781, -7.62939453125e-06, -0.000125885009765625, 0.0, -0.000530242919921875, 0.0, -0.032932281494140625, 0.0, -0.25664234161376953, 0.0, -0.0002460479736328125, -0.0002651214599609375, -0.00016021728515625, -0.0002803802490234375, -3.814697265625e-06, -3.814697265625e-05, 0.0, -0.033855557441711426, 0.0, -0.00021614570869132876, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -7.2479248046875e-05, 0.0]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            minion = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -7.0319132539172955, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021358094818424433, 0.0, -0.0012292861938476562, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00232541561126709, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037508010864257812, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.030335664749145508, -1.9073486328125e-06, -0.00016677379608154297, 0.0, -0.0011386871337890625, -7.62939453125e-06, -1.9073486328125e-05, -0.000823974609375, -0.000240325927734375, -6.735865592956543, -1.9073486328125e-06, -0.18059349060058594, -4.38690185546875e-05, -0.000438690185546875, -0.000152587890625, -8.0108642578125e-05, -1.9073486328125e-06, -0.011235237121582031, 0.0, -0.005404472351074219, 0.0, -0.0007839202880859375, -0.0018215179443359375, -3.814697265625e-05, -0.0027761459350585938, -3.814697265625e-06, -0.000606536865234375, -3.4332275390625e-05, -0.0003719329833984375, -5.7220458984375e-06, -0.0010581016540527344, -3.814697265625e-06, -0.0012607574462890625, -1.9073486328125e-06, -9.5367431640625e-06, -0.0017490386962890625, -0.0001220703125, -0.0004780468007083982, 0.0, -0.0035076141357421875, -1.9073486328125e-05, -0.00022792816162109375, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n", "score": -7.12796247907157, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -7.046999454498291, 0.0, -0.0002307891845703125, -0.0008487701416015625, -0.0005397796630859375, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.001453399658203125, 0.0, -0.0010318756103515625, 0.0, -0.00012969970703125, -1.1444091796875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0001964569091796875, 0.0, -2.288818359375e-05, 0.0, -0.0006961822509765625, 0.0, -8.59498541103676e-05, 0.0, -3.24249267578125e-05, -0.028957366943359375, -5.7220458984375e-06, -0.003185272216796875, -1.9073486328125e-06, -4.220008850097656e-05, 0.0, -0.0020771026611328125, 0.0, -1.9073486328125e-06, -0.0282440185546875, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-05, 0.0, -0.0004044771194458008, 0.0, -0.0011326185194775462, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 30, 193, "range", "<EOS>", "3", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"hole1": 3, "hole0": "range", "_type": "Template34"}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(3):\n            player.hero.heal(player.effective_heal_power(3), self)\n", "score": -7.421367561890506, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -4.504834175109863, -0.011838912963867188, -0.012969017028808594, -1.71661376953125e-05, -0.4055580794811249, 0.0, -0.27274322509765625, -0.0009708404541015625, -3.62396240234375e-05, -0.13011550903320312, -8.96453857421875e-05, -6.4849853515625e-05, 0.0, -1.974797248840332, 0.0, -0.0030059814453125, 0.0, -0.04940223693847656, 0.0, -7.62939453125e-06, -0.000148773193359375, -7.2479248046875e-05, -0.0001316070556640625, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -0.039752960205078125, 0.0, -0.00020665733609348536, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -9.1552734375e-05, 0.0]}, {"choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 30, 193, "range", "<EOS>", "<UNK>", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneMissiles", "hole2": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"hole1": 0, "hole0": "range", "_type": "Template34"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0):\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -7.583682314298343, "score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -4.504834175109863, -0.011838912963867188, -0.012969017028808594, -1.71661376953125e-05, -1.5374866724014282, -3.814697265625e-06, -1.1061334609985352, -0.0009918212890625, -9.1552734375e-05, -0.2274646759033203, -0.0001964569091796875, -0.00012969970703125, 0.0, -0.039366722106933594, 0.0, -1.52587890625e-05, 0.0, -0.12205791473388672, 0.0, -3.814697265625e-06, -0.0042781829833984375, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, 0.0, -0.0004388093948364258, 0.0, -0.0007980046211741865, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0]}]}
{"index": 6, "beams": [{"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.05929862767759886, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -0.042301177978515625, 0.0, -6.866455078125e-05, -0.0002231597900390625, -0.00031280517578125, -2.47955322265625e-05, -2.0265579223632812e-06, -6.4849853515625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -8.7738037109375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0007534027099609375, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -7.2479248046875e-05, -2.6702880859375e-05, -2.288818359375e-05, -1.1920928244535389e-07, -0.0003204345703125, -9.918212890625e-05, -7.62939453125e-06, -0.000232696533203125, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004578828811645508, -1.33514404296875e-05, -3.5285818739794195e-05, -1.9073486328125e-06, -8.0108642578125e-05, -0.0028896331787109375, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00086212158203125, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012743451225105673, -2.3841855067985307e-07, -0.0003962493792641908, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -3.6060419013835414, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -3.589056968688965, 0.0, -0.0004711151123046875, -0.0001049041748046875, -0.000156402587890625, -2.6702880859375e-05, -2.0265579223632812e-06, -9.5367431640625e-05, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.0001068115234375, 0.0, -2.47955322265625e-05, 0.0, -0.0007152557373046875, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.0003032684326171875, -0.0001068115234375, -7.62939453125e-06, -0.0002460479736328125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004464387893676758, -1.33514404296875e-05, -3.421294968575239e-05, -1.9073486328125e-06, -8.0108642578125e-05, -0.0027942657470703125, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008592605590820312, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001261231955140829, -2.3841855067985307e-07, -0.0003966069780290127, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -4.362925761057959, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -4.345952987670898, 0.0, -0.0004291534423828125, -0.0001125335693359375, -0.000133514404296875, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -8.58306884765625e-05, 0.0, -2.47955322265625e-05, 0.0, -0.000701904296875, 0.0, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -9.34600830078125e-05, -3.4332275390625e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -0.000301361083984375, -0.0001049041748046875, -7.62939453125e-06, -0.0002498626708984375, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0004674196243286133, -1.33514404296875e-05, -3.552423368091695e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0028533935546875, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008563995361328125, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012731531751342118, -2.3841855067985307e-07, -0.0003943420306313783, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.938605897738562, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -5.86239767074585, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001392364501953125, 0.0, -0.06411170959472656, 0.0, -8.0108642578125e-05, -0.0001697540283203125, -0.000244140625, -2.288818359375e-05, -2.1457672119140625e-06, -6.67572021484375e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -8.7738037109375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0007305145263671875, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.1920928244535389e-07, -0.0003185272216796875, -0.0001010894775390625, -7.62939453125e-06, -0.00023651123046875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.1563301086425781e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0004636049270629883, -1.33514404296875e-05, -3.552423368091695e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0028896331787109375, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008611679077148438, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012731531751342118, -2.3841855067985307e-07, -0.0003943420306313783, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Arcane", "Shot", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Arcane Shot", "hole2": "HUNTER", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health ==\n            target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.718802982870791, "score_history": [-6.160497665405273, -0.0012969970703125, -2.47955322265625e-05, -0.000244140625, -1.9073486328125e-05, -2.9802276912960224e-06, -4.649161837733118e-06, -5.066266385256313e-05, -5.14984130859375e-05, -0.00023651123046875, -2.6702880859375e-05, -0.00032374891452491283, -1.1682510375976562e-05, 0.0, -8.0108642578125e-05, -5.91278076171875e-05, -8.392333984375e-05, -2.407998726994265e-05, -0.00047397147864103317, -0.0011329191038385034, -3.814697265625e-06, -0.00014281191397458315, -4.768370445162873e-07, -0.062394142150878906, 0.0, -0.0047550201416015625, 0.0, -0.0005935430526733398, -5.9604644775390625e-06, -0.0005130767822265625, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00165557861328125, 0.0, -0.0001850128173828125, 0.0, -0.00411224365234375, 0.0, -0.07436716556549072, 0.0, -0.0021886825561523438, -0.00011444091796875, -0.000156402587890625, -7.62939453125e-05, -0.0007429122924804688, -1.9073486328125e-06, -0.005196571350097656, -6.29425048828125e-05, -0.00060272216796875, -2.288818359375e-05, -0.01578235626220703, -0.0002384185791015625, -0.012788772583007812, -2.09808349609375e-05, -0.0003795623779296875, 0.0, -0.01350912731140852, 0.0, -0.01756107807159424, 0.0, -1.33514404296875e-05, -0.08269977569580078, -9.5367431640625e-06, -0.006587982177734375, -4.57763671875e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.008817002177238464, -4.768370445162873e-07, -0.014550447463989258, -1.6689286894688848e-06, -0.10437393188476562, -2.86102294921875e-05, -1.33514404296875e-05, 0.0, -0.008177634328603745, -1.1920928244535389e-07, -0.08390343189239502, 0.0, -0.0003719329833984375, -5.340576171875e-05, -0.0034886598587036133, 0.0, -0.00023651123046875, -0.0047473907470703125, -0.0044708251953125, -0.000110626220703125, -0.000469207763671875, 0.0, -7.82012939453125e-05, -0.0007677078247070312, 0.0, -6.29425048828125e-05, -4.5299530029296875e-06, -1.1920928244535389e-07, -0.0023822784423828125, -8.7738037109375e-05, 0.0, -0.000469207763671875, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.744529724121094e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000278472900390625, -3.814697265625e-06, -5.960462658549659e-05, -3.814697265625e-06, -4.00543212890625e-05, -0.0065822601318359375, -6.29425048828125e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0006618499755859375, 0.0, -0.0001583099365234375, -1.1920928244535389e-07, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012481179146561772, -2.3841855067985307e-07, -0.00040006404742598534, -5.960462772236497e-07, -0.0002460479736328125, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self..damage(player.effective_spell_damage(2), self)\n", "score": -7.35604345149676, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -0.042301177978515625, 0.0, -6.866455078125e-05, -0.0002231597900390625, -0.00031280517578125, -2.47955322265625e-05, -2.0265579223632812e-06, -6.4849853515625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -8.7738037109375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0007534027099609375, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -7.2479248046875e-05, -2.6702880859375e-05, -2.288818359375e-05, -1.1920928244535389e-07, -0.0003204345703125, -9.918212890625e-05, -7.62939453125e-06, -0.000232696533203125, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004578828811645508, -1.33514404296875e-05, -3.5285818739794195e-05, -1.9073486328125e-06, -8.0108642578125e-05, -0.0028896331787109375, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -7.295103073120117, -0.002521514892578125, -1.9073486328125e-06, -1.9073486328125e-06, -0.000125885009765625, -1.71661376953125e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001471040304750204, -2.3841855067985307e-07, -0.0005245189531706274, -1.1920922133867862e-06, -0.0001697540283203125, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "Player", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "Player", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.Player,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.608990185539987, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -7.585920810699463, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -0.0003681182861328125, 0.0, -0.010746002197265625, 0.0, -6.103515625e-05, -0.0002574920654296875, -0.0002288818359375, -2.110004425048828e-05, -2.384185791015625e-06, -6.4849853515625e-05, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -9.72747802734375e-05, 0.0, -3.62396240234375e-05, 0.0, -0.000736236572265625, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -5.91278076171875e-05, -2.6702880859375e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.00032806396484375, -9.918212890625e-05, -7.62939453125e-06, -0.000225067138671875, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004464387893676758, -1.33514404296875e-05, -3.46897795679979e-05, -1.9073486328125e-06, -8.0108642578125e-05, -0.00287628173828125, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008630752563476562, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001257655821973458, -2.3841855067985307e-07, -0.0003963685594499111, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.668098204182286, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -0.042301177978515625, 0.0, -6.866455078125e-05, -0.0002231597900390625, -0.00031280517578125, -2.47955322265625e-05, -2.0265579223632812e-06, -6.4849853515625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -8.7738037109375e-05, 0.0, -3.0517578125e-05, 0.0, -7.609246253967285, 0.0, -2.09808349609375e-05, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -2.288818359375e-05, 0.0, -0.0008487701416015625, -8.96453857421875e-05, -9.5367431640625e-06, -0.0002803802490234375, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004407167434692383, -1.33514404296875e-05, -3.4451368264853954e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.002712249755859375, -6.103515625e-05, -5.7220458984375e-06, -0.0001201629638671875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008440017700195312, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.29425048828125e-05, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012099714513169602, -2.3841855067985307e-07, -0.00040220964001491666, -7.152555099310121e-07, -0.000270843505859375, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "HUNTER", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.HUNTER, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.6908725431082345, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -7.673892021179199, 0.0, -0.000171661376953125, -0.00032806396484375, -0.00031280517578125, -4.017353057861328e-05, -2.0265579223632812e-06, -9.1552734375e-05, -3.0517578125e-05, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -9.34600830078125e-05, 0.0, -2.86102294921875e-05, 0.0, -0.0007114410400390625, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0002918243408203125, -0.00011444091796875, -7.62939453125e-06, -0.0002574920654296875, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004426240921020508, -1.33514404296875e-05, -3.373611980350688e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.002704620361328125, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00086212158203125, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012457347474992275, -2.3841855067985307e-07, -0.0003987527161370963, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.812702291320129, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -7.758849620819092, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.04178619384765625, 0.0, -0.0001049041748046875, -0.0001926422119140625, -0.0002498626708984375, -2.47955322265625e-05, -2.0265579223632812e-06, -7.62939453125e-05, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -2.288818359375e-05, 0.0, -8.7738037109375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0007114410400390625, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -6.103515625e-05, -2.6702880859375e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.0003299713134765625, -9.918212890625e-05, -5.7220458984375e-06, -0.0002231597900390625, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004521608352661133, -1.33514404296875e-05, -3.4928198147099465e-05, -1.9073486328125e-06, -8.0108642578125e-05, -0.002899169921875, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.000865936279296875, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0001257655821973458, -2.3841855067985307e-07, -0.0003962493792641908, -7.152555099310121e-07, -0.000270843505859375, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "self", "<EOS>", "player", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "self", "hole3": "player"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(self, player)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.866277091484044, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -0.042301177978515625, 0.0, -6.866455078125e-05, -0.0002231597900390625, -0.00031280517578125, -2.47955322265625e-05, -2.0265579223632812e-06, -6.4849853515625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -8.7738037109375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0007534027099609375, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -7.2479248046875e-05, -2.6702880859375e-05, -2.288818359375e-05, -1.1920928244535389e-07, -0.0003204345703125, -9.918212890625e-05, -7.62939453125e-06, -0.000232696533203125, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.769374847412109, 0.0, -0.03964519500732422, -9.5367431640625e-06, -4.00543212890625e-05, -0.000759124755859375, -5.91278076171875e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.0013151168823242188, 0.0, -0.0003337860107421875, -1.1920928244535389e-07, -1.9073486328125e-06, -4.9591064453125e-05, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, 0.0, -0.00011455986532382667, -2.3841855067985307e-07, -0.00041615692316554487, -7.152555099310121e-07, -0.00028228759765625, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.949762575938102, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -7.870060443878174, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0001087188720703125, 0.0, -0.06766700744628906, 0.0, -6.866455078125e-05, -0.0001964569091796875, -0.000217437744140625, -1.919269561767578e-05, -2.622604142743512e-06, -6.29425048828125e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -9.34600830078125e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00072479248046875, 0.0, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.1920928244535389e-07, -0.000316619873046875, -0.0001010894775390625, -7.62939453125e-06, -0.00023651123046875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.1563301086425781e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0004636049270629883, -1.33514404296875e-05, -3.552423368091695e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.00286865234375, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008602142333984375, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012731531751342118, -2.3841855067985307e-07, -0.0003943420306313783, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -8.06254219553636, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -0.042301177978515625, 0.0, -6.866455078125e-05, -0.0002231597900390625, -0.00031280517578125, -2.47955322265625e-05, -2.0265579223632812e-06, -6.4849853515625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -8.7738037109375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0007534027099609375, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -7.2479248046875e-05, -2.6702880859375e-05, -2.288818359375e-05, -1.1920928244535389e-07, -0.0003204345703125, -9.918212890625e-05, -7.62939453125e-06, -0.000232696533203125, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004578828811645508, -1.33514404296875e-05, -3.5285818739794195e-05, -1.9073486328125e-06, -8.0108642578125e-05, -0.0028896331787109375, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00086212158203125, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012743451225105673, -2.3841855067985307e-07, -8.003495216369629, -3.576278118089249e-07, -0.0003833770751953125, -5.7220458984375e-06, -4.9591064453125e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -8.279644959273973, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -8.206509590148926, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.06093788146972656, 0.0, -8.96453857421875e-05, -0.000186920166015625, -0.000301361083984375, -2.288818359375e-05, -2.0265579223632812e-06, -6.29425048828125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, 0.0, -3.0517578125e-05, 0.0, -0.000762939453125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -8.0108642578125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.1920928244535389e-07, -0.00031280517578125, -0.0001010894775390625, -7.62939453125e-06, -0.000240325927734375, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.1563301086425781e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0004616975784301758, -1.33514404296875e-05, -3.5405028029344976e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.002872467041015625, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008611679077148438, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012743451225105673, -2.3841855067985307e-07, -0.0003962493792641908, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ArcaneShot", "hole2": [{"hole1": 1, "hole0": "Arcane Shot", "_type": "Template15", "hole2": "HUNTER", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -8.313332669568062, "score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.8087873458862305, -0.0013580322265625, -2.3841855067985307e-07, -0.00011301033373456448, -1.7881377516459906e-06, -3.814697265625e-06, -0.0007597208023071289, -3.576278118089249e-07, -0.4883091449737549, 0.0, -0.0012704133987426758, 0.0, -0.0021271705627441406, 0.0, -7.271766662597656e-05, -7.62939453125e-06, -0.0001964569091796875, -1.33514404296875e-05, -5.841255187988281e-06, -3.099440846199286e-06, -5.340576171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.0013580322265625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0003911256790161133, -7.62939453125e-06, -2.6226018235320225e-05, -1.9073486328125e-06, -0.000904083251953125, -0.004093170166015625, -0.0001468658447265625, -3.814697265625e-06, -0.0001163482666015625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00091552734375, 0.0, -0.0001373291015625, -1.1920928244535389e-07, -1.9073486328125e-06, -6.29425048828125e-05, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.000123023652122356, -1.1920928244535389e-07, -0.0004101964586880058, -5.960462772236497e-07, -0.000286102294921875, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06]}]}
{"index": 7, "beams": [{"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -0.07502745098405228, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -0.05206108093261719, 0.0, -0.008657574653625488, -9.5367431640625e-06, -9.29814123082906e-05, 0.0, -0.000263214111328125, -0.0003509521484375, -0.001461029052734375, -1.1920928244535389e-07, -0.0003251500893384218, -0.00020587444305419922, -0.0002138386043952778, -7.80796617618762e-05, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "HUNTER", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "HUNTER"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -3.5597408810821065, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -3.538379669189453, 0.0, -0.005725979804992676, -7.62939453125e-06, -4.4464239181252196e-05, -1.9073486328125e-06, -0.0001430511474609375, -0.000797271728515625, -0.0024518966674804688, -1.1920928244535389e-07, -0.0003477922291494906, -0.00023639202117919922, -0.00019667598826345056, -0.00010001219197874889, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "PALADIN"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -4.104155564465472, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -4.082964897155762, 0.0, -0.0060253143310546875, -5.7220458984375e-06, -4.982874452252872e-05, 0.0, -8.96453857421875e-05, -0.000751495361328125, -0.0022897720336914062, -2.3841855067985307e-07, -0.0002269487304147333, -0.00019824504852294922, -0.0001486429391661659, -9.691355808172375e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Arcanite", " ", "Reaper", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Num", "n": 5}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -5.380070869497523, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -5.3527727127075195, -0.00069427490234375, -0.0001621246337890625, -3.62396240234375e-05, -2.443769153614994e-05, -3.933906555175781e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.0029773712158203125, -9.34600830078125e-05, -5.91278076171875e-05, -3.7431014789035544e-05, -0.0001418582978658378, -6.4373016357421875e-06, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0012637366307899356, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -0.006088972091674805, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001277923583984375, 0.0, -0.000522613525390625, -2.09808349609375e-05, -5.745887756347656e-05, -1.9073486328125e-06, -0.0019207000732421875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.007843017578125, -0.0002536773681640625, -0.0009975433349609375, -1.1920928244535389e-07, -0.0006765222642570734, -0.0010145902633666992, -6.794698856538162e-05, -0.00010370638483436778, 0.0]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Weapon(5, 2)\n", "score": -5.573699354176156, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -0.05206108093261719, 0.0, -5.507411956787109, 0.0, -2.6226038244203664e-05, 0.0, -0.000156402587890625, -0.0002536773681640625, -0.0012235641479492188, -1.1920928244535389e-07, -0.0005099665140733123, -0.000152587890625, -0.0005906267906539142, -4.887569048150908e-06, -4.768370445162873e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "use"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player):\n        return Weapon(5, 2)\n", "score": -5.981775787392806, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -0.05206108093261719, 0.0, -5.915525436401367, 0.0, -0.00010120394290424883, 0.0, -0.00020599365234375, -0.0004787445068359375, -0.0011157989501953125, -1.1920928244535389e-07, -0.0004273931554052979, -0.000179290771484375, -0.000350175570929423, -2.2411168174585328e-05, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "ROGUE"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -6.178732754094526, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -6.157514572143555, 0.0, -0.006424069404602051, -7.62939453125e-06, -5.5670199799351394e-05, 0.0, -0.0002155303955078125, -0.0004367828369140625, -0.0019826889038085938, -2.3841855067985307e-07, -0.0002848696312867105, -0.00019824504852294922, -0.00018773700867313892, -0.00011681999603752047, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -6.383503601574702, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -6.350650787353516, 0.0, -0.016691207885742188, -1.9073486328125e-06, -1.7523643691674806e-05, 0.0, -0.00012969970703125, -0.0006122589111328125, -0.00348663330078125, -2.3841855067985307e-07, -0.00015698630886618048, -0.0002707242965698242, -8.237022848334163e-05, -9.536345896776766e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "<UNK>", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Reaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Reaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -6.767231145938567, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -6.693443775177002, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -0.05206108093261719, 0.0, -0.008657574653625488, -9.5367431640625e-06, -9.29814123082906e-05, 0.0, -0.000263214111328125, -0.0003509521484375, -0.001461029052734375, -1.1920928244535389e-07, -0.0003251500893384218, -0.00020587444305419922, -0.0002138386043952778, -7.80796617618762e-05, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 87, 152, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "target_func"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=MINION_TYPE.BEAST)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -7.14812892601465, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -5.5535430908203125, -5.91278076171875e-05, -8.344646857949556e-07, -2.121925172104966e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.010623812675476074, 0.0, -0.5659389495849609, 0.0, -0.5072298049926758, -1.9073486328125e-06, -4.57763671875e-05, -0.0001392364501953125, -0.014721870422363281, 0.0, -0.2248516082763672, -1.33514404296875e-05, -0.047524452209472656, 0.0, -0.21798229217529297, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.000461578369140625, -0.0009822845458984375, -0.0005245208740234375, -2.2649765014648438e-06, -0.0003906917118001729, -0.0003393888473510742, -0.0007531190640293062, -8.916464867070317e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "activate"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        return Weapon(5, 2)\n", "score": -7.159827918694063, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -0.05206108093261719, 0.0, -7.092297554016113, -1.9073486328125e-06, -0.00011181545414729044, 0.0, -0.0001583099365234375, -0.000606536865234375, -0.0022897720336914062, -1.1920928244535389e-07, -0.000356253091013059, -0.0003165006637573242, -0.00021264675888232887, -0.00010740246216300875, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 87, 152, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "hole2": "WARRIOR", "_type": "Template11", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "target_func"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=MINION_TYPE.BEAST)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -7.484431393229059, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -5.5535430908203125, -5.91278076171875e-05, -8.344646857949556e-07, -2.121925172104966e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.010623812675476074, 0.0, -0.9889717102050781, 0.0, -0.5214042663574219, 0.0, -0.00011444091796875, -0.00029754638671875, -0.0578460693359375, 0.0, -0.11493682861328125, -1.33514404296875e-05, -0.03608894348144531, 0.0, -0.19521427154541016, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.000469207763671875, -0.000934600830078125, -0.0005435943603515625, -2.2649765014648438e-06, -0.0003756771038752049, -0.00033545494079589844, -0.000667468411847949, -7.71254999563098e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "player", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "player"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def player(self, player):\n        return Weapon(5, 2)\n", "score": -7.6648961188049825, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -0.05206108093261719, 0.0, -7.5937700271606445, 0.0, -0.0032373482827097178, 0.0, -0.0005931854248046875, -0.0004711151123046875, -0.0007686614990234375, 0.0, -0.0010314626852050424, -0.00025177001953125, -0.0013829439412802458, -2.0146197130088694e-05, -5.960462772236497e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 2, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -7.763119322376369, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -7.717559337615967, -9.655952453613281e-06, -0.016551971435546875, 0.0, -0.014955520629882812, -5.7220458984375e-06, -0.00010502061195438728, 0.0, -0.0005550384521484375, -0.0001850128173828125, -0.0015096664428710938, -1.1920928244535389e-07, -0.0003409996279515326, -0.0002478361129760742, -0.0002053765201708302, -4.005363734904677e-05, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 189, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>", 244, 66, 175, "Character", "Attack", "<EOS>", 237, 63, 205, "Is", "Hero", "<EOS>", 237, 50, 169, "Give", "<EOS>", 237, 63, 205, "Weapon", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "ArcaniteReaper", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2, "hole3": [{"hole1": [{"hole0": "IsHero", "_type": "Template39"}], "hole0": "CharacterAttack", "_type": "Template20", "hole2": [{"hole1": [{"hole0": "Weapon", "_type": "Template39"}], "hole0": "Give", "_type": "Template19", "hole3": "PlayerSelector"}]}]}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(Weapon()), PlayerSelector()))])\n", "score": -9.623033326154982, "score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -0.05206108093261719, 0.0, -0.008657574653625488, -9.5367431640625e-06, -9.29814123082906e-05, 0.0, -0.000263214111328125, -0.0003509521484375, -7.758632659912109, -1.1920928244535389e-07, -0.00011169286881340668, -0.005355715751647949, -3.814689989667386e-06, -0.00010799688607221469, 0.0, -0.01712799072265625, -0.10474491119384766, -0.07344722747802734, -0.061974331736564636, -0.012426495552062988, -2.3841855067985307e-07, -0.00016021728515625, -0.001071929931640625, -0.0026950836181640625, -0.0032251719385385513, -0.029692944139242172, -2.47955322265625e-05, -0.0001220703125, -0.05012226104736328, -0.0001697540283203125, -0.03146696090698242, -8.404254913330078e-05, 0.0, -0.6069717407226562, -0.000255584716796875, -0.4122239947319031, -0.10653458535671234, -0.2715129852294922, -2.288818359375e-05, 0.0]}]}
{"index": 8, "beams": [{"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.08030056534292385, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -0.012275934219360352, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -2.264974000354414e-06, -0.003192901611328125, -0.0001316070556640625, -5.7220458984375e-06, -0.0002574920654296875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0018863677978515625, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.0013332366943359375, -0.000335693359375, -0.0001163482666015625, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0033129453659057617, 0.0, -0.0028553009033203125, -0.00669097900390625, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -3.959487791638395, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -3.904788017272949, 0.0, -0.0006465911865234375, -0.0001087188720703125, -7.82012939453125e-05, -0.0007266998291015625, -1.9073486328125e-06, -0.000408172607421875, -0.0002040863037109375, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0002880096435546875, -6.4849853515625e-05, -5.173683166503906e-05, -1.9073486328125e-06, -0.012141108512878418, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -2.264974000354414e-06, -0.0032367706298828125, -0.0001316070556640625, -5.7220458984375e-06, -0.0002613067626953125, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.00185394287109375, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.001316070556640625, -0.0003337860107421875, -0.00011444091796875, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.003310084342956543, 0.0, -0.002857208251953125, -0.0067005157470703125, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.097525592427274, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -5.03408145904541, -3.814697265625e-06, -1.9073486328125e-05, -3.4332275390625e-05, -2.47955322265625e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.021068572998046875, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000476837158203125, -1.9073486328125e-06, -0.0002956390380859375, -0.0001735687255859375, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0002346038818359375, -6.29425048828125e-05, -4.601478576660156e-05, -1.9073486328125e-06, -0.011961817741394043, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -3.24249267578125e-05, -2.264974000354414e-06, -0.0031986236572265625, -0.0001316070556640625, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.001880645751953125, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.001331329345703125, -0.000335693359375, -0.0001163482666015625, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0033110380172729492, 0.0, -0.002857208251953125, -0.006686210632324219, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.247497673611662, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -5.194181442260742, 0.0, -9.34600830078125e-05, -0.000293731689453125, -6.866455078125e-05, -0.00038909912109375, -1.9073486328125e-06, -0.00020599365234375, -0.0001239776611328125, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.00037384033203125, -6.866455078125e-05, -4.792213439941406e-05, -3.814697265625e-06, -0.011735081672668457, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -2.264974000354414e-06, -0.0031566619873046875, -0.000133514404296875, -5.7220458984375e-06, -0.000263214111328125, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0018596649169921875, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.001316070556640625, -0.0003337860107421875, -0.00011444091796875, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0033148527145385742, 0.0, -0.002857208251953125, -0.0067005157470703125, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_battlecry_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_battlecry_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.464045281987893, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -5.393801689147949, -5.340576171875e-05, -0.0010395050048828125, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.62396240234375e-05, -1.9073468138230965e-06, -0.0043659210205078125, -0.0001201629638671875, -5.7220458984375e-06, -0.000274658203125, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.001865386962890625, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.0012874603271484375, -0.0003223419189453125, -0.00011444091796875, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0032796859741210938, 0.0, -0.002902984619140625, -0.006725311279296875, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 45, 136, "Null", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "NameConstant", "value": "Null"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(Null)\n", "score": -5.65230440674307, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -0.012275934219360352, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -2.264974000354414e-06, -0.003192901611328125, -0.0001316070556640625, -5.7220458984375e-06, -0.0002574920654296875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0018863677978515625, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.0013332366943359375, -0.000335693359375, -0.0001163482666015625, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0033129453659057617, 0.0, -0.0028553009033203125, -5.577112197875977, -0.000606536865234375, -0.000949859619140625, -4.9114227294921875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.144476647955145, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -6.073972225189209, 0.0, -0.000171661376953125, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.62396240234375e-05, -1.6689286894688848e-06, -0.005626678466796875, -0.0001068115234375, -5.7220458984375e-06, -0.0002498626708984375, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.00180816650390625, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.0013942718505859375, -0.0003414154052734375, -0.0001163482666015625, -7.62939453125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0032622814178466797, 0.0, -0.0028667449951171875, -0.0066738128662109375, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "use", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().use('Assassinate', 5, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.3964558811052825, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -6.318791389465332, 0.0, -0.0002288818359375, -4.1961669921875e-05, -7.62939453125e-06, -4.768370445162873e-07, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -4.684815212385729e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -4.482269287109375e-05, -7.62939453125e-06, -0.012171149253845215, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -0.024564743041992188, 0.0, -5.91278076171875e-05, -9.918212890625e-05, -4.38690185546875e-05, -0.0004730224609375, -1.9073486328125e-06, -0.00035858154296875, -0.0001735687255859375, -1.33514404296875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002384185791015625, -6.866455078125e-05, -4.601478576660156e-05, -3.814697265625e-06, -0.012288331985473633, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -2.264974000354414e-06, -0.0031719207763671875, -0.0001316070556640625, -5.7220458984375e-06, -0.0002498626708984375, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0019054412841796875, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.0013523101806640625, -0.000339508056640625, -0.0001163482666015625, -7.62939453125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0033110380172729492, 0.0, -0.0028591156005859375, -0.006682395935058594, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.581967468838712, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -6.522769451141357, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -1.9073486328125e-05, -3.814697265625e-06, -8.58306884765625e-05, 0.0, -0.016733169555664062, 0.0, -5.7220458984375e-05, -0.0001163482666015625, -4.38690185546875e-05, -0.00041961669921875, -1.9073486328125e-06, -0.00029754638671875, -0.000179290771484375, -9.5367431640625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0002422332763671875, -6.67572021484375e-05, -4.410743713378906e-05, -1.9073486328125e-06, -0.012108325958251953, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -3.24249267578125e-05, -2.264974000354414e-06, -0.0031871795654296875, -0.0001316070556640625, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0018825531005859375, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.001331329345703125, -0.000335693359375, -0.0001163482666015625, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0033110380172729492, 0.0, -0.002857208251953125, -0.006684303283691406, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.59821497971123, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -6.529845237731934, 0.0, -0.00036275386810302734, 0.0, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.6597251892089844e-05, -8.940656698541716e-06, -0.0014514923095703125, -6.103515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.0265579223632812e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0019893646240234375, 0.0, -7.748603820800781e-06, 0.0, -0.00243377685546875, -0.0003452301025390625, -0.0001392364501953125, -9.5367431640625e-06, -0.000118255615234375, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0031023025512695312, 0.0, -0.0032520294189453125, -0.007245063781738281, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Assassinate", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 5, "hole0": "Assassinate", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.613788949722192, "score_history": [-5.830227851867676, -0.0045013427734375, -7.2479248046875e-05, -0.001995086669921875, -0.0001125335693359375, -7.152555099310121e-07, -0.00014399446081370115, -4.00543212890625e-05, -0.0001392364501953125, -2.288818359375e-05, -4.899389750789851e-05, -5.1975250244140625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -8.96453857421875e-05, -0.0005283355712890625, -2.3841855067985307e-07, -4.768371127283899e-06, -2.50339189733495e-06, -2.264974000354414e-06, -0.09839200973510742, 0.0, -0.0004311800003051758, 0.0, -0.0395207405090332, -2.3365020751953125e-05, -0.000217437744140625, -3.0517578125e-05, -2.09808349609375e-05, 0.0, -0.0007419586181640625, -1.52587890625e-05, -0.00044155120849609375, -9.5367431640625e-06, -0.021206021308898926, 0.0, -0.019594311714172363, 0.0, -0.010573387145996094, -0.0003223419189453125, -0.000499725341796875, -0.0002193450927734375, -0.0001220703125, -0.0023975372314453125, -0.004052162170410156, -0.0003757476806640625, -0.000553131103515625, -3.814697265625e-06, -0.0003948211669921875, -0.0001964569091796875, -0.0036840438842773438, -9.5367431640625e-06, -0.0004520416259765625, 0.0, -0.0031605958938598633, -1.1444091796875e-05, -0.009711980819702148, -7.152551916078664e-06, -1.1444091796875e-05, -0.46010780334472656, -3.24249267578125e-05, -0.0019397735595703125, -0.000316619873046875, -5.91278076171875e-05, -3.814697265625e-06, -0.0005385864642448723, -0.00021564960479736328, -0.028535127639770508, -1.1444091796875e-05, -0.019077301025390625, -0.0002498626708984375, -3.4332275390625e-05, 0.0, -0.000469207763671875, -0.00022149084543343633, -0.0027382373809814453, -0.00041961669921875, -0.0001392364501953125, -0.00028228759765625, -0.019640564918518066, -9.357929229736328e-05, -0.0001392364501953125, -0.0004367828369140625, -0.0010204315185546875, -1.71661376953125e-05, -4.208087921142578e-05, -9.5367431640625e-06, -0.0005664825439453125, -0.0010271072387695312, -1.9073486328125e-06, -8.96453857421875e-05, -0.0001913309097290039, -7.510157047363464e-06, -0.0001277923583984375, -0.0009479522705078125, -7.62939453125e-06, -0.0066680908203125, -6.866455078125e-05, -0.00011444091796875, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.00032806396484375, -0.001186370849609375, -0.0001468658447265625, -5.7220458984375e-06, -0.0001068115234375, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0034447908401489258, -1.9073486328125e-06, -0.0020275115966796875, -0.004338264465332031, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(player.effective_spell_damage(5), self)\n", "score": -6.976800425443344, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -0.012275934219360352, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -2.264974000354414e-06, -0.003192901611328125, -0.0001316070556640625, -5.7220458984375e-06, -0.0002574920654296875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0018863677978515625, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.0013332366943359375, -0.000335693359375, -0.0001163482666015625, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0033129453659057617, 0.0, -5.913819313049316, -0.9273290634155273, -0.0001544952392578125, -0.0012493133544921875, 0.0, -0.00020599365234375, -1.52587890625e-05, -0.055846214294433594, 0.0, -0.007338511757552624, -2.3841855067985307e-07, -4.38690185546875e-05, -3.814697265625e-06, -6.103515625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>", 79, 115, 31, 195, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 79, 115, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "_type": "Template36"}}, {"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        self.target.<UNK>()\n", "score": -7.1651429492044585, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -0.012275934219360352, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -2.264974000354414e-06, -5.793943405151367, -4.00543212890625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0020923614501953125, 0.0, -7.867813110351562e-06, 0.0, -0.002223968505859375, -0.00025177001953125, -0.000240325927734375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, 0.0, 0.0, -0.004025578498840332, 0.0, -0.0008602142333984375, -0.011525154113769531, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.013427734375, -0.0001201629638671875, -0.0001087188720703125, -0.00014495849609375, -0.11064338684082031, -1.1444091796875e-05, -0.0007724761962890625, 0.0, -0.34410762786865234, 0.0, -0.14046800136566162, -3.814697265625e-06, -0.37608712911605835, -5.7220458984375e-06, -0.008184432983398438, -1.71661376953125e-05, -9.5367431640625e-05, -5.7220458984375e-06, -0.19700908660888672, -9.5367431640625e-06, -0.00011444091796875, -1.9073486328125e-06, -0.05394458770751953, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.044533371925354004, 0.0]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>", 79, 115, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>()\n        self.target.die(self)\n", "score": -7.559204335789687, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -0.012275934219360352, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -2.264974000354414e-06, -5.793943405151367, -4.00543212890625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0020923614501953125, 0.0, -7.867813110351562e-06, 0.0, -0.002223968505859375, -0.00025177001953125, -0.000240325927734375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, 0.0, 0.0, -0.004025578498840332, 0.0, -0.0008602142333984375, -0.011525154113769531, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.013427734375, -0.0001201629638671875, -0.0001087188720703125, -0.00014495849609375, -0.11064338684082031, -1.1444091796875e-05, -0.0007724761962890625, 0.0, -1.2352046966552734, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.013390779495239258, 0.0, -0.0024967193603515625, -6.866455078125e-05, -0.03143310546875, -4.38690185546875e-05, -0.019319534301757812, -3.814697265625e-06, -9.5367431640625e-06, 0.0, 0.0, -1.1920928244535389e-07, -0.08908641338348389, 0.0, -5.7220458984375e-05, -0.16751384735107422, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Assassinate", "hole2": [{"hole1": 5, "hole0": "Assassinate", "_type": "Template15", "hole2": "ROGUE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -7.606771347128102, "score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.483091354370117, -0.00250244140625, -2.3841855067985307e-07, 0.0, -4.768370445162873e-07, -5.722029527532868e-06, -0.08915877342224121, 0.0, -0.0009881258010864258, 0.0, -0.0010319948196411133, 0.0, -8.261203038273379e-05, 0.0, -0.0001373291015625, -0.000156402587890625, -7.72471830714494e-05, -3.492777614155784e-05, -0.0033206939697265625, -2.09808349609375e-05, -9.5367431640625e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.001617431640625, 0.0, -9.655952453613281e-06, 0.0, -0.002399444580078125, -0.000202178955078125, -0.000171661376953125, -5.7220458984375e-06, -0.0002269744873046875, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0031561851501464844, 0.0, -0.0049991607666015625, -0.009982109069824219, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05]}]}
{"index": 9, "beams": [{"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.13308808888540113, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -0.004310727119445801, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00046634674072265625, -5.14984130859375e-05, -0.0004024505615234375, -6.103515625e-05, -0.000194549560546875, -9.5367431640625e-06, -0.000720977783203125, -0.0002288818359375, -0.0025997161865234375, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.000822901725769043, -1.9073486328125e-06, -0.009106874465942383, -3.576278118089249e-07, -3.814697265625e-06, -0.012518882751464844, -0.0001373291015625, -0.001678466796875, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.212111086118966e-05, -5.7220458984375e-06, -0.027130722999572754, 0.0, -0.015947341918945312, -7.43865966796875e-05, -1.9073486328125e-05, 0.0, -0.000802397436928004, -4.410743713378906e-06, -0.010326743125915527, -5.7220458984375e-06, -0.0009517669677734375, -5.14984130859375e-05, -0.00021338458464015275, 0.0, -2.288818359375e-05, -0.0003108978271484375, -4.38690185546875e-05, -1.1444091796875e-05, -6.401528662536293e-05, -2.491474151611328e-05, -7.43865966796875e-05, -0.0004367828369140625, -3.814697265625e-06, -3.4332275390625e-05, -0.0003664472314994782, -2.622604142743512e-06, -0.0018100738525390625, -0.00041961669921875, -5.7220458984375e-06, -0.00089263916015625, -2.6702880859375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.482259100768715e-05, 0.0, -5.7220458984375e-05, -0.0024776458740234375, -0.0001049041748046875, -1.33514404296875e-05, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041934935143217444, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_attack", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_attack", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_attack() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -4.083797908183875, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -0.004310727119445801, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00046634674072265625, -5.14984130859375e-05, -0.0004024505615234375, -6.103515625e-05, -0.000194549560546875, -9.5367431640625e-06, -0.000720977783203125, -0.0002288818359375, -0.0025997161865234375, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.000822901725769043, -1.9073486328125e-06, -0.009106874465942383, -3.576278118089249e-07, -3.814697265625e-06, -0.012518882751464844, -0.0001373291015625, -0.001678466796875, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.212111086118966e-05, -5.7220458984375e-06, -3.914445400238037, 0.0, -0.08099365234375, -0.0009746551513671875, -7.05718994140625e-05, -1.9073486328125e-06, -0.000880241219419986, -2.741813204920618e-06, -0.007035613059997559, 0.0, -0.00168609619140625, -5.53131103515625e-05, -0.0001969336299225688, -1.1920928244535389e-07, -3.0517578125e-05, -0.000484466552734375, -4.00543212890625e-05, -1.52587890625e-05, -7.045254460535944e-05, -2.872943878173828e-05, -6.4849853515625e-05, -0.0003832578659057617, -3.814697265625e-06, -3.4332275390625e-05, -0.000345346808899194, -2.622604142743512e-06, -0.0017910003662109375, -0.0004024505615234375, -5.7220458984375e-06, -0.0007953643798828125, -2.288818359375e-05, -6.103515625e-05, -1.9073486328125e-06, -1.9669532775878906e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.279603308532387e-05, 0.0, -5.91278076171875e-05, -0.0024013519287109375, -0.0001049041748046875, -1.33514404296875e-05, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041982607217505574, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.0883121268743565, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -4.9614644050598145, 0.0, -0.008344888687133789, 0.0, -0.0007735481485724449, -2.4795530407573096e-05, -0.000698089599609375, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0002307891845703125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005433201789855957, 0.0, -0.0038949251174926758, -1.9073486328125e-06, -0.000274658203125, -5.14984130859375e-05, -4.1961669921875e-05, -9.5367431640625e-05, -0.0004711151123046875, -5.340576171875e-05, -0.0004024505615234375, -6.103515625e-05, -0.000202178955078125, -9.5367431640625e-06, -0.0007228851318359375, -0.000225067138671875, -0.0026178359985351562, -6.67572021484375e-05, -0.00018310546875, 0.0, -0.0008219480514526367, -1.9073486328125e-06, -0.009070396423339844, -3.576278118089249e-07, -3.814697265625e-06, -0.012508392333984375, -0.0001373291015625, -0.0016851425170898438, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.200190157163888e-05, -5.7220458984375e-06, -0.027208924293518066, 0.0, -0.01601696014404297, -7.43865966796875e-05, -1.9073486328125e-05, 0.0, -0.0008015629719011486, -4.410743713378906e-06, -0.010332465171813965, -5.7220458984375e-06, -0.00095367431640625, -5.14984130859375e-05, -0.00021326537535060197, 0.0, -2.09808349609375e-05, -0.000308990478515625, -4.38690185546875e-05, -1.1444091796875e-05, -6.401528662536293e-05, -2.491474151611328e-05, -7.43865966796875e-05, -0.0004367828369140625, -3.814697265625e-06, -3.4332275390625e-05, -0.0003664472314994782, -2.622604142743512e-06, -0.0018100738525390625, -0.00041961669921875, -5.7220458984375e-06, -0.00089263916015625, -2.6702880859375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.482259100768715e-05, 0.0, -5.7220458984375e-05, -0.0024776458740234375, -0.0001049041748046875, -1.33514404296875e-05, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041934935143217444, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 8, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Is"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health is target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.127591944044738, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -0.004310727119445801, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00046634674072265625, -5.14984130859375e-05, -0.0004024505615234375, -6.103515625e-05, -0.000194549560546875, -9.5367431640625e-06, -0.000720977783203125, -0.0002288818359375, -0.0025997161865234375, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.000822901725769043, -1.9073486328125e-06, -0.009106874465942383, -3.576278118089249e-07, -3.814697265625e-06, -4.991652965545654, -7.43865966796875e-05, -0.007458686828613281, -2.47955322265625e-05, -6.866455078125e-05, -1.9073486328125e-06, -0.00012636103201657534, -3.814697265625e-06, -0.04087555408477783, 0.0, -0.009765625, -5.7220458984375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006879562861286104, -2.622604142743512e-06, -0.012571573257446289, -7.62939453125e-06, -0.000820159912109375, -4.38690185546875e-05, -0.0002003907720791176, 0.0, -1.9073486328125e-05, -0.00035858154296875, -4.38690185546875e-05, -9.5367431640625e-06, -6.592263525817543e-05, -2.682209014892578e-05, -7.43865966796875e-05, -0.0004042387008666992, -3.814697265625e-06, -3.4332275390625e-05, -0.0003775336081162095, -2.622604142743512e-06, -0.0018138885498046875, -0.000446319580078125, -5.7220458984375e-06, -0.000904083251953125, -2.6702880859375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.38690185546875e-05, 0.0, -4.327289207139984e-05, 0.0, -5.7220458984375e-05, -0.0024623870849609375, -0.000102996826171875, -1.33514404296875e-05, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.0004191109910607338, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "calculate_attack", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "calculate_attack", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            calculate_attack())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.136342729358589, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -0.004310727119445801, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00046634674072265625, -5.14984130859375e-05, -0.0004024505615234375, -6.103515625e-05, -0.000194549560546875, -9.5367431640625e-06, -0.000720977783203125, -0.0002288818359375, -0.0025997161865234375, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.000822901725769043, -1.9073486328125e-06, -0.009106874465942383, -3.576278118089249e-07, -3.814697265625e-06, -0.012518882751464844, -0.0001373291015625, -0.001678466796875, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.212111086118966e-05, -5.7220458984375e-06, -0.027130722999572754, 0.0, -0.015947341918945312, -7.43865966796875e-05, -1.9073486328125e-05, 0.0, -0.000802397436928004, -4.410743713378906e-06, -4.995020389556885, -3.0517578125e-05, -0.018050193786621094, -3.62396240234375e-05, -0.00138866004999727, -1.6689286894688848e-06, -3.0517578125e-05, -0.0003337860107421875, -4.9591064453125e-05, -3.814697265625e-06, -9.44134226301685e-05, -1.1563301086425781e-05, -9.34600830078125e-05, -0.00027883052825927734, -3.814697265625e-06, -4.57763671875e-05, -0.00037681590765714645, -2.503394853192731e-06, -0.0020236968994140625, -0.0005340576171875, -3.814697265625e-06, -0.000766754150390625, -2.6702880859375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -1.668929871811997e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.76837158203125e-05, 0.0, -4.494180029723793e-05, 0.0, -5.91278076171875e-05, -0.00262451171875, -0.0001068115234375, -1.33514404296875e-05, -0.000125885009765625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002671480178833008, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.508811929961666e-05, -1.1920928244535389e-07, -0.0004187534505035728, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -5.340576171875e-05, 0.0]}, {"choice_history": [70, 149, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Backstab", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Backstab", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.434846610129213, "score_history": [-5.059126853942871, -3.62396240234375e-05, -1.2993811651540454e-05, -5.280832192511298e-05, -4.767673090100288e-06, -3.409384225960821e-05, 0.0, -5.7220458984375e-06, -0.0007038116455078125, -0.0001678466796875, -2.288818359375e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0005109310150146484, 0.0, -4.1961669921875e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.7881377516459906e-06, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0031297204550355673, -2.0265579223632812e-06, -4.57763671875e-05, -5.91278076171875e-05, -2.09808349609375e-05, 0.0, -1.251697449333733e-05, -1.9073486328125e-06, -0.352550745010376, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.86102294921875e-05, 0.0, -0.001682281494140625, 0.0, -6.4849853515625e-05, -4.38690185546875e-05, -0.0001735687255859375, -8.7738037109375e-05, 0.0, -0.0001964569091796875, -0.000148773193359375, -2.09808349609375e-05, 0.0, -9.5367431640625e-06, 0.0, -9.34600830078125e-05, -2.47955322265625e-05, -5.841255187988281e-06, -3.814697265625e-06, -0.009901046752929688, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -0.0005095005035400391, -5.960462772236497e-07, -0.0005245208740234375, -0.0005779266357421875, -7.62939453125e-06, -0.0006351470947265625, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -3.62396240234375e-05, 0.0, -2.3841726942919195e-05, 0.0, -0.0002079010009765625, -0.001560211181640625, -0.00012969970703125, -1.71661376953125e-05, -0.0001735687255859375, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001983642578125, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.806836609030142e-05, -1.1920928244535389e-07, -0.00041160278487950563, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.spell_targetable() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.75987706088106, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -0.004310727119445801, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00046634674072265625, -5.14984130859375e-05, -0.0004024505615234375, -6.103515625e-05, -0.000194549560546875, -9.5367431640625e-06, -0.000720977783203125, -0.0002288818359375, -0.0025997161865234375, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.000822901725769043, -1.9073486328125e-06, -0.009106874465942383, -3.576278118089249e-07, -3.814697265625e-06, -0.012518882751464844, -0.0001373291015625, -0.001678466796875, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.212111086118966e-05, -5.7220458984375e-06, -5.604030132293701, 0.0, -0.06596088409423828, -0.0008945465087890625, -5.91278076171875e-05, -3.814697265625e-06, -0.0007048824336379766, -5.125998541188892e-06, -0.009467482566833496, -1.9073486328125e-06, -0.000885009765625, -4.57763671875e-05, -0.00018239011114928871, -1.1920928244535389e-07, -2.47955322265625e-05, -0.00035858154296875, -4.00543212890625e-05, -1.33514404296875e-05, -6.77107454976067e-05, -2.110004425048828e-05, -7.43865966796875e-05, -0.0004578828811645508, -3.814697265625e-06, -3.62396240234375e-05, -0.00038373269489966333, -2.622604142743512e-06, -0.001827239990234375, -0.0004119873046875, -5.7220458984375e-06, -0.0008544921875, -2.47955322265625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.3511281546670943e-05, 0.0, -5.91278076171875e-05, -0.0024967193603515625, -0.0001049041748046875, -1.33514404296875e-05, -0.00012969970703125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041946853161789477, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.762667990460599, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.63002872467041, 0.0, -0.00971221923828125, 0.0, -0.0003376007080078125, -7.05718994140625e-05, -4.57763671875e-05, -0.000110626220703125, -0.0005283355712890625, -4.9591064453125e-05, -0.000461578369140625, -5.340576171875e-05, -0.0001926422119140625, -1.1444091796875e-05, -0.000774383544921875, -0.0002193450927734375, -0.002674102783203125, -6.4849853515625e-05, -0.000171661376953125, 0.0, -0.0006840229034423828, -1.9073486328125e-06, -0.008911967277526855, -3.576278118089249e-07, -3.814697265625e-06, -0.012468338012695312, -0.00012969970703125, -0.001728057861328125, -3.4332275390625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.224031287478283e-05, -5.7220458984375e-06, -0.027063846588134766, 0.0, -0.015758514404296875, -7.43865966796875e-05, -1.9073486328125e-05, 0.0, -0.0007839198806323111, -4.410743713378906e-06, -0.010398268699645996, -5.7220458984375e-06, -0.00098419189453125, -5.14984130859375e-05, -0.00021350379392970353, 0.0, -2.288818359375e-05, -0.0002994537353515625, -4.38690185546875e-05, -1.1444091796875e-05, -6.604184454772621e-05, -2.491474151611328e-05, -7.62939453125e-05, -0.0004367828369140625, -3.814697265625e-06, -3.4332275390625e-05, -0.0003664472314994782, -2.622604142743512e-06, -0.0018367767333984375, -0.00041961669921875, -5.7220458984375e-06, -0.0008907318115234375, -2.6702880859375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.4584176066564396e-05, 0.0, -5.7220458984375e-05, -0.00247955322265625, -0.0001049041748046875, -1.33514404296875e-05, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041934935143217444, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.216930365262655, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -0.004310727119445801, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00046634674072265625, -5.14984130859375e-05, -0.0004024505615234375, -6.103515625e-05, -0.000194549560546875, -9.5367431640625e-06, -0.000720977783203125, -0.0002288818359375, -0.0025997161865234375, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.000822901725769043, -1.9073486328125e-06, -0.009106874465942383, -3.576278118089249e-07, -3.814697265625e-06, -6.1160969734191895, -0.00017547607421875, -0.0007724761962890625, -5.91278076171875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -9.751154721016064e-05, -5.7220458984375e-06, -0.01263570785522461, 0.0, -0.012050628662109375, -8.392333984375e-05, -2.288818359375e-05, 0.0, -0.0006968972156755626, -4.291534423828125e-06, -0.009960532188415527, -5.7220458984375e-06, -0.0011310577392578125, -5.14984130859375e-05, -0.000206828088266775, 0.0, -2.09808349609375e-05, -0.000335693359375, -4.1961669921875e-05, -1.1444091796875e-05, -6.186951941344887e-05, -2.110004425048828e-05, -7.05718994140625e-05, -0.00041556358337402344, -3.814697265625e-06, -3.24249267578125e-05, -0.00035381101770326495, -2.622604142743512e-06, -0.0016880035400390625, -0.000408172607421875, -5.7220458984375e-06, -0.0008449554443359375, -2.6702880859375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.422655183589086e-05, 0.0, -5.7220458984375e-05, -0.0024547576904296875, -0.0001049041748046875, -1.33514404296875e-05, -0.00012969970703125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041934935143217444, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "PRIEST", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "PRIEST"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, PRIEST=lambda target: target.health ==\n            target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.479265070724082, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -6.308943748474121, 0.0, -0.04100990295410156, -8.20159912109375e-05, -5.14984130859375e-05, -0.0003566741943359375, -0.000499725341796875, -1.9073486328125e-05, -0.0006008148193359375, -7.62939453125e-05, -0.0001850128173828125, -1.1444091796875e-05, -0.000762939453125, -0.0002269744873046875, -0.0027914047241210938, -8.20159912109375e-05, -0.0001735687255859375, 0.0, -0.000825047492980957, -1.9073486328125e-06, -0.009796857833862305, -2.3841855067985307e-07, -3.814697265625e-06, -0.012217521667480469, -0.0001239776611328125, -0.0017423629760742188, -3.4332275390625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.569733134005219e-05, -5.7220458984375e-06, -0.027388453483581543, 0.0, -0.015357017517089844, -7.62939453125e-05, -1.9073486328125e-05, 0.0, -0.0008001324604265392, -4.410743713378906e-06, -0.010346770286560059, -5.7220458984375e-06, -0.0009288787841796875, -5.14984130859375e-05, -0.00021851058409083635, 0.0, -2.09808349609375e-05, -0.0003185272216796875, -4.38690185546875e-05, -1.1444091796875e-05, -6.413449591491371e-05, -2.300739288330078e-05, -7.43865966796875e-05, -0.0004347562789916992, -3.814697265625e-06, -3.4332275390625e-05, -0.0003650166909210384, -2.622604142743512e-06, -0.001773834228515625, -0.00041961669921875, -5.7220458984375e-06, -0.0008945465087890625, -2.6702880859375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.470338171813637e-05, 0.0, -5.7220458984375e-05, -0.0024700164794921875, -0.0001049041748046875, -1.33514404296875e-05, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041934935143217444, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [70, 149, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Backstab", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Backstab", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.4796999397877215, "score_history": [-5.059126853942871, -3.62396240234375e-05, -1.2993811651540454e-05, -5.280832192511298e-05, -4.767673090100288e-06, -3.409384225960821e-05, 0.0, -5.7220458984375e-06, -0.0007038116455078125, -0.0001678466796875, -2.288818359375e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0005109310150146484, 0.0, -4.1961669921875e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.7881377516459906e-06, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0031297204550355673, -2.0265579223632812e-06, -4.57763671875e-05, -5.91278076171875e-05, -2.09808349609375e-05, 0.0, -1.251697449333733e-05, -1.9073486328125e-06, -1.3965990543365479, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0017604827880859375, 0.0, -5.91278076171875e-05, -6.4849853515625e-05, -0.0002002716064453125, -8.0108642578125e-05, 0.0, -0.000152587890625, -0.000152587890625, -2.288818359375e-05, 0.0, -9.5367431640625e-06, 0.0, -9.34600830078125e-05, -2.47955322265625e-05, -5.841255187988281e-06, -5.7220458984375e-06, -0.010629653930664062, 0.0, -0.0001068115234375, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -0.0005171298980712891, -5.960462772236497e-07, -0.0005092620849609375, -0.0005855560302734375, -7.62939453125e-06, -0.0006427764892578125, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -2.384185791015625e-06, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -3.814697265625e-05, 0.0, -2.3841726942919195e-05, 0.0, -0.0002079010009765625, -0.0015583038330078125, -0.00012969970703125, -1.71661376953125e-05, -0.0001735687255859375, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0002728700637817383, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.806836609030142e-05, -1.1920928244535389e-07, -0.0004117219941690564, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "find_minion_spell_target", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "find_minion_spell_target"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, find_minion_spell_target=lambda\n            target: target.health == target.calculate_max_health() and\n            target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.542545891734349, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -6.4008378982543945, 0.0, -0.01375579833984375, -8.20159912109375e-05, -9.1552734375e-05, -0.0003223419189453125, -0.0006160736083984375, -2.47955322265625e-05, -0.00045013427734375, -6.29425048828125e-05, -0.0001888275146484375, -7.62939453125e-06, -0.0008831024169921875, -0.0002899169921875, -0.00237274169921875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.0008645057678222656, -1.9073486328125e-06, -0.008496761322021484, -2.3841855067985307e-07, -3.814697265625e-06, -0.012569427490234375, -0.0001430511474609375, -0.0015926361083984375, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.092904706951231e-05, -5.7220458984375e-06, -0.02739095687866211, 0.0, -0.015322685241699219, -7.43865966796875e-05, -2.09808349609375e-05, 0.0, -0.0008174178656190634, -4.410743713378906e-06, -0.010254263877868652, -5.7220458984375e-06, -0.0009555816650390625, -5.340576171875e-05, -0.00021350379392970353, 0.0, -2.288818359375e-05, -0.0003108978271484375, -4.38690185546875e-05, -1.1444091796875e-05, -6.425369792850688e-05, -2.300739288330078e-05, -7.43865966796875e-05, -0.000438690185546875, -3.814697265625e-06, -3.4332275390625e-05, -0.0003664472314994782, -2.622604142743512e-06, -0.0018157958984375, -0.0004177093505859375, -5.7220458984375e-06, -0.0008907318115234375, -2.6702880859375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.315365731599741e-05, 0.0, -5.7220458984375e-05, -0.002471923828125, -0.0001049041748046875, -1.33514404296875e-05, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041934935143217444, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 0, "hole0": "Backstab", "hole2": "ROGUE", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"id": "self", "_type": "Name"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and self)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.563653208233475, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -0.004310727119445801, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00046634674072265625, -5.14984130859375e-05, -0.0004024505615234375, -6.103515625e-05, -0.000194549560546875, -9.5367431640625e-06, -0.000720977783203125, -0.0002288818359375, -0.0025997161865234375, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.000822901725769043, -1.9073486328125e-06, -0.009106874465942383, -3.576278118089249e-07, -3.814697265625e-06, -0.012518882751464844, -0.0001373291015625, -0.001678466796875, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.212111086118966e-05, -5.7220458984375e-06, -0.027130722999572754, 0.0, -6.265621185302734, 0.0, -0.09067535400390625, -7.62939453125e-06, -0.09347820281982422, -0.0002040863037109375, -0.0008932350901886821, -2.3841855067985307e-07, -4.76837158203125e-05, -6.67572021484375e-05, -6.67572021484375e-05, -3.814697265625e-06, -2.312660035386216e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.00023496150970458984, -3.814697265625e-06, -2.288818359375e-05, -0.0001333940599579364, -2.503394853192731e-06, -0.0113372802734375, -0.0003833770751953125, -3.814697265625e-06, -0.000301361083984375, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -1.5854835510253906e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -4.00543212890625e-05, 0.0, -4.6014632971491665e-05, 0.0, -5.340576171875e-05, -0.0024433135986328125, -0.0001049041748046875, -1.33514404296875e-05, -0.000133514404296875, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001964569091796875, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -6.473049870692194e-05, -1.1920928244535389e-07, -0.0004218520480208099, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, 0.0]}, {"choice_history": [69, 133, 249, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}], "_type": "Module"}, "inferred_code": "super().use(player, game)\n", "score": -8.276988981380782, "score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -7.889490127563477, -0.1690683364868164, -0.10820293426513672, -0.001617431640625, -0.09843254089355469, -6.4849853515625e-05, -2.5510509658488445e-05, -1.9073486328125e-06, -0.00028896331787109375, 0.0, -2.396105628577061e-05, 0.0, -0.00015175194130279124, 0.0]}, {"choice_history": [69, 133, 248], "model_output": {"body": [], "_type": "Module"}, "inferred_code": "", "score": -20.16512680053711, "score_history": [-0.00939178466796875, -0.0001220703125, -20.15561294555664]}]}
{"index": 10, "beams": [{"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -0.15016570136430119, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.01790320873260498, -6.556510470545618e-06, -0.028585880994796753, -3.814697265625e-06, -0.001094818115234375, -7.2479248046875e-05, -0.0004100799560546875, -1.33514404296875e-05, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.57763671875e-05, -7.152555099310121e-07, -0.014310121536254883, -1.9073486328125e-06, -0.0024487674236297607, -1.52587890625e-05]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "score": -3.590925658269896, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -3.5278806686401367, -1.1444091796875e-05, -3.814697265625e-06, -0.000244140625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.092952728271484e-05, -5.7220458984375e-06, -5.364416665543104e-06, 0.0, -0.00028061866760253906, -1.33514404296875e-05, -8.702273589733522e-06, -0.0001316070556640625, -0.003604888916015625, -3.814697265625e-06, -0.00019073486328125, -1.33514404296875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.019993901252746582, -6.675719760096399e-06, -0.02253854274749756, -3.814697265625e-06]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n", "score": -3.974539378737397, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.01790320873260498, -6.556510470545618e-06, -3.8489201068878174, -1.1920928244535389e-07, -0.0005550384521484375, -4.9591064453125e-05, -0.0010471343994140625, -2.288818359375e-05, -0.0006504058837890625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -3.576278118089249e-07, -0.018706321716308594, -1.9073486328125e-06, -0.0025538355112075806, -1.1444091796875e-05]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n", "score": -5.097351858471654, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.01790320873260498, -6.556510470545618e-06, -0.028585880994796753, -3.814697265625e-06, -0.001094818115234375, -7.2479248046875e-05, -0.0004100799560546875, -1.33514404296875e-05, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.57763671875e-05, -7.152555099310121e-07, -4.954919815063477, -5.7220458984375e-06, -0.009032860398292542, -3.814697265625e-06]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "WARRIOR", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -5.107682281659123, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -4.958574295043945, 0.0, -8.61880907905288e-05, -3.576278118089249e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00018310546875, -5.7220458984375e-06, -0.0004578827356453985, -5.960462203802308e-06, -0.00022137010819278657, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.000469207763671875, 0.0, -5.7220458984375e-06, -0.0001583099365234375, -0.00027561187744140625, -9.417489309271332e-06, -0.07618141174316406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3589850823336747e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.039830335183069e-05, -0.0001010894775390625, -0.0005130767822265625, -1.9073486328125e-05, -0.0003337860107421875, -2.6702880859375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.01783168315887451, -6.556510470545618e-06, -0.02857908606529236, -3.814697265625e-06, -0.0010929107666015625, -7.2479248046875e-05, -0.0004100799560546875, -1.33514404296875e-05, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.57763671875e-05, -7.152555099310121e-07, -0.014311075210571289, -1.9073486328125e-06, -0.0024486780166625977, -1.52587890625e-05]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "score": -5.115282172416926, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -4.923038959503174, 0.0, -0.002546757459640503, -5.841255187988281e-06, -0.048603057861328125, -5.340576171875e-05, -0.002460479736328125, -0.0001430511474609375, -0.0001850128173828125, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.14984130859375e-05, -7.152555099310121e-07, -0.051849365234375, -1.9073486328125e-06, -0.0022698044776916504, -1.1444091796875e-05]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(4)\n", "score": -5.403576726170229, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.01790320873260498, -6.556510470545618e-06, -5.186756134033203, 0.0, -0.011891365051269531, -0.0002155303955078125, -0.000675201416015625, -7.62939453125e-06, -0.000614166259765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -2.50339189733495e-06, -0.09877562522888184, -1.9073486328125e-06, -0.002581983804702759, -1.1563301086425781e-05]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        target = self.target\n", "score": -5.8068113868228295, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -4.152441024780273, -0.0004673004150390625, 0.0, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001747608184814453, -7.62939453125e-06, -7.5101784204889555e-06, -1.9073486328125e-06, -8.440017700195312e-05, -1.71661376953125e-05, -2.5868377633742057e-05, -0.0001010894775390625, -0.000438690185546875, -5.7220458984375e-06, -0.0002002716064453125, -4.38690185546875e-05, -5.53131103515625e-05, -1.52587890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.576278118089249e-07, -0.019665837287902832, -1.025199526338838e-05, -0.03643733263015747, -3.814697265625e-06, -0.015316009521484375, -2.288818359375e-05, -0.0002880096435546875, -3.0517578125e-05, -0.0002155303955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.38690185546875e-05, -8.344646857949556e-07, -0.024175047874450684, -1.9073486328125e-06, -0.0025047361850738525, -1.33514404296875e-05, -0.3750448226928711, -0.00029754638671875, -0.00055694580078125, -0.0001430511474609375, -3.814697265625e-06, -1.1612192392349243, 0.0, -0.00016021728515625, 0.0, -0.000553131103515625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -2.0265558760002023e-06]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(4)\n        self.target.increase_health(4)\n", "score": -5.869362199758825, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -5.745101451873779, -1.1444091796875e-05, -0.011518493294715881, -3.814697265625e-06, -0.00215911865234375, -9.1552734375e-05, -0.000431060791015625, -2.288818359375e-05, -0.0005168914794921875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.960462772236497e-07, -0.022866249084472656, -1.9073486328125e-06, -0.002520546317100525, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "score": -6.167855242372099, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -4.152441024780273, -0.0004673004150390625, 0.0, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001747608184814453, -7.62939453125e-06, -7.5101784204889555e-06, -1.9073486328125e-06, -8.440017700195312e-05, -1.71661376953125e-05, -2.5868377633742057e-05, -0.0001010894775390625, -0.000438690185546875, -5.7220458984375e-06, -0.0002002716064453125, -4.38690185546875e-05, -5.53131103515625e-05, -1.52587890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.576278118089249e-07, -0.019665837287902832, -1.025199526338838e-05, -0.03643733263015747, -3.814697265625e-06, -0.015316009521484375, -2.288818359375e-05, -0.0002880096435546875, -3.0517578125e-05, -0.0002155303955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.38690185546875e-05, -8.344646857949556e-07, -0.024175047874450684, -1.9073486328125e-06, -0.0025047361850738525, -1.33514404296875e-05, -1.7850799560546875, -5.14984130859375e-05, -0.0014667510986328125, -7.05718994140625e-05, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.91278076171875e-05, -1.1920922133867862e-06, -0.10928428173065186, -1.9073486328125e-06, -0.0029063671827316284, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(4)\n        self.target.increase_health(4)\n", "score": -6.7615884315087555, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -6.581045627593994, -1.5497207641601562e-05, -0.0005926317535340786, -4.172325134277344e-06, -0.03493309020996094, -0.000102996826171875, -0.0007038116455078125, -0.0001239776611328125, -0.0001811981201171875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -8.344646857949556e-07, -0.0575031042098999, -1.9073486328125e-06, -0.0022461116313934326, -1.1563301086425781e-05]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "ROGUE", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -6.793654912886467, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -6.637134552001953, -1.311301275563892e-06, -0.0001041889117914252, -2.2649765014648438e-06, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0001659393310546875, -5.7220458984375e-06, -0.000498771492857486, -4.29153169534402e-06, -0.0002220854366896674, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0004769563674926758, 0.0, -5.7220458984375e-06, -0.000152587890625, -0.0002663135528564453, -1.0609570381348021e-05, -0.0835866928100586, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.745887756347656e-05, -5.7220458984375e-06, -1.3470642443280667e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.230565198464319e-05, -0.0001010894775390625, -0.000518798828125, -1.9073486328125e-05, -0.000331878662109375, -2.6702880859375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.0178297758102417, -6.556510470545618e-06, -0.028560608625411987, -3.814697265625e-06, -0.0010986328125, -7.2479248046875e-05, -0.000408172607421875, -1.33514404296875e-05, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.57763671875e-05, -7.152555099310121e-07, -0.01427769660949707, -1.9073486328125e-06, -0.002448856830596924, -1.52587890625e-05]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "PRIEST", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "PRIEST", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.PRIEST(4)\n", "score": -6.911449099038862, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.01790320873260498, -6.556510470545618e-06, -0.028585880994796753, -3.814697265625e-06, -0.001094818115234375, -7.2479248046875e-05, -0.0004100799560546875, -1.33514404296875e-05, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.57763671875e-05, -7.152555099310121e-07, -6.774502277374268, -0.0001239776611328125, -0.0034255683422088623, -7.62939453125e-06]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>", 75, 102, 237, 44, 134, "option", "<EOS>", 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        option = self.target\n", "score": -7.362179691075454, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -4.152441024780273, -0.0004673004150390625, 0.0, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001747608184814453, -7.62939453125e-06, -7.5101784204889555e-06, -1.9073486328125e-06, -8.440017700195312e-05, -1.71661376953125e-05, -2.5868377633742057e-05, -0.0001010894775390625, -0.000438690185546875, -5.7220458984375e-06, -0.0002002716064453125, -4.38690185546875e-05, -5.53131103515625e-05, -1.52587890625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.576278118089249e-07, -0.019665837287902832, -1.025199526338838e-05, -0.03643733263015747, -3.814697265625e-06, -0.015316009521484375, -2.288818359375e-05, -0.0002880096435546875, -3.0517578125e-05, -0.0002155303955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.38690185546875e-05, -8.344646857949556e-07, -0.024175047874450684, -1.9073486328125e-06, -0.0025047361850738525, -1.33514404296875e-05, -0.3750448226928711, -0.00029754638671875, -0.00055694580078125, -0.0001430511474609375, -3.814697265625e-06, -1.9631427526474, 0.0, -0.5413036346435547, -5.7220458984375e-06, -0.21282577514648438, -1.9073486328125e-06, -2.110004425048828e-05, 0.0, -1.52587890625e-05, -2.0265558760002023e-06]}, {"choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 21, 134, "self", "<EOS>", "use", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfKings", "hole2": [{"hole1": 4, "hole0": "Blessing of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"_type": "Expr", "value": {"hole1": "use", "hole0": {"id": "self", "_type": "Name"}, "_type": "Template31", "hole2": 4}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.use(4)\n", "score": -8.108464935873087, "score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.01790320873260498, -6.556510470545618e-06, -0.028585880994796753, -3.814697265625e-06, -0.001094818115234375, -7.2479248046875e-05, -0.0004100799560546875, -1.33514404296875e-05, -7.099971771240234, -2.6702880859375e-05, -0.00038242340087890625, 0.0, -0.871978759765625, -1.060962586052483e-05, -0.003937885165214539, -1.52587890625e-05]}]}
{"index": 11, "beams": [{"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -0.06971801446398729, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043544769287109375, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0033855438232421875, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004913926124572754, -2.3603439331054688e-05, -0.01814264804124832, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -3.9206642601790094, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -3.874382495880127, -3.814697265625e-06, -1.9073486328125e-06, -0.0001678466796875, -7.62939453125e-06, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.001079559326171875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00016021728515625, -7.43865966796875e-05, -8.96453857421875e-05, -2.0265579223632812e-06, -0.000118255615234375, -5.91278076171875e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0016574859619140625, -7.62939453125e-06, -7.295608520507812e-05, 0.0, -0.0020720958709716797, 0.0, -4.76837158203125e-05, 0.0, -0.000102996826171875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017242431640625, -3.4332275390625e-05, -8.20159912109375e-05, -0.00083160400390625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043773651123046875, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.003391265869140625, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004913926124572754, -2.3603439331054688e-05, -0.01814616285264492, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score": -4.3198825754376315, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043544769287109375, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0033855438232421875, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004913926124572754, -2.3603439331054688e-05, -4.268307209014893, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "use", "<EOS>", "player", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "use", "hole3": "player"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(use, player)\n        self.target.change_attack(3)\n", "score": -5.660416282728519, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -5.559196472167969, -0.0001544952392578125, -0.004520416259765625, -3.814697265625e-06, -0.03322029113769531, -9.5367431640625e-06, -0.0008916854858398438, -4.57763671875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.005653738975524902, -2.372264862060547e-05, -0.01820668950676918, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": 1, "hole0": "Blessing of Might", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -5.7808592446816505, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -5.672283172607422, -3.24249267578125e-05, -1.823885577323381e-05, -0.0005004405975341797, -1.3470649719238281e-05, -2.6702880859375e-05, -2.1338462829589844e-05, 0.0, -1.58547300088685e-05, -1.1920928244535389e-07, -0.06712591648101807, 0.0, -0.002608180046081543, 0.0, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0005664825439453125, -2.47955322265625e-05, -5.388259160099551e-05, -2.2649765014648438e-06, -0.0008287429227493703, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001773834228515625, 0.0, -1.33514404296875e-05, -2.47955322265625e-05, -2.7060508728027344e-05, -4.768370445162873e-07, -0.0021686553955078125, -3.0517578125e-05, -7.82012939453125e-05, -0.00075531005859375, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0047397613525390625, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.003215789794921875, -1.71661376953125e-05, -0.0001735687255859375, -0.0001392364501953125, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004954934120178223, -2.3603439331054688e-05, -0.018292376771569252, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "Spell", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 0}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(0)\n", "score": -5.907080356046762, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043544769287109375, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0033855438232421875, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004913926124572754, -2.3603439331054688e-05, -5.851289749145508, -0.004215240478515625]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -6.118901785245178, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043544769287109375, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -5.750360488891602, -0.0004901885986328125, -1.33514404296875e-05, -1.33514404296875e-05, -0.0004787445068359375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.3841855067985307e-07, -0.16786015033721924, -5.960462772236497e-07, -0.000118255615234375, -0.13458919525146484, -0.002887725830078125, -0.01824376732110977, -0.0010570434387773275]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -6.571214362992848, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -6.504347324371338, 0.0, -2.110004425048828e-05, 0.0, -0.0001049041748046875, 0.0, -6.4849853515625e-05, -4.00543212890625e-05, -2.2172927856445312e-05, -1.6689286894688848e-06, -0.0012416839599609375, -3.24249267578125e-05, -5.7220458984375e-05, -0.000919342041015625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.5616416931152344e-05, 0.0, -2.47955322265625e-05, -3.933906555175781e-06, -0.0038623809814453125, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0035305023193359375, -1.52587890625e-05, -0.0001697540283203125, -0.000171661376953125, -9.34600830078125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004793763160705566, -2.3603439331054688e-05, -0.018174272030591965, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(3)\n", "score": -6.743303064272013, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043544769287109375, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0033855438232421875, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -5.91950798034668, -0.00051116943359375, -0.776646077632904, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -6.807927873000651, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -6.740362167358398, 0.0, -3.62396240234375e-05, -0.0003032684326171875, -4.00543212890625e-05, -7.2479248046875e-05, -2.0265579223632812e-06, -8.0108642578125e-05, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00139617919921875, -7.62939453125e-06, -5.030632019042969e-05, 0.0, -0.002230405807495117, 0.0, -4.57763671875e-05, 0.0, -0.0001087188720703125, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -7.152555099310121e-07, -0.0017032623291015625, -3.4332275390625e-05, -8.20159912109375e-05, -0.00083160400390625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.00443267822265625, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0034027099609375, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004921555519104004, -2.3603439331054688e-05, -0.018160425126552582, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -6.862349871561136, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043544769287109375, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0033855438232421875, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -5.91950798034668, -0.00051116943359375, -0.8956928849220276, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n", "score": -7.2720756717177295, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043544769287109375, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0033855438232421875, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -7.21533727645874, -3.814697265625e-06, -0.010096743702888489, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -7.4187577311100625, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -7.3723978996276855, -1.1444091796875e-05, 0.0, -8.58306884765625e-05, -7.62939453125e-06, 0.0, -0.0002117156982421875, 0.0, -0.0012551546096801758, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -6.866455078125e-05, -9.918212890625e-05, -2.0265579223632812e-06, -0.0001163482666015625, -5.53131103515625e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0016880035400390625, -7.62939453125e-06, -7.295608520507812e-05, 0.0, -0.002058744430541992, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017108917236328125, -3.4332275390625e-05, -8.20159912109375e-05, -0.0008335113525390625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.004364013671875, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0033931732177734375, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004913926124572754, -2.3603439331054688e-05, -0.018140187487006187, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.change_attack(3)\n        self.target.change_attack(3)\n", "score": -7.691781952058179, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -6.474581718444824, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002994537353515625, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.940695806813892e-06, -1.9073486328125e-06, -2.300739288330078e-05, -3.933906555175781e-06, -0.0008258819580078125, -5.7220458984375e-06, -4.0531158447265625e-06, -1.1444091796875e-05, -0.048099517822265625, -1.1444091796875e-05, -9.1552734375e-05, -0.0007572174072265625, -8.96453857421875e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -0.005679607391357422, -2.0861623852397315e-05, -0.011974251829087734, 0.0, -0.14828872680664062, -5.7220458984375e-06, -0.0022525787353515625, -0.0001316070556640625, -0.000194549560546875, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -2.3841855067985307e-07, -0.23464977741241455, -4.0531158447265625e-06, -0.018948644399642944, 0.0, -0.11553382873535156, -3.0517578125e-05, -0.001308441162109375, -0.0001010894775390625, -0.00028228759765625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -0.5625220537185669, -3.933906555175781e-06, -0.02922988310456276, 0.0]}, {"choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "BlessingOfMight", "hole2": [{"hole1": 1, "hole0": "Blessing of Might", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -8.675272132347793, "score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -8.45885181427002, -0.0024089813232421875, -7.390948667307384e-06, -0.0006606578826904297, -7.867813110351562e-06, -5.733966827392578e-05, -2.8252599804545753e-05, 0.0, -0.00010191878391196951, -9.536738616588991e-07, -0.17888057231903076, 0.0, -0.000530822784639895, 0.0, -0.00021123886108398438, 0.0, -0.0002696514129638672, 0.0, -0.000118255615234375, -3.4332275390625e-05, -7.510183422709815e-06, -1.9073468138230965e-06, -0.002483367919921875, -1.52587890625e-05, -2.288818359375e-05, -0.0003108978271484375, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3245811462402344e-05, 0.0, -1.9073486328125e-05, -5.9604644775390625e-06, -0.00348663330078125, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.001995086669921875, -1.71661376953125e-05, -0.0001735687255859375, -0.0001468658447265625, -9.1552734375e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.004887104034423828, -2.3603439331054688e-05, -0.01775859110057354, 0.0]}]}
{"index": 12, "beams": [{"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -0.0073248143643027674, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -0.0035123825073242188, 0.0, -4.172325134277344e-06, 0.0, -0.0003790855407714844, 0.0, -1.1444091796875e-05, -0.000797271728515625, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -6.639957427978516e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.7665839190930015, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -5.763082504272461, 0.0, -4.291534423828125e-06, 0.0, -0.0003933906555175781, 0.0, -4.00543212890625e-05, -0.0004215240478515625, -2.47955322265625e-05, -1.728534698486328e-05, 0.0, -6.699562072753906e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Bloodfen", " ", "Raptor", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -6.946574811264412, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.9046220779418945, -0.012592315673828125, -4.57763671875e-05, 0.0, -1.0728831512096804e-05, 0.0, -0.00018930435180664062, -1.9073486328125e-06, -0.002086639404296875, -0.0001373291015625, -4.1961669921875e-05, -4.172316494077677e-06, -9.95397349470295e-05, -7.987019671418238e-06, -2.1457672119140625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -0.00022077558969613165, -5.960462772236497e-07, -0.0002231597900390625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -8.642664033686742e-05, -1.1920928244535389e-07, -0.020583629608154297, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0004029273986816406, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -5.960462772236497e-07, -1.9073486328125e-06, -0.000438690185546875, -5.91278076171875e-05, -0.0008451938629150391, -2.0265373677830212e-05, -0.00037019693991169333, 0.0, -0.002540064277127385, 0.0, -7.62939453125e-06, -0.00023651123046875, -4.1961669921875e-05, -1.71661376953125e-05, -1.1920928244535389e-07, -0.00010323524475097656, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True)\n", "score": -8.192140813895357, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -0.0035123825073242188, 0.0, -4.172325134277344e-06, 0.0, -0.0003790855407714844, 0.0, -1.1444091796875e-05, -7.568794250488281, -0.0001125335693359375, 0.0, -3.576278118089249e-07, -5.9604644775390625e-05, -8.344646857949556e-07, -0.6148210763931274, -4.768370445162873e-07, -0.0017337799072265625, -4.1961669921875e-05, -0.00011908680608030409, -1.6689260519342497e-05]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -8.601433394495736, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -8.594548225402832, 0.0, -8.153765520546585e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -4.780292510986328e-05, 0.0, -0.0035545825958251953, 0.0, -4.172325134277344e-06, 0.0, -0.0004671812057495117, 0.0, -1.1444091796875e-05, -0.000701904296875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -6.830692291259766e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 3, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -9.098583936281024, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -9.09100341796875, 0.0, -0.0007135868072509766, 0.0, -0.0002273320860695094, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -0.0034781694412231445, 0.0, -4.172325134277344e-06, 0.0, -0.00037729740142822266, 0.0, -1.1444091796875e-05, -0.0007724761962890625, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -6.830692291259766e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -9.107224583193648, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -9.103800773620605, 0.0, -5.7220458984375e-06, 0.0, -0.00016069412231445312, 0.0, -5.14984130859375e-05, -0.000576019287109375, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -7.390975952148438e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "COMMON", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "COMMON"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, COMMON=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -9.11766421760408, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -9.11126708984375, 0.0, -8.0108642578125e-05, -7.62939453125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.3709068298339844e-05, 0.0, -0.002375960350036621, 0.0, -4.172325134277344e-06, 0.0, -0.000870823860168457, 0.0, -9.5367431640625e-06, -0.000789642333984375, -1.1444091796875e-05, -1.3470649719238281e-05, 0.0, -7.975101470947266e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n", "score": -9.126038669642043, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -0.0035123825073242188, 0.0, -4.172325134277344e-06, 0.0, -0.0003790855407714844, 0.0, -1.1444091796875e-05, -8.304113388061523, -0.5518960952758789, -0.12346768379211426, -0.12095069885253906, -4.684925079345703e-05, 0.0, -7.867813110351562e-06, 0.0, -0.007822275161743164, 0.0, -0.006029128562659025, -1.1920928244535389e-07, -0.001743316650390625, -2.09808349609375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000995635986328125, 0.0, -0.0024834871292114258, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"id": "MINION_TYPE", "_type": "Name"}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -9.342943071886886, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -9.338462829589844, -4.00543212890625e-05, -0.0005400180816650391, -5.7220458984375e-06, -0.00027883052825927734, 0.0, -0.00016224384307861328, 0.0, -1.9073486328125e-05, -0.0010128021240234375, -1.52587890625e-05, -9.655952453613281e-06, 0.0, -5.257129669189453e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -9.35319328264891, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -9.349846839904785, 0.0, -3.814697265625e-06, 0.0, -0.00015079975128173828, 0.0, -7.43865966796875e-05, -0.000469207763671875, -2.288818359375e-05, -1.919269561767578e-05, 0.0, -7.30752944946289e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 2)\n", "score": -9.629028677500948, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -0.0035123825073242188, 0.0, -4.172325134277344e-06, 0.0, -9.607741355895996, 0.0, -3.814697265625e-06, -0.015126228332519531, -3.24249267578125e-05, -6.079673767089844e-06, 0.0, -6.914138066349551e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -9.644350051447738, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -0.0035123825073242188, 0.0, -4.172325134277344e-06, 0.0, -0.0003790855407714844, 0.0, -1.1444091796875e-05, -0.000797271728515625, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -9.637091636657715, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "Dead", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": "Bloodfen Raptor", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "Dead", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, Dead):\n        return Minion(3, 2)\n", "score": -9.718985318705428, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -0.0035123825073242188, 0.0, -4.172325134277344e-06, 0.0, -9.71082592010498, -1.9073486328125e-05, -1.71661376953125e-05, -0.00196075439453125, -3.0517578125e-05, -1.1563301086425781e-05, 0.0, -7.069110870361328e-05, 0.0]}, {"choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BloodfenRaptor", "hole2": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        return Minion(3, 2)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -10.110026122290897, "score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -10.039678573608398, -0.011289596557617188, -0.005085110664367676, -8.821448318485636e-06, -4.482269287109375e-05, 0.0, -0.04994741082191467, -1.9073486328125e-06, -0.0007031873683445156, 0.0, -7.05718994140625e-05, -0.002712249755859375, -2.6702880859375e-05, -5.841255187988281e-06, -2.3841855067985307e-07, -8.809566497802734e-05, -1.1920928244535389e-07]}]}
{"index": 13, "beams": [{"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 3}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score": -0.0853982071277457, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -0.023839950561523438, -0.0014972686767578125, -5.7220458984375e-05, -7.05718994140625e-05, -0.0012286901473999023, -9.1552734375e-05, -0.009598731994628906, -8.0108642578125e-05, -0.0027605858631432056, 0.0]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 3}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score": -4.882626737176899, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -4.800562381744385, 0.0, -0.006752967834472656, 0.0, -9.775161743164062e-06, 0.0, -0.00048828125, -2.288818359375e-05, -0.000152587890625, -2.622604142743512e-06, -0.00438690185546875, -1.52587890625e-05, -0.0003528594970703125, -0.0007953643798828125, -7.62939453125e-06, -0.00018310546875, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0003414154052734375, 0.0, -4.38690185546875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.0005016326904296875, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.007100105285644531, -6.866455078125e-05, -0.0008726119995117188, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.0001983642578125, -1.9073486328125e-06, -0.01688849925994873, -1.9073486328125e-05, -0.00031280517578125, -0.0008869171142578125, -0.00014495849609375, -0.023813247680664062, -0.001495361328125, -5.7220458984375e-05, -7.05718994140625e-05, -0.0012286901473999023, -9.1552734375e-05, -0.009675979614257812, -8.0108642578125e-05, -0.0027821180410683155, 0.0]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack()\n", "score": -5.027856541972305, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -3.889920234680176, -3.24249267578125e-05, -0.001277923583984375, -5.7220458984375e-06, -0.011911392211914062, -0.006907463073730469, -1.0716087818145752, -1.9073486328125e-05]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "mana", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "mana", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 3}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.mana:\n            minion.change_temp_attack(3)\n", "score": -5.113048920349847, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -4.850638389587402, -1.33514404296875e-05, -0.02055644989013672, -0.0001621246337890625, -0.0003185272216796875, -0.19646835327148438, -0.0026702880859375, -4.76837158203125e-05, -8.20159912109375e-05, -0.002691507339477539, -0.0001621246337890625, -0.008359551429748535, -0.0001430511474609375, -0.0028733571525663137, 0.0]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 5}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(5)\n", "score": -6.17518074641719, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -0.023839950561523438, -0.0014972686767578125, -5.7220458984375e-05, -7.05718994140625e-05, -0.0012286901473999023, -9.1552734375e-05, -0.009598731994628906, -8.0108642578125e-05, -6.092540740966797, -2.384185791015625e-06]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "minion", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.minion()\n", "score": -6.2508751882125395, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -3.889920234680176, -3.24249267578125e-05, -0.001277923583984375, -5.7220458984375e-06, -0.011911392211914062, -0.006907463073730469, -2.2946407794952393, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 3}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in player.minions:\n            minion.change_temp_attack(3)\n", "score": -6.408149905910413, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -5.43023681640625, -3.814697265625e-06, -0.7700128555297852, -0.001644134521484375, -4.76837158203125e-05, -1.9073486328125e-05, -0.03151416778564453, 0.0, -0.10559916496276855, -1.1444091796875e-05, -0.0001392364501953125, -0.00113677978515625, -0.00011444091796875, -0.03185844421386719, -0.001621246337890625, -6.29425048828125e-05, -6.866455078125e-05, -0.0012191534042358398, -8.7738037109375e-05, -0.010396599769592285, -7.82012939453125e-05, -0.0027674383018165827, 0.0]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 3}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.hero:\n            minion.change_temp_attack(3)\n", "score": -6.450462341017719, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -6.358027935028076, 0.0, -0.0052013397216796875, -0.0002155303955078125, -0.000640869140625, -0.042410850524902344, -0.0012493133544921875, -4.57763671875e-05, -7.05718994140625e-05, -0.0034449100494384766, -0.0003108978271484375, -0.007334589958190918, -0.00012969970703125, -0.003517912235110998, 0.0]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.<UNK>()\n", "score": -6.471068097453262, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -3.889920234680176, -3.24249267578125e-05, -0.001277923583984375, -5.7220458984375e-06, -0.011911392211914062, -0.006907463073730469, -2.5148375034332275, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "3", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 3}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.3(3)\n", "score": -6.52078787813678, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -0.023839950561523438, -0.0014972686767578125, -5.7220458984375e-05, -7.05718994140625e-05, -0.0012286901473999023, -9.1552734375e-05, -6.3211669921875, 0.0, -0.12666210532188416, 0.0]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "check_delayed", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.check_delayed()\n", "score": -6.531790925364639, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -3.889920234680176, -3.24249267578125e-05, -0.001277923583984375, -5.7220458984375e-06, -0.011911392211914062, -0.006907463073730469, -2.5755603313446045, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "bounce", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "bounce", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.bounce()\n", "score": -6.877627803187515, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -3.889920234680176, -3.24249267578125e-05, -0.001277923583984375, -5.7220458984375e-06, -0.011911392211914062, -0.006907463073730469, -2.9213907718658447, -8.344650268554688e-06]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "c", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -6.902248951548408, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -5.43023681640625, -3.814697265625e-06, -0.9059982299804688, -0.0007305145263671875, -0.0065460205078125, -1.71661376953125e-05, -0.008943557739257812, -0.000370025634765625, -7.05718994140625e-05, -0.01308441162109375, -1.1444091796875e-05, -0.0006503954064100981, -0.000171661376953125, -0.06485748291015625, 0.0, -0.39285555481910706, -3.933906555175781e-06, -0.04684638977050781, -0.0004329681396484375, -7.2479248046875e-05, -0.004486083984375, -2.6702880859375e-05, -0.0009632110595703125, -1.9073486328125e-06, -0.0016698837280273438, -0.0001277923583984375, -0.0035600662231445312, 0.0]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "choose_option", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "choose_option", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 3}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.choose_option:\n            minion.change_temp_attack(3)\n", "score": -6.950626042147796, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -6.769044399261475, 0.0, -0.03404521942138672, -0.000469207763671875, -0.0006046295166015625, -0.09688568115234375, -0.0023040771484375, -5.14984130859375e-05, -8.20159912109375e-05, -0.004533171653747559, -0.00029277801513671875, -0.011148452758789062, -0.0001087188720703125, -0.0031940473709255457, 0.0]}, {"choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "deathrattle", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Bloodlust", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "deathrattle", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.deathrattle()\n", "score": -6.9686687720824665, "score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -3.889920234680176, -3.24249267578125e-05, -0.001277923583984375, -5.7220458984375e-06, -0.011911392211914062, -0.006907463073730469, -3.0124399662017822, -1.1920928244535389e-07]}]}
{"index": 14, "beams": [{"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -0.03513818636394461, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -0.013138532638549805, -1.9073486328125e-06, -0.000148773193359375, -4.38690185546875e-05, -7.748603820800781e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -4.278183516267454, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.259303569793701, 0.0, -4.6491462853737175e-05, 0.0, -2.7418136596679688e-05, 0.0, -5.7220458984375e-06, -0.001811981201171875, -0.0001373291015625, -4.982948303222656e-05, -3.933904736186378e-06, -2.1457672119140625e-06, -9.536738616588991e-07, -0.013640880584716797, -1.9073486328125e-06, -0.000141143798828125, -4.1961669921875e-05, -7.748603820800781e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, windfury=True)\n", "score": -5.681270417122612, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -5.658486843109131, 0.0, -0.0009517669677734375, -2.47955322265625e-05, -9.655952453613281e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score": -5.796502884773979, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -5.774077892303467, -1.9073486328125e-06, -0.0005855560302734375, -2.6702880859375e-05, -1.3470649719238281e-05, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "divine_shield", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, divine_shield=True)\n", "score": -5.983311470894584, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -5.960592746734619, 0.0, -0.00089263916015625, -1.33514404296875e-05, -1.537799835205078e-05, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -6.238926824458524, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.2184014320373535, 0.0, -1.621242699911818e-05, 0.0, -2.7894973754882812e-05, 0.0, -2.47955322265625e-05, -0.000518798828125, -1.33514404296875e-05, -6.890296936035156e-05, -1.9073468138230965e-06, -1.1920923270736239e-07, -8.344646857949556e-07, -0.01669931411743164, -1.9073486328125e-06, -0.000133514404296875, -4.9591064453125e-05, -7.748603820800781e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, taunt=True)\n", "score": -6.712511834053764, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -6.690561771392822, 0.0, -0.0001392364501953125, -9.5367431640625e-06, -3.933906555175781e-06, 0.0]}, {"choice_history": [70, 147, "<UNK>", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Warrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Warrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -6.813462257428334, "score_history": [-0.000152587890625, -9.5367431640625e-05, -6.779444694519043, -9.536738616588991e-07, -7.033323527139146e-06, -1.311301275563892e-06, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-05, -0.0003452301025390625, -2.3841855067985307e-07, -0.00014495849609375, -3.933906555175781e-06, 0.0, -0.00015366087609436363, -1.1920928244535389e-07, -0.0006870031356811523, 0.0, -5.435943603515625e-05, -2.3841855067985307e-07, -2.288818359375e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.017387747764587402, -3.933906555175781e-06, -0.0001535415358375758, 0.0, -1.7881393432617188e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -0.013207197189331055, -1.9073486328125e-06, -0.000148773193359375, -4.38690185546875e-05, -7.748603820800781e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "MAGE", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, MAGE=True)\n", "score": -7.050147351168668, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -7.0238118171691895, -2.4318689611391164e-05, -0.004483222961425781, -1.71661376953125e-05, -1.3470649719238281e-05, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -7.972872670985815, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -7.938991069793701, 0.0, -3.8742997276131064e-05, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.016413211822509766, -3.933906555175781e-06, -0.0001901387731777504, 0.0, -1.990795135498047e-05, 0.0, -5.7220458984375e-06, -0.001155853271484375, -6.29425048828125e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -7.152555099310121e-07, -0.013530135154724121, -1.9073486328125e-06, -0.000152587890625, -4.76837158203125e-05, -7.748603820800781e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.243977722065821, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -8.219758033752441, -9.5367431640625e-05, -0.0035610198974609375, -1.1920928244535389e-07, 0.0, -5.483612312673358e-06]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MINION_TYPE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MINION_TYPE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MINION_TYPE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -8.647109087378674, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -8.628785133361816, -1.8238983102492057e-05, -0.00016152813623193651, 0.0, -2.4557111828471534e-05, 0.0, -2.47955322265625e-05, -0.0006885528564453125, -0.000102996826171875, -9.942054748535156e-05, -1.5497195136049413e-06, -1.1920923270736239e-07, -8.344646857949556e-07, -0.01403665542602539, 0.0, -0.00017547607421875, -2.288818359375e-05, -5.841255187988281e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -8.84830289736663, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -8.822979927062988, -0.007132291793823242, 0.0, -1.0371208190917969e-05, 0.0, -3.62396240234375e-05, -0.0013713836669921875, -0.000164031982421875, -3.826618194580078e-05, -5.125986263010418e-06, 0.0, -1.311301275563892e-06, -0.0133591890335083, -1.9073486328125e-06, -0.0001735687255859375, -5.91278076171875e-05, -9.655952453613281e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 1, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -8.86251598240667, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -8.824450492858887, 0.0, -0.0035630464553833008, 0.0, -5.257129669189453e-05, -1.1920928244535389e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.016899466514587402, -3.933906555175781e-06, -0.00016844271158333868, 0.0, -1.7881393432617188e-05, 0.0, -3.814697265625e-06, -0.000911712646484375, -4.9591064453125e-05, -7.641315460205078e-05, -2.3841830625315197e-06, -1.1920923270736239e-07, -8.344646857949556e-07, -0.014092206954956055, -1.9073486328125e-06, -0.0001544952392578125, -3.4332275390625e-05, -7.748603820800781e-06, 0.0]}, {"choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "BluegillWarrior", "hole2": [{"hole1": 2, "hole0": "Bluegill Warrior", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -10.34594413295246, "score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -8.453239440917969, 0.0, -0.06551837921142578, -0.13306427001953125, -0.0024281740188598633, -1.9073486328125e-06, -8.0108642578125e-05, -0.23563480377197266, -0.0018901824951171875, -0.48339739441871643, -7.748603820800781e-06, -0.17453956604003906, 0.0, -0.7743390798568726, -3.814697265625e-06, -1.9073486328125e-06]}]}
{"index": 15, "beams": [{"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.015233872543781501, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -0.0010409355163574219, -1.0609603123157285e-05, -0.0005068714963272214, 0.0, -0.00275493785738945, 0.0, -9.5367431640625e-06, -0.0002155303955078125, -4.57763671875e-05, -7.152605121518718e-07, -2.264974000354414e-06, -8.349052222911268e-07, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -6.178087943397458, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -6.04533576965332, -2.86102294921875e-05, 0.0, -0.00039344120887108147, -4.768370445162873e-07, -0.0011997221736237407, 0.0, -0.0009593963623046875, -0.00109100341796875, -0.0034084320068359375, -2.3841855067985307e-07, -5.6028297876764555e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0442231185734272, 0.0, -3.0517578125e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -7.450579141732305e-05, -8.344646857949556e-07, -0.0032860187347978354, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00016880035400390625, -1.9073468138230965e-06, -0.0002067088062176481, 0.0, -0.001422882080078125, -0.0002803802490234375, -1.919269561767578e-05, -3.576278118089249e-07, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0045092105865478516, -5.710124969482422e-05, -0.014759897254407406, -2.0265579223632812e-06, -6.21080253040418e-05, 0.0, -0.05178093910217285, -1.9073486328125e-06, -1.33514404296875e-05, -0.003292083740234375, -8.20159912109375e-05, 0.0, -4.768370445162873e-07, -1.1926531442441046e-06, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "Minion", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, Minion):\n        return Minion(1, 1)\n", "score": -6.356264697447926, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -0.0010409355163574219, -1.0609603123157285e-05, -0.0005068714963272214, 0.0, -6.338613510131836, -0.0047817230224609375, -3.814697265625e-06, -0.000591278076171875, -6.866455078125e-05, -8.344695743289776e-07, -8.344646857949556e-07, 1.1879637895617634e-07, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.5533198941891015, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -6.4748945236206055, -0.0009441375732421875, -0.0001220703125, -1.1920922133867862e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -7.05718994140625e-05, -0.0025145597755908966, 0.0, -0.0006618499755859375, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00014317034219857305, -3.576278118089249e-07, -0.0012538193259388208, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.00013649463653564453, -1.9073468138230965e-06, -0.00016295899695251137, 0.0, -0.0010128021240234375, -0.00030517578125, -2.09808349609375e-05, -3.576278118089249e-07, -0.0002613067626953125, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.009602904319763184, -5.698204040527344e-05, -0.021855471655726433, -1.9073486328125e-06, -0.001430511474609375, -0.00144195556640625, -0.00012969970703125, -0.001736760139465332, -5.245203283266164e-06, -0.0008024409180507064, 0.0, -0.028635727241635323, 0.0, -5.7220458984375e-06, -0.000385284423828125, -4.00543212890625e-05, 5.960462772236497e-07, -2.145764938177308e-06, 7.150210876716301e-07, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -7.184699999611951, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -0.0010409355163574219, -1.0609603123157285e-05, -0.0005068714963272214, 0.0, -7.171957969665527, 0.0, -3.814697265625e-06, -0.000446319580078125, -8.7738037109375e-05, 2.3841846541472478e-07, -1.1920928244535389e-07, -8.003553375601768e-10, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Boar", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": 1, "hole0": "Boar", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -7.24115882798862, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -7.22532844543457, -0.0001430511474609375, -1.1920928244535389e-07, -0.00031442526960745454, -9.542636689729989e-07, -1.5497195136049413e-06, -0.0033934114035218954, 0.0, -0.003570706583559513, -1.1920928244535389e-07, -0.0002727508544921875, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001627206802368164, -2.0265579223632812e-06, -0.00420987606048584, 0.0, -4.172325134277344e-06, 0.0, -0.0023267269134521484, 0.0, -1.9073486328125e-05, -0.000911712646484375, -2.288818359375e-05, -1.0728883808042156e-06, -1.1920928244535389e-07, -2.863882400561124e-06, 0.0]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "Minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "Minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def Minion(self, player):\n        return Minion(1, 1)\n", "score": -7.654922772999335, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -0.0010409355163574219, -1.0609603123157285e-05, -7.599926471710205, -0.0045928955078125, -0.03834300860762596, 0.0, -1.1444091796875e-05, -0.0002956390380859375, -5.340576171875e-05, -7.152605121518718e-07, -1.0728830375228426e-06, -7.15594069333747e-07, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "DEMON", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.061736705685412, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -8.04258918762207, -9.179109838441946e-06, -0.0036377571523189545, 0.0, -0.0046567153185606, 0.0, -9.5367431640625e-06, -0.0001506805419921875, -3.4332275390625e-05, -7.152605121518718e-07, -1.311301275563892e-06, -1.4309352991404012e-06, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "MURLOC", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.580081498208024, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -8.561965942382812, -1.215934389620088e-05, -0.0015195246087387204, 0.0, -0.005780894309282303, 0.0, -1.52587890625e-05, -9.72747802734375e-05, -4.1961669921875e-05, -7.275957614183426e-12, -1.9073468138230965e-06, -7.155449566198513e-07, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "PIRATE", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.841251674514446, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -8.824332237243652, 0.0, -0.004635312128812075, 0.0, -0.0014451462775468826, 0.0, -2.09808349609375e-05, -0.000125885009765625, -4.1961669921875e-05, -3.576337803679053e-07, -3.099436753473128e-06, -7.156450010370463e-07, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -9.13076423347433, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -9.114757537841797, -7.82012939453125e-05, -9.34600830078125e-05, -3.576278118089249e-07, -4.88758041683468e-06, 0.0, -4.38690185546875e-05, -0.00011538586113601923, -5.960462772236497e-07, -9.5367431640625e-06, -6.103515625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00024032570945564657, -1.1920928244535389e-07, -0.00045124872121959925, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -0.0001558065414428711, -3.576278118089249e-07, -0.00013422964548226446, 0.0, -0.0008544921875, -0.00321197509765625, -0.0001735687255859375, -0.001566171646118164, -1.1920928244535389e-07, -8.594726386945695e-05, 0.0, -0.0033121872693300247, 0.0, -3.814697265625e-06, -0.0007648468017578125, -4.00543212890625e-05, -7.152564194257138e-07, -4.768370445162873e-07, -3.58271790901199e-07, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "DRAGON", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -9.205647092230642, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -9.19091796875, -4.172325134277344e-06, -0.0013436609879136086, 0.0, -0.0025368276983499527, 0.0, -1.9073486328125e-05, -0.000141143798828125, -3.62396240234375e-05, -3.576337803679053e-07, -1.9073468138230965e-06, 2.3805478122085333e-07, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "1", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "1", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.1, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -9.211523056131043, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -9.195940017700195, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0006798505783081055, -3.576278118089249e-07, -6.663796375505626e-05, 0.0, -0.000255584716796875, -8.96453857421875e-05, -6.103515625e-05, -7.152555099310121e-07, -5.91278076171875e-05, -0.00081634521484375, -0.0001430511474609375, -0.0010981559753417969, -1.3112978194840252e-05, -0.0004966246197000146, 0.0, -0.0023169545456767082, 0.0, -7.62939453125e-06, -0.0002117156982421875, -4.76837158203125e-05, -5.960516773484414e-07, -2.7418097943154862e-06, -4.656612873077393e-10, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Boar", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -9.275061598884925, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -6.04533576965332, -2.86102294921875e-05, 0.0, -0.00039344120887108147, -4.768370445162873e-07, -0.0011997221736237407, 0.0, -0.0009593963623046875, -0.00109100341796875, -0.0034084320068359375, -2.3841855067985307e-07, -5.6028297876764555e-06, -3.814697265625e-06, -7.62939453125e-06, -3.1418983936309814, -1.9073486328125e-06, -4.9591064453125e-05, -6.866455078125e-05, -1.1444091796875e-05, 0.0, -5.435941420728341e-05, -5.960462772236497e-07, -0.004093707073479891, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, -1.52587890625e-05, -0.00018203258514404297, -1.7881377516459906e-06, -0.0002343653468415141, 0.0, -0.00128936767578125, -0.000301361083984375, -1.919269561767578e-05, -3.576278118089249e-07, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-06, -0.004354715347290039, -5.710124969482422e-05, -0.0138472318649292, -2.0265579223632812e-06, -5.877016519661993e-05, 0.0, -0.05138063430786133, -1.9073486328125e-06, -1.33514404296875e-05, -0.0032806396484375, -8.20159912109375e-05, -1.1920926823449918e-07, -4.768370445162873e-07, -1.3118587958160788e-06, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, taunt=True)\n", "score": -9.608789199940688, "score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -0.0010409355163574219, -1.0609603123157285e-05, -0.0005068714963272214, 0.0, -0.00275493785738945, 0.0, -9.5367431640625e-06, -8.660811424255371, -0.00621795654296875, 1.1920928244535389e-07, -8.821448318485636e-06, -3.3378937587258406e-06, -7.152555099310121e-07, -0.4088629484176636, 0.0, -0.5166769027709961, -0.0008373260498046875, -0.0003869500069413334, -1.4424285836867057e-05]}]}
{"index": 16, "beams": [{"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -0.2133559467193109, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -0.018404006958007812, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001468658447265625, -2.3841855067985307e-07, -0.01251983642578125, -1.71661376953125e-05, -3.814697265625e-06, -4.57763671875e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.62396240234375e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0072612762451171875, -1.9073486328125e-06, -0.000110626220703125, -0.0001125335693359375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0033799409866333008, -1.9073486328125e-06, -0.03856205940246582, 0.0, -0.001972198486328125, -5.14984130859375e-05, -0.00182342529296875, -0.00067901611328125, -0.0001697540283203125, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.768370445162873e-07, -0.007841348648071289, -2.3841855067985307e-07, -4.1961669921875e-05, -0.005436897277832031, -0.0015888214111328125, -0.001159238163381815, -7.49826431274414e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 4}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -3.722190106768757, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -0.018404006958007812, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001468658447265625, -2.3841855067985307e-07, -0.01251983642578125, -1.71661376953125e-05, -3.814697265625e-06, -4.57763671875e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.62396240234375e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0072612762451171875, -1.9073486328125e-06, -0.000110626220703125, -0.0001125335693359375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0033799409866333008, -1.9073486328125e-06, -3.5249807834625244, -9.5367431640625e-06, -0.023761749267578125, -3.814697265625e-05, -0.0013065338134765625, -0.000316619873046875, -0.000392913818359375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.768370445162873e-07, -0.007881402969360352, -2.3841855067985307e-07, -7.43865966796875e-05, -0.0064029693603515625, -0.0014801025390625, -0.0015265584224835038, -6.365776062011719e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Charge", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Charge", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 3, "hole0": "Charge", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_friendly_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -4.244722761763079, "score_history": [-2.5715866088867188, -0.0002593994140625, -1.33514404296875e-05, -0.0005035400390625, -3.814697265625e-05, -1.1920922133867862e-06, -0.09471575170755386, -2.09808349609375e-05, -9.1552734375e-05, -0.0001163482666015625, -0.0006279775407165289, -0.0002765655517578125, 0.0, -0.000377655029296875, -0.0015630722045898438, -0.0005855560302734375, -1.311301275563892e-06, -0.05670277401804924, -4.410715973790502e-06, -2.3841855067985307e-07, -0.010399341583251953, 0.0, -0.02161240577697754, 0.0, -0.0015202758368104696, -5.841255187988281e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.0004444122314453125, -1.9073486328125e-06, -0.0012187957763671875, -1.9073486328125e-06, -0.0005761384963989258, 0.0, -0.29620838165283203, 0.0, -0.06073880195617676, 0.0, -0.0029840469360351562, -0.0001811981201171875, -0.0001811981201171875, -0.000152587890625, -0.050708770751953125, -3.266334533691406e-05, -0.0017099380493164062, -0.0002002716064453125, -6.29425048828125e-05, -0.0010585784912109375, -0.0033597946166992188, -0.0005092620849609375, -0.0006561279296875, -7.62939453125e-06, -0.1490020751953125, 0.0, -0.1670393943786621, 0.0, -0.0015459059504792094, -2.50339189733495e-06, -3.0517578125e-05, -0.2709522247314453, -1.9073486328125e-05, -0.002079010009765625, -1.1444091796875e-05, -0.006594657897949219, -5.7220458984375e-06, -0.005166719667613506, 0.0, -0.256298303604126, 0.0, -0.0050411224365234375, 0.0, -0.029935836791992188, 0.0, -0.06411300599575043, 0.0, -0.0010455846786499023, -3.814697265625e-06, -7.62939453125e-05, -7.62939453125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -6.103515625e-05, -0.009897232055664062, -0.000171661376953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.62396240234375e-05, -4.1961669921875e-05, -1.71661376953125e-05, -6.866455078125e-05, -0.002044677734375, -2.3841855067985307e-07, -0.018393516540527344, -0.00018310546875, -7.62939453125e-06, -0.000339508056640625, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, -4.8041343688964844e-05, -1.9073486328125e-06, -0.013776779174804688, -3.814697265625e-06, -0.0001316070556640625, -0.00011444091796875, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0017507076263427734, -1.9073486328125e-06, -0.03380907326936722, 0.0, -0.00545501708984375, -4.9591064453125e-05, -0.0015850067138671875, -0.000255584716796875, -0.000240325927734375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.960462772236497e-07, -0.007006049156188965, -2.3841855067985307e-07, -4.57763671875e-05, -0.005077362060546875, -0.0016078948974609375, -0.0010851959232240915, -8.07046890258789e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.094856438591201, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -4.8615922927856445, 0.0, -2.872943878173828e-05, 0.0, -0.0001531839370727539, 0.0, -0.000118255615234375, -1.52587890625e-05, -0.0002574920654296875, -1.0728830375228426e-06, -0.05310535430908203, -2.288818359375e-05, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -4.00543212890625e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0041656494140625, -1.9073486328125e-06, -0.000118255615234375, -0.0001392364501953125, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.003319859504699707, -1.9073486328125e-06, -0.03831383213400841, 0.0, -0.002635955810546875, -6.103515625e-05, -0.001956939697265625, -0.000606536865234375, -0.0001735687255859375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.768370445162873e-07, -0.0076677799224853516, -2.3841855067985307e-07, -4.00543212890625e-05, -0.005568504333496094, -0.00156402587890625, -0.0012278263457119465, -7.49826431274414e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.193667622531201, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -0.018404006958007812, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001468658447265625, -2.3841855067985307e-07, -0.01251983642578125, -1.71661376953125e-05, -3.814697265625e-06, -4.57763671875e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.62396240234375e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0072612762451171875, -1.9073486328125e-06, -0.000110626220703125, -0.0001125335693359375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0033799409866333008, -1.9073486328125e-06, -5.005127429962158, 0.0, -0.012643814086914062, -2.86102294921875e-05, -0.0005855560302734375, -0.0004673004150390625, -0.0002613067626953125, 0.0, 0.0, 0.0, -1.9073486328125e-06, -8.344646857949556e-07, -0.010881543159484863, -2.3841855067985307e-07, -3.814697265625e-05, -0.006199836730957031, -0.001819610595703125, -0.0015901041915640235, -7.11679458618164e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.251409955687485, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -5.056844711303711, 0.0, -1.52587890625e-05, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.00016021728515625, -2.3841855067985307e-07, -0.011678695678710938, -1.9073486328125e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-05, -1.33514404296875e-05, -1.1682510375976562e-05, -1.9073486328125e-06, -0.007354736328125, -1.9073486328125e-06, -0.000110626220703125, -0.0001125335693359375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0033866167068481445, -1.9073486328125e-06, -0.03876355290412903, 0.0, -0.0019741058349609375, -5.14984130859375e-05, -0.001819610595703125, -0.0006809234619140625, -0.0001697540283203125, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.768370445162873e-07, -0.007809877395629883, -2.3841855067985307e-07, -4.1961669921875e-05, -0.005457878112792969, -0.0016956329345703125, -0.001175678800791502, -7.49826431274414e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Charge", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": 3, "hole0": "Charge", "_type": "Template15", "hole2": "WARRIOR", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.FREE\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "score": -5.4938204096683805, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -4.979301452636719, -0.0043621063232421875, -1.6689286894688848e-06, -0.0002401778765488416, -1.62119249580428e-05, -2.610649426060263e-05, -0.02088594250380993, 0.0, -0.004266500473022461, 0.0, -0.0004323720932006836, 0.0, -0.00011384486424503848, -1.9073486328125e-06, -0.0002841949462890625, -3.814697265625e-06, -2.1338462829589844e-05, -5.245195097813848e-06, -0.21463394165039062, -3.814697265625e-05, -1.9073486328125e-05, -0.0004482269287109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -0.1517314910888672, -1.9073486328125e-06, -8.392333984375e-05, -0.0001373291015625, -6.103515625e-05, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.002926945686340332, -1.9073486328125e-06, -0.032429229468107224, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Charge", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Charge", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 3, "hole0": "Charge", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.533870653100813, "score_history": [-2.5715866088867188, -0.0002593994140625, -1.33514404296875e-05, -0.0005035400390625, -3.814697265625e-05, -1.1920922133867862e-06, -0.09471575170755386, -2.09808349609375e-05, -9.1552734375e-05, -0.0001163482666015625, -0.0006279775407165289, -0.0002765655517578125, 0.0, -0.000377655029296875, -0.0015630722045898438, -0.0005855560302734375, -1.311301275563892e-06, -0.05670277401804924, -4.410715973790502e-06, -2.3841855067985307e-07, -0.010399341583251953, 0.0, -0.02161240577697754, 0.0, -0.0015202758368104696, -5.841255187988281e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.0004444122314453125, -1.9073486328125e-06, -0.0012187957763671875, -1.9073486328125e-06, -0.0005761384963989258, 0.0, -1.4676551818847656, 0.0, -0.1810373067855835, 0.0, -0.013022422790527344, -0.0006122589111328125, -0.00030517578125, -0.00026702880859375, -0.04224872589111328, -4.410743713378906e-05, -0.0017633438110351562, -0.0002288818359375, -6.29425048828125e-05, -0.0018796920776367188, -0.004756927490234375, -0.0005817413330078125, -0.00058746337890625, -9.5367431640625e-06, -0.1636829376220703, 0.0, -0.17726457118988037, 0.0, -0.0014986990718171, -2.264974000354414e-06, -3.0517578125e-05, -0.26895904541015625, -1.9073486328125e-05, -0.0021009445190429688, -1.1444091796875e-05, -0.0064258575439453125, -5.7220458984375e-06, -0.005790575407445431, 0.0, -0.2169029712677002, 0.0, -0.0049686431884765625, 0.0, -0.03215599060058594, 0.0, -0.07081519067287445, 0.0, -0.001056075096130371, -3.814697265625e-06, -7.62939453125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -1.9073486328125e-06, -6.103515625e-05, -0.010023117065429688, -0.0001697540283203125, -1.71661376953125e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.62396240234375e-05, -4.1961669921875e-05, -1.71661376953125e-05, -6.866455078125e-05, -0.0020599365234375, -2.3841855067985307e-07, -0.01830005645751953, -0.00018310546875, -7.62939453125e-06, -0.0003376007080078125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, -4.8041343688964844e-05, -1.9073486328125e-06, -0.013763427734375, -3.814697265625e-06, -0.0001316070556640625, -0.00011444091796875, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0017497539520263672, -1.9073486328125e-06, -0.03380681201815605, 0.0, -0.00545501708984375, -4.9591064453125e-05, -0.0015850067138671875, -0.000255584716796875, -0.000240325927734375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.960462772236497e-07, -0.007007002830505371, -2.3841855067985307e-07, -4.57763671875e-05, -0.005077362060546875, -0.0016078948974609375, -0.0010849577374756336, -8.07046890258789e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "WARRIOR", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            WARRIOR, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.594586684034802, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -5.395890235900879, 0.0, -2.288818359375e-05, -0.00110626220703125, -0.000194549560546875, -0.00077056884765625, 0.0, -0.0001888275146484375, -0.0001068115234375, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000263214111328125, 0.0, -5.7578086853027344e-05, 0.0, -0.0186767578125, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.0001354217529296875, -2.3841855067985307e-07, -0.012540817260742188, -1.71661376953125e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0073261260986328125, -1.9073486328125e-06, -0.000110626220703125, -0.0001125335693359375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0033799409866333008, -1.9073486328125e-06, -0.038460277020931244, 0.0, -0.0019779205322265625, -5.14984130859375e-05, -0.0018157958984375, -0.0006771087646484375, -0.000171661376953125, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.768370445162873e-07, -0.007848978042602539, -2.3841855067985307e-07, -4.1961669921875e-05, -0.005440711975097656, -0.0015869140625, -0.0011563801672309637, -7.49826431274414e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Charge", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Charge", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 3, "hole0": "Charge", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_friendly_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda target: \n            target.health != target.spell_targetable() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.642772470102464, "score_history": [-2.5715866088867188, -0.0002593994140625, -1.33514404296875e-05, -0.0005035400390625, -3.814697265625e-05, -1.1920922133867862e-06, -0.09471575170755386, -2.09808349609375e-05, -9.1552734375e-05, -0.0001163482666015625, -0.0006279775407165289, -0.0002765655517578125, 0.0, -0.000377655029296875, -0.0015630722045898438, -0.0005855560302734375, -1.311301275563892e-06, -0.05670277401804924, -4.410715973790502e-06, -2.3841855067985307e-07, -0.010399341583251953, 0.0, -0.02161240577697754, 0.0, -0.0015202758368104696, -5.841255187988281e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.0004444122314453125, -1.9073486328125e-06, -0.0012187957763671875, -1.9073486328125e-06, -0.0005761384963989258, 0.0, -0.29620838165283203, 0.0, -0.06073880195617676, 0.0, -0.0029840469360351562, -0.0001811981201171875, -0.0001811981201171875, -0.000152587890625, -0.050708770751953125, -3.266334533691406e-05, -0.0017099380493164062, -0.0002002716064453125, -6.29425048828125e-05, -0.0010585784912109375, -0.0033597946166992188, -0.0005092620849609375, -0.0006561279296875, -7.62939453125e-06, -0.1490020751953125, 0.0, -0.1670393943786621, 0.0, -0.0015459059504792094, -2.50339189733495e-06, -3.0517578125e-05, -0.2709522247314453, -1.9073486328125e-05, -0.002079010009765625, -1.1444091796875e-05, -0.006594657897949219, -5.7220458984375e-06, -0.005166719667613506, 0.0, -1.6378519535064697, 0.0, -0.0026750564575195312, -1.9073486328125e-05, -0.08532047271728516, 0.0, -0.021013787016272545, 0.0, -0.0008722543716430664, -1.9073486328125e-06, -6.866455078125e-05, -1.33514404296875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, -6.103515625e-05, -0.017436981201171875, -0.0002193450927734375, -1.71661376953125e-05, -1.33514404296875e-05, -2.288818359375e-05, -3.62396240234375e-05, -3.814697265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.001895904541015625, -2.3841855067985307e-07, -0.01836872100830078, -0.000152587890625, -7.62939453125e-06, -0.00028228759765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.1801719665527344e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, -4.9948692321777344e-05, -1.9073486328125e-06, -0.013092041015625, -3.814697265625e-06, -0.000133514404296875, -0.0001125335693359375, -5.53131103515625e-05, -3.814697265625e-06, -7.62939453125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0017316341400146484, -1.9073486328125e-06, -0.03385251760482788, 0.0, -0.0055522918701171875, -5.14984130859375e-05, -0.001598358154296875, -0.0002574920654296875, -0.000240325927734375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -5.960462772236497e-07, -0.006996512413024902, -2.3841855067985307e-07, -4.57763671875e-05, -0.005054473876953125, -0.001605987548828125, -0.0010873397113755345, -8.07046890258789e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.750010176810072, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -5.554400444030762, 0.0, -0.0001010894775390625, -0.0002899169921875, -0.0001811981201171875, -0.0003376007080078125, 0.0, -9.1552734375e-05, -7.2479248046875e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002727508544921875, 0.0, -7.665157318115234e-05, 0.0, -0.01687145233154297, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0001621246337890625, -3.576278118089249e-07, -0.012465476989746094, -1.71661376953125e-05, -3.814697265625e-06, -4.57763671875e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.62396240234375e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0072116851806640625, -1.9073486328125e-06, -0.000110626220703125, -0.0001125335693359375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.003380894660949707, -1.9073486328125e-06, -0.03866254910826683, 0.0, -0.001956939697265625, -5.14984130859375e-05, -0.0018367767333984375, -0.00067901611328125, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.768370445162873e-07, -0.007826089859008789, -2.3841855067985307e-07, -4.1961669921875e-05, -0.005431175231933594, -0.0015850067138671875, -0.0011584035819396377, -7.49826431274414e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.die(self)\n", "score": -5.86590278755498, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -0.018404006958007812, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001468658447265625, -2.3841855067985307e-07, -4.732149124145508, -8.0108642578125e-05, -1.9073486328125e-06, -0.0001659393310546875, 0.0, 0.0, -1.9073486328125e-06, -4.291534423828125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -7.867813110351562e-06, -1.9073486328125e-06, -0.0054759979248046875, -7.62939453125e-06, -0.0001621246337890625, -0.00012969970703125, -8.7738037109375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0032378435134887695, -1.9073486328125e-06, -0.03217398747801781, 0.0, -0.031322479248046875, -5.53131103515625e-05, -0.00084686279296875, -0.00046539306640625, -0.00026702880859375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.0728830375228426e-06, -0.005994081497192383, -2.3841855067985307e-07, -7.82012939453125e-05, -0.12747859954833984, -0.002445220947265625, -0.0013494581216946244, -8.654594421386719e-05, -0.007984161376953125, -0.0001392364501953125, -0.05378437042236328, -1.9073486328125e-05, -3.24249267578125e-05, -7.62939453125e-06, -0.000911712646484375, -1.1444091796875e-05, -9.5367431640625e-06, -5.960462772236497e-07, -0.6191693544387817, 0.0, -5.7220458984375e-06, -0.10821247100830078, -7.62939453125e-06, -0.00109100341796875, 0.0]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.899958907522375, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -0.018404006958007812, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001468658447265625, -2.3841855067985307e-07, -0.01251983642578125, -1.71661376953125e-05, -3.814697265625e-06, -4.57763671875e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.62396240234375e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -4.985716819763184, -0.0016078948974609375, -0.0007658004760742188, -4.38690185546875e-05, -0.0002422332763671875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.6689286894688848e-06, -0.24693810939788818, -1.1920928244535389e-07, -0.0002765655517578125, -0.005200386047363281, -0.00055694580078125, -0.02349245734512806, -2.8371809094096534e-05, -0.001434326171875, -9.34600830078125e-05, -0.004253387451171875, -2.6702880859375e-05, -0.0001468658447265625, -3.814697265625e-06, -0.0002880096435546875, -9.5367431640625e-06, -5.7220458984375e-06, -7.152555099310121e-07, -0.4619637727737427, -1.1920928244535389e-07, -3.814697265625e-05, -0.014242172241210938, -0.002704620361328125, -0.006865795701742172, -5.447864532470703e-05]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 1}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n", "score": -5.961331018145792, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -0.018404006958007812, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001468658447265625, -2.3841855067985307e-07, -0.01251983642578125, -1.71661376953125e-05, -3.814697265625e-06, -4.57763671875e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.62396240234375e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0072612762451171875, -1.9073486328125e-06, -0.000110626220703125, -0.0001125335693359375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0033799409866333008, -1.9073486328125e-06, -0.03856205940246582, 0.0, -0.001972198486328125, -5.14984130859375e-05, -0.00182342529296875, -0.00067901611328125, -0.0001697540283203125, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.768370445162873e-07, -0.007841348648071289, -2.3841855067985307e-07, -4.1961669921875e-05, -5.451020240783691, -6.67572021484375e-05, -4.9114227294921875e-05, -9.655952453613281e-06, -0.05810483545064926, -0.012474536895751953, -1.9073486328125e-06, -0.2345079630613327, 0.0]}, {"choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Charge", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 1}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.add_buff(Buff(ChangeAttack(1)))\n", "score": -6.637383319918008, "score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -0.018404006958007812, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001468658447265625, -2.3841855067985307e-07, -4.732149124145508, -8.0108642578125e-05, -1.9073486328125e-06, -0.0001659393310546875, 0.0, 0.0, -1.9073486328125e-06, -4.291534423828125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -7.867813110351562e-06, -1.9073486328125e-06, -0.0054759979248046875, -7.62939453125e-06, -0.0001621246337890625, -0.00012969970703125, -8.7738037109375e-05, -7.62939453125e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0032378435134887695, -1.9073486328125e-06, -0.03217398747801781, 0.0, -0.031322479248046875, -5.53131103515625e-05, -0.00084686279296875, -0.00046539306640625, -0.00026702880859375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.0728830375228426e-06, -0.005994081497192383, -2.3841855067985307e-07, -7.82012939453125e-05, -0.12747859954833984, -0.002445220947265625, -0.0013494581216946244, -8.654594421386719e-05, -0.007984161376953125, -0.0001392364501953125, -0.05378437042236328, -1.9073486328125e-05, -3.24249267578125e-05, -7.62939453125e-06, -0.000911712646484375, -1.1444091796875e-05, -9.5367431640625e-06, -5.960462772236497e-07, -0.8407851457595825, -2.3841855067985307e-07, -1.9073486328125e-05, -0.5518198013305664, -0.00014495849609375, -3.540515899658203e-05, -1.33514404296875e-05, -0.010493727400898933, -0.006307244300842285, -1.9073486328125e-06, -0.09034585952758789, 0.0]}]}
{"index": 17, "beams": [{"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -0.17875968695320665, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.17289352416992188, -0.001110076904296875, -3.576278118089249e-07, -2.300739288330078e-05, 0.0, -1.1920928244535389e-07, -0.0004178288800176233, -1.2040087312925607e-05, -0.0002614259719848633, 0.0, -3.099440846199286e-06, 0.0, -3.659718277049251e-05, 0.0, -1.71661376953125e-05, -0.0022373199462890625, -9.5367431640625e-06, -0.0008258819580078125, -2.4199192921514623e-05, -1.311301275563892e-06, -8.344646857949556e-07]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -2.3781622576600085, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3388452529907227, -0.0015716552734375, -2.264974000354414e-06, -3.826618194580078e-05, -1.1920928244535389e-07, 0.0, -2.5391620511072688e-05, -1.5497195136049413e-06, -0.01552581787109375, 0.0, -0.00011456003994680941, 0.0, -5.53131103515625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.017872095108032227, 0.0, -9.655952453613281e-06, 0.0, -7.104873657226562e-05, 0.0, -0.000896453857421875, -0.000736236572265625, -7.62939453125e-06, -0.001430511474609375, -6.556489552167477e-06, -9.179073458653875e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 89, 154, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template15", "hole2": "ALL", "hole3": "COMMON"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -3.4354829604001367, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.407099723815918, -0.0005130767822265625, -1.1920928244535389e-07, -4.279608037904836e-05, -1.1920928244535389e-07, 0.0, -4.9591231800150126e-05, -0.00015066948253661394, -0.00033414363861083984, 0.0, -0.007843613624572754, 0.0, -1.7046884750016034e-05, -5.7220458984375e-06, -4.768345388583839e-05, 0.0, -3.814697265625e-06, -0.0179595947265625, -1.33514404296875e-05, -0.0004978179931640625, -1.490105023549404e-05, -3.4570634852570947e-06, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Chillwind", " ", "Yeti", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -4.170833067217671, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.7580156326293945, -0.00211334228515625, -0.0001239776611328125, -0.0001220703125, -0.0002339826460229233, -2.1457672119140625e-06, -0.0009826421737670898, -1.9073486328125e-06, -0.405853271484375, -0.000102996826171875, -3.4332275390625e-05, -1.2159273865108844e-05, -0.00014114371151663363, -8.106212590064388e-06, 0.0, -4.38690185546875e-05, 0.0, -4.100818478036672e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.273124694824219e-05, 0.0, -0.0001814268180169165, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, 0.0, -2.86102294921875e-05, 0.0, -7.331371307373047e-05, 0.0, -0.00043487548828125, -1.1444091796875e-05, -5.841255187988281e-06, -4.768370445162873e-07, -4.291534423828125e-06, 0.0, -0.00010943412780761719, 0.0, -9.34600830078125e-05, -0.00029754638671875, -1.33514404296875e-05, -0.0006561279296875, -2.0265558760002023e-06, -5.721882189391181e-05, 0.0]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Chillwind", " ", "Yeti", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -5.525169209117479, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.7580156326293945, -0.00211334228515625, -0.0001239776611328125, -0.0001220703125, -0.0002339826460229233, -2.1457672119140625e-06, -0.0009826421737670898, -1.9073486328125e-06, -1.117140769958496, -0.0001506805419921875, -2.86102294921875e-05, -2.9802276912960224e-06, -0.00028383705648593605, -1.4781842764932662e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00025617770734243095, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -3.814697265625e-06, 0.0, -4.0411949157714844e-05, 0.0, -0.00027560454327613115, 0.0, -3.814697265625e-06, -8.0108642578125e-05, -5.7220458984375e-06, 0.0, -4.76837158203125e-05, 0.0, -0.00010144710540771484, 0.0, -0.0006160736083984375, -1.33514404296875e-05, -1.0132789611816406e-05, -2.741813204920618e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0080108642578125, -7.43865966796875e-05, -0.6301721334457397, -9.5367431640625e-06, -1.5974044799804688e-05, -1.9073486328125e-06, -0.003215312957763672, 0.0, -6.103515625e-05, -0.0010547637939453125, -1.33514404296875e-05, -0.0006961822509765625, -4.9232225137529895e-05, -5.125986263010418e-06, -7.152555099310121e-07]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Chillwind", " ", "Yeti", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -5.811813310728752, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.7580156326293945, -0.00211334228515625, -0.0001239776611328125, -0.0001220703125, -0.0002339826460229233, -2.1457672119140625e-06, -0.0009826421737670898, -1.9073486328125e-06, -1.117140769958496, -0.0001506805419921875, -2.86102294921875e-05, -2.9802276912960224e-06, -0.00028383705648593605, -1.4781842764932662e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00025617770734243095, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -3.814697265625e-06, 0.0, -4.0411949157714844e-05, 0.0, -0.00027560454327613115, 0.0, -3.814697265625e-06, -8.0108642578125e-05, -5.7220458984375e-06, 0.0, -4.76837158203125e-05, 0.0, -0.00010144710540771484, 0.0, -0.0006160736083984375, -1.33514404296875e-05, -1.0132789611816406e-05, -2.741813204920618e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0080108642578125, -7.43865966796875e-05, -0.8893073797225952, -3.814697265625e-06, -1.9550323486328125e-05, 0.0, -0.030967235565185547, 0.0, -4.1961669921875e-05, -0.0005702972412109375, -1.71661376953125e-05, -0.0009670257568359375, -3.85038583772257e-05, -5.245195097813848e-06, -1.1920922133867862e-06]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -6.535229914195057, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3388452529907227, -0.0015716552734375, -2.264974000354414e-06, -3.826618194580078e-05, -1.1920928244535389e-07, 0.0, -2.5391620511072688e-05, -1.5497195136049413e-06, -0.01552581787109375, 0.0, -0.00011456003994680941, 0.0, -5.53131103515625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -4.174610137939453, 0.0, -2.861022494471399e-06, 0.0, -8.130073547363281e-05, 0.0, -0.0022449493408203125, -0.000400543212890625, -1.9073486328125e-05, -0.0007381439208984375, -5.960462772236497e-07, -9.417489309271332e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -6.553835146315308, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3388452529907227, -0.0015716552734375, -2.264974000354414e-06, -3.826618194580078e-05, -1.1920928244535389e-07, 0.0, -2.5391620511072688e-05, -1.5497195136049413e-06, -4.187066078186035, 0.0, -0.0002080200210912153, 0.0, -4.00543212890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.02180612087249756, 0.0, -9.655952453613281e-06, 0.0, -6.92605972290039e-05, 0.0, -0.001018524169921875, -0.000743865966796875, -7.62939453125e-06, -0.0014249086380004883, -7.271740287251305e-06, -8.4638240878121e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n", "score": -7.278891079709538, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.17289352416992188, -0.001110076904296875, -3.576278118089249e-07, -2.300739288330078e-05, 0.0, -1.1920928244535389e-07, -0.0004178288800176233, -1.2040087312925607e-05, -0.0002614259719848633, 0.0, -3.099440846199286e-06, 0.0, -3.659718277049251e-05, 0.0, -1.71661376953125e-05, -0.0022373199462890625, -9.5367431640625e-06, -7.100976943969727, -5.722029527532868e-06, -8.344646857949556e-07, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        return Minion(4, 5)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -7.955791893297679, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.872727870941162, -0.0033092498779296875, -0.05600547790527344, -0.001622404670342803, -0.011018753051757812, -1.1920928244535389e-07, -0.002245425246655941, -1.9073486328125e-05, -0.00028918840689584613, -1.9073486328125e-06, -1.1444091796875e-05, -0.0072231292724609375, -7.62939453125e-06, -0.0003587007522583008, -6.0794889577664435e-05, -2.50339189733495e-06, -2.861018856492592e-06]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Chillwind", " ", "Yeti", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 5, "hole0": "Chillwind Yeti", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -7.972303621486695, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.17289352416992188, -0.001110076904296875, -3.576278118089249e-07, -2.300739288330078e-05, 0.0, -1.1920928244535389e-07, -7.793980598449707, -5.960462772236497e-07, -2.8252599804545753e-05, 0.0, -9.536735888104886e-06, 0.0, -2.8967735488549806e-05, 0.0, -1.1444091796875e-05, -0.0024776458740234375, -1.1444091796875e-05, -0.0008182525634765625, -2.2411095415009186e-05, -1.311301275563892e-06, -7.152555099310121e-07]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "5", "<EOS>", "stealth", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template22", "hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, stealth=True)\n", "score": -8.153843157512505, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.17289352416992188, -0.001110076904296875, -3.576278118089249e-07, -2.300739288330078e-05, 0.0, -1.1920928244535389e-07, -0.0004178288800176233, -1.2040087312925607e-05, -0.0002614259719848633, 0.0, -3.099440846199286e-06, 0.0, -3.659718277049251e-05, 0.0, -1.71661376953125e-05, -6.130629539489746, -7.05718994140625e-05, -3.230571746826172e-05, -7.867782187531702e-06, -2.1457672119140625e-06, -3.099436753473128e-06, -1.8413586616516113, 0.0, -0.005802154541015625, -0.00011444091796875, -0.00015950198576319963, -2.2649765014648438e-06]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "5", "<EOS>", "deathrattle", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 239, 53, 182, "Summon", "<EOS>", "Chillwind", "<EOS>", 63, 205, "Player", "Selector", "<EOS>", 53, 182, "In", "Graveyard", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template22", "hole2": "deathrattle", "hole3": {"_type": "Call", "args": [{"hole1": "Chillwind", "hole0": "Summon", "_type": "Template26"}, {"hole0": "PlayerSelector", "_type": "Template39"}, {"hole1": "4", "hole0": "InGraveyard", "_type": "Template26"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, deathrattle=Deathrattle(Summon(Chillwind()),\n            PlayerSelector(), InGraveyard(4())))\n", "score": -8.188683703113178, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.17289352416992188, -0.001110076904296875, -3.576278118089249e-07, -2.300739288330078e-05, 0.0, -1.1920928244535389e-07, -0.0004178288800176233, -1.2040087312925607e-05, -0.0002614259719848633, 0.0, -3.099440846199286e-06, 0.0, -3.659718277049251e-05, 0.0, -1.71661376953125e-05, -6.130629539489746, -7.05718994140625e-05, -3.230571746826172e-05, -7.867782187531702e-06, -2.1457672119140625e-06, -3.099436753473128e-06, -0.6485772132873535, -1.5497195136049413e-06, -2.288818359375e-05, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0018464326858520508, -1.0728830375228426e-06, -0.10662460327148438, -0.026030540466308594, -4.00543212890625e-05, -0.0220709890127182, -5.5549986427649856e-05, -0.5587385892868042, -0.1568315029144287, -0.0058116912841796875, -8.7738037109375e-05, -0.027810195460915565, -1.71661376953125e-05, -5.7220458984375e-06, -0.005541801452636719, -0.000370025634765625, -0.0006145238876342773, -0.0022778345737606287, -0.0002979039854835719, -0.3179098963737488, -0.0006520304596051574]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "5", "<EOS>", "deathrattle", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 239, 53, 182, "Summon", "<EOS>", "Thaddius", "<EOS>", 63, 205, "Player", "Selector", "<EOS>", 53, 182, "In", "Graveyard", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template22", "hole2": "deathrattle", "hole3": {"_type": "Call", "args": [{"hole1": "Thaddius", "hole0": "Summon", "_type": "Template26"}, {"hole0": "PlayerSelector", "_type": "Template39"}, {"hole1": "4", "hole0": "InGraveyard", "_type": "Template26"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(4())))\n", "score": -8.534636281293182, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.17289352416992188, -0.001110076904296875, -3.576278118089249e-07, -2.300739288330078e-05, 0.0, -1.1920928244535389e-07, -0.0004178288800176233, -1.2040087312925607e-05, -0.0002614259719848633, 0.0, -3.099440846199286e-06, 0.0, -3.659718277049251e-05, 0.0, -1.71661376953125e-05, -6.130629539489746, -7.05718994140625e-05, -3.230571746826172e-05, -7.867782187531702e-06, -2.1457672119140625e-06, -3.099436753473128e-06, -0.6485772132873535, -1.5497195136049413e-06, -2.288818359375e-05, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0018464326858520508, -1.0728830375228426e-06, -0.10662460327148438, -0.026030540466308594, -4.00543212890625e-05, -0.0220709890127182, -5.5549986427649856e-05, -0.9760169386863708, -0.006257702596485615, -7.62939453125e-05, -3.814697265625e-05, -0.03171154484152794, -5.7220458984375e-06, -3.814697265625e-06, -0.003970146179199219, -0.00048065185546875, -0.0004926919937133789, -0.0024829083122313023, -0.00020539757679216564, -0.400314599275589, -0.0008626407361589372]}, {"choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Chillwind", " ", "Yeti", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ChillwindYeti", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Num", "n": 4}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 5)\n", "score": -9.4299375468336, "score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.7580156326293945, -0.00211334228515625, -0.0001239776611328125, -0.0001220703125, -0.0002339826460229233, -2.1457672119140625e-06, -0.0009826421737670898, -1.9073486328125e-06, -1.117140769958496, -0.0001506805419921875, -2.86102294921875e-05, -2.9802276912960224e-06, -0.00028383705648593605, -1.4781842764932662e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00025617770734243095, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -3.814697265625e-06, 0.0, -4.0411949157714844e-05, 0.0, -0.00027560454327613115, 0.0, -3.814697265625e-06, -8.0108642578125e-05, -5.7220458984375e-06, 0.0, -4.76837158203125e-05, 0.0, -0.00010144710540771484, 0.0, -0.0006160736083984375, -1.33514404296875e-05, -1.0132789611816406e-05, -2.741813204920618e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0080108642578125, -7.43865966796875e-05, -0.8893073797225952, -3.814697265625e-06, -1.9550323486328125e-05, 0.0, -3.636809825897217, -1.33514404296875e-05, -2.86102294921875e-05, -0.013569831848144531, -4.9591064453125e-05, -0.000110626220703125, -3.576278118089249e-07, -0.00014995403762441128, -7.152555099310121e-07]}]}
{"index": 18, "beams": [{"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n", "score": -0.10173751050285773, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -0.03159407153725624, -2.0265579223632812e-06, -2.1099998775753193e-05, 0.0, -0.001300811767578125, -1.9073486328125e-06, -0.00476837158203125, -4.00543212890625e-05, -0.004908561706542969, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.001964569091796875, 0.0, -0.0030362606048583984, 0.0, -0.013646393083035946, 0.0, -5.149617209099233e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_temp_attack", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score": -3.9026177149179304, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -3.826833486557007, -1.9073486328125e-06, -3.551447298377752e-05, -1.1920928244535389e-07, -0.001708984375, 0.0, -0.0037689208984375, -3.24249267578125e-05, -0.009110450744628906, -2.47955322265625e-05, -5.91278076171875e-05, -3.814697265625e-06, -0.0028514862060546875, 0.0, -0.004324913024902344, 0.0, -0.013501251116394997, 0.0, -5.590604996541515e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_health", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_health(2)\n", "score": -5.805767613902276, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -0.03159407153725624, -2.0265579223632812e-06, -2.1099998775753193e-05, 0.0, -0.001300811767578125, -1.9073486328125e-06, -0.00476837158203125, -4.00543212890625e-05, -0.004908561706542969, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.001964569091796875, 0.0, -0.0030362606048583984, 0.0, -5.717279434204102, 0.0, -0.00044855845044367015, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "draw", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.draw(2)\n", "score": -6.19398646214438, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -0.03159407153725624, -2.0265579223632812e-06, -2.1099998775753193e-05, 0.0, -0.001300811767578125, -1.9073486328125e-06, -0.00476837158203125, -4.00543212890625e-05, -0.004908561706542969, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.001964569091796875, 0.0, -0.0030362606048583984, 0.0, -6.1057658195495605, -1.9907896785298362e-05, -0.00016111345030367374, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def create_minion(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n", "score": -6.2156837256777635, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -6.119276523590088, 0.0, -7.796283171046525e-05, 0.0, -0.001117706298828125, -3.814697265625e-06, -0.00018310546875, -1.0728830375228426e-06, -0.004860877990722656, -1.52587890625e-05, -3.814697265625e-05, -0.0001125335693359375, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -2.9802317840221804e-06, -7.43865966796875e-05, -0.011957168579101562, -1.9073486328125e-06, -0.0002956390380859375, -5.7220458984375e-05, -0.000186920166015625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.000751495361328125, 0.0, -0.0012603998184204102, 0.0, -0.03157966211438179, -2.0265579223632812e-06, -2.109999695676379e-05, 0.0, -0.001308441162109375, -1.9073486328125e-06, -0.0046558380126953125, -4.00543212890625e-05, -0.0048503875732421875, -2.6702880859375e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.00191497802734375, 0.0, -0.0029588937759399414, 0.0, -0.013621002435684204, 0.0, -5.1853763579856604e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "player", "<EOS>", "use", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "use", "hole3": "player"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def player(self, use, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n", "score": -6.233192894431909, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -5.66894006729126, 0.0, -0.4344489276409149, -1.9073486328125e-06, -0.0038709640502929688, -1.1444091796875e-05, -0.025095343589782715, -2.7418097943154862e-06, -0.009631156921386719, -5.7220458984375e-06, -6.103515625e-05, -0.0001659393310546875, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.3378591979271732e-06, -9.1552734375e-05, -0.011114120483398438, -1.9073486328125e-06, -0.0003108978271484375, -5.91278076171875e-05, -0.00018310546875, -5.7220458984375e-06, -3.814697265625e-06, -7.2479248046875e-05, -0.000682830810546875, 0.0, -0.0013025999069213867, 0.0, -0.03248513489961624, -2.0265579223632812e-06, -2.0861587472609244e-05, 0.0, -0.0010356903076171875, -1.9073486328125e-06, -0.0053462982177734375, -3.814697265625e-05, -0.005188941955566406, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.00201416015625, 0.0, -0.0030159950256347656, 0.0, -0.013635802082717419, 0.0, -5.316482565831393e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.increase_armor(2)\n", "score": -6.408725423276444, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -4.619330406188965, -3.4332275390625e-05, -0.06165885925292969, -0.0003986358642578125, -9.5367431640625e-06, -1.9073486328125e-06, -0.027765989303588867, 0.0, -0.009475349448621273, 0.0, -0.17249822616577148, -7.152555099310121e-07, -0.001117706298828125, -1.2336187362670898, -8.392333984375e-05, -0.00022125244140625, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.07827460765838623, -2.9802317840221804e-06, -0.0003403424343559891, -1.1920928244535389e-07, -6.103515625e-05, -1.9073486328125e-06, -0.00032711029052734375, 0.0, -3.814697265625e-05, 0.0, -0.007427215576171875, -0.0001506805419921875, -0.15541744232177734, -0.0001239776611328125, -7.82012939453125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.003895878791809082, 0.0, -0.009726149961352348, -1.9073486328125e-06, -9.583406790625304e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n", "score": -6.443642679690242, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -6.344715118408203, -5.7220458984375e-06, -0.009020090103149414, 0.0, -0.002889871597290039, 0.0, -1.5258781786542386e-05, 0.0, -0.0003223419189453125, -5.7220458984375e-06, -0.000301361083984375, -1.7881377516459906e-06, -0.0025463104248046875, -1.1444091796875e-05, -6.29425048828125e-05, -0.000164031982421875, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.011266708374023438, -1.9073486328125e-06, -0.0003108978271484375, -6.103515625e-05, -0.00017547607421875, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007534027099609375, 0.0, -0.0012965202331542969, 0.0, -0.03151043877005577, -2.0265579223632812e-06, -2.1099998775753193e-05, 0.0, -0.0013332366943359375, -1.9073486328125e-06, -0.0047893524169921875, -4.00543212890625e-05, -0.004916191101074219, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.0019664764404296875, 0.0, -0.003038167953491211, 0.0, -0.01365318801254034, 0.0, -5.149617209099233e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        self.target.increase_health(2)\n", "score": -6.508087731434671, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -0.03159407153725624, -2.0265579223632812e-06, -2.1099998775753193e-05, 0.0, -0.001300811767578125, -1.9073486328125e-06, -0.00476837158203125, -4.00543212890625e-05, -0.004908561706542969, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -6.2565155029296875, 0.0, -0.0001678466796875, -4.768370445162873e-07, -0.11129927635192871, 0.0, -0.05706583708524704, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "opponent", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.opponent.increase_armor(2)\n", "score": -6.531113723979502, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -0.03159407153725624, -2.0265579223632812e-06, -2.1099998775753193e-05, 0.0, -0.001300811767578125, -1.9073486328125e-06, -0.00476837158203125, -4.00543212890625e-05, -0.004908561706542969, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.001964569091796875, 0.0, -6.370986461639404, -3.933906555175781e-06, -0.07505452632904053, -3.814697265625e-06, -6.162676436360925e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "RARE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n", "score": -6.587517661216339, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -6.499512672424316, 0.0, -0.0002269744873046875, 0.0, -1.5020368664409034e-05, 0.0, -0.0001697540283203125, -1.1444091796875e-05, -0.0001506805419921875, -7.152555099310121e-07, -0.0009069442749023438, -5.14984130859375e-05, -6.29425048828125e-05, -0.000186920166015625, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -2.9802317840221804e-06, -9.918212890625e-05, -0.010141372680664062, -1.9073486328125e-06, -0.000301361083984375, -5.91278076171875e-05, -0.0001811981201171875, -5.7220458984375e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.00078582763671875, 0.0, -0.001303553581237793, 0.0, -0.03187078982591629, -2.0265579223632812e-06, -2.0980787667213008e-05, 0.0, -0.001087188720703125, -1.9073486328125e-06, -0.0049896240234375, -4.1961669921875e-05, -0.004994392395019531, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.0019626617431640625, 0.0, -0.003034353256225586, 0.0, -0.013696696609258652, 0.0, -5.280755431158468e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 31, 195, 33, 205, "super", "<EOS>", "reveal", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "reveal", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        super().reveal()\n", "score": -6.594774230851613, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -0.03159407153725624, -2.0265579223632812e-06, -2.1099998775753193e-05, 0.0, -0.001300811767578125, -1.9073486328125e-06, -6.015992164611816, -1.9073486328125e-06, -0.3024415969848633, -9.5367431640625e-06, -0.000446319580078125, -1.9073486328125e-06, -0.20265626907348633, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "2", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "2", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.2(2)\n        player.hero.increase_armor(2)\n", "score": -6.697696227511983, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -6.623532295227051, 0.0, -1.8953716789837927e-05, 0.0, -0.001651763916015625, 0.0, -0.005573272705078125, -3.814697265625e-05, -0.006947517395019531, -2.288818359375e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0027942657470703125, 0.0, -0.003030538558959961, 0.0, -0.013652514666318893, 0.0, -5.507187597686425e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n", "score": -6.882468631022789, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -6.807345390319824, -7.2479248046875e-05, -0.0002040863037109375, -0.001056671142578125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.259845733642578e-05, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -3.099440846199286e-06, -0.00011444091796875, -0.016872406005859375, -1.9073486328125e-06, -0.000362396240234375, -2.288818359375e-05, -0.0001678466796875, -7.62939453125e-06, -5.7220458984375e-06, -8.7738037109375e-05, -0.000591278076171875, 0.0, -0.0011321306228637695, 0.0, -0.030698994174599648, -2.0265579223632812e-06, -2.1219202608335763e-05, 0.0]}, {"choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 21, 134, "minion", "<EOS>", "spell_targetable", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Claw", "hole2": [{"hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "spell_targetable", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(minion.\n            spell_targetable()), self)\n        player.hero.increase_armor(2)\n", "score": -7.118051100875732, "score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -4.619330406188965, -3.4332275390625e-05, -0.06165885925292969, -0.0003986358642578125, -9.5367431640625e-06, -1.9073486328125e-06, -0.027765989303588867, 0.0, -0.009475349448621273, 0.0, -0.17249822616577148, -7.152555099310121e-07, -0.001117706298828125, -0.5747041702270508, -6.4849853515625e-05, -0.00395965576171875, -0.000217437744140625, -3.814697265625e-06, 0.0, -0.002437591552734375, 0.0, -0.5526041984558105, 0.0, -0.00069427490234375, -0.11456680297851562, -0.0006313323974609375, -0.084259033203125, -3.814697265625e-06, -0.33543860912323, -5.7220458984375e-06, -0.39227890968322754, 0.0, -0.022882461547851562, -1.9073486328125e-05, -0.06710350513458252, -3.814697265625e-06, -0.001125335693359375, -1.9073486328125e-06, -0.022478103637695312, -0.0007476806640625, -0.009344100952148438, -4.38690185546875e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.000850677490234375, 0.0, -0.0004137753858231008, 0.0, -0.012301068753004074, -3.814697265625e-06, -3.516477590892464e-05, 0.0]}]}
{"index": 19, "beams": [{"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -0.23182568148433802, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -0.005142331123352051, 0.0, -0.002044677734375, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007650852203369141, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005901371478103101, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002439890056848526, -1.1444091796875e-05, -0.0027894973754882812, -0.000225067138671875, -0.0019245147705078125, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008258819580078125, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.001621246337890625, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018725395202636719, -1.9073486328125e-06, -0.013532280921936035, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -0.005990028381347656, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -0.011693954467773438, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.022057436406612396, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.000301361083984375, -0.0002040863037109375, -0.000194549560546875, -0.0074034929275512695, 0.0, -2.86102294921875e-05, -0.0001087188720703125, -0.0003871917724609375, -0.0008411407470703125, -7.62939453125e-06, -2.288818359375e-05, -0.0002002716064453125, -0.0001201629638671875, -1.1444091796875e-05, -0.0002079010009765625, -1.7404556274414062e-05, -7.867813110351562e-06, -0.0010166168212890625, -0.002033233642578125, -0.000179290771484375, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.000141143798828125, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -0.0029296875, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006313323974609375, -4.1961669921875e-05, -0.00048065185546875, -2.86102294921875e-05, -4.9591064453125e-05, 0.0, -0.0006905794143676758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.0001373291015625, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001211404800415039, -7.62939453125e-06, -0.0001549710868857801, 0.0, -0.000186920166015625, -0.0011768341064453125, -0.0001621246337890625, -0.00048065185546875, 0.0, -0.00040579307824373245, -4.291534423828125e-06]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -3.580288183432458, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -3.407168388366699, -4.768370445162873e-07, -4.76837158203125e-05, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.3828277587890625e-05, -5.817413330078125e-05, -0.0046596527099609375, -3.62396240234375e-05, -7.62939453125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.0013751983642578125, -3.24249267578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009441375150345266, -7.62939453125e-06, -0.02678394317626953, -0.00028228759765625, -2.47955322265625e-05, -9.5367431640625e-05, -0.0002002716064453125, -3.814697265625e-06, -0.0012305974960327148, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014473199844360352, -2.861022494471399e-06, -0.0009973397245630622, 0.0, -0.0015840530395507812, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -0.004911541938781738, 0.0, -0.0020751953125, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -0.0007593631744384766, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005919246468693018, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002436630427837372, -1.1444091796875e-05, -0.0028104782104492188, -0.0002269744873046875, -0.00193023681640625, -0.00011444091796875, -0.00028228759765625, -1.52587890625e-05, -0.0002346038818359375, 0.0, -0.0008211135864257812, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.000640869140625, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.0016231536865234375, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018706321716308594, -1.9073486328125e-06, -0.013532280921936035, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -0.005992889404296875, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -0.011713981628417969, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.022054411470890045, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.000301361083984375, -0.0002040863037109375, -0.000194549560546875, -0.0074034929275512695, 0.0, -2.86102294921875e-05, -0.0001087188720703125, -0.0003871917724609375, -0.0008411407470703125, -7.62939453125e-06, -2.288818359375e-05, -0.0002002716064453125, -0.0001201629638671875, -1.1444091796875e-05, -0.0002079010009765625, -1.7404556274414062e-05, -7.867813110351562e-06, -0.0010166168212890625, -0.002033233642578125, -0.000179290771484375, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.000141143798828125, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -0.0029296875, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006313323974609375, -4.1961669921875e-05, -0.00048065185546875, -2.86102294921875e-05, -4.9591064453125e-05, 0.0, -0.0006905794143676758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.0001373291015625, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001211404800415039, -7.62939453125e-06, -0.0001549710868857801, 0.0, -0.000186920166015625, -0.0011768341064453125, -0.0001621246337890625, -0.00048065185546875, 0.0, -0.000405910424888134, -4.291534423828125e-06]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.055077870472019, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -0.005142331123352051, 0.0, -0.002044677734375, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007650852203369141, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005901371478103101, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002439890056848526, -1.1444091796875e-05, -0.0027894973754882812, -0.000225067138671875, -0.0019245147705078125, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008258819580078125, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.001621246337890625, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018725395202636719, -1.9073486328125e-06, -0.013532280921936035, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -0.005990028381347656, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -0.011693954467773438, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -3.846595287322998, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.0002002716064453125, -0.0002689361572265625, -0.0002002716064453125, -0.006415605545043945, 0.0, -2.09808349609375e-05, -0.0001087188720703125, -0.0001583099365234375, -0.000904083251953125, -7.62939453125e-06, -2.09808349609375e-05, -0.0002536773681640625, -0.0001277923583984375, -1.1444091796875e-05, -0.000244140625, -1.7404556274414062e-05, -6.079673767089844e-06, -0.00095367431640625, -0.002056121826171875, -0.0001811981201171875, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.0001392364501953125, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001468658447265625, -3.254413604736328e-05, 0.0, -0.0029754638671875, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006237030029296875, -4.1961669921875e-05, -0.00048065185546875, -2.86102294921875e-05, -4.9591064453125e-05, 0.0, -0.0006886720657348633, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.0001373291015625, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0012094974517822266, -7.62939453125e-06, -0.00015473268285859376, 0.0, -0.000186920166015625, -0.0011777877807617188, -0.0001621246337890625, -0.0004825592041015625, 0.0, -0.0004047304391860962, -4.291534423828125e-06]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.PALADIN, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.484380994536991, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -4.309426307678223, 0.0, -0.001708984375, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.5616416931152344e-05, -6.961822509765625e-05, -0.004715919494628906, -3.62396240234375e-05, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.050399598374497e-05, 0.0, -5.7220458984375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -5.841255187988281e-06, -2.86102294921875e-05, -0.001312255859375, -3.24249267578125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009489058866165578, -7.62939453125e-06, -0.02690410614013672, -0.0002803802490234375, -2.6702880859375e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.001263260841369629, -9.5367431640625e-06, -0.000705718994140625, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014473199844360352, -2.861022494471399e-06, -0.0009972206316888332, 0.0, -0.0016193389892578125, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -0.004827618598937988, 0.0, -0.002109527587890625, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -0.0007574558258056641, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005920437979511917, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.0024398863315582275, -1.1444091796875e-05, -0.002819061279296875, -0.0002269744873046875, -0.001926422119140625, -0.00011444091796875, -0.00028228759765625, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.000820159912109375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0016269683837890625, -0.000640869140625, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.0016231536865234375, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018696784973144531, -1.9073486328125e-06, -0.013535141944885254, 0.0, -4.00543212890625e-05, -0.0032558441162109375, -1.1444091796875e-05, -0.005992889404296875, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -0.011725425720214844, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.022053442895412445, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.000301361083984375, -0.0002040863037109375, -0.000194549560546875, -0.0074034929275512695, 0.0, -2.86102294921875e-05, -0.0001087188720703125, -0.0003871917724609375, -0.0008411407470703125, -7.62939453125e-06, -2.288818359375e-05, -0.0002002716064453125, -0.0001201629638671875, -1.1444091796875e-05, -0.0002079010009765625, -1.7404556274414062e-05, -7.867813110351562e-06, -0.0010166168212890625, -0.002033233642578125, -0.000179290771484375, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.000141143798828125, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -0.0029296875, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006313323974609375, -4.1961669921875e-05, -0.00048065185546875, -2.86102294921875e-05, -4.9591064453125e-05, 0.0, -0.0006905794143676758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.0001373291015625, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001211404800415039, -7.62939453125e-06, -0.0001549710868857801, 0.0, -0.000186920166015625, -0.0011768341064453125, -0.0001621246337890625, -0.00048065185546875, 0.0, -0.000405910424888134, -4.291534423828125e-06]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.807427180961099, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -0.005142331123352051, 0.0, -0.002044677734375, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007650852203369141, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005901371478103101, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002439890056848526, -1.1444091796875e-05, -0.0027894973754882812, -0.000225067138671875, -0.0019245147705078125, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008258819580078125, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.001621246337890625, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018725395202636719, -1.9073486328125e-06, -0.013532280921936035, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -0.005990028381347656, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -4.534635543823242, 0.0, -0.01935875415802002, 0.0, -0.0066165924072265625, -0.008753776550292969, -3.814697265625e-06, -0.014847874641418457, -1.9073486328125e-06, -0.000965118408203125, -0.0015926361083984375, -9.1552734375e-05, -0.020594477653503418, 0.0, -5.53131103515625e-05, -0.000202178955078125, -6.29425048828125e-05, -0.000362396240234375, -7.62939453125e-06, -7.62939453125e-06, -0.0007534027099609375, -0.0001049041748046875, -2.6702880859375e-05, -8.20159912109375e-05, -2.5033950805664062e-05, -7.867813110351562e-06, -0.011749267578125, -0.004856109619140625, -0.000278472900390625, -9.918212890625e-05, -2.09808349609375e-05, -0.00019073486328125, -0.0001125335693359375, -0.0002193450927734375, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -0.00012421607971191406, 0.0, -0.00046539306640625, 0.0, -4.38690185546875e-05, 0.0, -1.049041748046875e-05, 0.0, -0.0007190704345703125, -3.62396240234375e-05, -0.0005340576171875, -2.6702880859375e-05, -5.53131103515625e-05, 0.0, -0.0006676912307739258, 0.0, -9.5367431640625e-06, -3.0517578125e-05, -1.1444091796875e-05, -0.000152587890625, -5.7220458984375e-06, -7.2479248046875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001222848892211914, -7.62939453125e-06, -0.00015818967949599028, 0.0, -0.0001697540283203125, -0.0011587142944335938, -0.000156402587890625, -0.0004482269287109375, 0.0, -0.0003855908289551735, -4.291534423828125e-06]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "minions", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "minions"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.minions, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.980681385400317, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -4.773309707641602, 0.0, -0.0351715087890625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -1.3709068298339844e-05, -5.435943603515625e-05, -0.003849029541015625, -3.4332275390625e-05, -7.62939453125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.050399598374497e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -5.841255187988281e-06, -2.86102294921875e-05, -0.0013370513916015625, -3.24249267578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009374617948196828, -7.62939453125e-06, -0.026700973510742188, -0.0002841949462890625, -2.47955322265625e-05, -9.5367431640625e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012133121490478516, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010054382728412747, 0.0, -0.00156402587890625, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -0.005088925361633301, 0.0, -0.002056121826171875, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007631778717041016, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005888263694941998, -3.24249267578125e-05, -8.96453857421875e-05, -7.05718994140625e-05, -0.002430912107229233, -1.1444091796875e-05, -0.0027952194213867188, -0.0002231597900390625, -0.001926422119140625, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008249282836914062, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.0016231536865234375, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018715858459472656, -1.9073486328125e-06, -0.013531327247619629, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -0.005990028381347656, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -0.011693954467773438, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.02205841988325119, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.000301361083984375, -0.0002040863037109375, -0.000194549560546875, -0.0074034929275512695, 0.0, -2.86102294921875e-05, -0.0001087188720703125, -0.0003871917724609375, -0.0008411407470703125, -7.62939453125e-06, -2.288818359375e-05, -0.0002002716064453125, -0.0001201629638671875, -1.1444091796875e-05, -0.0002079010009765625, -1.7404556274414062e-05, -7.867813110351562e-06, -0.0010166168212890625, -0.002033233642578125, -0.000179290771484375, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.000141143798828125, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -0.0029296875, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006313323974609375, -4.1961669921875e-05, -0.00048065185546875, -2.86102294921875e-05, -4.9591064453125e-05, 0.0, -0.0006905794143676758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.0001373291015625, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001211404800415039, -7.62939453125e-06, -0.0001549710868857801, 0.0, -0.000186920166015625, -0.0011768341064453125, -0.0001621246337890625, -0.00048065185546875, 0.0, -0.00040579307824373245, -4.291534423828125e-06]}, {"choice_history": [70, 149, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -5.183271900285689, "score_history": [-8.7738037109375e-05, -4.210070610046387, -1.680836794548668e-05, -5.125986263010418e-06, -7.85919837653637e-06, -8.58306884765625e-06, 0.0, -9.5367431640625e-06, -0.7681818008422852, -0.00017547607421875, -3.576278118089249e-07, 0.0, -2.3841855067985307e-07, -5.960462772236497e-07, -0.015038609504699707, 0.0, -1.919269561767578e-05, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.406669252901338e-05, -0.04246234893798828, -7.62939453125e-06, -1.33514404296875e-05, -8.58306884765625e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.00011336802708683535, 0.0, -1.52587890625e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -2.86102294921875e-05, -0.028258323669433594, -2.6702880859375e-05, -2.09808349609375e-05, -1.52587890625e-05, -5.340576171875e-05, -0.0008704661740921438, -5.7220458984375e-06, -0.02250194549560547, -0.0002918243408203125, -2.6702880859375e-05, -8.7738037109375e-05, -0.000179290771484375, -1.9073486328125e-06, -0.0014448165893554688, -7.62939453125e-06, -0.0006885528564453125, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0001316070556640625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.0014320611953735352, -2.861022494471399e-06, -0.0009401696734130383, 0.0, -0.0017566680908203125, -5.14984130859375e-05, -1.33514404296875e-05, 0.0, -0.004983067512512207, 0.0, -0.0021514892578125, -1.33514404296875e-05, -6.103515625e-05, 0.0, -0.0007364749908447266, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005893022753298283, -3.24249267578125e-05, -9.1552734375e-05, -7.05718994140625e-05, -0.002463817596435547, -9.5367431640625e-06, -0.0029611587524414062, -0.0002422332763671875, -0.0020046234130859375, -0.0001220703125, -0.0002899169921875, -1.52587890625e-05, -0.0002269744873046875, 0.0, -0.00083160400390625, -2.47955322265625e-05, -1.1444091796875e-05, -0.001628875732421875, -0.00063323974609375, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.003975033760070801, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001068115234375, -3.814697265625e-06, -0.0007994174957275391, 0.0, -0.0016326904296875, -2.288818359375e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0018849372863769531, -1.9073486328125e-06, -0.01353609561920166, 0.0, -4.00543212890625e-05, -0.0032377243041992188, -1.1444091796875e-05, -0.0059757232666015625, -1.9073486328125e-06, -0.00074005126953125, -4.76837158203125e-05, -0.0006923675537109375, -3.814697265625e-06, -0.011698722839355469, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.0220949724316597, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "Change", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "Change", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def Change(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -5.845405575871268, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -0.005142331123352051, 0.0, -0.002044677734375, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007650852203369141, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005901371478103101, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002439890056848526, -1.1444091796875e-05, -0.0027894973754882812, -0.000225067138671875, -0.0019245147705078125, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008258819580078125, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.001621246337890625, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018725395202636719, -1.9073486328125e-06, -0.013532280921936035, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -0.005990028381347656, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -0.011693954467773438, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.022057436406612396, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.000301361083984375, -0.0002040863037109375, -0.000194549560546875, -5.621085166931152, -0.0002727508544921875, -0.000148773193359375, -4.1961669921875e-05, -0.0005664825439453125, -0.0002689361572265625, -1.9073486328125e-06, -2.09808349609375e-05, -0.0001678466796875, -0.00020599365234375, -1.1444091796875e-05, -0.000110626220703125, -1.1682510375976562e-05, -1.1682510375976562e-05, -0.0006465911865234375, -0.002681732177734375, -0.00017547607421875, -9.5367431640625e-05, -2.6702880859375e-05, -0.0001392364501953125, -0.000148773193359375, -0.0002288818359375, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001201629638671875, -3.826618194580078e-05, 0.0, -0.00267791748046875, 0.0, -4.1961669921875e-05, 0.0, -8.463859558105469e-06, -1.9073486328125e-06, -0.0006618499755859375, -4.1961669921875e-05, -0.0004749298095703125, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, -0.0006963014602661133, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.00012969970703125, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001222848892211914, -7.62939453125e-06, -0.00015568631351925433, 0.0, -0.0001850128173828125, -0.0011730194091796875, -0.000164031982421875, -0.0004730224609375, 0.0, -0.0004062950611114502, -4.291534423828125e-06]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -6.197452201618148, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -0.005142331123352051, 0.0, -0.002044677734375, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007650852203369141, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005901371478103101, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002439890056848526, -1.1444091796875e-05, -0.0027894973754882812, -0.000225067138671875, -0.0019245147705078125, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008258819580078125, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.001621246337890625, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018725395202636719, -1.9073486328125e-06, -0.013532280921936035, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -0.005990028381347656, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -0.011693954467773438, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.022057436406612396, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.000301361083984375, -0.0002040863037109375, -0.000194549560546875, -0.0074034929275512695, 0.0, -2.86102294921875e-05, -0.0001087188720703125, -0.0003871917724609375, -0.0008411407470703125, -7.62939453125e-06, -2.288818359375e-05, -0.0002002716064453125, -0.0001201629638671875, -1.1444091796875e-05, -0.0002079010009765625, -1.7404556274414062e-05, -7.867813110351562e-06, -0.0010166168212890625, -0.002033233642578125, -0.000179290771484375, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.000141143798828125, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -5.968722343444824, 0.0, -2.6702880859375e-05, 0.0, -1.0132789611816406e-05, -1.9073486328125e-06, -0.000469207763671875, -3.62396240234375e-05, -0.0004825592041015625, -3.4332275390625e-05, -4.57763671875e-05, 0.0, -0.0006600618362426758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -0.0001220703125, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0012322664260864258, -7.62939453125e-06, -0.00015425586025230587, 0.0, -0.000194549560546875, -0.00118255615234375, -0.0001659393310546875, -0.000507354736328125, 0.0, -0.0004085768014192581, -4.291534423828125e-06]}, {"choice_history": [70, 149, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Cleave", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 23, 139, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -6.253555869300435, "score_history": [-8.7738037109375e-05, -4.210070610046387, -1.680836794548668e-05, -5.125986263010418e-06, -7.85919837653637e-06, -8.58306884765625e-06, 0.0, -9.5367431640625e-06, -0.627202033996582, -8.58306884765625e-05, -8.4638240878121e-06, 0.0, 0.0, -2.9802276912960224e-06, -0.39786481857299805, 0.0, -0.06451308727264404, -3.576278118089249e-07, -0.000102996826171875, -1.9073486328125e-06, -0.0003903436881955713, -2.622604142743512e-06, -0.0010191197507083416, 0.0, -1.0848032616195269e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -8.463837730232626e-06, -0.22878551483154297, -7.62939453125e-06, -7.62939453125e-06, -3.62396240234375e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -6.79492904964718e-06, 0.0, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.933906555175781e-06, -4.38690185546875e-05, -0.0038022994995117188, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.5963059663772583, 0.0, -0.000461578369140625, -9.5367431640625e-06, -0.0003719329833984375, 0.0, -0.0004941225051879883, -1.52587890625e-05, -5.7220458984375e-06, -0.0014820098876953125, -3.814697265625e-06, -0.0015171722043305635, -5.14984130859375e-05, -0.0001163482666015625, -0.000286102294921875, -0.0063962265849113464, -1.9073486328125e-05, -0.03759002685546875, -0.0006103515625, -0.00299835205078125, -2.09808349609375e-05, -0.0001392364501953125, -1.52587890625e-05, -0.00021457672119140625, 0.0, -0.0018491744995117188, -3.814697265625e-05, -1.52587890625e-05, -0.000446319580078125, -0.0003643035888671875, -1.33514404296875e-05, -1.1920928955078125e-05, 0.0, -0.004388928413391113, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0001316070556640625, -3.814697265625e-06, -0.0017472505569458008, 0.0, -0.0011310577392578125, -2.09808349609375e-05, -0.0001354217529296875, -1.9073486328125e-06, -0.002028822898864746, -1.9073486328125e-06, -0.015285730361938477, 0.0, -3.4332275390625e-05, -0.0031480789184570312, -9.5367431640625e-06, -0.00614166259765625, -1.9073486328125e-06, -0.0009098052978515625, -4.76837158203125e-05, -0.0007610321044921875, -3.814697265625e-06, -0.010933876037597656, 0.0, -0.00017368793487548828, 0.0, -2.47955322265625e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001773834228515625, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.01968884840607643, -1.9073486328125e-06, -0.000202178955078125, -3.814697265625e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "append", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "append", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.append(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -6.276946935891026, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -0.005142331123352051, 0.0, -0.002044677734375, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007650852203369141, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005901371478103101, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002439890056848526, -1.1444091796875e-05, -0.0027894973754882812, -0.000225067138671875, -0.0019245147705078125, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008258819580078125, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.001621246337890625, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018725395202636719, -1.9073486328125e-06, -5.92820930480957, -0.00010549465514486656, -6.29425048828125e-05, -0.11173057556152344, -9.5367431640625e-06, -0.005830883979797363, -1.1920928244535389e-07, -0.0007877349853515625, -4.57763671875e-05, -0.000820159912109375, -1.9073486328125e-06, -0.03192710876464844, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001983642578125, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00017547607421875, -1.1444091796875e-05, -7.820128666935489e-05, 0.0, -0.02333925850689411, -1.9073486328125e-06, -0.0002536773681640625, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000293731689453125, -0.000202178955078125, -0.000194549560546875, -0.007546544075012207, 0.0, -2.86102294921875e-05, -0.0001068115234375, -0.0003871917724609375, -0.0008449554443359375, -5.7220458984375e-06, -2.288818359375e-05, -0.0002002716064453125, -0.0001201629638671875, -1.1444091796875e-05, -0.0001888275146484375, -1.9311904907226562e-05, -7.867813110351562e-06, -0.0010814666748046875, -0.002044677734375, -0.0001773834228515625, -9.918212890625e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.0001430511474609375, -0.0002384185791015625, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -0.0029048919677734375, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006313323974609375, -4.1961669921875e-05, -0.00048065185546875, -2.86102294921875e-05, -4.9591064453125e-05, 0.0, -0.0006905794143676758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.0001354217529296875, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001211404800415039, -7.62939453125e-06, -0.0001553287002025172, 0.0, -0.000186920166015625, -0.0011768341064453125, -0.0001621246337890625, -0.00048065185546875, 0.0, -0.00040470343083143234, -4.291534423828125e-06]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minions", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minions)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -6.284780173614422, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -0.005142331123352051, 0.0, -0.002044677734375, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007650852203369141, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005901371478103101, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002439890056848526, -1.1444091796875e-05, -0.0027894973754882812, -0.000225067138671875, -0.0019245147705078125, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008258819580078125, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.001621246337890625, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018725395202636719, -1.9073486328125e-06, -0.013532280921936035, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -5.788601398468018, 0.0, -0.01700592041015625, -0.000171661376953125, -0.000232696533203125, -1.9073486328125e-06, -0.2709599733352661, 0.0, -0.0006951093673706055, 0.0, -3.814697265625e-05, -0.000209808349609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001392364501953125, -9.5367431640625e-06, -8.416175114689395e-05, 0.0, -0.016596445813775063, -1.9073486328125e-06, -0.000274658203125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000278472900390625, -0.0001926422119140625, -0.0001850128173828125, -0.007489323616027832, 0.0, -2.6702880859375e-05, -0.0001201629638671875, -0.0003757476806640625, -0.0008449554443359375, -7.62939453125e-06, -2.288818359375e-05, -0.0001983642578125, -0.0001201629638671875, -1.1444091796875e-05, -0.0002117156982421875, -1.7404556274414062e-05, -5.9604644775390625e-06, -0.0010089874267578125, -0.0020389556884765625, -0.0001811981201171875, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.0001392364501953125, -0.0002346038818359375, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -0.002948760986328125, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006351470947265625, -4.1961669921875e-05, -0.0004825592041015625, -2.86102294921875e-05, -5.14984130859375e-05, 0.0, -0.0006905794143676758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.000133514404296875, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0012133121490478516, -7.62939453125e-06, -0.0001559247320983559, 0.0, -0.000186920166015625, -0.0011749267578125, -0.0001621246337890625, -0.0004749298095703125, 0.0, -0.0004047900438308716, -4.291534423828125e-06]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -6.318397837763428, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -5.639422416687012, 0.0, -0.055802345275878906, -9.918212890625e-05, -0.05366706848144531, -0.00011444091796875, -4.9591064453125e-05, -2.09808349609375e-05, -0.37623918056488037, 0.0, -0.02768993377685547, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0019512176513671875, -1.9073486328125e-06, -4.76837158203125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0008152721566148102, -3.576277322281385e-06, -0.0021807407028973103, 0.0, -0.0001010894775390625, -0.0035390853881835938, -4.38690185546875e-05, -0.00012969970703125, 0.0, -0.002474665641784668, 0.0, -0.0005228519439697266, -2.288818359375e-05, -1.9073486328125e-06, -0.0004940032958984375, -3.814697265625e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.0002269744873046875, -3.814697265625e-06, -7.295589603018016e-05, 0.0, -0.008571665734052658, 0.0, -0.0001583099365234375, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.0003719329833984375, -0.0002288818359375, -0.000133514404296875, -0.007053494453430176, 0.0, -3.24249267578125e-05, -7.82012939453125e-05, -0.000385284423828125, -0.0007877349853515625, -7.62939453125e-06, -1.9073486328125e-05, -0.00019073486328125, -0.000118255615234375, -1.1444091796875e-05, -0.0002155303955078125, -1.9311904907226562e-05, -5.9604644775390625e-06, -0.0011386871337890625, -0.0019817352294921875, -0.0001811981201171875, -9.918212890625e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.0001430511474609375, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.254413604736328e-05, 0.0, -0.0028896331787109375, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006275177001953125, -4.1961669921875e-05, -0.000476837158203125, -2.86102294921875e-05, -5.340576171875e-05, 0.0, -0.0006943941116333008, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.0001239776611328125, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, 0.0, -0.001226663589477539, -7.62939453125e-06, -0.00015878560952842236, 0.0, -0.0001850128173828125, -0.0011730194091796875, -0.00016021728515625, -0.000476837158203125, 0.0, -0.0004030587151646614, -4.291534423828125e-06]}, {"choice_history": [70, 149, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Cleave", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 23, 139, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -6.5468272476961715, "score_history": [-8.7738037109375e-05, -4.210070610046387, -1.680836794548668e-05, -5.125986263010418e-06, -7.85919837653637e-06, -8.58306884765625e-06, 0.0, -9.5367431640625e-06, -0.627202033996582, -8.58306884765625e-05, -8.4638240878121e-06, 0.0, 0.0, -2.9802276912960224e-06, -0.39786481857299805, 0.0, -0.06451308727264404, -3.576278118089249e-07, -0.000102996826171875, -1.9073486328125e-06, -0.0003903436881955713, -2.622604142743512e-06, -0.0010191197507083416, 0.0, -1.0848032616195269e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -8.463837730232626e-06, -0.22878551483154297, -7.62939453125e-06, -7.62939453125e-06, -3.62396240234375e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -6.79492904964718e-06, 0.0, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.933906555175781e-06, -4.38690185546875e-05, -0.0038022994995117188, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.9843665361404419, 0.0, -0.0002422332763671875, -0.0001201629638671875, -0.0006961822509765625, -7.62939453125e-05, -3.0517578125e-05, -7.62939453125e-06, -0.005034446716308594, -9.5367431640625e-06, -0.00745391845703125, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0014264583587646484, -4.172325134277344e-06, -0.00028261670377105474, 0.0, -0.0001239776611328125, -0.0024499893188476562, -3.62396240234375e-05, -0.00025177001953125, -1.9073486328125e-06, -0.0012351274490356445, 0.0, -0.0003784894652199, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005340576171875, -5.7220458984375e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.00031280517578125, -5.7220458984375e-06, -7.832019036868587e-05, 0.0, -0.007075346074998379, 0.0, -0.0001735687255859375, -3.814697265625e-06, -9.5367431640625e-06, 0.0]}, {"choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 14, 105, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 71, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Cleave", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "right": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "op": {"_type": "Add"}}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"value": {"_type": "Call", "args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = len(game.other_player.minions) + len(game.other_player.\n            minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -6.577177879569092, "score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -4.75438117980957, -0.014513015747070312, -0.0003719329833984375, -4.1961669921875e-05, -0.0005893707275390625, 0.0, -0.3825932741165161, -7.43865966796875e-05, -3.814697265625e-06, -2.47955322265625e-05, -4.57763671875e-05, -0.001461029052734375, -1.1444091796875e-05, -0.000102996826171875, 0.0, -5.9604644775390625e-06, 0.0, -0.001164078013971448, -2.503394853192731e-06, -0.002493552165105939, 0.0, -1.1314430236816406, -0.039534568786621094, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0005677938461303711, 0.0, -3.814697265625e-06, -0.0001811981201171875, -3.0517578125e-05, -0.039203643798828125, -1.1444091796875e-05, -0.000225067138671875, 0.0, -4.589557647705078e-05, 0.0, -0.002669810550287366, -3.576278118089249e-07, -0.0021516052074730396, 0.0, -0.0007476806640625, -4.57763671875e-05, -1.9073486328125e-05, 0.0, -0.007394909858703613, 0.0, -0.003437042236328125, -1.52587890625e-05, -6.4849853515625e-05, 0.0, -0.0006392002105712891, -5.7220458984375e-06, -5.7220458984375e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0004454506852198392, -3.24249267578125e-05, -0.0001544952392578125, -5.14984130859375e-05, -0.0027092434465885162, -1.33514404296875e-05, -0.0029926300048828125, -0.00022125244140625, -0.001766204833984375, -0.0001125335693359375, -0.0002384185791015625, -1.33514404296875e-05, -0.00037097930908203125, 0.0, -0.0011310577392578125, -2.6702880859375e-05, -1.1444091796875e-05, -0.001522064208984375, -0.0007228851318359375, -5.7220458984375e-06, -9.655952453613281e-06, 0.0, -0.004039764404296875, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001049041748046875, -3.814697265625e-06, -0.0008080005645751953, 0.0, -0.0015716552734375, -2.288818359375e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.0018782615661621094, -1.9073486328125e-06, -0.013487458229064941, 0.0, -4.1961669921875e-05, -0.0032978057861328125, -1.1444091796875e-05, -0.0060672760009765625, -1.9073486328125e-06, -0.000751495361328125, -4.57763671875e-05, -0.0006866455078125, -3.814697265625e-06, -0.011701583862304688, 0.0, -0.00018513202667236328, 0.0, -2.86102294921875e-05, -0.0001926422119140625, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.022024326026439667, -1.9073486328125e-06, -0.000225067138671875, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000301361083984375, -0.0002040863037109375, -0.000194549560546875, -0.007401585578918457, 0.0, -2.86102294921875e-05, -0.0001087188720703125, -0.000385284423828125, -0.000843048095703125, -7.62939453125e-06, -2.288818359375e-05, -0.0002002716064453125, -0.0001201629638671875, -1.1444091796875e-05, -0.0002079010009765625, -1.7404556274414062e-05, -7.867813110351562e-06, -0.0010166168212890625, -0.002033233642578125, -0.000179290771484375, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.000141143798828125, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -0.0029296875, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006313323974609375, -4.1961669921875e-05, -0.00048065185546875, -2.86102294921875e-05, -4.9591064453125e-05, 0.0, -0.0006905794143676758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.0001373291015625, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001211404800415039, -7.62939453125e-06, -0.0001549710868857801, 0.0, -0.000186920166015625, -0.0011768341064453125, -0.0001621246337890625, -0.00048065185546875, 0.0, -0.0004056748002767563, -4.291534423828125e-06]}]}
{"index": 20, "beams": [{"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -0.13092955885960578, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025345802307128906, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -0.003539831144735217, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.024671554565429688, -0.000141143798828125, -5.340576171875e-05, -6.103515625e-05, -0.0010433197021484375, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.007173657417297363, -1.9073486328125e-05, -0.0021514892578125, 0.0, -0.003223419189453125, 0.0, -2.47955322265625e-05, -0.0032520294189453125, -1.52587890625e-05, -0.0001983642578125, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0005985498428344727, 0.0, -0.0027589197270572186, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 82, 120, 17, 113, 21, 134, "minion", "<EOS>", 234, 9, 237, 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "_type": "Compare", "left": {"id": "minion", "_type": "Name"}, "ops": [{"_type": "IsNot"}]}}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            if minion is not self.target:\n                minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -4.27764914473093, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -3.800212860107422, -0.0021915435791015625, -0.001384735107421875, -5.7220458984375e-06, -0.00104522705078125, 0.0, -0.00029480457305908203, 0.0, -0.0057735443115234375, -0.06852912902832031, -0.000240325927734375, -0.00016021728515625, -7.62939453125e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.2716236114501953, -1.9073486328125e-06, -0.0014142990112304688, 0.0, -1.33514404296875e-05, -0.013268470764160156, -9.5367431640625e-06, -4.1961669921875e-05, 0.0, -9.918212890625e-05, 0.0, -0.0001373291015625, 0.0, -1.1444091796875e-05, -0.000186920166015625, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000354766845703125, 0.0, -0.00023376941680908203, 0.0, -0.00337793561629951, -3.814697265625e-06, -9.918212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.030736923217773438, -0.0001659393310546875, -5.53131103515625e-05, -5.91278076171875e-05, -0.0010528564453125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.007322430610656738, -2.09808349609375e-05, -0.0022573471069335938, 0.0, -0.0035572052001953125, 0.0, -2.6702880859375e-05, -0.003070831298828125, -1.52587890625e-05, -0.0001926422119140625, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0006099939346313477, 0.0, -0.0027279455680400133, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player:\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -4.5132690708576035, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025345802307128906, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -0.003539831144735217, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.9101219177246094, -0.0001163482666015625, -0.0001201629638671875, -1.9073486328125e-06, -0.0003910064697265625, 0.0, -0.009325981140136719, -1.9073486328125e-06, -0.046428680419921875, -3.814697265625e-06, -0.20157909393310547, 0.0, -0.1203165054321289, 0.0, -0.0004520416259765625, -0.000774383544921875, -5.7220458984375e-06, -0.07541847229003906, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -0.045197486877441406, 0.0, -5.7220458984375e-06, -0.014525413513183594, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.00031828880310058594, 0.0, -0.0024661761708557606, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -4.668212008260269, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -4.612608909606934, -1.9073486328125e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000377655029296875, -1.9073486328125e-06, 0.0, -5.960462658549659e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.57763671875e-05, 0.0, -3.254413604736328e-05, -2.6702880859375e-05, -0.0004100799560546875, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.001537322998046875, 0.0, -0.0001163482666015625, -0.001232147216796875, -7.2479248046875e-05, -2.6702880859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.002559661865234375, -1.9073486328125e-06, -0.001644134521484375, 0.0, -3.62396240234375e-05, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0013980865478515625, -3.814697265625e-06, -5.6624372518854216e-05, 0.0, -2.6702880859375e-05, -0.022920608520507812, -7.62939453125e-06, -0.0001125335693359375, 0.0, -9.655952453613281e-06, 0.0, -0.00022125244140625, -1.9073486328125e-06, -5.7220458984375e-06, -0.00061798095703125, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00042724609375, 0.0, -0.0002243518829345703, 0.0, -0.003532362636178732, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -5.595821250098851, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -5.477103233337402, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.516674041748047e-05, -8.821463779895566e-06, -0.01944732666015625, -0.0001220703125, -9.5367431640625e-06, -4.00543212890625e-05, -5.14984130859375e-05, -1.9073486328125e-06, 0.0, -9.775161743164062e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.728534698486328e-05, -2.86102294921875e-05, -0.0109710693359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014591217041015625, 0.0, -9.72747802734375e-05, -0.0015506744384765625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022068023681640625, -1.9073486328125e-06, -0.001552581787109375, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014171600341796875, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025228500366210938, -5.7220458984375e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006542205810546875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0004119873046875, 0.0, -0.0002281665802001953, 0.0, -0.0035201802384108305, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.024639129638671875, -0.0001392364501953125, -5.340576171875e-05, -6.29425048828125e-05, -0.0010528564453125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.007070660591125488, -1.9073486328125e-05, -0.0021820068359375, 0.0, -0.0032482147216796875, 0.0, -2.47955322265625e-05, -0.0032520294189453125, -1.52587890625e-05, -0.0001964569091796875, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0006004571914672852, 0.0, -0.0027585625648498535, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "SHAMAN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -5.839428870334558, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -5.713473320007324, 0.0, -9.5367431640625e-06, 0.0, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.516674041748047e-05, -9.775130820344202e-06, -0.026472091674804688, -9.5367431640625e-05, -9.5367431640625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -7.092952728271484e-05, 0.0, -5.7220458984375e-06, 0.0, -4.1961669921875e-05, 0.0, -1.728534698486328e-05, -2.6702880859375e-05, -0.01154327392578125, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014629364013671875, 0.0, -9.5367431640625e-05, -0.001529693603515625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00222015380859375, -1.9073486328125e-06, -0.0015544891357421875, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.02509307861328125, -7.62939453125e-06, -9.5367431640625e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -0.0035400688648223877, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.024456024169921875, -0.0001373291015625, -5.340576171875e-05, -6.4849853515625e-05, -0.0010528564453125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.007034420967102051, -1.9073486328125e-05, -0.0021924972534179688, 0.0, -0.00327301025390625, 0.0, -2.47955322265625e-05, -0.0032520294189453125, -1.52587890625e-05, -0.0001964569091796875, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0006023645401000977, 0.0, -0.002758800284937024, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -6.220292044417619, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -6.095294952392578, 0.0, -7.62939453125e-06, 0.0, -6.198883056640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -2.5987625122070312e-05, -1.1444046322139911e-05, -0.025758743286132812, -9.5367431640625e-05, -1.1444091796875e-05, -4.00543212890625e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -0.00013196468353271484, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.010334014892578125, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.00145721435546875, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.91278076171875e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022068023681640625, -1.9073486328125e-06, -0.001552581787109375, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014171600341796875, -3.814697265625e-06, -5.769726340076886e-05, 0.0, -2.09808349609375e-05, -0.025312423706054688, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0004253387451171875, 0.0, -0.0002338886260986328, 0.0, -0.003555550705641508, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.025035858154296875, -0.0001373291015625, -5.340576171875e-05, -6.4849853515625e-05, -0.001049041748046875, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.007104992866516113, -1.9073486328125e-05, -0.0021810531616210938, 0.0, -0.0032787322998046875, 0.0, -2.47955322265625e-05, -0.003253936767578125, -1.52587890625e-05, -0.0001964569091796875, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0006004571914672852, 0.0, -0.0027589192613959312, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "extend", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 21, 134, "targets", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "extend", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -6.239994369077721, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -5.131304740905762, -0.00022125244140625, -2.09808349609375e-05, -8.7738037109375e-05, -5.340576171875e-05, -1.9073486328125e-06, 0.0, -0.00038361549377441406, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.971027374267578e-05, 0.0, -1.537799835205078e-05, -2.86102294921875e-05, -0.2557554244995117, -9.5367431640625e-06, -0.0010833740234375, -1.9073486328125e-05, -2.47955322265625e-05, -0.0495302677154541, -3.814697265625e-06, -0.0001926422119140625, -0.000499725341796875, -0.0001392364501953125, -7.62939453125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.0003192424774169922, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0012798309326171875, -3.814697265625e-06, -4.9233411118621007e-05, 0.0, -0.000934600830078125, -0.000118255615234375, -8.96453857421875e-05, -5.7220458984375e-06, -0.0005350112915039062, -1.9073486328125e-06, -0.26909637451171875, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0019474029541015625, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.3235265016555786, -1.9073486328125e-06, -0.0002256631851196289, 0.0, -0.060982704162597656, -7.43865966796875e-05, -1.33514404296875e-05, 0.0, -0.0043487548828125, 0.0, -0.10474109649658203, -7.05718994140625e-05, -0.0017995834350585938, 0.0, -0.0011768341064453125, -0.0037441253662109375, -1.9073486328125e-05, -0.0005054473876953125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.002292633056640625, 0.0, -1.9073486328125e-06, -0.000545501708984375, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0002803802490234375, 0.0, -0.00017118453979492188, 0.0, -0.0036108125932514668, -1.9073486328125e-06, -0.0001068115234375, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -6.25994795104063, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025345802307128906, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -6.032326698303223, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.12390518188476562, -0.0001354217529296875, -7.43865966796875e-05, -5.14984130859375e-05, -0.0010700225830078125, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.008081555366516113, -1.71661376953125e-05, -0.0017873048782348633, 0.0, -0.00376129150390625, 0.0, -2.09808349609375e-05, -0.0032596588134765625, -1.52587890625e-05, -0.0001735687255859375, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0005681514739990234, 0.0, -0.0027800165116786957, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.current_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -6.281501110033531, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025345802307128906, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -0.003539831144735217, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.024671554565429688, -0.000141143798828125, -5.340576171875e-05, -6.103515625e-05, -0.0010433197021484375, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -5.821955680847168, 0.0, -0.33832359313964844, 0.0, -0.0024471282958984375, 0.0, -2.288818359375e-05, -0.00384521484375, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -0.0006747245788574219, 0.0, -0.0026072519831359386, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(4), self)\n", "score": -6.305260807131816, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025345802307128906, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -0.003539831144735217, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.024671554565429688, -0.000141143798828125, -5.340576171875e-05, -6.103515625e-05, -0.0010433197021484375, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.007173657417297363, -1.9073486328125e-05, -0.0021514892578125, 0.0, -0.003223419189453125, 0.0, -2.47955322265625e-05, -0.0032520294189453125, -1.52587890625e-05, -0.0001983642578125, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0005985498428344727, 0.0, -6.1771321296691895, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -6.341441714289175, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -6.218843460083008, 0.0, -5.91278076171875e-05, 0.0, -3.933906555175781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -2.944469451904297e-05, -1.0967213711410295e-05, -0.0216827392578125, -9.5367431640625e-05, -1.1444091796875e-05, -4.1961669921875e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -0.00010716915130615234, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.57763671875e-05, 0.0, -1.728534698486328e-05, -2.86102294921875e-05, -0.010839462280273438, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.001461029052734375, 0.0, -9.5367431640625e-05, -0.001544952392578125, -5.91278076171875e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022068023681640625, -1.9073486328125e-06, -0.00154876708984375, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025214195251464844, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0004215240478515625, 0.0, -0.0002319812774658203, 0.0, -0.0035443566739559174, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.026273727416992188, -0.000133514404296875, -5.340576171875e-05, -6.4849853515625e-05, -0.0010528564453125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.007106900215148926, -1.9073486328125e-05, -0.0021829605102539062, 0.0, -0.0032863616943359375, 0.0, -2.47955322265625e-05, -0.0032520294189453125, -1.52587890625e-05, -0.0001964569091796875, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0006004571914672852, 0.0, -0.0027596335858106613, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "extend", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "extend", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n", "score": -6.373575686573275, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -5.143043518066406, -2.09808349609375e-05, -0.0006256103515625, -3.0517578125e-05, -0.000209808349609375, -0.08542358875274658, -7.62939453125e-06, -0.0003261566162109375, -0.0003757476806640625, -0.00023651123046875, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00032329559326171875, -1.9073486328125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0012874603271484375, -3.814697265625e-06, -4.887578324996866e-05, 0.0, -0.4225292205810547, -9.34600830078125e-05, -0.001827239990234375, -3.814697265625e-06, -0.0005979537963867188, -3.814697265625e-06, -0.3070192337036133, 0.0, -0.0001220703125, -3.814697265625e-06, -3.814697265625e-06, -0.0006427764892578125, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.3715096712112427, -1.9073486328125e-06, -0.0002695322036743164, 0.0]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -6.478763711029124, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025345802307128906, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -0.003539831144735217, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.9101219177246094, -0.0001163482666015625, -0.0001201629638671875, -1.9073486328125e-06, -0.0003910064697265625, 0.0, -0.009325981140136719, -1.9073486328125e-06, -0.046428680419921875, -3.814697265625e-06, -1.704157829284668, 0.0, -0.0020104646682739258, 0.0, -7.82012939453125e-05, -0.0035352706909179688, -7.62939453125e-06, -0.023386001586914062, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.6570816040039062, 0.0, -0.00023651123046875, -0.0013256072998046875, -3.4332275390625e-05, -5.53131103515625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.03370654582977295, -1.1920928244535389e-07, -0.0010186252184212208, -9.5367431640625e-06, -0.000209808349609375, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Consecration", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score": -6.711462884997417, "score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025345802307128906, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -0.003539831144735217, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.41417121887207, -1.71661376953125e-05, -0.06709003448486328, -1.52587890625e-05, -0.10209465026855469, -1.1444091796875e-05, -0.003826141357421875, 0.0, -0.03891468048095703, 0.0]}]}
{"index": 21, "beams": [{"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -0.027659291223173454, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -0.0003057339636143297, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.266334533691406e-05, -1.9073486328125e-06, -0.0057610273361206055, 0.0, -2.1457672119140625e-06, 0.0, -0.0003037452697753906, 0.0, -9.5367431640625e-06, -0.001262664794921875, -9.5367431640625e-06, -2.0265579223632812e-06, -7.629365427419543e-06, -0.0005247592926025391, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Core", " ", "Hound", "<EOS>", 46, 139, "7", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -4.100676556907075, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.080556869506836, -0.01175689697265625, -3.0517578125e-05, 0.0, -1.0251987987430766e-05, 0.0, -5.9247013268759474e-05, 0.0, -0.0025119781494140625, -0.0001850128173828125, -5.91278076171875e-05, -6.318072337307967e-06, -9.33408664423041e-05, -3.063678013859317e-05, -1.9669374523800798e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0008435249328613281, -1.5139572496991605e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.975100015755743e-05, 0.0, -9.405529999639839e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0001068115234375, -2.47955322265625e-05, -1.1444091796875e-05, -5.960462772236497e-07, -7.62939453125e-06, -0.0004024505615234375, -7.62939453125e-05, -0.0005438327789306641, -1.3112959095451515e-05, -0.0002480442344676703, 0.0, -0.0008536680834367871, 0.0, -7.62939453125e-06, -0.00031280517578125, -2.288818359375e-05, -1.9073486328125e-06, -3.218599158572033e-05, -0.0004923343658447266, 0.0]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -5.261501902536942, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -0.0003057339636143297, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.266334533691406e-05, -1.9073486328125e-06, -5.240387916564941, 0.0, -2.2649765014648438e-06, 0.0, -0.00027489662170410156, 0.0, -7.05718994140625e-05, -0.00057220458984375, -1.9073486328125e-05, -1.1920928244535389e-07, -7.510157047363464e-06, -0.0003911256790161133, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "9", "<EOS>", "5", "<EOS>", "stealth", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template22", "hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5, stealth=True)\n", "score": -7.379738324011264, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -0.0003057339636143297, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.266334533691406e-05, -1.9073486328125e-06, -0.0057610273361206055, 0.0, -2.1457672119140625e-06, 0.0, -0.0003037452697753906, 0.0, -9.5367431640625e-06, -7.1730451583862305, -0.0001068115234375, 0.0, -4.672895011026412e-05, -8.630752563476562e-05, -1.5497195136049413e-06, -0.17684996128082275, 0.0, -0.0036363601684570312, -4.9591064453125e-05, -6.330013275146484e-05, 0.0]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "9", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 9, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 9)\n", "score": -7.582129234269722, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -0.0003057339636143297, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.266334533691406e-05, -1.9073486328125e-06, -0.0057610273361206055, 0.0, -2.1457672119140625e-06, 0.0, -0.0003037452697753906, 0.0, -9.5367431640625e-06, -0.001262664794921875, -9.5367431640625e-06, -2.0265579223632812e-06, -7.629365427419543e-06, -7.554994583129883, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -7.943287562778025, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -7.914429187774658, 0.0, -0.0014349609846249223, 0.0, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.1219253540039062e-05, -1.9073486328125e-06, -0.006491899490356445, 0.0, -2.1457672119140625e-06, 0.0, -0.0003134012222290039, 0.0, -9.5367431640625e-06, -0.001140594482421875, -9.5367431640625e-06, -2.0265579223632812e-06, -7.748573807475623e-06, -0.0005285739898681641, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Core", "Hound", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHoundHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHoundHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -8.290433477993375, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -7.382835865020752, -0.8833622932434082, -1.168244216387393e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.014514923095703125, -0.000324249267578125, -1.1920922133867862e-06, -0.00016796588897705078, -1.1920928244535389e-07, -0.00012170596164651215, -7.653236389160156e-05, -3.576278118089249e-07, -0.0005550383357331157, 0.0, -0.0003152680292259902, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.457069396972656e-05, -1.9073486328125e-06, -0.0056008100509643555, 0.0, -2.1457672119140625e-06, 0.0, -0.0002981424331665039, 0.0, -9.5367431640625e-06, -0.0012645721435546875, -9.5367431640625e-06, -2.0265579223632812e-06, -7.510157047363464e-06, -0.0005247592926025391, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "9", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "9"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, 9=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -8.453634890226951, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -8.427742958068848, 0.0, -0.0005435943603515625, -1.33514404296875e-05, -3.814697265625e-05, -3.814697265625e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -0.004013419151306152, 0.0, -2.741813204920618e-06, 0.0, -0.00045478343963623047, 0.0, -1.33514404296875e-05, -0.000946044921875, -9.5367431640625e-06, -2.0265579223632812e-06, -7.867782187531702e-06, -0.00046181678771972656, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Core", " ", "Hound", "<EOS>", 46, 139, "7", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Num", "n": 7}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(9, 5)\n", "score": -8.71841206773152, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.080556869506836, -4.536595344543457, -0.0001087188720703125, -1.52587890625e-05, -0.0001542463432997465, -1.1920928244535389e-07, -0.0003224611282348633, -1.9073486328125e-06, -0.0009479522705078125, -0.0003948211669921875, -0.0001201629638671875, -2.3841855067985307e-07, -0.00016498549666721374, -4.410734163684538e-06, -1.3708998267247807e-05, -2.6702880859375e-05, 0.0, -0.004336164332926273, -5.5909156799316406e-05, -0.0001125335693359375, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -4.0650356822879985e-05, -1.1920928244535389e-07, -0.00036222636117599905, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00021398067474365234, -7.152555099310121e-07, -0.00012516973947640508, 0.0, -0.0009937286376953125, -0.0001316070556640625, -1.3589859008789062e-05, -3.099440846199286e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0013490915298461914, -3.743171691894531e-05, -0.05571317672729492, -2.0265579223632812e-06, -4.935264587402344e-05, 0.0, -0.02889728546142578, -3.814697265625e-06, -9.5367431640625e-06, -0.0047397613525390625, -5.340576171875e-05, -1.1920928244535389e-07, -1.2278481335670222e-05, -0.0006606578826904297, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n", "score": -8.726897467593446, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -0.0003057339636143297, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.266334533691406e-05, -1.9073486328125e-06, -0.0057610273361206055, 0.0, -2.1457672119140625e-06, 0.0, -0.0003037452697753906, 0.0, -9.5367431640625e-06, -7.755124092102051, -0.48026466369628906, -0.12581110000610352, -0.19067668914794922, -2.682209014892578e-05, -0.00042417587246745825, -0.034354329109191895, -1.1920928244535389e-07, -0.10780298709869385, 0.0, -0.0018827575258910656, 0.0, -0.001796722412109375, -4.38690185546875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0004330873489379883, -1.9073486328125e-06, -0.0023882389068603516, 0.0]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -8.854839915241357, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -0.0003057339636143297, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.266334533691406e-05, -1.9073486328125e-06, -8.833666801452637, 0.0, -1.9073486328125e-06, 0.0, -0.00015842914581298828, 0.0, -8.7738037109375e-05, -0.0007953643798828125, -1.9073486328125e-05, -1.1920928244535389e-07, -6.198863957251888e-06, -0.0003281831741333008, 0.0]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -8.863804334595372, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -0.0003057339636143297, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.266334533691406e-05, -1.9073486328125e-06, -8.842391014099121, 0.0, -1.9073486328125e-06, 0.0, -0.00015294551849365234, 0.0, -6.866455078125e-05, -0.0008945465087890625, -1.1444091796875e-05, -1.1920928244535389e-07, -7.748573807475623e-06, -0.0004998445510864258, 0.0]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 7, "hole0": "Core HoundHound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core HoundHound', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -9.00849475814443, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -8.896631240844727, -0.08417490124702454, -0.00010406970977783203, -1.1920928244535389e-07, -0.0005589723004959524, 0.0, -0.0003354066866450012, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.0875205993652344e-05, -1.9073486328125e-06, -0.00582575798034668, 0.0, -2.1457672119140625e-06, 0.0, -0.0003113746643066406, 0.0, -9.5367431640625e-06, -0.0013141632080078125, -9.5367431640625e-06, -2.0265579223632812e-06, -7.748573807475623e-06, -0.0005190372467041016, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Core", "Hound", "Hound", "Card", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHoundHoundCard", "hole2": [{"hole1": 7, "hole0": "Core Hound", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHoundHoundCard(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -9.032070563879998, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -7.382835865020752, -1.4878153800964355, -3.933904736186378e-06, -8.344614798261318e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.1513347625732422, -0.0001659393310546875, -9.536738616588991e-07, -0.00015270709991455078, -1.1920928244535389e-07, -0.00017475520144216716, -8.976459503173828e-05, -3.576278118089249e-07, -0.0005022285040467978, 0.0, -0.00039296664181165397, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.075599670410156e-05, -1.9073486328125e-06, -0.005926966667175293, 0.0, -2.1457672119140625e-06, 0.0, -0.0003018379211425781, 0.0, -9.5367431640625e-06, -0.0013866424560546875, -9.5367431640625e-06, -2.0265579223632812e-06, -7.510157047363464e-06, -0.0005266666412353516, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "CoreHound", "hole2": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        return Minion(9, 5)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -9.379875972200743, "score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.239913940429688, -0.00428009033203125, -0.0031682252883911133, -0.0003651953593362123, -0.10996448993682861, 0.0, -0.006593550555408001, -3.814697265625e-05, -0.0030064673628658056, 0.0, -7.05718994140625e-05, -0.01096343994140625, -1.71661376953125e-05, -1.1920928244535389e-07, -4.172316494077677e-06, -0.0005418062210083008, -2.3841855067985307e-07]}]}
{"index": 22, "beams": [{"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -0.12200437514752593, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.03499031066894531, 0.0, -3.62396240234375e-05, -4.57763671875e-05, -5.7220458984375e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.001583099365234375, -3.814697265625e-06, -5.7220458984375e-06, -0.026058197021484375, -0.000152587890625, -0.0001125335693359375, 0.0, -0.0002938508987426758, -0.0034313201904296875, 0.0, -0.001262664794921875, -0.0034351348876953125, -0.0002689361572265625, -0.0026569366455078125, -1.9073486328125e-06, -5.91278076171875e-05, -0.000133514404296875, -0.007500404492020607, -1.33514404296875e-05, 0.0, -0.000640869140625, -0.0029554367065429688, -0.0005674362182617188, -2.384185791015625e-06, -0.0012018593261018395, -5.841255187988281e-06, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 63, 205, "Turn", "Ended", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole0": "TurnEnded", "_type": "Template39"}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnEnded(), ActionTag(Kill(),\n            SelfSelector())))\n", "score": -3.9481619279579263, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.03499031066894531, 0.0, -3.62396240234375e-05, -4.57763671875e-05, -5.7220458984375e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.001583099365234375, -3.814697265625e-06, -5.7220458984375e-06, -3.8065052032470703, -1.71661376953125e-05, -0.006289340555667877, -0.0021828413009643555, 0.0, -0.0006160736083984375, -0.06038188934326172, -0.000599980354309082, -6.198863957251888e-06, -0.0003098159213550389, -3.3378591979271732e-06, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 5}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeHealth(5)))\n", "score": -4.7996034485061045, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.408449172973633, 0.0, -6.103515625e-05, -0.019681930541992188, -0.002559661865234375, -0.00010716915130615234, -5.53131103515625e-05, -0.0002808567078318447, -0.3062419891357422, 0.0, -0.02467440254986286, -0.003009796142578125]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.992120384873715, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.921351909637451, 0.0, -1.52587890625e-05, -0.035892486572265625, -0.0001010894775390625, -0.00027561187744140625, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Current", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "CurrentPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -5.0856615119175785, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.03499031066894531, 0.0, -3.62396240234375e-05, -4.57763671875e-05, -5.7220458984375e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.001583099365234375, -3.814697265625e-06, -5.7220458984375e-06, -0.026058197021484375, -0.000152587890625, -0.0001125335693359375, 0.0, -0.0002938508987426758, -0.0034313201904296875, 0.0, -0.001262664794921875, -0.0034351348876953125, -0.0002689361572265625, -0.0026569366455078125, -1.9073486328125e-06, -5.91278076171875e-05, -0.000133514404296875, -4.967289447784424, -3.170967102050781e-05, -1.9073486328125e-06, -0.0032300949096679688, -0.003948211669921875, -0.00048542022705078125, -6.43729799776338e-06, -0.0015398081159219146, -5.9604644775390625e-06, -1.1444091796875e-05]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -5.183504449023587, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.83901834487915, 0.0, -5.14984130859375e-05, -0.24604511260986328, -9.5367431640625e-06, -9.918212890625e-05, -3.814697265625e-06, -0.014249801635742188, -3.814697265625e-06, -5.7220458984375e-06, -0.021218299865722656, -0.0001316070556640625, -6.4849853515625e-05, 0.0, -0.00096893310546875, -0.0032978057861328125, 0.0, -0.000865936279296875, -0.0053234100341796875, -0.000247955322265625, -0.0030565261840820312, -1.9073486328125e-06, -7.2479248046875e-05, -0.0001239776611328125, -0.008446689695119858, -1.33514404296875e-05, 0.0, -0.0008106231689453125, -0.0032062530517578125, -0.000530242919921875, -5.960462772236497e-07, -0.0011424926342442632, -5.841255187988281e-06, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -5.604317173648155, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -5.492879390716553, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.872943878173828e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.00011706352233886719, -8.344646857949556e-07, -0.010674476623535156, -0.0044002532958984375, -3.0517578125e-05, -0.0001659393310546875, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001068115234375, -7.62939453125e-06, -4.0531158447265625e-06, -8.0108642578125e-05, -0.0058193206787109375, -0.0004138946533203125, -9.5367431640625e-06, -4.1961669921875e-05, -0.0018024444580078125, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.03460216522216797, 0.0, -3.814697265625e-05, -4.57763671875e-05, -5.7220458984375e-05, -3.814697265625e-05, -3.814697265625e-06, -0.0015430450439453125, -3.814697265625e-06, -5.7220458984375e-06, -0.023021697998046875, -0.0001506805419921875, -0.00011444091796875, 0.0, -0.0002938508987426758, -0.00341796875, 0.0, -0.0012798309326171875, -0.0034427642822265625, -0.0002727508544921875, -0.0026254653930664062, -1.9073486328125e-06, -5.91278076171875e-05, -0.000133514404296875, -0.007462138310074806, -1.33514404296875e-05, 0.0, -0.0006351470947265625, -0.00295257568359375, -0.0005693435668945312, -2.384185791015625e-06, -0.0012077005812898278, -5.841255187988281e-06, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>", 79, 115, 31, 195, 33, 205, "super", "<EOS>", "reveal", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}, {"_type": "Expr", "value": {"hole1": "reveal", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template36"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        super().reveal()\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -5.819141000329175, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -5.1407060623168945, -5.53131103515625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.266334533691406e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0013370513916015625, -3.814697265625e-06, -4.291534423828125e-06, -0.0002040863037109375, -8.392333984375e-05, -0.0004425048828125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0002231597900390625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.05690288543701172, 0.0, -2.09808349609375e-05, -0.000110626220703125, -2.09808349609375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0022525787353515625, -3.814697265625e-06, -3.814697265625e-06, -0.027631759643554688, -0.000156402587890625, -9.34600830078125e-05, 0.0, -0.0002919435501098633, -0.0035419464111328125, 0.0, -0.0016231536865234375, -0.00357818603515625, -0.0002918243408203125, -0.0025339126586914062, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001354217529296875, -0.007571930065751076, -1.33514404296875e-05, 0.0, -0.0006504058837890625, -0.0029325485229492188, -0.00055694580078125, -2.384185791015625e-06, -0.0012050778605043888, -5.841255187988281e-06, -5.7220458984375e-06, -0.0977945327758789, -2.6702880859375e-05, -0.2745218276977539, -1.71661376953125e-05, -0.011754035949707031, -6.4849853515625e-05, -0.0002715587615966797, -1.9073486328125e-05, -0.04859054088592529, -1.9073486328125e-06, -0.0056285858154296875, -0.000484466552734375, -0.008061408996582031, -0.000301361083984375, -8.96453857421875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -1.1920928244535389e-07, -0.04529857635498047, 0.0, -8.0108642578125e-05, -0.000102996826171875, -3.814697265625e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0009212493896484375, -1.9073486328125e-06, -9.5367431640625e-06, -0.03058910369873047, -0.0001163482666015625, -9.918212890625e-05, 0.0, -0.00023281574249267578, -0.003991127014160156, 0.0, -0.001468658447265625, -0.003570556640625, -0.0003032684326171875, -0.0023927688598632812, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001373291015625, -0.007698649540543556, -1.33514404296875e-05, 0.0, -0.00054931640625, -0.0028867721557617188, -0.0006275177001953125, -2.503394853192731e-06, -0.0011403464013710618, -5.841255187988281e-06, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -5.821184366645184, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -5.437032699584961, 0.0, -0.08194255828857422, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.07946109771728516, -5.7220458984375e-06, -0.1957446038722992, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 5}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(5)))\n", "score": -5.839862226765263, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.408449172973633, 0.0, -6.103515625e-05, -0.019681930541992188, -0.002559661865234375, -0.00010716915130615234, -5.53131103515625e-05, -0.0002808567078318447, -1.3398303985595703, -5.7220458984375e-06, -0.031417250633239746, -0.0029315948486328125]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>", 79, 115, 31, 195, 33, 205, "super", "<EOS>", "reveal", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}, {"_type": "Expr", "value": {"hole1": "reveal", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        super().reveal()\n", "score": -6.300520168786754, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -5.1600341796875, -0.0016231536865234375, -0.3286914825439453, -9.72747802734375e-05, -0.0061435699462890625, -1.9073486328125e-06, -0.001434326171875, -1.9073486328125e-06, -0.0055713653564453125, -1.1920928244535389e-07, -0.20502769947052002, 0.0, -0.002376556396484375, -2.6702880859375e-05, -3.24249267578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0014514923095703125, -1.9073486328125e-06, -5.7220458984375e-06, -0.016912460327148438, -0.0001697540283203125, -0.0001659393310546875, 0.0, -0.00022900104522705078, -0.0034503936767578125, 0.0, -0.001026153564453125, -0.0037593841552734375, -0.0002880096435546875, -0.0023975372314453125, -1.9073486328125e-06, -6.103515625e-05, -0.0001468658447265625, -0.007220024708658457, -1.33514404296875e-05, 0.0, -0.0006561279296875, -0.0030889511108398438, -0.0006122589111328125, -2.384185791015625e-06, -0.0012570545077323914, -5.841255187988281e-06, -5.7220458984375e-06, -0.03643798828125, -5.7220458984375e-06, -0.2677288055419922, -3.814697265625e-06, -0.03449440002441406, -0.000209808349609375, -0.00015866756439208984, -4.1961669921875e-05, -0.18732571601867676, 0.0]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -6.504015907931603, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -6.395443916320801, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.0002715587615966797, -8.344646857949556e-07, -0.009497642517089844, -0.005306243896484375, -4.1961669921875e-05, -0.0001888275146484375, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -6.866455078125e-05, -0.005329132080078125, -0.00042724609375, -9.5367431640625e-06, -4.57763671875e-05, -0.00200653076171875, 0.0, -5.7220458984375e-06, 0.0, 0.0, 0.0, -0.03539562225341797, 0.0, -4.38690185546875e-05, -4.76837158203125e-05, -5.53131103515625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.001522064208984375, -3.814697265625e-06, -5.7220458984375e-06, -0.019883155822753906, -0.000148773193359375, -0.0001239776611328125, 0.0, -0.0003091096878051758, -0.0033903121948242188, 0.0, -0.00128173828125, -0.0034637451171875, -0.0002727508544921875, -0.0026197433471679688, -1.9073486328125e-06, -5.91278076171875e-05, -0.0001316070556640625, -0.007462257519364357, -1.33514404296875e-05, 0.0, -0.00063323974609375, -0.0029506683349609375, -0.0005702972412109375, -2.384185791015625e-06, -0.001211396069265902, -5.841255187988281e-06, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_battlecry_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_battlecry_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -6.669568643376806, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -6.559352874755859, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.00024271011352539062, -7.152555099310121e-07, -0.007526397705078125, -0.00449371337890625, -4.00543212890625e-05, -0.0001354217529296875, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.000637054443359375, -1.1444091796875e-05, -4.172325134277344e-06, -8.20159912109375e-05, -0.005886077880859375, -0.00042724609375, -9.5367431640625e-06, -3.814697265625e-05, -0.0016613006591796875, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.03545093536376953, 0.0, -3.62396240234375e-05, -4.38690185546875e-05, -5.53131103515625e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.0015888214111328125, -3.814697265625e-06, -5.7220458984375e-06, -0.023424148559570312, -0.0001506805419921875, -0.00011444091796875, 0.0, -0.0002995729446411133, -0.0034208297729492188, 0.0, -0.001277923583984375, -0.003437042236328125, -0.000270843505859375, -0.0026483535766601562, -1.9073486328125e-06, -5.91278076171875e-05, -0.000133514404296875, -0.007481331005692482, -1.33514404296875e-05, 0.0, -0.0006389617919921875, -0.00295257568359375, -0.000568389892578125, -2.384185791015625e-06, -0.0012055549304932356, -5.841255187988281e-06, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Ended", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"_type": "Call", "func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "_type": "Template19", "hole3": "SelfSelector"}], "func": {"id": "Effect", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnEnded(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -6.714820135787022, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.03499031066894531, 0.0, -3.62396240234375e-05, -4.57763671875e-05, -5.7220458984375e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.001583099365234375, -3.814697265625e-06, -5.7220458984375e-06, -0.026058197021484375, -0.000152587890625, -0.0001125335693359375, 0.0, -0.0002938508987426758, -6.596835136413574, 0.0, -5.91278076171875e-05, -0.001674652099609375, -0.0008487701416015625, -0.0013467073440551758, -1.9073486328125e-06, -3.4332275390625e-05, -0.0001392364501953125, -0.010360118001699448, -1.1444091796875e-05, 0.0, -0.000591278076171875, -0.0030670166015625, -0.0007581710815429688, -2.2649765014648438e-06, -0.0012131861876696348, -5.7220458984375e-06, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Corruption", "hole2": [{"hole1": 1, "hole0": "Corruption", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 5}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(Buff(ChangeHealth(5)))\n", "score": -6.853228566842745, "score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.83901834487915, 0.0, -5.14984130859375e-05, -1.7681255340576172, -0.003948211669921875, -4.780292510986328e-05, -5.7220458984375e-06, -0.00032997128437273204, -0.18290138244628906, 0.0, -0.022229431197047234, -0.0020885467529296875]}]}
{"index": 23, "beams": [{"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -0.006613993076669544, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -0.002621293067932129, -1.0728830375228426e-06, -7.05718994140625e-05, -6.4849853515625e-05, -0.0006490446394309402, 0.0]}, {"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n", "score": -6.949840976498265, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -6.86449670791626, 0.0, -0.08209609985351562, -1.1444091796875e-05, -6.675719760096399e-06, -2.288818359375e-05]}, {"choice_history": [70, 147, "Dalaran", "Mage", "1", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage1", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage1(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -7.5581578248654395, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -7.5478339195251465, -0.004995664115995169, -1.6689286894688848e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0006389617919921875, -7.62939453125e-06, 0.0, -4.208087921142578e-05, 0.0, -9.035752736963332e-05, -6.318080977507634e-06, -9.536738616588991e-07, -5.125990719534457e-05, 0.0, -6.079673767089844e-06, 0.0, -1.6808508007670753e-05, 0.0, -1.52587890625e-05, -6.67572021484375e-05, -1.71661376953125e-05, -3.0994406188256107e-06, -2.3841855067985307e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -0.002706289291381836, -1.1920922133867862e-06, -6.67572021484375e-05, -6.4849853515625e-05, -0.0006612022989429533, 0.0]}, {"choice_history": [70, 147, "Dalaran", "Mage", "Mage", "Minion", "Card", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMageMageMinionCard", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMageMageMinionCard(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -7.594753908931622, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -7.261993408203125, -0.3257054090499878, -0.0003110170364379883, 0.0, -0.00018952478421851993, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.0004673004150390625, -9.5367431640625e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, -0.00041078514186665416, -9.536709512758534e-06, -5.960462772236497e-07, -4.374959098640829e-05, 0.0, -6.198883056640625e-06, 0.0, -2.6702879040385596e-05, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.71661376953125e-05, -2.741813204920618e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -0.0037630796432495117, -1.1920922133867862e-06, -5.340576171875e-05, -6.4849853515625e-05, -0.0006634770543314517, 0.0]}, {"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n", "score": -7.907705857060549, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -7.7902398109436035, -9.5367431640625e-06, -0.11420154571533203, -1.52587890625e-05, -3.933906555175781e-06, -2.86102294921875e-05]}, {"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 89, 154, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template15", "hole2": "ALL", "hole3": "COMMON"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -8.025395092580041, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -8.009940147399902, -0.0001735687255859375, 0.0, -2.372264862060547e-05, 0.0, -6.663602107437328e-05, -7.152556008804822e-06, -5.722038622479886e-06, -6.341934204101562e-05, 0.0, -0.00988781452178955, 0.0, -5.125998541188892e-06, 0.0, -8.344650268554688e-06, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -1.33514404296875e-05, -2.503394853192731e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.1457672119140625e-06, -0.002135753631591797, -1.311301275563892e-06, -4.9591064453125e-05, -7.82012939453125e-05, -0.0005298694013617933, 0.0]}, {"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 4}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=4)\n", "score": -8.179381086132551, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -0.002621293067932129, -1.0728830375228426e-06, -7.05718994140625e-05, -6.4849853515625e-05, -8.173408508300781, -7.62939453125e-06]}, {"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 5}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=5)\n", "score": -8.26416177918675, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -0.002621293067932129, -1.0728830375228426e-06, -7.05718994140625e-05, -6.4849853515625e-05, -8.258191108703613, -5.7220458984375e-06]}, {"choice_history": [70, 147, "Dalaran", "Mage", "Minion", "Card", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMageMinionCard", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMageMinionCard(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -8.43502480827808, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -8.261978149414062, -0.1675560474395752, -7.152555099310121e-07, -3.516612196108326e-05, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -0.00041961669921875, -1.1444091796875e-05, 0.0, -3.826618194580078e-05, 0.0, -0.00011920686665689573, -1.013275050354423e-05, -5.960462772236497e-07, -4.1246210457757115e-05, 0.0, -6.198883056640625e-06, 0.0, -2.4557111828471534e-05, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -2.9802313292748295e-06, -2.3841855067985307e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -0.0030301809310913086, -1.1920922133867862e-06, -6.103515625e-05, -6.67572021484375e-05, -0.0006566795636899769, 0.0]}, {"choice_history": [70, 147, "Dalaran", "Mage", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMageMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMageMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -8.547868078551424, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -7.261993408203125, -1.2807047367095947, -1.0728830375228426e-06, -1.52587890625e-05, 0.0, -3.814697265625e-06, -0.0004444122314453125, -9.5367431640625e-06, 0.0, -4.208087921142578e-05, 0.0, -7.426564116030931e-05, -6.318080977507634e-06, -9.536738616588991e-07, -4.410734254634008e-05, 0.0, -6.198883056640625e-06, 0.0, -2.2768972485209815e-05, 0.0, -1.33514404296875e-05, -6.29425048828125e-05, -1.71661376953125e-05, -3.0994406188256107e-06, -2.3841855067985307e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -0.002767205238342285, -1.1920922133867862e-06, -6.67572021484375e-05, -6.67572021484375e-05, -0.0006581038469448686, 0.0]}, {"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "buffs", "<EOS>", 19, 129, 237, 52, 180, "Cant", "Attack", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"hole0": "CantAttack", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, buffs=[Buff(CantAttack())])\n", "score": -9.17774362733185, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -7.766902446746826, -3.814697265625e-06, -0.016870498657226562, -0.0003604888916015625, -0.00152587890625, -0.001224517822265625, -0.004619598388671875, -1.3634779453277588, -0.019547343254089355, -3.933906555175781e-06]}, {"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Weapon", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "WeaponSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ChangeAttack(1), WeaponSelector())])\n", "score": -9.255490393019912, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -8.315887451171875, 0.0, -0.00615692138671875, -0.05107402801513672, -0.02364826202392578, 0.0, -0.00079345703125, -0.20185470581054688, -0.000171661376953125, -0.025367097929120064, 0.0, -0.01248931884765625, 0.0, -0.6148038506507874, -3.647804260253906e-05, 0.0]}, {"choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "buffs", "<EOS>", 19, 129, 237, 52, 180, "+1", "Health", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"hole0": "+1Health", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, buffs=[Buff(+1Health())])\n", "score": -9.485151900551912, "score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -7.766902446746826, -3.814697265625e-06, -0.016870498657226562, -0.0003604888916015625, -0.00152587890625, -0.001224517822265625, -0.004619598388671875, -1.126478910446167, -0.5639433264732361, -1.52587890625e-05]}, {"choice_history": [70, 150, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -10.152420888054131, "score_history": [-5.7220458984375e-06, -7.263483047485352, -2.3841855067985307e-07, -3.576278118089249e-07, -0.004276891704648733, -0.014862575568258762, -0.0001125335693359375, -2.3841855067985307e-07, -3.814697265625e-05, -0.00069427490234375, -1.52587890625e-05, -1.1920928244535389e-07, -4.982948303222656e-05, -4.768370445162873e-07, -0.00030310501460917294, -3.7788482586620376e-05, -2.3841855067985307e-07, -9.107589721679688e-05, 0.0, -0.023156166076660156, 0.0, -0.001079559326171875, 0.0, -4.00543212890625e-05, -2.288818359375e-05, -8.106231689453125e-05, -2.503394853192731e-06, -0.3749122619628906, 0.0, -8.0108642578125e-05, -0.0001049041748046875, -3.62396240234375e-05, -0.0001659393310546875, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -2.1457672119140625e-06, -1.9073486328125e-06, -0.001911163330078125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.3820066452026367, 0.0, -0.02655792236328125, -0.000896453857421875, -5.7220458984375e-06, 0.0, -0.0003452301025390625, 0.0, -1.52587890625e-05, -0.0001888275146484375, 0.0, -0.0034389460925012827, -1.9073486328125e-06, -0.020450592041015625, -9.5367431640625e-06, -0.706758975982666, 0.0, -7.62939453125e-05, -0.041210174560546875, -0.0001049041748046875, -8.96453857421875e-05, -1.52587890625e-05, -0.003047943115234375, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.004601478576660156, 0.0, -0.024626731872558594, -0.034712791442871094, -8.392333984375e-05, -0.05702197551727295, 0.0, -0.00016021728515625, -7.43865966796875e-05, -0.07426738739013672, -2.09808349609375e-05, -7.748603820800781e-06, -5.7220458984375e-06, -0.0002117156982421875, -0.10089397430419922, 0.0, -4.76837158203125e-05, -2.110004425048828e-05, -1.9073486328125e-06, -0.01302337646484375, -0.3133888244628906, -0.0003414154052734375, -0.001590728759765625, -0.002246856689453125, -0.0009136199951171875, -1.52587890625e-05, -6.67572021484375e-05, -0.0005016326904296875, -9.34600830078125e-05, 0.0, -0.0003584623336791992, 0.0, -0.09257030487060547, 0.0, -3.814697265625e-05, 0.0, -5.1975250244140625e-05, 0.0, -0.07320976257324219, -3.814697265625e-06, -0.4225654602050781, -0.004528045654296875, -1.9073486328125e-06, 0.0, -0.009372711181640625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.000469207763671875, 0.0, -0.0020427703857421875, 0.0, -0.0018162727355957031, 0.0, -8.20159912109375e-05, -0.015735626220703125, -3.24249267578125e-05, -0.0003185272216796875, -1.9073486328125e-06, -0.02920854091644287, -3.814697265625e-06]}, {"choice_history": [70, 150, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "4", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DalaranMage", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 4):\n            player.draw()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -10.360566923725365, "score_history": [-5.7220458984375e-06, -7.263483047485352, -2.3841855067985307e-07, -3.576278118089249e-07, -0.004276891704648733, -0.014862575568258762, -0.0001125335693359375, -2.3841855067985307e-07, -3.814697265625e-05, -0.00069427490234375, -1.52587890625e-05, -1.1920928244535389e-07, -4.982948303222656e-05, -4.768370445162873e-07, -0.00030310501460917294, -3.7788482586620376e-05, -2.3841855067985307e-07, -9.107589721679688e-05, 0.0, -0.023156166076660156, 0.0, -0.001079559326171875, 0.0, -4.00543212890625e-05, -2.288818359375e-05, -8.106231689453125e-05, -2.503394853192731e-06, -0.3749122619628906, 0.0, -8.0108642578125e-05, -0.0001049041748046875, -3.62396240234375e-05, -0.0001659393310546875, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -2.1457672119140625e-06, -1.9073486328125e-06, -0.001911163330078125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.3820066452026367, 0.0, -0.02655792236328125, -0.000896453857421875, -5.7220458984375e-06, 0.0, -0.0003452301025390625, 0.0, -1.52587890625e-05, -0.0001888275146484375, 0.0, -0.0034389460925012827, -1.9073486328125e-06, -0.020450592041015625, -9.5367431640625e-06, -0.9975642561912537, 0.0, -0.000179290771484375, -0.026879310607910156, -0.00042724609375, -2.288818359375e-05, -3.814697265625e-06, -0.0047454833984375, 0.0, -0.0001678466796875, -3.814697265625e-06, -0.0034829378128051758, 0.0, -0.03578948974609375, -0.059600830078125, -9.5367431640625e-05, -0.031943559646606445, 0.0, -0.00023651123046875, -7.2479248046875e-05, -0.058861732482910156, -1.9073486328125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -0.18469810485839844, 0.0, -4.00543212890625e-05, -2.300739288330078e-05, -1.9073486328125e-06, -0.0027523040771484375, -0.3059263229370117, -0.0003337860107421875, -0.0017452239990234375, -0.000461578369140625, -0.0006866455078125, -1.9073486328125e-05, -4.76837158203125e-05, -0.0004100799560546875, -8.7738037109375e-05, 0.0, -0.00042831897735595703, 0.0, -0.0702810287475586, 0.0, -3.24249267578125e-05, 0.0, -3.6597251892089844e-05, 0.0, -0.07522010803222656, -5.7220458984375e-06, -0.31461238861083984, -0.004486083984375, -1.9073486328125e-06, 0.0, -0.009015083312988281, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0004673004150390625, 0.0, -0.0020923614501953125, 0.0, -0.0018324851989746094, 0.0, -8.392333984375e-05, -0.015424728393554688, -3.0517578125e-05, -0.0003185272216796875, -1.9073486328125e-06, -0.02909219264984131, -3.814697265625e-06]}]}
{"index": 24, "beams": [{"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -0.21681359968953018, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -0.1493145227432251, 0.0, -0.0012874603271484375, -0.0022220611572265625, -6.29425048828125e-05, -0.0004787445068359375, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.004268646240234375, 0.0, -0.000213623046875, -1.9073468138230965e-06, -0.02271413803100586, -2.384185791015625e-06]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.health), self)\n", "score": -4.036114363434152, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -3.122178554534912, -5.006777428206988e-06, -0.0021495819091796875, -0.04370403289794922, -9.5367431640625e-06, -0.0036602020263671875, -0.0013446807861328125, -5.7220458984375e-06, 0.0, -0.06366276741027832, -7.62939453125e-06, -0.005313508678227663, 0.0, -1.52587890625e-05, -0.6001510620117188, -0.0002193450927734375, -0.011684417724609375, 0.0, -3.24249267578125e-05, 0.0, -0.008088111877441406, 0.0, -0.000789642333984375, -6.198863957251888e-06, -0.12355458736419678, -2.3841855067985307e-07, -0.0035076141357421875, -2.288818359375e-05, -0.009782791137695312, 0.0]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.health)\n", "score": -4.352156436065663, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -3.6491427421569824, -1.1920928244535389e-07, -0.00014495849609375, -0.6450977325439453, -0.0006961822509765625, -0.0002574920654296875, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0031871795654296875, 0.0, -0.0001316070556640625, -3.2186455882765586e-06, -0.017245054244995117, -2.9802317840221804e-06]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "taunt", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.taunt)\n", "score": -4.903475796802567, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -0.1493145227432251, 0.0, -0.0012874603271484375, -0.0022220611572265625, -6.29425048828125e-05, -0.0004787445068359375, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.004268646240234375, 0.0, -0.000213623046875, -1.9073468138230965e-06, -4.709378719329834, 0.0]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 2}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(2)\n", "score": -5.214017599827784, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -4.7157440185546875, -1.33514404296875e-05, -0.002979278564453125, -0.0004558563232421875, -7.62939453125e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, 0.0, -0.45172417163848877, -2.5033950805664062e-05, -0.01646142639219761, -3.099440846199286e-06]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n", "score": -5.32168593861762, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -3.122178554534912, -5.006777428206988e-06, -0.0021495819091796875, -0.04370403289794922, -9.5367431640625e-06, -0.0036602020263671875, -0.0013446807861328125, -5.7220458984375e-06, 0.0, -0.06366276741027832, -7.62939453125e-06, -0.005313508678227663, 0.0, -1.52587890625e-05, -0.8190164566040039, -1.1444091796875e-05, -0.046092987060546875, -6.67572021484375e-05, -0.00014495849609375, 0.0, -3.8623809814453125e-05, 0.0, -5.7220458984375e-06, -9.536738616588991e-07, -1.1750775575637817, 0.0, -0.0004520416259765625, -1.71661376953125e-05, -0.0024862289428710938, 0.0]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -5.336182029509516, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -5.132151126861572, 0.0, -0.00015604079817421734, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.000164031982421875, -3.814697265625e-05, -0.00012552738189697266, -5.960462772236497e-07, -0.0004923343658447266, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003509521484375, 0.0, -1.33514404296875e-05, -2.47955322265625e-05, -3.159046173095703e-05, -1.1920928244535389e-07, -0.007315635681152344, -8.392333984375e-05, -3.814697265625e-05, -0.0002231597900390625, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00030052661895751953, 0.0, -2.1219253540039062e-05, 0.0, -7.43865966796875e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.103515625e-05, -0.00978851318359375, -0.000400543212890625, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.576272320060525e-06, -0.1492220163345337, 0.0, -0.0012874603271484375, -0.0022420883178710938, -6.29425048828125e-05, -0.0004787445068359375, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0042705535888671875, 0.0, -0.000213623046875, -1.9073468138230965e-06, -0.022677898406982422, -2.384185791015625e-06]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 237, 44, 134, "temp_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "temp_attack", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(temp_attack)\n", "score": -5.5081143733119475, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -3.6491427421569824, -1.1920928244535389e-07, -0.00014495849609375, -1.1791353225708008, -1.71661376953125e-05, -0.6434535980224609, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_attack()), self)\n", "score": -5.6196099803656665, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -3.122178554534912, -5.006777428206988e-06, -0.0021495819091796875, -0.04370403289794922, -9.5367431640625e-06, -0.0036602020263671875, -0.0013446807861328125, -5.7220458984375e-06, 0.0, -0.06366276741027832, -7.62939453125e-06, -0.005313508678227663, 0.0, -1.52587890625e-05, -0.8190164566040039, -1.1444091796875e-05, -0.046092987060546875, -6.67572021484375e-05, -0.00014495849609375, 0.0, -3.8623809814453125e-05, 0.0, -5.7220458984375e-06, -9.536738616588991e-07, -1.4576998949050903, 0.0, -0.0033130645751953125, -2.09808349609375e-05, -0.014923095703125, 0.0]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -5.6211834233259665, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -4.542232036590576, -1.1920928244535389e-07, -1.52587890625e-05, -0.9667835235595703, -0.019800186157226562, -0.05530821532011032, -0.0008255243301391602]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -5.694940512999423, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -3.0621819496154785, -1.9073486328125e-06, -0.0004558563232421875, -0.1473674774169922, -0.0193634033203125, -0.0693349838256836, -0.0009632110595703125, -0.07403963059186935, 0.0, -2.1978654861450195, -0.006716728210449219, -4.1961669921875e-05, -0.0002346038818359375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -5.7220458984375e-05, -1.4305104514278355e-06, -0.07979080826044083, -5.924701690673828e-05]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.899014389142948, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -5.740782737731934, -3.814697265625e-06, -3.814697265625e-05, -0.057021141052246094, -2.09808349609375e-05, -0.06489276885986328, -3.62396240234375e-05]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -6.151116764201262, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -5.94591760635376, 0.0, -0.00010323524475097656, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -0.0001697540283203125, -4.1961669921875e-05, -0.00013244152069091797, -3.576278118089249e-07, -0.00048732757568359375, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003223419189453125, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.944469451904297e-05, -1.1920928244535389e-07, -0.009075164794921875, -8.96453857421875e-05, -3.62396240234375e-05, -0.0002079010009765625, -2.09808349609375e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00028514862060546875, 0.0, -2.1219253540039062e-05, 0.0, -7.62939453125e-05, -3.24249267578125e-05, -1.1801716937043238e-05, -6.67572021484375e-05, -0.008745193481445312, -0.0003948211669921875, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.576272320060525e-06, -0.14969313144683838, 0.0, -0.001312255859375, -0.002239227294921875, -6.29425048828125e-05, -0.0004901885986328125, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0042438507080078125, 0.0, -0.000213623046875, -1.9073468138230965e-06, -0.022753357887268066, -2.384185791015625e-06]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(game.other_player.hero)\n", "score": -6.225239848718594, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -0.1493145227432251, 0.0, -0.0012874603271484375, -0.0022220611572265625, -6.29425048828125e-05, -0.0004787445068359375, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -5.490182876586914, 0.0, -0.3119819164276123, -1.1920928244535389e-07, -0.2334544062614441, -7.62939453125e-06]}, {"choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DivineSpirit", "hole2": [{"hole1": 2, "hole0": "Divine Spirit", "hole2": "PRIEST", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}, {"value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n        target = self.target\n        target = self.target\n", "score": -7.865966236198275, "score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -4.977952003479004, -0.000152587890625, -5.7220458984375e-06, -0.000324249267578125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00018537043069954962, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.24249267578125e-05, -1.2874602361989673e-05, -6.103515625e-05, -0.0072498321533203125, -0.00012969970703125, -0.0001316070556640625, -0.000499725341796875, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.4570634852570947e-06, -0.24055862426757812, 0.0, -0.000637054443359375, -0.0037736892700195312, -0.0002079010009765625, -0.0015544891357421875, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0048656463623046875, 0.0, -0.0004520416259765625, -1.5497195136049413e-06, -0.027878999710083008, -3.576278118089249e-07, -0.08098125457763672, -7.62939453125e-06, -4.38690185546875e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.36558663845062256, -1.9073486328125e-06, -0.17238521575927734, -5.14984130859375e-05, -0.00322723388671875, 0.0, -9.548664093017578e-05, 0.0, -0.0001239776611328125, -2.264974000354414e-06, -0.09124279022216797, -1.9073486328125e-06, -5.7220458984375e-05, -0.0002803802490234375, -1.9073486328125e-06, -1.7777541875839233, -1.537799835205078e-05, -0.04228019714355469, -2.86102294921875e-05, -0.046555519104003906, 0.0, -0.00013375282287597656, 0.0, -0.00019073486328125, -3.3378546504536644e-06]}]}
{"index": 25, "beams": [{"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole4": [{"hole0": "MechanicalDragonling", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -0.0650259918662357, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -0.05424690246582031, -2.0265579223632812e-06, -0.0005555135430768132, -4.208087921142578e-05, -2.76564787782263e-05, -0.00013399124145507812, -0.0004495622997637838, -0.0002046823501586914, -6.16293036728166e-05, -0.00012397255341056734, -0.0013223878340795636, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.00020609391503967345, -0.001980417175218463, -0.00011157982225995511, -5.471595432027243e-05, -7.4979972850997e-05, -3.6954863844584906e-06, -0.00011265246575931087, -3.814697265625e-06, -2.9563620046246797e-05, 0.0, -1.9073486328125e-06, -0.0003414154052734375, -6.67572021484375e-05, -0.0004673004150390625, -5.960462772236497e-07, 0.0, -5.960462772236497e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 209, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Bounce", "<EOS>", "Summon", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "Summon", "_type": "Template6", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": "Bounce"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(), Summon(picker\n            =UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -5.524023145865264, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.34858512878418, -1.0848005331354216e-05, -0.031112853437662125, -0.014232754707336426, -0.00017547607421875, -3.719329833984375e-05, -2.3722410332993604e-05, -0.0006948709487915039, -7.748573807475623e-06, -0.4745194613933563, -0.0003145540540572256, -0.0031925439834594727, -7.033323527139146e-06, -0.5995416641235352, -0.0029315948486328125, -3.814697265625e-06, -0.02552628517150879, -3.576278118089249e-07, -9.1552734375e-05, -7.62939453125e-06, -0.00014352775178849697, -0.0005623247707262635, -2.3007127310847864e-05, -2.586831215012353e-05, 0.0, -2.7179714379599318e-05, 0.0, -3.814697265625e-06, -0.011180877685546875, -1.52587890625e-05, -0.006645321846008301, -1.1920928244535389e-07, 0.0, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 209, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Bounce", "<EOS>", "Summon", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "Summon", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": "Bounce"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(), Summon(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -5.731036970047619, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.34858512878418, -1.0848005331354216e-05, -0.031112853437662125, -0.014232754707336426, -0.00017547607421875, -3.719329833984375e-05, -2.3722410332993604e-05, -0.0006948709487915039, -7.748573807475623e-06, -0.4745194613933563, -0.0003145540540572256, -0.0031925439834594727, -7.033323527139146e-06, -0.8383693695068359, -0.000118255615234375, -1.9073486328125e-06, -0.0010596513748168945, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0010532140731811523, -1.1324854312988464e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.0006160736083984375, -5.960462772236497e-07, -0.0002593994140625, -5.7220458984375e-06, -0.00013005651999264956, -0.0003148253890685737, -1.2636104656849056e-05, -1.931185761350207e-05, 0.0, -7.18832015991211e-05, 0.0, -9.5367431640625e-06, -0.0067577362060546875, -1.33514404296875e-05, -0.0048809051513671875, -1.1920928244535389e-07, 0.0, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 209, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", "Summon", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "Summon", "_type": "Template6", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(), Summon(picker\n            =UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -5.852706442506694, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.34858512878418, -1.0848005331354216e-05, -0.031112853437662125, -0.014232754707336426, -0.00017547607421875, -3.719329833984375e-05, -2.3722410332993604e-05, -0.0006948709487915039, -7.748573807475623e-06, -1.1090521812438965, -2.7894584491150454e-05, -0.0005667206714861095, -1.6212332411669195e-05, -0.3018302917480469, -0.0023593902587890625, -3.814697265625e-06, -0.02048516273498535, -3.576278118089249e-07, -9.1552734375e-05, -7.62939453125e-06, -0.00014674646081402898, -0.0006043768371455371, -2.1815061700181104e-05, -2.6583556973491795e-05, 0.0, -2.7179714379599318e-05, 0.0, -3.814697265625e-06, -0.011533737182617188, -1.52587890625e-05, -0.006626248359680176, -1.1920928244535389e-07, 0.0, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 25, 162, "Summon", "<EOS>", 237, 63, 205, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"hole0": "MechanicalDragonling", "_type": "Template39"}], "hole0": "Summon", "_type": "Template18", "hole2": "PlayerSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.638319441288935, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -6.531536102294922, -0.0004520416259765625, -1.1920928244535389e-07, -0.0029712687246501446, -0.0005437135696411133, 0.0, -5.805492401123047e-05, -4.291525328881107e-06, -0.0463482141494751, 0.0, -0.0003118514723610133, 0.0, -0.007871627807617188, -0.0032014846801757812, -0.010329960845410824, -0.0006623458466492593, -0.0002460479736328125, -0.000492095947265625, -3.814697265625e-06, -0.024159511551260948, -0.0019105741521343589, -0.00039315223693847656, -0.0008418797515332699, -1.2874577805632725e-05, -1.1920928244535389e-07, -0.00030875205993652344, -1.9073486328125e-06, -4.7563986299792305e-05, 0.0, -1.9073486328125e-06, -0.0017299652099609375, -2.47955322265625e-05, -0.002521514892578125, -1.1920928244535389e-07, 0.0, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 208, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", "Summon", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "Summon", "_type": "Template6", "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(), Summon()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.8709274755586875, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -6.603743553161621, -0.00047223689034581184, -0.02612372301518917, -0.0009711980819702148, -3.814697265625e-06, -2.658367156982422e-05, -2.622604142743512e-06, -0.013727307319641113, -5.4596363042946905e-05, -0.1992868334054947, -0.00013493580627255142, -0.000977091956883669, -0.0004171478794887662, -0.0015815353253856301, 0.0, -0.0005792107549495995, 0.0, -3.814697265625e-06, -0.015710830688476562, -2.288818359375e-05, -0.00270843505859375, -2.3841855067985307e-07, 0.0, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 209, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", "Summon", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "Summon", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(), Summon(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.012456673594436, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.34858512878418, -1.0848005331354216e-05, -0.031112853437662125, -0.014232754707336426, -0.00017547607421875, -3.719329833984375e-05, -2.3722410332993604e-05, -0.0006948709487915039, -7.748573807475623e-06, -1.1090521812438965, -2.7894584491150454e-05, -0.0005667206714861095, -1.6212332411669195e-05, -1.4871892929077148, -0.000125885009765625, -3.814697265625e-06, -0.0018494129180908203, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0011981725692749023, -1.2397729733493179e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.000614166259765625, -5.960462772236497e-07, -0.0002613067626953125, -5.7220458984375e-06, -0.0001295797701459378, -0.000318998092552647, -1.2993727978027891e-05, -1.9431065084063448e-05, 0.0, -7.176399230957031e-05, 0.0, -9.5367431640625e-06, -0.00676727294921875, -1.52587890625e-05, -0.00489044189453125, -1.1920928244535389e-07, 0.0, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Battle", "Axe", "<EOS>", "Player", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}], "hole4": [{"hole0": "BattleAxe", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(BattleAxe()),\n            PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.254009355308675, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.3338189125061035, -1.9073486328125e-06, -0.0035350294783711433, -0.0006784200668334961, -4.0531158447265625e-06, -8.96453857421875e-05, -1.9073369912803173e-05, -0.00025963771622627974, -7.152555099310121e-07, -0.1885264813899994, -4.172316494077677e-06, -0.00646209716796875, -0.0004100799560546875, -0.0005321502685546875, -0.6348797082901001, -0.5067673325538635, -4.768370445162873e-07, -0.8537318706512451, -3.218649908376392e-06, -1.1920928244535389e-07, -0.03141021728515625, -0.000308990478515625, 0.0, -0.036594510078430176, 0.0, -5.340576171875e-05, -3.814697265625e-06, -0.47072315216064453, -2.3365020751953125e-05, 0.0, -2.3126376618165523e-05, 0.0, -2.992151894432027e-05, 0.0, -3.814697265625e-06, -0.17825889587402344, -1.1444091796875e-05, -0.0024605989456176758, -2.3841855067985307e-07, 0.0, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}], "hole4": [{"hole0": "MechanicalDragonling", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.269120850766697, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.3338189125061035, -1.9073486328125e-06, -0.0035350294783711433, -0.0006784200668334961, -4.0531158447265625e-06, -8.96453857421875e-05, -1.9073369912803173e-05, -0.00025963771622627974, -7.152555099310121e-07, -0.1885264813899994, -4.172316494077677e-06, -0.00646209716796875, -0.0004100799560546875, -0.0005321502685546875, -1.9539626836776733, -0.017704395577311516, -2.682209014892578e-05, -0.0060522169806063175, -1.0371186363045126e-05, 0.0, -0.014909744262695312, -0.00043487548828125, 0.0, -0.037014126777648926, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.5070638656616211, -1.1682510375976562e-05, 0.0, -1.0132769602932967e-05, 0.0, -5.6624397984705865e-05, 0.0, -3.814697265625e-06, -0.191497802734375, -1.1444091796875e-05, -0.001573801040649414, -1.1920928244535389e-07, 0.0, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanicMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole4": [{"hole0": "MechanicalDragonling", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanicMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.284726413410908, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -7.210387706756592, -0.00018261195509694517, -1.1444026313256472e-05, -1.9073486328125e-06, -1.311301275563892e-06, -7.82012939453125e-05, -0.0022430419921875, -0.06273174285888672, -2.0265579223632812e-06, -0.0007885593804530799, -8.976459503173828e-05, -0.001614212989807129, -0.00013911724090576172, -0.0003823573933914304, -0.0001970529556274414, -6.5205356804654e-05, -0.0001267146726604551, -0.0016185562126338482, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.00023648591013625264, -0.0020210668444633484, -0.00010251993080601096, -4.756362977786921e-05, -7.748317875666544e-05, -3.8146954466355965e-06, -0.00010728812776505947, -3.814697265625e-06, -3.051731619052589e-05, 0.0, -1.9073486328125e-06, -0.00035858154296875, -6.67572021484375e-05, -0.000457763671875, -4.768370445162873e-07, 0.0, -4.768370445162873e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Mechanical", "Mechanic", "<EOS>", "Summon", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "Summon", "_type": "Template6", "hole4": [{"hole0": "MechanicalMechanic", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanic()), Summon()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.513621701730301, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -0.05424690246582031, -2.0265579223632812e-06, -0.0005555135430768132, -4.208087921142578e-05, -2.76564787782263e-05, -0.00013399124145507812, -0.0004495622997637838, -0.0002046823501586914, -6.16293036728166e-05, -0.00012397255341056734, -0.0013223878340795636, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.00020609391503967345, -6.822540760040283, -0.0024726607371121645, -0.6117373704910278, -0.00029646922484971583, -0.0020763918291777372, 0.0, -0.00041893526213243604, 0.0, -3.814697265625e-06, -0.011686325073242188, -5.91278076171875e-05, -0.000553131103515625, -2.3841855067985307e-07, 0.0, -4.768370445162873e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Battle", "Axe", "<EOS>", "Summon", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "Summon", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}], "hole4": [{"hole0": "BattleAxe", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(BattleAxe()),\n            Summon(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.5416763911926665, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.3338189125061035, -1.9073486328125e-06, -0.0035350294783711433, -0.0006784200668334961, -4.0531158447265625e-06, -8.96453857421875e-05, -1.9073369912803173e-05, -0.00025963771622627974, -7.152555099310121e-07, -0.1885264813899994, -4.172316494077677e-06, -0.00646209716796875, -0.0004100799560546875, -0.0005321502685546875, -0.6348797082901001, -0.5067673325538635, -4.768370445162873e-07, -0.5770401954650879, -3.8146954466355965e-06, -0.0363311767578125, -0.00049591064453125, -1.9073486328125e-06, -1.150663137435913, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.036332011222839355, -3.099440846199286e-06, 0.0, -2.896749174396973e-05, 0.0, -1.5020326827652752e-05, 0.0, -1.9073486328125e-06, -0.056720733642578125, -1.33514404296875e-05, -0.0036431550979614258, -1.1920928244535389e-07, 0.0, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Mechanical", "Mechanical", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole4": [{"hole0": "MechanicalMechanical", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanical()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.62341410587814, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -0.05424690246582031, -2.0265579223632812e-06, -0.0005555135430768132, -4.208087921142578e-05, -2.76564787782263e-05, -0.00013399124145507812, -0.0004495622997637838, -0.0002046823501586914, -6.16293036728166e-05, -0.00012397255341056734, -0.0013223878340795636, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.00020609391503967345, -7.16576623916626, -0.3827015161514282, -0.012012113817036152, -3.182843283866532e-05, -1.7881377516459906e-06, -0.0001749988878145814, -1.9073486328125e-06, -2.1457548427861184e-05, 0.0, -1.9073486328125e-06, -0.000331878662109375, -6.103515625e-05, -0.000530242919921875, -5.960462772236497e-07, 0.0, -5.960462772236497e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}], "hole4": [{"hole0": "MechanicalDragonling", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.766498484660545, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.3338189125061035, -1.9073486328125e-06, -0.0035350294783711433, -0.0006784200668334961, -4.0531158447265625e-06, -8.96453857421875e-05, -1.9073369912803173e-05, -0.00025963771622627974, -7.152555099310121e-07, -0.1885264813899994, -4.172316494077677e-06, -0.00646209716796875, -0.0004100799560546875, -0.0005321502685546875, -1.9539626836776733, -0.017704395577311516, -2.682209014892578e-05, -0.0060522169806063175, -1.0371186363045126e-05, 0.0, -0.014909744262695312, -0.00043487548828125, 0.0, -0.037014126777648926, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.9882640838623047, -2.5510787963867188e-05, 0.0, -2.264958675368689e-05, 0.0, -2.968310218420811e-05, 0.0, -3.814697265625e-06, -0.2070293426513672, -1.1444091796875e-05, -0.0022202730178833008, -1.1920928244535389e-07, 0.0, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Battle", "Axe", "<EOS>", "Player", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "DragonlingMechanic", "hole2": [{"hole1": 4, "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "PlayerSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}], "hole4": [{"hole0": "BattleAxe", "_type": "Template39"}], "hole3": "Summon"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(BattleAxe()),\n            PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.780301560367498, "score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -4.3338189125061035, -1.9073486328125e-06, -0.0035350294783711433, -0.0006784200668334961, -4.0531158447265625e-06, -8.96453857421875e-05, -1.9073369912803173e-05, -0.00025963771622627974, -7.152555099310121e-07, -0.1885264813899994, -4.172316494077677e-06, -0.00646209716796875, -0.0004100799560546875, -0.0005321502685546875, -0.6348797082901001, -0.5067673325538635, -4.768370445162873e-07, -0.8537318706512451, -3.218649908376392e-06, -1.1920928244535389e-07, -0.03141021728515625, -0.000308990478515625, 0.0, -0.036594510078430176, 0.0, -5.340576171875e-05, -3.814697265625e-06, -1.0174312591552734, -1.5497207641601562e-05, 0.0, -7.867794920457527e-06, 0.0, -5.1617604185594246e-05, 0.0, -3.814697265625e-06, -0.15863418579101562, -1.1444091796875e-05, -0.0016710758209228516, -1.1920928244535389e-07, 0.0, -1.1920928244535389e-07]}]}
{"index": 26, "beams": [{"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -0.18916243803051458, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.011234283447265625, 0.0, -0.0015549659729003906, 0.0, -0.021430373191833496, 0.0, -0.0015859603881835938, 0.0, -6.103515625e-05, -0.0004978179931640625, -7.2479248046875e-05, -8.58306884765625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.001674532424658537, -3.099440846199286e-06, -0.00033077422995120287, -9.536738616588991e-07, -5.7220458984375e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -2.53684514620457, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -2.444403648376465, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.005146980285644531, -3.62396240234375e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.990794771700166e-05, 0.0, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.62939453125e-05, -0.0001010894775390625, -4.57763671875e-05, -0.000118255615234375, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -0.00022125244140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019686222076416016, -3.814697265625e-06, -3.24249267578125e-05, -0.0007038116455078125, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016498565673828125, 0.0, -0.0011627456406131387, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.001190185546875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.0111083984375, 0.0, -0.0015681982040405273, 0.0, -0.021168112754821777, 0.0, -0.001583099365234375, 0.0, -6.103515625e-05, -0.0004978179931640625, -7.2479248046875e-05, -8.58306884765625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0016726250760257244, -3.099440846199286e-06, -0.00033136981073766947, -9.536738616588991e-07, -5.7220458984375e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -3.920458857720419, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -3.7367982864379883, 0.0, -5.91278076171875e-05, -0.0001316070556640625, -0.000362396240234375, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -8.0108642578125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.11721813678741455, 0.0, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.009206771850585938, -3.4332275390625e-05, -1.9073486328125e-06, -0.000102996826171875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.8954275219584815e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.76837158203125e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000652313232421875, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016307830810546875, 0.0, -0.0011617970885708928, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0011577606201171875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.01125335693359375, 0.0, -0.0015454292297363281, 0.0, -0.02143704891204834, 0.0, -0.0015850067138671875, 0.0, -6.103515625e-05, -0.0004978179931640625, -7.2479248046875e-05, -8.58306884765625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0016744132153689861, -3.099440846199286e-06, -0.0003304168931208551, -9.536738616588991e-07, -5.7220458984375e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "opponent", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.opponent.heal(player.effective_heal_power(2), self)\n", "score": -5.1018995153925815, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.011234283447265625, 0.0, -0.0015549659729003906, 0.0, -4.92339563369751, 0.0, -0.012898445129394531, 0.0, -5.14984130859375e-05, -0.0002765655517578125, -2.288818359375e-05, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0012964006746187806, -4.29153169534402e-06, -0.0004341940220911056, -8.344646857949556e-07, -0.000110626220703125, -1.9073486328125e-06, -4.38690185546875e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.532868940961869, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -5.389248847961426, -6.4849853515625e-05, -3.814697265625e-06, -0.000225067138671875, -3.814697265625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.0875205993652344e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.079673767089844e-06, -1.52587890625e-05, -0.0010204315185546875, -0.0001506805419921875, -4.00543212890625e-05, -0.0001773834228515625, -0.0001068115234375, 0.0, -0.001689910888671875, 0.0, -3.62396240234375e-05, -1.1920928244535389e-07, -0.00185394287109375, -3.814697265625e-06, -1.1444091796875e-05, -0.0004558563232421875, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0023992061614990234, 0.0, -0.0011311433045193553, -1.1920928244535389e-07, -6.67572021484375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "player", "<EOS>", "opponent", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.opponent.hero.heal(player.effective_heal_power(2), self)\n", "score": -5.553864010778291, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -4.496964454650879, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.07368457317352295, 0.0, -0.8070801496505737, -6.079673767089844e-06, -0.011862038634717464, 0.0, -0.011336326599121094, 0.0, -7.2479248046875e-05, -0.00025177001953125, -0.0002193450927734375, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0012929437216371298, -3.099440846199286e-06, -0.00040844344766810536, -4.768370445162873e-07, -6.29425048828125e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -5.8373605646129505, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -5.673955917358398, 0.0, -3.24249267578125e-05, -0.0002841949462890625, -0.00023651123046875, -3.24249267578125e-05, -2.0265579223632812e-06, -6.4849853515625e-05, -0.000102996826171875, -4.1961669921875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.4849853515625e-05, -3.4332275390625e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.0970536470413208, 0.0, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.009001731872558594, -3.4332275390625e-05, -1.9073486328125e-06, -0.000102996826171875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.62939453125e-05, -9.34600830078125e-05, -4.76837158203125e-05, -0.0001125335693359375, -1.1444091796875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.001917123794555664, -3.814697265625e-06, -3.24249267578125e-05, -0.0006504058837890625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016307830810546875, 0.0, -0.001162273227237165, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0011539459228515625, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.0112457275390625, 0.0, -0.0015473365783691406, 0.0, -0.021419882774353027, 0.0, -0.0015850067138671875, 0.0, -6.103515625e-05, -0.0004978179931640625, -7.2479248046875e-05, -8.58306884765625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0016764397732913494, -3.099440846199286e-06, -0.00033053604420274496, -9.536738616588991e-07, -5.7220458984375e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -6.019708572413052, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -3.7367982864379883, 0.0, -5.91278076171875e-05, -0.0001316070556640625, -0.000362396240234375, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -8.0108642578125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -2.2207632064819336, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -2.3841855067985307e-07, -0.005051612854003906, -3.62396240234375e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.990794771700166e-05, 0.0, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.62939453125e-05, -0.0001010894775390625, -4.57763671875e-05, -0.000118255615234375, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -0.0002231597900390625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.001970529556274414, -3.814697265625e-06, -3.24249267578125e-05, -0.0007038116455078125, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016498565673828125, 0.0, -0.0011628647334873676, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0011959075927734375, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.01113128662109375, 0.0, -0.0015662908554077148, 0.0, -0.021148085594177246, 0.0, -0.0015840530395507812, 0.0, -6.103515625e-05, -0.0004978179931640625, -7.2479248046875e-05, -8.58306884765625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.001674532424658537, -3.099440846199286e-06, -0.0003312507178634405, -9.536738616588991e-07, -5.7220458984375e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "cards_played", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "cards_played", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.cards_played.heal(player.effective_heal_power(2), self)\n", "score": -6.029645316208196, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.011234283447265625, 0.0, -0.0015549659729003906, 0.0, -5.858249187469482, 0.0, -0.0060138702392578125, 0.0, -8.20159912109375e-05, -0.000156402587890625, -3.814697265625e-05, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0012409684713929892, -3.6954863844584906e-06, -0.00039471735362894833, -9.536738616588991e-07, -5.53131103515625e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hand", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hand", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hand.heal(player.effective_heal_power(2), self)\n", "score": -6.165577786094339, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.011234283447265625, 0.0, -0.0015549659729003906, 0.0, -5.9900970458984375, 0.0, -0.009718894958496094, 0.0, -5.91278076171875e-05, -0.0002307891845703125, -7.2479248046875e-05, -7.43865966796875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0015149114187806845, -3.4570680327306036e-06, -0.0003497998113743961, -1.0728830375228426e-06, -9.1552734375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.effective_heal_power.heal(player.effective_heal_power(2), self)\n", "score": -6.2651403832648, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.011234283447265625, 0.0, -0.0015549659729003906, 0.0, -6.097838401794434, 0.0, -0.0016347169876098633, 0.0, -3.4332275390625e-05, -0.0001468658447265625, -7.05718994140625e-05, -9.34600830078125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0015351769980043173, -3.3378591979271732e-06, -0.00035523565020412207, -1.0728830375228426e-06, -6.29425048828125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -6.756950083706229, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -6.552934646606445, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -0.031118392944335938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002384185791015625, -0.0013885498046875, -2.6702880859375e-05, 0.0, -4.38690185546875e-05, -7.43865966796875e-05, -3.62396240234375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.52587890625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.11247742176055908, 0.0, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.009289741516113281, -3.4332275390625e-05, -1.9073486328125e-06, -0.000102996826171875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.62939453125e-05, -9.34600830078125e-05, -4.76837158203125e-05, -0.0001125335693359375, -1.1444091796875e-05, -3.814697265625e-05, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019190311431884766, -3.814697265625e-06, -3.24249267578125e-05, -0.0006580352783203125, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016307830810546875, 0.0, -0.0011622733436524868, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0011463165283203125, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.011247634887695312, 0.0, -0.0015473365783691406, 0.0, -0.021450400352478027, 0.0, -0.0015840530395507812, 0.0, -6.103515625e-05, -0.000499725341796875, -7.2479248046875e-05, -8.392333984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.001674532424658537, -3.099440846199286e-06, -0.00033113156678155065, -9.536738616588991e-07, -5.7220458984375e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.hero.heal(player.effective_heal_power(2), self)\n", "score": -6.803157317155417, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -4.496964454650879, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.07368457317352295, 0.0, -1.0187958478927612, -6.079673767089844e-06, -1.0512561798095703, 0.0, -0.009408950805664062, 0.0, -3.62396240234375e-05, -0.000270843505859375, -0.000179290771484375, -6.67572021484375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0015270707663148642, -2.622604142743512e-06, -0.00032354454742744565, -7.152555099310121e-07, -3.0517578125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "game", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "game", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.game(2), self)\n", "score": -7.449178978366952, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.011234283447265625, 0.0, -0.0015549659729003906, 0.0, -0.021430373191833496, 0.0, -0.0015859603881835938, 0.0, -6.103515625e-05, -0.0004978179931640625, -7.2479248046875e-05, -8.58306884765625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.26175594329834, -1.0013530300057027e-05, -0.0001333430118393153, -7.152555099310121e-07, -0.0001773834228515625, -1.9073486328125e-06, -5.7220458984375e-05, 0.0]}, {"choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "DrainLife", "hole2": [{"hole1": 3, "hole0": "Drain Life", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.477788163938648, "score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -6.845402717590332, -0.0003719329833984375, -1.6689286894688848e-06, -3.2782554626464844e-05, -5.960462772236497e-07, 0.0, -4.172321041551186e-06, -1.1920928244535389e-07, -0.5481501817703247, 0.0, -0.0008469820022583008, 0.0, -0.0014764070510864258, 0.0, -4.9948692321777344e-05, -3.814697265625e-06, -2.86102294921875e-05, -9.5367431640625e-06, -5.9604644775390625e-06, -1.752369644236751e-05, -0.02535247802734375, -1.1444091796875e-05, -3.814697265625e-06, -4.00543212890625e-05, -2.09808349609375e-05, -4.38690185546875e-05, -1.9073486328125e-06, -3.230571746826172e-05, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -9.775161743164062e-06, -1.52587890625e-05, -0.044574737548828125, -0.0002288818359375, -6.4849853515625e-05, -0.0001010894775390625, -0.00018310546875, 0.0, -0.003482818603515625, 0.0, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019931793212890625, -3.814697265625e-06, -9.5367431640625e-06, -0.000522613525390625, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0025975704193115234, 0.0, -0.001143058529123664, -1.1920928244535389e-07, -7.05718994140625e-05, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06]}]}
{"index": 27, "beams": [{"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -0.1960561478481253, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -0.02729511260986328, -0.0008378024213016033, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0001549404114484787, -3.063678741455078e-05, -0.00029360479675233364, -0.0001621246337890625, -1.9073486328125e-06, -0.13134479522705078, -0.00075531005859375, -1.1444091796875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -4.9591064453125e-05, -0.00037384033203125, -1.9073486328125e-06, -0.004874229431152344, -5.14984130859375e-05, -4.470248313737102e-05, -5.7220458984375e-06, -6.152358400868252e-05, -3.814697265625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -2.9531570352664716, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -0.02729511260986328, -0.0008378024213016033, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0001549404114484787, -3.063678741455078e-05, -0.00029360479675233364, -0.0001621246337890625, -1.9073486328125e-06, -2.099740982055664, -0.000263214111328125, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-06, -4.38690185546875e-05, -0.00081634521484375, -1.9073486328125e-06, -0.000579833984375, -1.9073486328125e-06, -0.5009698867797852, 0.0, -0.26866722106933594, -6.866455078125e-05, -0.02053654193878174, -0.002103567123413086, 0.0, -0.0004367828369140625, -0.000118255615234375, -8.630379306850955e-05, -7.62939453125e-06, -0.00017913355259224772, -5.7220458984375e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "taunt", "<EOS>", 22, 135, "True", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            taunt=True)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -3.617867441225812, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -0.02729511260986328, -0.0008378024213016033, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0001549404114484787, -3.063678741455078e-05, -0.00029360479675233364, -0.0001621246337890625, -1.9073486328125e-06, -2.099740982055664, -0.000263214111328125, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-06, -4.38690185546875e-05, -0.00081634521484375, -1.9073486328125e-06, -0.000579833984375, -1.9073486328125e-06, -1.2348155975341797, 0.0, -0.0003414154052734375, -0.008960723876953125, -1.9073486328125e-05, -1.9073486328125e-06, -0.21256351470947266, -0.00020599365234375, -0.00064876489341259, -9.775161743164062e-06, -0.00031953389407135546, -3.814697265625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.5454474275029355, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -0.02729511260986328, -0.0008378024213016033, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0001549404114484787, -3.063678741455078e-05, -0.00029360479675233364, -0.0001621246337890625, -1.9073486328125e-06, -2.099740982055664, -0.000263214111328125, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-06, -4.38690185546875e-05, -0.00081634521484375, -1.9073486328125e-06, -0.000579833984375, -1.9073486328125e-06, -2.3771018981933594, 0.0, -0.001026153564453125, -2.86102294921875e-05, -0.000148773193359375, -0.00028228759765625, 0.0, -0.0067386627197265625, -5.7220458984375e-05, -2.7656169550027698e-05, -3.933906555175781e-06, -5.299755503074266e-05, -1.9073486328125e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 162, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector"}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -5.069579383070952, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -4.4843597412109375, -0.0006948709487915039, 0.0, -7.62939453125e-06, -0.00063323974609375, -2.86102294921875e-05, -0.00014073029160499573, -1.537799835205078e-05, -0.4046856164932251, -0.00028228759765625, -5.7220458984375e-06, -0.1478862762451172, -0.001003265380859375, -0.0002321927313460037, -9.59634780883789e-05, -0.00014000522787682712, -2.872943878173828e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 162, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Hero", "Selector", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "HeroSelector"}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -5.753668664325225, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -4.4843597412109375, -0.0006948709487915039, 0.0, -7.62939453125e-06, -0.00063323974609375, -2.86102294921875e-05, -0.00014073029160499573, -1.537799835205078e-05, -1.2066417932510376, -0.001667022705078125, -1.9073486328125e-06, -0.029511451721191406, -0.000179290771484375, -0.00028427375946193933, -7.30752944946289e-05, -6.751764885848388e-05, -2.300739288330078e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 96, 218, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template7", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n", "score": -5.787549424498124, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -0.02729511260986328, -0.0008378024213016033, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0001549404114484787, -3.063678741455078e-05, -0.00029360479675233364, -0.0001621246337890625, -1.9073486328125e-06, -0.13134479522705078, -0.00075531005859375, -1.1444091796875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -4.9591064453125e-05, -0.00037384033203125, -1.9073486328125e-06, -5.56413459777832, -0.001468658447265625, -0.0012846078025177121, -5.7220458984375e-06, -0.01959434151649475, -1.9073486328125e-06, -0.0065201520919799805, -0.0001087188720703125, -0.002593994140625, -0.000637054443359375, -0.0001621246337890625, -2.288818359375e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 30, 193, "Random", "Picker", "<EOS>", "3", "<EOS>", 96, 218, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole1": 3, "hole0": "RandomPicker", "_type": "Template34"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template7", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker(3))))\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n", "score": -5.916892538243687, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -0.02729511260986328, -0.0008378024213016033, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0001549404114484787, -3.063678741455078e-05, -0.00029360479675233364, -0.0001621246337890625, -1.9073486328125e-06, -2.099740982055664, -0.000263214111328125, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-06, -4.38690185546875e-05, -0.00081634521484375, -1.9073486328125e-06, -0.000579833984375, -1.9073486328125e-06, -0.5009698867797852, 0.0, -1.6369209289550781, -0.0010986328125, -0.03124535083770752, -0.02082061767578125, -7.62939453125e-06, -0.011433178558945656, -1.9073486328125e-06, -1.4285898208618164, -0.030530929565429688, -0.0186966173350811, -4.0531158447265625e-06, -0.021695727482438087, -3.933906555175781e-06, -0.013602852821350098, -0.000141143798828125, -0.037781715393066406, -0.001560211181640625, -0.0015392303466796875, -0.000270843505859375]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 30, 193, "Random", "Picker", "<EOS>", "3", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole1": 3, "hole0": "RandomPicker", "_type": "Template34"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker(3))))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -6.263260487849024, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -0.02729511260986328, -0.0008378024213016033, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0001549404114484787, -3.063678741455078e-05, -0.00029360479675233364, -0.0001621246337890625, -1.9073486328125e-06, -2.099740982055664, -0.000263214111328125, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-06, -4.38690185546875e-05, -0.00081634521484375, -1.9073486328125e-06, -0.000579833984375, -1.9073486328125e-06, -0.5009698867797852, 0.0, -1.6369209289550781, -0.0010986328125, -0.03124535083770752, -0.02082061767578125, -7.62939453125e-06, -0.011433178558945656, -1.9073486328125e-06, -1.3900766372680664, -0.0004177093505859375, -0.0017796754837036133, -7.05718994140625e-05, -0.0005817413330078125, -0.0006103515625, -0.0006256103515625, -0.000102996826171875, -0.00086212158203125, -1.9073486328125e-06, -0.00251007080078125, -0.0010128021240234375, -1.9073486328125e-06, -0.00011444091796875, -0.0006618499755859375, -2.110004425048828e-05, -0.028313636779785156, -4.9591064453125e-05, -4.1961669921875e-05, -0.0021419525146484375, -3.814697265625e-06, -0.0002613067626953125, -5.7220458984375e-06, -0.00022149085998535156, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.07146739959716797, -0.007105827331542969, -0.007699012756347656, -5.91278076171875e-05, -0.01360321044921875, -3.814697265625e-06, -0.00012969970703125, 0.0, -0.01578998565673828, 0.0, -0.0005168914794921875, 0.0, -3.0517578125e-05, -0.11527538299560547, -5.14984130859375e-05, -0.0001373291015625, -5.53131103515625e-05, -0.000125885009765625, 0.0, -0.0001683235022937879, 0.0, -0.2379276156425476, 0.0, -6.29425048828125e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.9073486328125e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "MAGE", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -6.368806149777797, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -6.151298999786377, -3.445148468017578e-05, -0.0009728670120239258, 0.0, -0.004448533058166504, 0.0, -9.5367431640625e-05, 0.0, -0.000102996826171875, 0.0, -0.0015611648559570312, -1.9073486328125e-06, -0.0001506805419921875, 0.0, -0.008680343627929688, -0.02685070037841797, -0.0008064503781497478, -1.1920928244535389e-07, -3.814697265625e-06, -0.0001983642578125, -1.9073486328125e-06, -0.00016293209046125412, -2.872943878173828e-05, -0.0003316308429930359, -0.0001583099365234375, -1.9073486328125e-06, -0.16116905212402344, -0.0006656646728515625, -9.5367431640625e-06, -4.57763671875e-05, -7.62939453125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00035858154296875, -1.9073486328125e-06, -0.0047664642333984375, -5.14984130859375e-05, -4.446407547220588e-05, -5.7220458984375e-06, -6.12879593973048e-05, -3.814697265625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}]}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -6.471951176874413, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -5.264467239379883, -5.841255187988281e-06, -0.17084884643554688, -4.00543212890625e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0347900390625, 0.0, -0.0018426179885864258, -9.5367431640625e-06, -0.009206771850585938, -2.288818359375e-05, -0.7459579706192017, 0.0, -0.1267690658569336, -0.043491363525390625, -0.0007005902007222176, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003757476806640625, -9.5367431640625e-06, -0.0004987567663192749, -9.5367431640625e-06, -0.00027846184093505144, -0.00011444091796875, -1.9073486328125e-06, -0.05651283264160156, -0.0016002655029296875, -2.09808349609375e-05, -9.34600830078125e-05, -2.86102294921875e-05, -0.0001239776611328125, -1.9073486328125e-06, -4.57763671875e-05, -0.0003910064697265625, 0.0, -0.004351615905761719, -5.53131103515625e-05, -4.839779285248369e-05, -7.62939453125e-06, -7.942361844470724e-05, -3.814697265625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 162, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 96, 218, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 6, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector"}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 6, "hole0": 6, "_type": "Template7", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n", "score": -7.020569090429483, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -4.4843597412109375, -0.0006948709487915039, 0.0, -7.62939453125e-06, -0.00063323974609375, -2.86102294921875e-05, -0.00014073029160499573, -1.537799835205078e-05, -0.4046856164932251, -0.00028228759765625, -5.7220458984375e-06, -2.055567741394043, -0.004981040954589844, -0.004437243100255728, -1.990795135498047e-05, -0.022825097665190697, -1.728534698486328e-05, -0.00756680965423584, -0.0015773773193359375, -0.0026702880859375, -0.0005092620849609375, -0.0001926422119140625, -1.1444091796875e-05]}, {"choice_history": [69, 133, 249, 89, 154, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>"], "model_output": {"body": [{"hole1": 6, "hole0": "Dread Infernal", "_type": "Template15", "hole2": "MAGE", "hole3": "COMMON"}], "_type": "Module"}, "inferred_code": "super().__init__('Dread Infernal', 6, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n", "score": -12.214746408163926, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -11.517343521118164, -0.10246562957763672, -2.1457672119140625e-06, -0.052242450416088104, -8.344646857949556e-07, 0.0, -2.384201707172906e-07, -1.9073468138230965e-06, -0.5359225273132324, -1.1920928244535389e-07, -0.004214048385620117, 0.0]}, {"choice_history": [69, 133, 249, 88, 153, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "MAGE", "<EOS>"], "model_output": {"body": [{"hole1": 6, "hole0": "Dread Infernal", "_type": "Template14", "hole2": "MAGE"}], "_type": "Module"}, "inferred_code": "super().__init__('Dread Infernal', 6, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n", "score": -12.69785084967134, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -11.499591827392578, -1.1715497970581055, -6.079655122448457e-06, -0.008400866761803627, -2.288792165927589e-05, 0.0, -4.129956778342603e-06, 0.0, -0.015722274780273438, 0.0]}, {"choice_history": [69, 133, 248], "model_output": {"body": [], "_type": "Module"}, "inferred_code": "", "score": -20.766690254211426, "score_history": [-0.0023641586303710938, -0.0001544952392578125, -20.764171600341797]}]}
{"index": 28, "beams": [{"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.3624954394689013, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -0.09943103790283203, -4.971027374267578e-05, -0.0001250469358637929, -1.1920928244535389e-07, 0.0, -1.0729058885772247e-06, -2.3841855067985307e-07, -0.0034956932067871094, -1.52587890625e-05, -0.0008620822918601334, 0.0, -5.91278076171875e-05, -6.29425048828125e-05, 0.0, -3.2335519790649414e-06, -4.57763671875e-05, -0.0010660348925739527, -3.0517578125e-05, 0.0, -0.001682281494140625, -9.5367431640625e-05, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -0.0002727508544921875, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.0014781951904296875, 0.0, -0.02864837646484375, -1.9073486328125e-06, -0.000545501708984375, -0.00018143653869628906, 0.0, -2.47955322265625e-05, 0.0, -3.063678741455078e-05, 0.0, -7.2479248046875e-05, -0.001506805419921875, -3.814697265625e-05, -8.344654816028196e-07, -1.1920928244535389e-07, -3.965722135035321e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Elven", "Archer", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "ALL", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 1, "hole0": 1, "_type": "Template8"}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -1.7127117916936498, "score_history": [-1.6482658386230469, -0.0002956390380859375, -2.6702880859375e-05, -0.000713348388671875, -3.814697265625e-06, -1.490105023549404e-05, -2.861018856492592e-06, -8.106198947643861e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.192074705613777e-07, -0.00017726416990626603, -1.1920928244535389e-07, -0.000186920166015625, -0.0004291534423828125, -0.0001811981201171875, -0.0001528146385680884, -8.177757263183594e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -4.792555409949273e-05, -4.529942543740617e-06, -6.461128941737115e-05, -9.5367431640625e-06, -0.008379220962524414, 0.0, -0.0013779401779174805, 0.0, -0.000492095947265625, 0.0, -0.0030765533447265625, -1.9073486328125e-06, -0.01607990264892578, 0.0, -0.0012295246124267578, 0.0, -0.0003833770751953125, -0.011763572692871094, -0.0023822677321732044, -9.536738616588991e-07, -3.0517578125e-05, -7.62939453125e-05, -1.9073486328125e-06, -6.991031114012003e-07, -4.172325134277344e-06, -0.00026357112801633775, -1.1444091796875e-05, -1.9073486328125e-05, -0.000476837158203125, -5.14984130859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -0.0002079010009765625, -1.33514404296875e-05, -5.7220458984375e-06, -0.00022125244140625, -7.82012939453125e-05, -0.003795623779296875, -1.9073486328125e-06, -0.009466171264648438, -7.62939453125e-05, -0.0006122589111328125, -0.0006660223007202148, -1.9073486328125e-06, -0.000499725341796875, -9.5367431640625e-05, -3.3378553325746907e-06, 0.0, -1.8732565877144225e-05, 0.0]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 30, 193, "Random", "Picker", "<EOS>", "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole1": 3, "hole0": "RandomPicker", "_type": "Template34"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=RandomPicker(3))))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -4.42340327292181, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -0.09943103790283203, -4.971027374267578e-05, -0.0001250469358637929, -1.1920928244535389e-07, 0.0, -1.0729058885772247e-06, -2.3841855067985307e-07, -0.0034956932067871094, -1.52587890625e-05, -0.0008620822918601334, 0.0, -5.91278076171875e-05, -6.29425048828125e-05, 0.0, -3.2335519790649414e-06, -4.57763671875e-05, -0.0010660348925739527, -3.0517578125e-05, 0.0, -0.001682281494140625, -9.5367431640625e-05, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -0.0002727508544921875, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.0014781951904296875, 0.0, -3.620938301086426, -0.0020761489868164062, -0.336883544921875, -0.005743503570556641, -8.785724639892578e-05, -0.10274107754230499, 0.0, -0.0033092498779296875, 0.0, -1.823902130126953e-05, 0.0, -6.4849853515625e-05, -0.020076751708984375, -1.71661376953125e-05, -7.152563057388761e-07, -1.1920928244535389e-07, -4.088674177182838e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 217, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 237, 45, 136, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "ALL", "hole5": "CharacterSelector", "_type": "Template6", "hole6": [{"_type": "NameConstant", "value": "Null"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.ALL, battlecry=Battlecry(Damage(1),\n            CharacterSelector(Null)))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -4.6178379232628615, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -3.522284984588623, -7.653236389160156e-05, -9.631941793486476e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 8.343499757756945e-07, -3.576278118089249e-07, -0.10289454460144043, 0.0, -0.02472173422574997, 0.0, -0.000152587890625, -0.00042724609375, 0.0, -9.745999705046415e-07, -4.172325134277344e-06, -0.01692354306578636, -4.38690185546875e-05, 0.0, -0.223114013671875, -0.3723173141479492, -0.001232147216796875, -0.0071086883544921875, -1.9073486328125e-06, -0.0005589723587036133, 0.0, -0.00010180473327636719, 0.0, -6.67572021484375e-05, -0.12333297729492188, -3.62396240234375e-05, -9.536747711536009e-07, -5.960462772236497e-07, -4.159411764703691e-05, -1.4305104514278355e-06]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 217, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 237, 63, 205, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "ALL", "hole5": "CharacterSelector", "_type": "Template6", "hole6": [{"hole0": "BothPlayer", "_type": "Template39"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.ALL, battlecry=Battlecry(Damage(1),\n            CharacterSelector(BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -5.6096471880644145, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -3.522284984588623, -7.653236389160156e-05, -9.631941793486476e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 8.343499757756945e-07, -3.576278118089249e-07, -0.10289454460144043, 0.0, -0.02472173422574997, 0.0, -0.000152587890625, -0.00042724609375, 0.0, -9.745999705046415e-07, -4.172325134277344e-06, -0.01692354306578636, -4.38690185546875e-05, 0.0, -0.223114013671875, -1.3054447174072266, -0.0015869140625, -0.1856071949005127, -5.7220458984375e-05, 0.0, -3.933906555175781e-06, 0.0, -4.017353057861328e-05, 0.0, -3.0517578125e-05, -0.0037689208984375, -3.4332275390625e-05, -7.152561920520384e-07, -1.1920928244535389e-07, -3.5649529309011996e-05, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", "Bounce", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "Bounce", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(), Bounce(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -5.78061300033027, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -4.348536491394043, -8.797291229711846e-05, -0.00015127040387596935, 0.0, -3.814697265625e-06, 4.766536676470423e-07, -8.344646857949556e-07, -0.09786975383758545, 0.0, -0.3893393576145172, -8.344646857949556e-07, -0.6416744589805603, -4.398822784423828e-05, -0.009560585021972656, -0.0018253326416015625, -4.9591064453125e-05, -0.009027481079101562, 0.0, -0.000698089599609375, -0.0001049041748046875, -0.000518798828125, -2.09808349609375e-05, 0.0, -0.0002288818359375, -2.6702880859375e-05, -0.003505706787109375, 0.0, -0.05279541015625, -3.814697265625e-06, -0.0003833770751953125, -0.0001844167709350586, 0.0, -2.47955322265625e-05, 0.0, -2.682209014892578e-05, 0.0, -6.866455078125e-05, -0.0014705657958984375, -4.57763671875e-05, -9.536746574667632e-07, -1.1920928244535389e-07, -3.846038453048095e-05, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Elven", "Archer", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "ALL", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 1, "hole0": 1, "_type": "Template8"}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.321869692034269, "score_history": [-1.6482658386230469, -0.0002956390380859375, -2.6702880859375e-05, -0.000713348388671875, -3.814697265625e-06, -1.490105023549404e-05, -2.861018856492592e-06, -8.106198947643861e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.192074705613777e-07, -0.00017726416990626603, -1.1920928244535389e-07, -0.000186920166015625, -0.0004291534423828125, -0.0001811981201171875, -0.0001528146385680884, -8.177757263183594e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -4.792555409949273e-05, -4.529942543740617e-06, -6.461128941737115e-05, -9.5367431640625e-06, -0.008379220962524414, 0.0, -0.0013779401779174805, 0.0, -0.000492095947265625, 0.0, -0.0030765533447265625, -1.9073486328125e-06, -4.615040302276611, 0.0, -0.00897526741027832, 0.0, -0.0008373260498046875, -0.014858245849609375, -0.001331869512796402, -4.768370445162873e-07, -1.33514404296875e-05, -0.0001201629638671875, 0.0, -2.819579094648361e-07, -7.867813110351562e-06, -0.00022554387396667153, -9.5367431640625e-06, -1.33514404296875e-05, -0.0004520416259765625, -4.9591064453125e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.814697265625e-06, -0.000202178955078125, -1.1444091796875e-05, -3.814697265625e-06, -0.000213623046875, -8.7738037109375e-05, -0.0037994384765625, -1.9073486328125e-06, -0.009370803833007812, -7.2479248046875e-05, -0.000640869140625, -0.0007154941558837891, -1.9073486328125e-06, -0.0005435943603515625, -9.918212890625e-05, -3.4570643947517965e-06, 0.0, -1.7029060472850688e-05, 0.0]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.423028994678866, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -5.227881908416748, -1.4305104514278355e-06, -6.449205102398992e-05, -3.576278118089249e-07, -3.2186455882765586e-06, -1.5497562344535254e-06, -1.728519782773219e-05, -0.02384408749639988, -1.1920928244535389e-07, -0.7183564901351929, -8.701899787411094e-05, -0.009634017944335938, -0.000301361083984375, 0.0, -3.4749245969578624e-07, -9.417517503607087e-06, -0.20179621875286102, -1.728534698486328e-05, -3.62396240234375e-05, -0.008986592292785645, 0.0, -5.531214992515743e-05, 0.0, -6.866455078125e-05, -0.009443283081054688, -0.0001049041748046875, -4.768377266373136e-07, -1.4305104514278355e-06, -1.9943458028137684e-05, -1.0728830375228426e-06]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 208, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", "Weapon", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "WeaponSelector", "_type": "Template6", "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(), WeaponSelector())\n            )\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.509360094345205, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -5.393945217132568, -0.0002337421028641984, -0.0001697501866146922, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.577106610919145e-07, -5.960462772236497e-07, -0.2290552854537964, -1.1920928244535389e-07, -0.0964885950088501, -2.622600959512056e-06, -0.5217294692993164, -0.037065982818603516, 0.0, -0.006238460540771484, 0.0, -3.480910891084932e-05, 0.0, -2.6702880859375e-05, -0.0018749237060546875, -0.000186920166015625, 8.344648563252122e-07, -7.152555099310121e-07, -1.1236974387429655e-05, -7.152555099310121e-07]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 212, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", 237, 46, 139, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole8": [{"_type": "Num", "n": 1}], "hole5": "Damage", "_type": "Template6", "hole6": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(), Damage(1), 1))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.604692112492614, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -5.794177532196045, -0.0011399980867281556, -0.00011813289165729657, -1.1920928244535389e-07, -1.1920928244535389e-07, 2.3839663754188223e-07, -4.768370445162873e-07, -0.18135428428649902, 0.0, -0.024683674797415733, -2.3841855067985307e-07, -0.061878591775894165, -3.3378591979271732e-06, -0.000644683837890625, -6.29425048828125e-05, 0.0, -1.04482751339674e-06, -6.198883056640625e-06, -0.05808544158935547, -0.031093597412109375, 0.0, -1.517939381301403e-05, -2.0265579223632812e-06, -0.1964855194091797, -1.9073486328125e-06, -5.781647269031964e-05, 0.0, -0.000270843505859375, -0.032233238220214844, -4.1961669921875e-05, -2.145763801308931e-06, -1.1920928244535389e-07, -3.659057256300002e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", "Damage", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "Damage", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(), Damage(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.6792787251980315, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -4.348536491394043, -8.797291229711846e-05, -0.00015127040387596935, 0.0, -3.814697265625e-06, 4.766536676470423e-07, -8.344646857949556e-07, -0.09786975383758545, 0.0, -0.3893393576145172, -8.344646857949556e-07, -1.5843749046325684, -2.3841855067985307e-07, -0.0014133453369140625, -0.0026702880859375, -6.866455078125e-05, -0.005734443664550781, 0.0, -0.0011138916015625, -5.7220458984375e-05, -0.0003910064697265625, -1.33514404296875e-05, 0.0, -0.000232696533203125, -7.2479248046875e-05, -0.0042552947998046875, 0.0, -0.018057823181152344, -7.43865966796875e-05, -0.0004425048828125, -0.00026869773864746094, 0.0, -4.00543212890625e-05, 0.0, -2.682209014892578e-05, 0.0, -4.76837158203125e-05, -0.0015544891357421875, -4.76837158203125e-05, -1.192093122881488e-06, 0.0, -3.524041676428169e-05, 0.0]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 217, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 239, 45, 136, "Null", "<EOS>", 63, 205, "Both", "Player", "<EOS>", 63, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "ALL", "hole5": "CharacterSelector", "_type": "Template6", "hole6": [{"_type": "NameConstant", "value": "Null"}, {"hole0": "BothPlayer", "_type": "Template39"}, {"hole0": "UserPicker", "_type": "Template39"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.ALL, battlecry=Battlecry(Damage(1),\n            CharacterSelector(Null, BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.707404593628489, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -3.522284984588623, -7.653236389160156e-05, -9.631941793486476e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 8.343499757756945e-07, -3.576278118089249e-07, -0.10289454460144043, 0.0, -0.02472173422574997, 0.0, -0.000152587890625, -0.00042724609375, 0.0, -9.745999705046415e-07, -4.172325134277344e-06, -0.01692354306578636, -4.38690185546875e-05, 0.0, -2.0367612838745117, -0.6120519638061523, -0.001682281494140625, -0.002079010009765625, -1.9073486328125e-05, -0.000461578369140625, -0.0005550384521484375, -0.14555644989013672, -1.9073486328125e-05, -0.00020599365234375, -0.0006465911865234375, -3.814697265625e-06, -0.010011672973632812, -0.00410151481628418, -1.5497195136049413e-06, -9.5367431640625e-06, 0.0, -1.919269561767578e-05, 0.0, -2.288818359375e-05, -0.0031833648681640625, -4.9591064453125e-05, -4.768378403241513e-07, 0.0, -4.012636054540053e-05, 0.0]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole4": [{"_type": "Num", "n": 1}], "hole3": "Heal"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(1),\n            CharacterSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.713075389292548, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -5.227881908416748, -1.4305104514278355e-06, -6.449205102398992e-05, -3.576278118089249e-07, -3.2186455882765586e-06, -1.5497562344535254e-06, -1.728519782773219e-05, -0.02384408749639988, -1.1920928244535389e-07, -0.8455404043197632, -2.729855441430118e-05, -0.025640487670898438, -0.00125885009765625, 0.0, -6.884438334964216e-07, -6.675708846159978e-06, -0.3488774299621582, -1.728534698486328e-05, -4.57763671875e-05, -0.009114503860473633, 0.0, -5.996127219987102e-05, 0.0, -6.67572021484375e-05, -0.008179664611816406, -0.000110626220703125, -4.768377266373136e-07, -1.0728830375228426e-06, -1.7677622963674366e-05, -8.344646857949556e-07]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 30, 193, "Random", "Picker", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole1": 1, "hole0": "RandomPicker", "_type": "Template34"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=RandomPicker(1))))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.848680303504757, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -0.09943103790283203, -4.971027374267578e-05, -0.0001250469358637929, -1.1920928244535389e-07, 0.0, -1.0729058885772247e-06, -2.3841855067985307e-07, -0.0034956932067871094, -1.52587890625e-05, -0.0008620822918601334, 0.0, -5.91278076171875e-05, -6.29425048828125e-05, 0.0, -3.2335519790649414e-06, -4.57763671875e-05, -0.0010660348925739527, -3.0517578125e-05, 0.0, -0.001682281494140625, -9.5367431640625e-05, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -0.0002727508544921875, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.0014781951904296875, 0.0, -3.620938301086426, -0.0020761489868164062, -0.336883544921875, -0.005743503570556641, -8.785724639892578e-05, -2.5375607013702393, 0.0, -0.003045201301574707, 0.0, -1.3709068298339844e-05, 0.0, -4.00543212890625e-05, -0.010833740234375, -1.71661376953125e-05, -5.960470161880949e-07, -1.1920928244535389e-07, -3.4798242268152535e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 30, 193, "self", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ElvenArcher", "hole2": [{"hole1": 1, "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole1": 1, "hole0": "self", "_type": "Template34"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=self(1))))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -7.0749702780305554, "score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -0.09943103790283203, -4.971027374267578e-05, -0.0001250469358637929, -1.1920928244535389e-07, 0.0, -1.0729058885772247e-06, -2.3841855067985307e-07, -0.0034956932067871094, -1.52587890625e-05, -0.0008620822918601334, 0.0, -5.91278076171875e-05, -6.29425048828125e-05, 0.0, -3.2335519790649414e-06, -4.57763671875e-05, -0.0010660348925739527, -3.0517578125e-05, 0.0, -0.001682281494140625, -9.5367431640625e-05, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -0.0002727508544921875, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.0014781951904296875, 0.0, -3.620938301086426, -0.0020761489868164062, -2.767745018005371, -0.000392913818359375, -0.32682308554649353, 0.0, -0.00023674964904785156, 0.0, -1.2159347534179688e-05, 0.0, -3.4332275390625e-05, -0.025241851806640625, -1.71661376953125e-05, -2.3841937490942655e-07, -1.1920928244535389e-07, -4.7331981477327645e-05, -1.1920928244535389e-07]}]}
{"index": 29, "beams": [{"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -1.2555889571791496, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -0.7614670991897583, 0.0, -0.0035219192504882812, 0.0, -0.0001990795135498047, 0.0, -3.0517578125e-05, -3.814697265625e-06, -0.00012421607971191406, -4.41074053014745e-06, -0.0059566497802734375, -2.288818359375e-05, -1.52587890625e-05, -0.0004405975341796875, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -6.675719760096399e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.960462203802308e-06, -2.288818359375e-05, -0.030704498291015625, -5.7220458984375e-06, -0.00066375732421875, -4.57763671875e-05, -0.006328582763671875, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0012865066528320312, -5.006789251638111e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -1.4596394527959262, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -1.3023223876953125, -2.86102294921875e-05, -5.7220458984375e-06, -0.00023410096764564514, -0.00022923848882783204, -4.7444173105759546e-05, -0.0004521608352661133, -0.000835418701171875, 0.0, -0.00010859966278076172, -0.00037913990672677755, -6.4849853515625e-05, -9.72747802734375e-05, -5.7220458984375e-06, 0.0, -0.00011587141489144415, 0.0, -0.10651528835296631, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -3.814697265625e-06, -1.9073486328125e-06, -6.4849853515625e-05, -2.0265579223632812e-06, -8.02278082119301e-05, 0.0, -0.00406646728515625, -1.52587890625e-05, -4.7326087951660156e-05, -2.3841855067985307e-07, -0.00023102760314941406, 0.0, -0.0013277530670166016, 0.0, -4.38690185546875e-05, -9.5367431640625e-06, -9.560585021972656e-05, -8.344646857949556e-07, -0.0021696090698242188, -2.09808349609375e-05, -1.1444091796875e-05, -0.00060272216796875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -8.106231689453125e-06, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -4.291534423828125e-06, -3.814697265625e-06, -6.43729799776338e-06, -3.254413604736328e-05, -0.026365280151367188, -5.7220458984375e-06, -0.00034332275390625, -4.76837158203125e-05, -0.0077304840087890625, -1.9073486328125e-06, -3.635883331298828e-05, 0.0, -0.0015020370483398438, -9.894368304230738e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.TOTEM)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -1.7785515273695793, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -1.290406346321106, 0.0, -0.0001894235610961914, 0.0, -0.00016427040100097656, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -7.081031799316406e-05, -4.768367489305092e-06, -0.009656906127929688, -1.71661376953125e-05, -1.52587890625e-05, -0.0004425048828125, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -6.318092346191406e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.7220440794480965e-06, -2.86102294921875e-05, -0.02496337890625, -3.814697265625e-06, -0.000629425048828125, -4.38690185546875e-05, -0.005771636962890625, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -0.0013208389282226562, -5.125998541188892e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -2.784954615939675, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -2.2956619262695312, 0.0, -0.0004049539566040039, 0.0, -0.00016069412231445312, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -9.369850158691406e-05, -4.649158654501662e-06, -0.009970664978027344, -1.52587890625e-05, -1.52587890625e-05, -0.000461578369140625, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -6.318092346191406e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.841253368998878e-06, -2.6702880859375e-05, -0.024866104125976562, -3.814697265625e-06, -0.0006561279296875, -5.7220458984375e-05, -0.006500244140625, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0012655258178710938, -5.125998541188892e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -3.2113298858294996, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -2.724763870239258, -1.1920928244535389e-07, -0.0002588033676147461, 0.0, -0.0002589225769042969, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -9.751319885253906e-05, -4.41074053014745e-06, -0.0066051483154296875, -1.71661376953125e-05, -1.33514404296875e-05, -0.000469207763671875, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -6.318092346191406e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.960462203802308e-06, -2.47955322265625e-05, -0.025798797607421875, -5.7220458984375e-06, -0.000598907470703125, -5.7220458984375e-05, -0.0063037872314453125, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0012617111206054688, -5.245207830739673e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "DRAGON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.DRAGON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -3.802536913262081, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -3.315624237060547, 0.0, -0.0004127025604248047, 0.0, -0.00022971630096435547, 0.0, -4.00543212890625e-05, -5.7220458984375e-06, -0.00011849403381347656, -5.245203283266164e-06, -0.00702667236328125, -1.71661376953125e-05, -1.33514404296875e-05, -0.0004634857177734375, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.960462203802308e-06, -2.47955322265625e-05, -0.026159286499023438, -5.7220458984375e-06, -0.000675201416015625, -4.00543212890625e-05, -0.005588531494140625, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -0.0013322830200195312, -5.006789251638111e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -3.8258375156053432, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -1.3023223876953125, -2.86102294921875e-05, -5.7220458984375e-06, -0.00023410096764564514, -0.00022923848882783204, -4.7444173105759546e-05, -0.0004521608352661133, -0.000835418701171875, 0.0, -0.00010859966278076172, -0.00037913990672677755, -6.4849853515625e-05, -9.72747802734375e-05, -5.7220458984375e-06, 0.0, -0.00011587141489144415, 0.0, -2.472515344619751, 0.0, -7.62939453125e-06, -3.814697265625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -2.0265579223632812e-06, -8.273111598100513e-05, 0.0, -0.0050487518310546875, -1.33514404296875e-05, -4.172325134277344e-05, -2.3841855067985307e-07, -0.00022721290588378906, 0.0, -0.0012167692184448242, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -9.179115295410156e-05, -8.344646857949556e-07, -0.002147674560546875, -2.09808349609375e-05, -1.1444091796875e-05, -0.0005741119384765625, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -8.106231689453125e-06, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -4.291534423828125e-06, -3.814697265625e-06, -6.43729799776338e-06, -3.445148468017578e-05, -0.025787353515625, -5.7220458984375e-06, -0.00034332275390625, -4.76837158203125e-05, -0.007709503173828125, -1.9073486328125e-06, -3.635883331298828e-05, 0.0, -0.001530766487121582, -1.001357759378152e-05]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.COMMON, True, MINION_TYPE.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -3.9347807849545617, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -2.7842280864715576, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -6.186962127685547e-05, 0.0, -0.0053882598876953125, -1.71661376953125e-05, -8.165836334228516e-05, -1.1920928244535389e-07, -4.57763671875e-05, -3.814697265625e-06, -0.024858474731445312, 0.0, -0.006931304931640625, -9.918212890625e-05, -0.7282240390777588, 0.0, -0.004122018814086914, 0.0, -0.00023221969604492188, 0.0, -3.0517578125e-05, -3.814697265625e-06, -0.00012612342834472656, -4.053113570989808e-06, -0.004233360290527344, -1.9073486328125e-05, -1.33514404296875e-05, -0.0003948211669921875, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -6.4373016357421875e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.960462203802308e-06, -2.47955322265625e-05, -0.0279083251953125, -5.7220458984375e-06, -0.000583648681640625, -4.9591064453125e-05, -0.006378173828125, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0012903213500976562, -5.125998541188892e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.COMMON, True, MINION_TYPE.TOTEM)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -4.5046090568204065, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -2.7842280864715576, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -6.186962127685547e-05, 0.0, -0.0053882598876953125, -1.71661376953125e-05, -8.165836334228516e-05, -1.1920928244535389e-07, -4.57763671875e-05, -3.814697265625e-06, -0.024858474731445312, 0.0, -0.006931304931640625, -9.918212890625e-05, -1.3029873371124268, 0.0, -0.0001894235610961914, 0.0, -0.00021016597747802734, 0.0, -7.82012939453125e-05, -5.7220458984375e-06, -7.283687591552734e-05, -6.0796710386057384e-06, -0.007527351379394531, -1.52587890625e-05, -1.52587890625e-05, -0.0004329681396484375, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.106231689453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.841253368998878e-06, -3.24249267578125e-05, -0.023851394653320312, -3.814697265625e-06, -0.0005321502685546875, -4.57763671875e-05, -0.006160736083984375, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0012960433959960938, -5.245207830739673e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -4.9105559059661275, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -4.343567848205566, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -0.016815185546875, -5.7220458984375e-06, -0.002632379299029708, -2.622604142743512e-06, -0.004429219756275415, -1.9073486328125e-06, -5.2809715270996094e-05, 0.0, -0.0007498264312744141, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.728534698486328e-05, -3.3378591979271732e-06, -0.0646963119506836, -5.53131103515625e-05, -2.288818359375e-05, -0.0047359466552734375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -6.43729799776338e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.1457672119140625e-06, -9.5367431640625e-06, -7.152556463552173e-06, -1.9073486328125e-05, -0.04078865051269531, -5.7220458984375e-06, -0.000789642333984375, -3.0517578125e-05, -0.00540924072265625, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0012578964233398438, -5.006789251638111e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.COMMON, True, MINION_TYPE.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -5.516659566273681, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -2.7842280864715576, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -6.186962127685547e-05, 0.0, -0.0053882598876953125, -1.71661376953125e-05, -8.165836334228516e-05, -1.1920928244535389e-07, -4.57763671875e-05, -3.814697265625e-06, -0.024858474731445312, 0.0, -0.006931304931640625, -9.918212890625e-05, -2.314734697341919, 0.0, -0.0004831552505493164, 0.0, -0.0002161264419555664, 0.0, -4.57763671875e-05, -3.814697265625e-06, -9.942054748535156e-05, -4.053113570989808e-06, -0.007418632507324219, -1.33514404296875e-05, -1.52587890625e-05, -0.000431060791015625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -6.079673767089844e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.841253368998878e-06, -3.0517578125e-05, -0.023403167724609375, -3.814697265625e-06, -0.000560760498046875, -6.103515625e-05, -0.006740570068359375, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0012559890747070312, -5.245207830739673e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "range", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "range", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.range)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -5.801414557804144, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -5.311848163604736, 0.0, -0.0003268718719482422, 0.0, -0.0001608133316040039, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -7.462501525878906e-05, -4.41074053014745e-06, -0.009855270385742188, -1.52587890625e-05, -1.52587890625e-05, -0.0004901885986328125, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -6.318092346191406e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.841253368998878e-06, -2.86102294921875e-05, -0.025461196899414062, -3.814697265625e-06, -0.0006389617919921875, -5.91278076171875e-05, -0.0063724517822265625, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0012712478637695312, -5.125998541188892e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -5.841273495069679, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -5.362676620483398, -5.340576171875e-05, -0.0001544952392578125, 0.0, -0.013868331909179688, -1.9073486328125e-06, -0.0003987550735473633, 0.0, -0.000301361083984375, -1.71661376953125e-05, -9.834766387939453e-05, -1.1920928244535389e-07, -0.0002238750457763672, 0.0, -0.00026285648345947266, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -5.555152893066406e-05, -3.099440846199286e-06, -0.0038585662841796875, -1.9073486328125e-05, -1.33514404296875e-05, -0.0004444122314453125, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -6.675719760096399e-06, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -2.2649765014648438e-06, -7.62939453125e-06, -5.841253368998878e-06, -2.288818359375e-05, -0.03135490417480469, -5.7220458984375e-06, -0.0005702972412109375, -3.814697265625e-05, -0.00611114501953125, -1.9073486328125e-06, -2.110004425048828e-05, 0.0, -0.001311182975769043, -5.006789251638111e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 39, 110, 21, 134, "Buff", "Until", "<EOS>", 239, 59, 193, "<UNK>", "You", "<EOS>", "Mana", "2", "<EOS>", 63, 205, "Player", "Selector", "<EOS>", 63, 205, "Self", "Selector", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": 0, "hole0": "<UNK>You", "_type": "Template34"}, {"hole0": "PlayerSelector", "_type": "Template39"}, {"hole0": "SelfSelector", "_type": "Template39"}], "func": {"id": "BuffUntil", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(<UNK>You(0), PlayerSelector(),\n            SelfSelector()))\n", "score": -12.135842831759518, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -0.7614670991897583, 0.0, -0.0035219192504882812, 0.0, -0.0001990795135498047, 0.0, -3.0517578125e-05, -3.814697265625e-06, -0.00012421607971191406, -4.41074053014745e-06, -0.0059566497802734375, -2.288818359375e-05, -1.52587890625e-05, -0.0004405975341796875, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -6.675719760096399e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.960462203802308e-06, -2.288818359375e-05, -3.6556549072265625, -3.0517578125e-05, -0.5840902328491211, -1.9073486328125e-06, -0.0047760009765625, 0.0, -0.23983478546142578, 0.0, -0.0001583099365234375, -6.437280717364047e-06, -0.3828502893447876, -1.1920928244535389e-07, -2.47955322265625e-05, -0.5633106231689453, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.20969009399414062, -0.0019989013671875, 0.0, -0.6360177993774414, -0.4019737243652344, -4.76837158203125e-05, -0.007481837645173073, -0.6686877608299255, -0.644564688205719, -0.3635532855987549, -0.9176185727119446, -3.635841858340427e-05, -0.0001964569091796875, -1.1444091796875e-05, -0.22790515422821045, -0.0001019234478008002, -2.121925172104966e-05, -0.4668111801147461, -1.9073486328125e-06, -0.9414514303207397, -0.00035607803147286177, -4.5299530029296875e-06]}, {"choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 39, 110, 21, 134, "Buff", "Until", "<EOS>", 239, 59, 193, "<UNK>", "You", "<EOS>", "Mana", "2", "<EOS>", 63, 205, "Player", "Selector", "<EOS>", 39, 111, 21, 134, "Greater", "Than", "<EOS>", 237, 55, 186, "Count", "<EOS>", 21, 134, "Spell", "Card", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Has", "Card", "Name", "<EOS>", 237, 47, 143, "<UNK>", "<EOS>", 244, 68, 227, "<UNK>", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "ExcessMana", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": 0, "hole0": "<UNK>You", "_type": "Template34"}, {"hole0": "PlayerSelector", "_type": "Template39"}, {"_type": "Call", "args": [{"hole1": {"id": "SpellCardSelector", "_type": "Name"}, "hole0": "Count", "_type": "Template29", "hole2": [{"_type": "Call", "args": [{"_type": "Str", "s": "<UNK>"}], "func": {"id": "HasCardName", "_type": "Name"}}]}], "func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "<UNK>"}]}], "func": {"id": "BuffUntil", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(<UNK>You(0), PlayerSelector(),\n            GreaterThan(Count(SpellCardSelector(HasCardName('<UNK>'))),\n            <UNK>=True)))\n", "score": -16.84848519606122, "score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -0.7614670991897583, 0.0, -0.0035219192504882812, 0.0, -0.0001990795135498047, 0.0, -3.0517578125e-05, -3.814697265625e-06, -0.00012421607971191406, -4.41074053014745e-06, -0.0059566497802734375, -2.288818359375e-05, -1.52587890625e-05, -0.0004405975341796875, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -6.675719760096399e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.960462203802308e-06, -2.288818359375e-05, -3.6556549072265625, -3.0517578125e-05, -0.5840902328491211, -1.9073486328125e-06, -0.0047760009765625, 0.0, -0.23983478546142578, 0.0, -0.0001583099365234375, -6.437280717364047e-06, -0.3828502893447876, -1.1920928244535389e-07, -2.47955322265625e-05, -0.5633106231689453, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.20969009399414062, -0.0019989013671875, 0.0, -0.6360177993774414, -0.4019737243652344, -4.76837158203125e-05, -0.007481837645173073, -0.6686877608299255, -0.644564688205719, -0.3635532855987549, -0.9176185727119446, -3.635841858340427e-05, -0.0001964569091796875, -1.1444091796875e-05, -0.22790515422821045, -0.0001019234478008002, -2.121925172104966e-05, -1.3072280883789062, -0.012289047241210938, -1.71661376953125e-05, 0.0, -0.04406750202178955, -0.007109642028808594, 0.0, -7.62939453125e-06, -0.16504383087158203, -0.0017099380493164062, -0.02981877326965332, -5.602820692729438e-06, -9.5367431640625e-06, 0.0, -0.6724972724914551, -0.08587360382080078, -0.01749420166015625, -1.9073486328125e-06, -0.024039268493652344, -0.023331642150878906, -5.53131103515625e-05, -0.0001773834228515625, 0.0, -0.16865909099578857, -0.0869939848780632, -0.24327850341796875, -1.33514404296875e-05, -8.20159912109375e-05, -0.5711469650268555, -0.00060272216796875, -1.3258776664733887, -0.0707472562789917, -0.003650665283203125, -0.018975257873535156, 0.0, -1.1841317415237427, -2.861022494471399e-06, -0.04270648956298828, -0.005672454833984375, -0.007946968078613281, -2.145764938177308e-06]}]}
{"index": 30, "beams": [{"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.2988174865778319, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -0.21419811248779297, -5.91278076171875e-05, -0.0004119873046875, -8.20159912109375e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.00011396383342798799, -0.0001354217529296875, -0.013087987899780273, -1.33514404296875e-05, -0.0072917938232421875, -7.2479248046875e-05, -1.1444091796875e-05, 0.0, -0.00018954261031467468, -0.00010585784912109375, -0.002119302749633789, -0.0004730224609375, -9.34600830078125e-05, -0.000133514404296875, -0.0011788606643676758, -0.0001583099365234375, -4.9591064453125e-05, -0.0002727508544921875, -0.00011444091796875, -8.0108642578125e-05, -6.866455078125e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.0001163482666015625, -2.86102294921875e-05, -3.814697265625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.0017528533935546875, -0.000110626220703125, -7.62939453125e-06, -0.001125335693359375, -1.52587890625e-05, -2.288818359375e-05, 0.0, -4.589557647705078e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000286102294921875, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.003330230712890625, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003057718276977539, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010061264038085938, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -2.1460519738785706, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -2.036726951599121, -0.0002727508544921875, -0.00038909912109375, -8.58306884765625e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.00014209697837941349, -0.00028228759765625, -0.0382685661315918, -9.5367431640625e-06, -0.0059566497802734375, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -0.00020182118169032037, -0.00010573863983154297, -0.0020904541015625, -0.000476837158203125, -8.96453857421875e-05, -0.00017547607421875, -0.0016938447952270508, -0.000194549560546875, -4.9591064453125e-05, -0.0002994537353515625, -0.0001163482666015625, -7.62939453125e-05, -6.4849853515625e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.000118255615234375, -2.86102294921875e-05, -3.814697265625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.0017185211181640625, -0.0001087188720703125, -7.62939453125e-06, -0.001087188720703125, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -4.589557647705078e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000286102294921875, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.20159912109375e-05, -0.003322601318359375, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003076791763305664, -1.9073486328125e-06, -5.7220458984375e-06, -0.0009965896606445312, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 8, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Is"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health is target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -3.906992524661405, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -3.7808213233947754, -9.5367431640625e-06, -0.016999244689941406, -0.0004291534423828125, -8.0108642578125e-05, -1.9073486328125e-06, -0.00019240238179918379, -7.05718994140625e-05, -0.03758871555328369, -1.1444091796875e-05, -0.0063838958740234375, -7.43865966796875e-05, -1.33514404296875e-05, 0.0, -0.00019192675244994462, -0.00014793872833251953, -0.002604246139526367, -0.000644683837890625, -7.82012939453125e-05, -0.0002117156982421875, -0.0014516115188598633, -0.0002002716064453125, -6.29425048828125e-05, -0.00032806396484375, -0.0001220703125, -8.20159912109375e-05, -6.4849853515625e-05, -1.71661376953125e-05, -8.0108642578125e-05, -0.0001163482666015625, -2.86102294921875e-05, -3.814697265625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.0016994476318359375, -0.0001125335693359375, -7.62939453125e-06, -0.00106048583984375, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -4.589557647705078e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000286102294921875, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.20159912109375e-05, -0.0033168792724609375, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003057718276977539, -1.9073486328125e-06, -5.7220458984375e-06, -0.0009975433349609375, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 11, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "LtE"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health <= target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.16525932622892, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -4.076780796051025, -6.103515625e-05, -0.001056671142578125, -0.0001220703125, -0.0001049041748046875, -3.814697265625e-06, -0.0002744134690146893, -0.0001621246337890625, -0.01628744602203369, -3.814697265625e-06, -0.007212638854980469, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -0.0002202984323957935, -7.712841033935547e-05, -0.0019527673721313477, -0.0004291534423828125, -0.0001220703125, -0.000148773193359375, -0.0012151002883911133, -0.000133514404296875, -5.14984130859375e-05, -0.000274658203125, -0.0001125335693359375, -7.82012939453125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.0001163482666015625, -2.6702880859375e-05, -4.00543212890625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.0017681121826171875, -0.0001068115234375, -7.62939453125e-06, -0.001129150390625, -1.52587890625e-05, -2.288818359375e-05, 0.0, -4.589557647705078e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002727508544921875, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.003326416015625, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003076791763305664, -1.9073486328125e-06, -5.7220458984375e-06, -0.001007080078125, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.822639913417447, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -4.541994094848633, 0.0, -0.014031410217285156, -3.814697265625e-06, -0.0005054473876953125, -6.866455078125e-05, -0.0002422332763671875, -0.0005340576171875, -0.000217437744140625, -0.0050945281982421875, -0.00034332275390625, -8.20159912109375e-05, -0.001102447509765625, -1.1444091796875e-05, -0.00048065185546875, -0.000431060791015625, -0.0002727508544921875, -2.09808349609375e-05, -0.0009174346923828125, 0.0, -0.0005037784576416016, -8.7738037109375e-05, -0.00392913818359375, -2.503394853192731e-06, -3.814697265625e-06, -0.20596599578857422, -5.7220458984375e-05, -0.000431060791015625, -7.62939453125e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.00011324859224259853, -0.0001373291015625, -0.0129852294921875, -1.33514404296875e-05, -0.006794929504394531, -7.2479248046875e-05, -1.1444091796875e-05, 0.0, -0.00019204603449907154, -0.00010585784912109375, -0.0021202564239501953, -0.0004749298095703125, -9.34600830078125e-05, -0.00012969970703125, -0.0011922121047973633, -0.000164031982421875, -4.76837158203125e-05, -0.000278472900390625, -0.0001163482666015625, -8.0108642578125e-05, -6.866455078125e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.0001163482666015625, -2.86102294921875e-05, -4.00543212890625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.001743316650390625, -0.000110626220703125, -7.62939453125e-06, -0.0011234283447265625, -1.52587890625e-05, -2.288818359375e-05, 0.0, -4.589557647705078e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000286102294921875, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.0033283233642578125, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003057718276977539, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010051727294921875, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.spell_targetable() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.023270220615018, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -0.21419811248779297, -5.91278076171875e-05, -0.0004119873046875, -8.20159912109375e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.00011396383342798799, -0.0001354217529296875, -4.740219593048096, -3.814697265625e-06, -0.0037527084350585938, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -0.0002689360408112407, -7.68899917602539e-05, -0.0018924474716186523, -0.0006656646728515625, -9.918212890625e-05, -0.0001430511474609375, -0.0021134614944458008, -0.000118255615234375, -6.29425048828125e-05, -0.0002918243408203125, -0.0001068115234375, -8.58306884765625e-05, -5.7220458984375e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.0001277923583984375, -3.0517578125e-05, -4.00543212890625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.00162506103515625, -0.000110626220703125, -7.62939453125e-06, -0.001148223876953125, -1.52587890625e-05, -2.288818359375e-05, 0.0, -4.780292510986328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002613067626953125, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -7.82012939453125e-05, -0.00333404541015625, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003057718276977539, -1.9073486328125e-06, -5.7220458984375e-06, -0.001010894775390625, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.spell_targetable() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.662242025911041, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -2.036726951599121, -0.0002727508544921875, -0.00038909912109375, -8.58306884765625e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.00014209697837941349, -0.00028228759765625, -3.5540995597839355, -3.814697265625e-06, -0.005688667297363281, -7.43865966796875e-05, -1.52587890625e-05, 0.0, -0.00031197056523524225, -8.630752563476562e-05, -0.002008676528930664, -0.0007648468017578125, -9.1552734375e-05, -0.000152587890625, -0.002149820327758789, -0.000152587890625, -6.29425048828125e-05, -0.0003452301025390625, -0.0001125335693359375, -8.58306884765625e-05, -5.340576171875e-05, -1.9073486328125e-05, -7.82012939453125e-05, -0.000133514404296875, -3.0517578125e-05, -4.00543212890625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.001552581787109375, -0.0001125335693359375, -7.62939453125e-06, -0.0011234283447265625, -1.52587890625e-05, -2.288818359375e-05, 0.0, -4.589557647705078e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002498626708984375, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.0033283233642578125, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003057718276977539, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010023117065429688, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"id": "self", "_type": "Name"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and self)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.991591544127118, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -0.21419811248779297, -5.91278076171875e-05, -0.0004119873046875, -8.20159912109375e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.00011396383342798799, -0.0001354217529296875, -0.013087987899780273, -1.33514404296875e-05, -5.457816123962402, -7.05718994140625e-05, -0.041703224182128906, -8.392333984375e-05, -0.1795797348022461, -0.0002155303955078125, -0.019284963607788086, -5.7220458984375e-06, -7.43865966796875e-05, -0.0002689361572265625, -7.82012939453125e-05, -8.392333984375e-05, -6.103515625e-05, -1.52587890625e-05, -8.392333984375e-05, -0.0001678466796875, -2.86102294921875e-05, -4.76837158203125e-05, -4.8041343688964844e-05, -3.8146954466355965e-06, -0.007174491882324219, -0.000133514404296875, -1.1444091796875e-05, -0.00171661376953125, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -3.254413604736328e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002155303955078125, -5.7220458984375e-06, -5.841255187988281e-06, -3.814697265625e-06, -7.43865966796875e-05, -0.0031585693359375, -7.62939453125e-05, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003019571304321289, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010280609130859375, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "target", "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "targettargettarget", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda\n            targettargettarget: target.health != target.\n            calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.134183139219999, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -5.1908464431762695, -0.43154728412628174, -0.2600369453430176, -0.0004425048828125, -0.00106048583984375, -0.000293731689453125, -1.33514404296875e-05, -0.0009365081787109375, -0.000782012939453125, -0.00022125244140625, -1.33514404296875e-05, -0.001155853271484375, 0.0, -0.0008943080902099609, -0.0001468658447265625, -0.003878593211993575, -8.2254373410251e-06, -5.7220458984375e-06, -0.17277050018310547, -3.62396240234375e-05, -0.0004024505615234375, -6.67572021484375e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.00011992419604212046, -0.000125885009765625, -0.010148167610168457, -1.33514404296875e-05, -0.007808685302734375, -6.866455078125e-05, -1.1444091796875e-05, 0.0, -0.00019419171439949423, -0.00010585784912109375, -0.0020591020584106445, -0.0004138946533203125, -8.58306884765625e-05, -0.00011444091796875, -0.0011445283889770508, -0.00014495849609375, -4.76837158203125e-05, -0.0002651214599609375, -0.0001125335693359375, -8.0108642578125e-05, -7.05718994140625e-05, -1.71661376953125e-05, -8.0108642578125e-05, -0.0001201629638671875, -2.86102294921875e-05, -4.00543212890625e-05, -4.2319297790527344e-05, -4.053113570989808e-06, -0.0017833709716796875, -0.0001125335693359375, -7.62939453125e-06, -0.0011310577392578125, -1.52587890625e-05, -2.288818359375e-05, 0.0, -4.589557647705078e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003337860107421875, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.003353118896484375, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003076791763305664, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010089874267578125, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_friendly_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.490289182485071, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -6.19724702835083, 0.0, -0.015056729316711426, 0.0, -0.0003185272216796875, -6.103515625e-05, -0.00017547607421875, -0.00054931640625, -0.0002155303955078125, -0.0058307647705078125, -0.0003566741943359375, -0.0001163482666015625, -0.0006198883056640625, -1.52587890625e-05, -0.0004215240478515625, -0.00040435791015625, -0.0002574920654296875, -2.288818359375e-05, -0.0009212493896484375, 0.0, -0.0004951953887939453, -8.20159912109375e-05, -0.0035566091537475586, -2.503394853192731e-06, -3.814697265625e-06, -0.2165384292602539, -5.91278076171875e-05, -0.000423431396484375, -8.0108642578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.0001133677942561917, -0.00012969970703125, -0.013312816619873047, -1.1444091796875e-05, -0.007737159729003906, -7.05718994140625e-05, -1.1444091796875e-05, 0.0, -0.00019144995894748718, -0.00010585784912109375, -0.002126932144165039, -0.0004634857177734375, -9.1552734375e-05, -0.000133514404296875, -0.0011674165725708008, -0.0001544952392578125, -4.9591064453125e-05, -0.00026702880859375, -0.00011444091796875, -8.0108642578125e-05, -6.866455078125e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.0001163482666015625, -2.86102294921875e-05, -4.00543212890625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.0017566680908203125, -0.000110626220703125, -7.62939453125e-06, -0.0011272430419921875, -1.52587890625e-05, -2.288818359375e-05, 0.0, -4.589557647705078e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000286102294921875, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.003330230712890625, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003057718276977539, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010061264038085938, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>", 79, 115, 31, 195, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 79, 115, 31, 195, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 1, "hole0": "Execute", "hole2": "WARRIOR", "hole8": {"body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "_type": "Compare", "left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, "_type": "Lambda", "args": {"hole0": "target", "_type": "Template21"}}, "hole5": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template0", "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole3": "FREE", "hole7": "filter_func"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "_type": "Template36"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "_type": "Template36"}}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.other_player.draw()\n", "score": -8.535910452762543, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -0.21419811248779297, -5.91278076171875e-05, -0.0004119873046875, -8.20159912109375e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.00011396383342798799, -0.0001354217529296875, -0.013087987899780273, -1.33514404296875e-05, -0.0072917938232421875, -7.2479248046875e-05, -1.1444091796875e-05, 0.0, -0.00018954261031467468, -0.00010585784912109375, -0.002119302749633789, -0.0004730224609375, -9.34600830078125e-05, -0.000133514404296875, -0.0011788606643676758, -0.0001583099365234375, -4.9591064453125e-05, -0.0002727508544921875, -0.00011444091796875, -8.0108642578125e-05, -6.866455078125e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.0001163482666015625, -2.86102294921875e-05, -3.814697265625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -6.912601470947266, -0.000274658203125, -1.9073486328125e-06, -0.0001354217529296875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.728534698486328e-05, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001888275146484375, -1.1444091796875e-05, -1.2159347534179688e-05, -5.7220458984375e-06, -0.02130889892578125, -0.00119781494140625, -0.0003070831298828125, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -0.000405192346079275, -3.933906555175781e-06, -2.09808349609375e-05, -0.00054931640625, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.011651992797851562, -4.00543212890625e-05, -0.0002346038818359375, -1.9073486328125e-05, -0.5851984024047852, -5.7220458984375e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.03619956970214844, 0.0, -0.12952184677124023, -1.9073486328125e-06, -0.027373667806386948, 0.0, -0.0062503814697265625, -9.34600830078125e-05, -0.0004062652587890625, -1.9073486328125e-05, -0.17116641998291016, -5.7220458984375e-06, -0.0003910064697265625, -1.33514404296875e-05, -0.070404052734375, 0.0, -0.2497323751449585, -7.62939453125e-06, -0.019376395270228386, -1.9073486328125e-06]}, {"choice_history": [69, 133, 249, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}], "_type": "Module"}, "inferred_code": "super().use(player, game)\n", "score": -9.465325713152197, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -8.952532768249512, -0.11013126373291016, -0.02107715606689453, -0.0001201629638671875, -0.3782005310058594, -0.001369476318359375, -6.43729799776338e-06, -1.1444091796875e-05, -0.00017547607421875, -5.7220458984375e-06, -0.00021755695343017578, 0.0, -1.668929871811997e-05, -5.7220458984375e-06]}, {"choice_history": [69, 133, 249, 89, 154, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>"], "model_output": {"body": [{"hole1": 1, "hole0": "Execute", "_type": "Template15", "hole2": "WARRIOR", "hole3": "FREE"}], "_type": "Module"}, "inferred_code": "super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.FREE)\n", "score": -12.999804138946388, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -11.417025566101074, -1.5700979232788086, -9.536697689327411e-06, -5.960446742392378e-06, -8.344646857949556e-07, -1.597391747054644e-05, -0.009819507598876953, -3.814697265625e-06, -0.0013697147369384766, 0.0]}, {"choice_history": [69, 133, 249, 88, 153, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>"], "model_output": {"body": [{"hole1": 1, "hole0": "Execute", "_type": "Template14", "hole2": "WARRIOR"}], "_type": "Module"}, "inferred_code": "super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON)\n", "score": -13.162231340982878, "score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -12.326850891113281, -0.7999706268310547, -2.9802276912960224e-06, -1.0728830375228426e-06, 0.0, -5.722029527532868e-06, -0.03394462168216705, -1.1920928244535389e-07]}, {"choice_history": [69, 133, 248], "model_output": {"body": [], "_type": "Module"}, "inferred_code": "", "score": -21.90186309814453, "score_history": [-0.0011997222900390625, -0.000240325927734375, -21.900423049926758]}]}
{"index": 31, "beams": [{"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -0.08748792422681362, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -0.01885986328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.007706642150878906, -2.86102294921875e-05, -0.00032806396484375, -1.9073486328125e-06, -0.01644134521484375, -7.62939453125e-05, -3.24249267578125e-05, 0.0, -0.0010406970977783203, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 33, 205, "super", "<EOS>", "reveal", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "reveal", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        super().reveal()\n", "score": -4.299686658510261, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -0.01885986328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.007706642150878906, -2.86102294921875e-05, -0.00032806396484375, -1.9073486328125e-06, -4.193341255187988, -0.000255584716796875, -0.00013566017150878906, 0.0, -0.0360569953918457, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "DRUID"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -4.762790895384676, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -4.693027496337891, 0.0, -9.5367431640625e-06, 0.0, -7.152555099310121e-07, 0.0, -2.288818359375e-05, -0.00011444091796875, -1.9073486328125e-06, -1.6689286894688848e-06, -0.0006208419799804688, -5.7220458984375e-06, -6.67572021484375e-05, -0.0001163482666015625, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00019371509552001953, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -3.4570680327306036e-06, -2.86102294921875e-05, -0.0006427764892578125, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001068115234375, 0.0, -0.00386810302734375, -0.0006542205810546875, -2.09808349609375e-05, -0.000274658203125, -6.866455078125e-05, -2.47955322265625e-05, -0.00281524658203125, -1.9073486328125e-06, -0.000644683837890625, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018315315246582031, -1.1920928244535389e-07, -0.0016546347178518772, 0.0, -6.67572021484375e-05, -0.019044876098632812, -1.9073486328125e-06, -0.000415802001953125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013446807861328125, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.001153225195594132, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.008322715759277344, -2.86102294921875e-05, -0.000308990478515625, -1.9073486328125e-06, -0.016073226928710938, -7.62939453125e-05, -3.24249267578125e-05, 0.0, -0.0010378360748291016, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "bounce", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "bounce", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.bounce()\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -5.088080277165595, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -4.044005393981934, -7.62939453125e-06, -0.0036487579345703125, -0.0001125335693359375, -0.0012226104736328125, -3.814697265625e-06, -0.009928703308105469, 0.0, -0.8969540596008301, 0.0, -0.004323005676269531, -0.000637054443359375, -3.0517578125e-05, -5.7220458984375e-06, -0.0012388229370117188, 0.0, -0.027202606201171875, -0.0012683868408203125, -0.00325775146484375, -1.1444091796875e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -0.0009482693858444691, -3.576278118089249e-07, -0.008950285613536835, 0.0, -1.33514404296875e-05, -0.0052490234375, -3.814697265625e-06, -0.000797271728515625, 0.0, -7.462501525878906e-05, 0.0, -0.03176426887512207, -2.1457672119140625e-06, -5.7220458984375e-06, -0.005580902099609375, -8.392333984375e-05, -1.71661376953125e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011437979992479086, -1.5497195136049413e-06, -0.00530958129093051, -9.536738616588991e-07, -3.814697265625e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "<UNK>", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.<UNK>()\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -5.148999591497436, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -4.044005393981934, -7.62939453125e-06, -0.0036487579345703125, -0.0001125335693359375, -0.0012226104736328125, -3.814697265625e-06, -0.009928703308105469, 0.0, -0.8070316314697266, -2.3841855067985307e-07, -0.012670516967773438, -0.0001220703125, -2.09808349609375e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.1471576690673828, -0.001262664794921875, -0.0036258697509765625, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0008357534534297884, -2.3841855067985307e-07, -0.010490840300917625, 0.0, -3.24249267578125e-05, -0.007544517517089844, -3.814697265625e-06, -0.0009136199951171875, 0.0, -5.352497100830078e-05, 0.0, -0.05035138130187988, -2.1457672119140625e-06, -5.7220458984375e-06, -0.0070171356201171875, -8.96453857421875e-05, -1.71661376953125e-05, 0.0, -5.924701690673828e-05, 0.0, -0.0011468962766230106, -1.5497195136049413e-06, -0.005349039565771818, -9.536738616588991e-07, -3.814697265625e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -5.425950363534064, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -5.356720924377441, 0.0, -2.8967808248125948e-05, 0.0, -6.437291176553117e-06, 0.0, -2.288818359375e-05, -7.05718994140625e-05, -1.9073486328125e-06, -2.7418097943154862e-06, -0.000743865966796875, -3.814697265625e-06, -6.103515625e-05, -0.0001125335693359375, -5.53131103515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00018799304962158203, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -3.4570680327306036e-06, -2.86102294921875e-05, -0.000667572021484375, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001068115234375, 0.0, -0.003753662109375, -0.000667572021484375, -1.9073486328125e-05, -0.0002765655517578125, -6.866455078125e-05, -2.47955322265625e-05, -0.0027551651000976562, -1.9073486328125e-06, -0.0006504058837890625, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018334388732910156, -1.1920928244535389e-07, -0.0016456726007163525, 0.0, -6.67572021484375e-05, -0.018939971923828125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.007643699645996094, -2.86102294921875e-05, -0.0003223419189453125, -1.9073486328125e-06, -0.01636505126953125, -7.62939453125e-05, -3.24249267578125e-05, 0.0, -0.001039743423461914, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -5.4399522429683245, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -0.01885986328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -5.334678649902344, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -4.76837158203125e-05, 0.0, -0.03343391418457031, -9.5367431640625e-05, -0.000667572021484375, -1.9073486328125e-06, -0.013181686401367188, -7.2479248046875e-05, -4.1961669921875e-05, 0.0, -0.0012514591217041016, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -6.271629652783638, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -6.202587127685547, 0.0, -1.7404556274414062e-05, 0.0, -3.3378591979271732e-06, 0.0, -2.6702880859375e-05, -0.0001125335693359375, -2.0265579223632812e-06, -4.172316494077677e-06, -0.0009260177612304688, -3.814697265625e-06, -5.7220458984375e-05, -0.0001239776611328125, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00019562244415283203, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -3.4570680327306036e-06, -2.6702880859375e-05, -0.000682830810546875, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001068115234375, 0.0, -0.003650665283203125, -0.0006771087646484375, -1.9073486328125e-05, -0.000270843505859375, -6.67572021484375e-05, -2.47955322265625e-05, -0.0027618408203125, -1.9073486328125e-06, -0.00064849853515625, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018353462219238281, -1.1920928244535389e-07, -0.0016481820493936539, 0.0, -6.866455078125e-05, -0.019062042236328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013446807861328125, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.001154298079200089, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.007183074951171875, -2.86102294921875e-05, -0.0003376007080078125, -1.9073486328125e-06, -0.016340255737304688, -7.62939453125e-05, -3.24249267578125e-05, 0.0, -0.0010387897491455078, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -6.407470427997957, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -0.01885986328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.297721862792969, -0.0031890869140625, -0.000244140625, 0.0, -0.00127410888671875, -1.9073486328125e-06, -0.06453323364257812, -3.24249267578125e-05, -0.13411712646484375, -1.52587890625e-05, -0.10354042053222656, 0.0, -0.00041162967681884766, 0.0, -1.9073486328125e-05, -0.32281494140625, -1.9073486328125e-06, -0.001064300537109375, 0.0, -0.00023174285888671875, 0.0, -0.4027961492538452, -2.503394853192731e-06, -5.7220458984375e-06, -0.006663322448730469, -8.7738037109375e-05, -2.6702880859375e-05, 0.0, -4.1961669921875e-05, 0.0, -0.001162384869530797, -1.9073468138230965e-06, -0.005498647689819336, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -6.8590658470716335, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -6.384889602661133, -0.0004329681396484375, -0.010219573974609375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0002994537353515625, 0.0, -0.0014312267303466797, 0.0, -0.00016438878083135933, 0.0, -0.0001430511474609375, -0.32221221923828125, -1.9073486328125e-06, -0.00217437744140625, 0.0, -0.0002002716064453125, 0.0, -0.07770371437072754, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0029020309448242188, -7.43865966796875e-05, -2.288818359375e-05, 0.0, -5.7220458984375e-05, 0.0, -0.0011502353008836508, -2.0265558760002023e-06, -0.0053303237073123455, -9.536738616588991e-07, -3.814697265625e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -0.007513999938964844, -2.6702880859375e-05, -0.0002803802490234375, -1.9073486328125e-06, -0.018329620361328125, -7.43865966796875e-05, -3.0517578125e-05, 0.0, -0.001028299331665039, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "1", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "1", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.1):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -6.930019703193004, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -6.780461311340332, 0.0, -0.001369476318359375, -0.08208751678466797, -1.9073486328125e-06, -0.00014495849609375, 0.0, -3.2901763916015625e-05, 0.0, -0.0003224611282348633, -3.933906555175781e-06, -5.7220458984375e-06, -0.0010595321655273438, -3.0517578125e-05, -1.1444091796875e-05, 0.0, -6.103515625e-05, 0.0, -0.0010679902043193579, -1.6689286894688848e-06, -0.005182146560400724, -7.152555099310121e-07, -3.62396240234375e-05, 0.0, -8.7738037109375e-05, -1.9073486328125e-06, -0.008268356323242188, -2.86102294921875e-05, -0.0003643035888671875, -1.9073486328125e-06, -0.015819549560546875, -7.62939453125e-05, -3.814697265625e-05, 0.0, -0.0011246204376220703, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -7.076712440169665, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -7.008598327636719, -7.152555099310121e-07, -1.3709068298339844e-05, 0.0, -6.914126061019488e-06, 0.0, -1.9073486328125e-05, -0.000164031982421875, -2.0265579223632812e-06, -6.437280717364047e-06, -0.001522064208984375, -3.814697265625e-06, -5.7220458984375e-05, -0.0001220703125, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00020682811737060547, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -3.4570680327306036e-06, -2.6702880859375e-05, -0.000881195068359375, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -0.000102996826171875, 0.0, -0.0034379959106445312, -0.0006504058837890625, -1.9073486328125e-05, -0.0002765655517578125, -6.67572021484375e-05, -2.47955322265625e-05, -0.00275421142578125, -1.9073486328125e-06, -0.0006465911865234375, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018641948699951172, -1.1920928244535389e-07, -0.0016336278058588505, 0.0, -7.05718994140625e-05, -0.018960952758789062, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005152225494384766, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013399124145507812, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.001153106102719903, -1.5497195136049413e-06, -0.005227803718298674, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.005673408508300781, -3.0517578125e-05, -0.0003757476806640625, -1.9073486328125e-06, -0.016368865966796875, -7.43865966796875e-05, -3.4332275390625e-05, 0.0, -0.0010426044464111328, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.hero.<UNK>()\n", "score": -7.289019818731838, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -0.01885986328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.007706642150878906, -2.86102294921875e-05, -0.00032806396484375, -1.9073486328125e-06, -6.947932243347168, -0.0001277923583984375, -1.1444091796875e-05, -9.5367431640625e-06, -0.11058425903320312, -1.9073486328125e-06, -0.1150951012969017, -1.9073486328125e-06, -0.04535846412181854, 0.0]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in player.minions:\n            minion.<UNK>()\n", "score": -7.306587445863769, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -0.01885986328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.297721862792969, -0.0031890869140625, -0.000244140625, 0.0, -0.00127410888671875, -1.9073486328125e-06, -0.06453323364257812, -3.24249267578125e-05, -0.13411712646484375, -1.52587890625e-05, -0.10354042053222656, 0.0, -0.00041162967681884766, 0.0, -1.9073486328125e-05, -1.4942693710327148, -1.71661376953125e-05, -0.0034122467041015625, -0.0001220703125, -0.0002613067626953125, -3.814697265625e-06, -0.03723430633544922, 0.0, -0.10433483123779297, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FanOfKnives", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "add_buff", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -7.671154703936843, "score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -0.01885986328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.297721862792969, -0.0031890869140625, -0.000244140625, 0.0, -0.00127410888671875, -1.9073486328125e-06, -0.06453323364257812, -3.24249267578125e-05, -0.13411712646484375, -1.52587890625e-05, -0.10354042053222656, 0.0, -0.00041162967681884766, 0.0, -1.9073486328125e-05, -0.32281494140625, -1.9073486328125e-06, -0.001064300537109375, 0.0, -0.00023174285888671875, 0.0, -1.6683076620101929, -2.0265558760002023e-06, -0.0025043487548828125, -0.0015859603881835938, -0.0048427581787109375, -0.0027238004840910435, -0.00014304197975434363]}]}
{"index": 32, "beams": [{"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -0.043347233033557586, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.019664764404296875, -1.9073486328125e-06, -0.000308990478515625, -0.000133514404296875, -8.0108642578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.000186920166015625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.000125885009765625, -1.9073486328125e-06, -0.00104522705078125, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001239776611328125, -7.82012939453125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -0.0001316070556640625, -0.00037384033203125, -4.38690185546875e-05, -0.0003185272216796875, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.8743019104003906e-05, 0.0, -1.2993811651540454e-05, 0.0, -0.001903533935546875, -5.7220458984375e-06, -1.4066643416299485e-05, -5.7220458984375e-06, -3.0517578125e-05, -0.00025177001953125, -6.103515625e-05, -1.71661376953125e-05, -0.0001468658447265625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00048732757568359375, 0.0, -0.0001964569091796875, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008280276088044047, 0.0, -0.0014239534502848983, -4.887569048150908e-06, -0.0011425018310546875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -4.776414626330336, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -4.751212120056152, 0.0, -0.001735687255859375, -0.000141143798828125, -4.76837158203125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.000179290771484375, -1.9073486328125e-06, -0.000133514404296875, -1.9073486328125e-06, -0.0011472702026367188, 0.0, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -0.000133514404296875, -8.20159912109375e-05, -1.1444091796875e-05, -2.2649765014648438e-06, -0.0001201629638671875, -0.00038909912109375, -4.9591064453125e-05, -0.0004711151123046875, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.6372413635253906e-05, 0.0, -1.3470647900248878e-05, -1.9073486328125e-06, -0.00174713134765625, -5.7220458984375e-06, -1.657003303989768e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0002346038818359375, -5.91278076171875e-05, -1.9073486328125e-05, -0.000152587890625, 0.0, -7.62939453125e-06, 0.0, -0.000484466552734375, 0.0, -0.0002002716064453125, 0.0, -1.9073486328125e-06, -9.918212890625e-05, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008339880732819438, 0.0, -0.001424668706022203, -4.887569048150908e-06, -0.00115203857421875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -4.981414907672217, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -4.946253776550293, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -8.20159912109375e-05, 0.0, -0.02251434326171875, -1.9073486328125e-06, -0.0003414154052734375, -0.0001316070556640625, -8.0108642578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0001773834228515625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0001277923583984375, -1.9073486328125e-06, -0.0010442733764648438, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001201629638671875, -7.62939453125e-05, -9.5367431640625e-06, -2.622604142743512e-06, -0.0001354217529296875, -0.0003662109375, -4.38690185546875e-05, -0.000293731689453125, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.4928321838378906e-05, 0.0, -1.2755393072438892e-05, 0.0, -0.001949310302734375, -5.7220458984375e-06, -1.3947435945738107e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0002593994140625, -6.103515625e-05, -1.71661376953125e-05, -0.00014495849609375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00048732757568359375, 0.0, -0.000194549560546875, 0.0, -1.9073486328125e-06, -9.5367431640625e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008261202601715922, 0.0, -0.001427410519681871, -4.887569048150908e-06, -0.00113677978515625, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "game", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "game", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            game, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -5.4484586651038285, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -5.4245147705078125, 0.0, -6.29425048828125e-05, -0.00020599365234375, -8.96453857421875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.000202178955078125, -3.814697265625e-06, -0.000152587890625, -1.9073486328125e-06, -0.0011138916015625, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -0.000133514404296875, -8.392333984375e-05, -1.1444091796875e-05, -2.384185791015625e-06, -0.000125885009765625, -0.0003719329833984375, -4.57763671875e-05, -0.0003681182861328125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.2557716369628906e-05, 0.0, -1.3232229321147315e-05, 0.0, -0.001789093017578125, -5.7220458984375e-06, -1.45434760270291e-05, -5.7220458984375e-06, -3.0517578125e-05, -0.000240325927734375, -5.91278076171875e-05, -1.9073486328125e-05, -0.0001506805419921875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000484466552734375, 0.0, -0.0001983642578125, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.000833868863992393, 0.0, -0.0014243110781535506, -4.887569048150908e-06, -0.0011444091796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            EPIC, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -5.649979108194486, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -5.626095771789551, 0.0, -0.0002880096435546875, -0.000156402587890625, -4.76837158203125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001888275146484375, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.0010061264038085938, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.000125885009765625, -7.43865966796875e-05, -9.5367431640625e-06, -2.622604142743512e-06, -0.000133514404296875, -0.0003643035888671875, -4.38690185546875e-05, -0.000293731689453125, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.4928321838378906e-05, 0.0, -1.263618378288811e-05, 0.0, -0.0019664764404296875, -5.7220458984375e-06, -1.347060333500849e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.000263214111328125, -6.103515625e-05, -1.71661376953125e-05, -0.0001468658447265625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000484466552734375, 0.0, -0.000194549560546875, 0.0, -1.9073486328125e-06, -9.5367431640625e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.000830054166726768, 0.0, -0.0014271722175180912, -4.887569048150908e-06, -0.001132965087890625, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "game", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "game", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(game, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -6.42238222906218, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.019664764404296875, -1.9073486328125e-06, -0.000308990478515625, -0.000133514404296875, -8.0108642578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.000186920166015625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.000125885009765625, -1.9073486328125e-06, -0.00104522705078125, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001239776611328125, -7.82012939453125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -0.0001316070556640625, -0.00037384033203125, -4.38690185546875e-05, -0.0003185272216796875, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.8743019104003906e-05, 0.0, -1.2993811651540454e-05, 0.0, -6.3545379638671875, 0.0, -0.0267258882522583, 0.0, -6.4849853515625e-05, -0.0001506805419921875, -3.62396240234375e-05, -1.33514404296875e-05, -0.0001316070556640625, 0.0, -7.62939453125e-06, 0.0, -0.0003147125244140625, 0.0, -0.0001888275146484375, 0.0, -1.9073486328125e-06, -7.43865966796875e-05, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0007834433927200735, 0.0, -0.0014427884016186, -4.529942543740617e-06, -0.00119781494140625, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "target_func", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "target_func", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            target_func, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -6.627123349274882, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -6.602398872375488, 0.0, -0.0005779266357421875, -0.0002498626708984375, -8.0108642578125e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0003337860107421875, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.0010890960693359375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.000133514404296875, -8.392333984375e-05, -1.1444091796875e-05, -2.1457672119140625e-06, -0.0001049041748046875, -0.0004291534423828125, -6.67572021484375e-05, -0.00080108642578125, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.030632019042969e-05, 0.0, -1.3589857189799659e-05, -1.9073486328125e-06, -0.001659393310546875, -5.7220458984375e-06, -1.7166072211693972e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0002269744873046875, -5.91278076171875e-05, -1.9073486328125e-05, -0.000152587890625, 0.0, -7.62939453125e-06, 0.0, -0.000484466552734375, 0.0, -0.0002002716064453125, 0.0, -1.9073486328125e-06, -9.918212890625e-05, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008358954219147563, 0.0, -0.0014218075666576624, -4.887569048150908e-06, -0.00115203857421875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n", "score": -6.651348705124121, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.019664764404296875, -1.9073486328125e-06, -0.000308990478515625, -0.000133514404296875, -8.0108642578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.000186920166015625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.000125885009765625, -1.9073486328125e-06, -0.00104522705078125, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001239776611328125, -7.82012939453125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -0.0001316070556640625, -0.00037384033203125, -4.38690185546875e-05, -0.0003185272216796875, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.8743019104003906e-05, 0.0, -1.2993811651540454e-05, 0.0, -0.001903533935546875, -5.7220458984375e-06, -1.4066643416299485e-05, -5.7220458984375e-06, -3.0517578125e-05, -0.00025177001953125, -6.103515625e-05, -1.71661376953125e-05, -0.0001468658447265625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00048732757568359375, 0.0, -0.0001964569091796875, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008280276088044047, 0.0, -6.6105546951293945, -9.536738616588991e-07, -1.1444091796875e-05, -1.52587890625e-05, -3.62396240234375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -6.697228782870582, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -6.659839630126953, 0.0, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.02486419677734375, -1.9073486328125e-06, -0.00029754638671875, -0.0001468658447265625, -8.0108642578125e-05, -2.09808349609375e-05, -2.0265579223632812e-06, -0.0001506805419921875, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0010023117065429688, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001220703125, -7.82012939453125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -0.0001316070556640625, -0.0003662109375, -4.38690185546875e-05, -0.000308990478515625, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.8743019104003906e-05, 0.0, -1.2874602361989673e-05, 0.0, -0.001918792724609375, -5.7220458984375e-06, -1.3947435945738107e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0002536773681640625, -6.103515625e-05, -1.71661376953125e-05, -0.0001468658447265625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00048732757568359375, 0.0, -0.000194549560546875, 0.0, -1.9073486328125e-06, -9.5367431640625e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008261202601715922, 0.0, -0.0014237150317057967, -4.887569048150908e-06, -0.001140594482421875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self.target)\n", "score": -6.909162395692249, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.019664764404296875, -1.9073486328125e-06, -0.000308990478515625, -0.000133514404296875, -8.0108642578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.000186920166015625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.000125885009765625, -1.9073486328125e-06, -0.00104522705078125, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001239776611328125, -7.82012939453125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -0.0001316070556640625, -0.00037384033203125, -4.38690185546875e-05, -0.0003185272216796875, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.8743019104003906e-05, 0.0, -1.2993811651540454e-05, 0.0, -0.001903533935546875, -5.7220458984375e-06, -1.4066643416299485e-05, -5.7220458984375e-06, -3.0517578125e-05, -0.00025177001953125, -6.103515625e-05, -1.71661376953125e-05, -0.0001468658447265625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00048732757568359375, 0.0, -0.0001964569091796875, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008280276088044047, 0.0, -0.0014239534502848983, -4.887569048150908e-06, -6.865253448486328, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.0005283355712890625, -5.7220458984375e-06, -0.0011854171752929688, 0.0]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -7.322123759486487, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -7.283019065856934, 0.0, -2.288818359375e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0265045166015625, -1.9073486328125e-06, -0.0002918243408203125, -0.0001239776611328125, -8.0108642578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0001811981201171875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.0010423660278320312, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001220703125, -7.82012939453125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -0.0001316070556640625, -0.000370025634765625, -4.38690185546875e-05, -0.000308990478515625, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.6835670471191406e-05, 0.0, -1.2874602361989673e-05, 0.0, -0.0019207000732421875, -5.7220458984375e-06, -1.3947435945738107e-05, -5.7220458984375e-06, -3.0517578125e-05, -0.0002536773681640625, -6.103515625e-05, -1.71661376953125e-05, -0.0001468658447265625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0004863739013671875, 0.0, -0.0001964569091796875, 0.0, -1.9073486328125e-06, -9.5367431640625e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008280276088044047, 0.0, -0.0014237150317057967, -4.887569048150908e-06, -0.001140594482421875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "hearthbreaker.cards.minions.druid", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "hearthbreaker.cards.minions.druid", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            hearthbreaker.cards.minions.druid, target_func=hearthbreaker.\n            targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -7.689652555674513, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -7.665500640869141, 0.0, -0.0003261566162109375, -0.0002079010009765625, -8.0108642578125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.000263214111328125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0002613067626953125, -1.9073486328125e-06, -0.000141143798828125, -1.9073486328125e-06, -0.0011129379272460938, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00012969970703125, -8.392333984375e-05, -1.1444091796875e-05, -2.2649765014648438e-06, -0.0001163482666015625, -0.000408172607421875, -5.14984130859375e-05, -0.0005168914794921875, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.649162292480469e-05, 0.0, -1.3470647900248878e-05, -1.9073486328125e-06, -0.001705169677734375, -5.7220458984375e-06, -1.657003303989768e-05, -3.814697265625e-06, -3.0517578125e-05, -0.000232696533203125, -5.91278076171875e-05, -1.9073486328125e-05, -0.000152587890625, 0.0, -7.62939453125e-06, 0.0, -0.000484466552734375, 0.0, -0.0002002716064453125, 0.0, -1.9073486328125e-06, -9.918212890625e-05, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008358954219147563, 0.0, -0.0014249071246013045, -4.887569048150908e-06, -0.0011501312255859375, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": 4, "hole0": "Fireball", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -7.696142071387946, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -7.017587661743164, -0.10355091094970703, -7.867782187531702e-06, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5655622482299805, -1.9073486328125e-06, -0.0004634857177734375, 0.0, -0.0008144378662109375, 0.0, -0.00034332275390625, -1.9073486328125e-06, -0.000316619873046875, -0.0008945465087890625, -5.841255187988281e-06, -1.251697449333733e-05, -3.62396240234375e-05, -8.7738037109375e-05, -5.53131103515625e-05, -5.340576171875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.2663341698935255e-05, 0.0, -9.775161743164062e-06, 0.0, -0.0005340576171875, -3.814697265625e-06, -1.0848020792764146e-05, -3.814697265625e-06, -9.5367431640625e-05, -0.0003681182861328125, -0.000110626220703125, -9.5367431640625e-06, -0.0001697540283203125, 0.0, -1.1444091796875e-05, 0.0, -0.00045871734619140625, 0.0, -0.000213623046875, 0.0, -1.9073486328125e-06, -0.0001049041748046875, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008363722590729594, 0.0, -0.0014448154252022505, -4.410734163684538e-06, -0.001262664794921875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -8.055532687770722, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.019664764404296875, -1.9073486328125e-06, -0.000308990478515625, -0.000133514404296875, -8.0108642578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.000186920166015625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.000125885009765625, -1.9073486328125e-06, -8.013505935668945, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -8.0108642578125e-05, -7.62939453125e-06, -4.410743713378906e-06, -0.00016021728515625, -0.000385284423828125, -5.7220458984375e-05, -0.000286102294921875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2993811651540454e-05, 0.0, -1.1801719665527344e-05, 0.0, -0.0017032623291015625, -5.7220458984375e-06, -1.1920896213268861e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.000293731689453125, -6.29425048828125e-05, -1.9073486328125e-05, -0.0001430511474609375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000476837158203125, 0.0, -0.000194549560546875, 0.0, -1.9073486328125e-06, -9.5367431640625e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.288818359375e-05, 0.0, -0.0008244513301178813, 0.0, -0.0014377820771187544, -5.006777428206988e-06, -0.001132965087890625, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Fireball", "<EOS>", "4", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Fireball", "hole2": [{"hole1": 4, "hole0": "Fireball", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -8.26968240132566, "score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -7.017587661743164, -0.10355091094970703, -7.867782187531702e-06, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -1.139735221862793, 0.0, -0.00070953369140625, 0.0, -0.000629425048828125, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.0001850128173828125, -0.000499725341796875, -3.933906555175781e-06, -8.82148651726311e-06, -4.57763671875e-05, -7.62939453125e-05, -4.57763671875e-05, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.8491018383647315e-05, 0.0, -9.894371032714844e-06, 0.0, -0.0004749298095703125, -3.814697265625e-06, -1.0490395652595907e-05, -3.814697265625e-06, -9.5367431640625e-05, -0.000370025634765625, -0.000110626220703125, -9.5367431640625e-06, -0.0001678466796875, 0.0, -1.1444091796875e-05, 0.0, -0.000453948974609375, 0.0, -0.0002117156982421875, 0.0, -1.9073486328125e-06, -0.0001049041748046875, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008362530497834086, 0.0, -0.001445053843781352, -4.410734163684538e-06, -0.00125885009765625, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06]}]}
{"index": 33, "beams": [{"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -0.04051874545540812, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -0.011368751525878906, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.000225067138671875, -1.1444091796875e-05, -0.00116729736328125, -1.9073486328125e-06, -0.0020236968994140625, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008431673049926758, -1.9073486328125e-06, -0.00010703956650104374, 0.0, -1.52587890625e-05, -0.00104522705078125, -3.814697265625e-06, -0.0002593994140625, 0.0, -1.9073486328125e-05, 0.0, -0.0002499818801879883, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.006482124328613281, 0.0, -0.0005538462428376079, 0.0, -0.001444574212655425, -1.1920928244535389e-07, -3.0517578125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -4.902094718384539, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -4.862185478210449, -0.000217437744140625, -7.2479248046875e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -7.62939453125e-05, 0.0, -0.00188446044921875, -3.814697265625e-06, -0.00017821781511884183, 0.0, -0.0001010894775390625, -0.0021839141845703125, -3.814697265625e-06, -0.00133514404296875, 0.0, -2.47955322265625e-05, 0.0, -0.011571049690246582, -1.9073486328125e-06, 0.0, -0.000789642333984375, -4.76837158203125e-05, -1.71661376953125e-05, 0.0, -0.0053310394287109375, 0.0, -0.0005782832158729434, 0.0, -0.0015091880923137069, -1.1920928244535389e-07, -3.62396240234375e-05, -1.9073486328125e-06, -8.392333984375e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "minion", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(minion.effective_spell_damage(4), self)\n", "score": -5.298833577641851, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -0.011368751525878906, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.000225067138671875, -1.1444091796875e-05, -0.00116729736328125, -1.9073486328125e-06, -0.0020236968994140625, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008431673049926758, -1.9073486328125e-06, -0.00010703956650104374, 0.0, -1.52587890625e-05, -0.00104522705078125, -3.814697265625e-06, -0.0002593994140625, 0.0, -1.9073486328125e-05, 0.0, -0.0002499818801879883, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -5.130303382873535, 0.0, -0.13626611232757568, 0.0, -0.0002316038153367117, -1.1920928244535389e-07, -3.62396240234375e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -5.656832560508057, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -5.624469757080078, 0.0, -0.0001926422119140625, 0.0, -2.0265579223632812e-06, 0.0, -1.9073486328125e-05, -0.0005817413330078125, -1.4185905456542969e-05, -6.413426308427006e-05, -0.00026702880859375, -2.47955322265625e-05, -9.5367431640625e-06, -0.0002079010009765625, -0.0001201629638671875, -1.71661376953125e-05, 0.0, -0.0002511739730834961, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.0003299713134765625, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.0004215240478515625, 0.0, -0.01198577880859375, -8.20159912109375e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002288818359375, -1.1444091796875e-05, -0.0011806488037109375, -1.9073486328125e-06, -0.002040863037109375, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008507966995239258, -1.9073486328125e-06, -0.00010727794142439961, 0.0, -1.52587890625e-05, -0.0010433197021484375, -3.814697265625e-06, -0.0002593994140625, 0.0, -1.9073486328125e-05, 0.0, -0.0002518892288208008, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.006499290466308594, 0.0, -0.0005538462428376079, 0.0, -0.0014444550033658743, -1.1920928244535389e-07, -3.0517578125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -6.5220973339351005, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -6.489699363708496, 0.0, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -0.000125885009765625, -1.3828277587890625e-05, -4.4703287130687386e-05, -0.0003032684326171875, -2.288818359375e-05, -9.5367431640625e-06, -0.0002117156982421875, -0.0001049041748046875, -1.9073486328125e-05, 0.0, -0.0002658367156982422, 0.0, -9.5367431640625e-06, 0.0, -5.91278076171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00045013427734375, 0.0, -0.012552261352539062, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.00023651123046875, -1.1444091796875e-05, -0.0011920928955078125, -1.9073486328125e-06, -0.0020599365234375, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008527040481567383, -1.9073486328125e-06, -0.0001076354892575182, 0.0, -1.52587890625e-05, -0.0010471343994140625, -3.814697265625e-06, -0.0002613067626953125, 0.0, -1.9073486328125e-05, 0.0, -0.0002518892288208008, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.006495475769042969, 0.0, -0.0005538462428376079, 0.0, -0.0014444550033658743, -1.1920928244535389e-07, -3.0517578125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "7", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 7}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(7), self)\n", "score": -6.680252659974144, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -0.011368751525878906, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.000225067138671875, -1.1444091796875e-05, -0.00116729736328125, -1.9073486328125e-06, -0.0020236968994140625, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008431673049926758, -1.9073486328125e-06, -0.00010703956650104374, 0.0, -1.52587890625e-05, -0.00104522705078125, -3.814697265625e-06, -0.0002593994140625, 0.0, -1.9073486328125e-05, 0.0, -0.0002499818801879883, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.006482124328613281, 0.0, -0.0005538462428376079, 0.0, -6.641138553619385, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "WARLOCK", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "WARLOCK"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -6.714589938270812, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -6.683423042297363, 0.0, -7.82012939453125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -0.0004100799560546875, -1.2278556823730469e-05, -5.054449866292998e-05, -0.00034332275390625, -2.47955322265625e-05, -9.5367431640625e-06, -0.00020599365234375, -8.58306884765625e-05, -1.71661376953125e-05, 0.0, -0.0002337694022571668, 0.0, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, 0.0, -3.933906555175781e-06, -1.1444091796875e-05, -0.000331878662109375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.0003986358642578125, 0.0, -0.011129379272460938, -7.82012939453125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002307891845703125, -1.1444091796875e-05, -0.001178741455078125, -1.9073486328125e-06, -0.0020351409912109375, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008336305618286133, -1.9073486328125e-06, -0.00010692037176340818, 0.0, -1.52587890625e-05, -0.00104522705078125, -3.814697265625e-06, -0.0002593994140625, 0.0, -1.9073486328125e-05, 0.0, -0.0002499818801879883, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.0064907073974609375, 0.0, -0.0005538462428376079, 0.0, -0.0014444550033658743, -1.1920928244535389e-07, -3.0517578125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "SHAMAN", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.SHAMAN(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -6.782518242379517, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -0.011368751525878906, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.000225067138671875, -1.1444091796875e-05, -0.00116729736328125, -1.9073486328125e-06, -6.741293907165527, -3.814697265625e-06, -0.001873016357421875, -0.000438690185546875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0009672641754150391, -1.9073486328125e-06, -0.00014529572217725217, 0.0, -1.9073486328125e-05, -0.0013217926025390625, -3.814697265625e-06, -0.0002307891845703125, 0.0, -1.9073486328125e-05, 0.0, -0.0002614259719848633, -3.814697265625e-06, 0.0, -0.000438690185546875, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -0.006575584411621094, 0.0, -0.0005568264750763774, 0.0, -0.0014431437011808157, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "ROGUE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -6.9670474376293825, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -6.935087203979492, 0.0, -7.05718994140625e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -0.000263214111328125, -1.0132789611816406e-05, -5.209418304730207e-05, -0.00030517578125, -2.47955322265625e-05, -9.5367431640625e-06, -0.0002117156982421875, -0.0001049041748046875, -1.71661376953125e-05, 0.0, -0.00024974343250505626, 0.0, -9.5367431640625e-06, 0.0, -5.91278076171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.000331878662109375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00041961669921875, 0.0, -0.012003898620605469, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.000232696533203125, -1.1444091796875e-05, -0.001178741455078125, -1.9073486328125e-06, -0.0020542144775390625, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008488893508911133, -1.9073486328125e-06, -0.00010739711433416232, 0.0, -1.52587890625e-05, -0.0010471343994140625, -3.814697265625e-06, -0.0002613067626953125, 0.0, -1.9073486328125e-05, 0.0, -0.0002518892288208008, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.00649261474609375, 0.0, -0.0005538462428376079, 0.0, -0.001444574212655425, -1.1920928244535389e-07, -3.0517578125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 82, 120, 17, 113, 21, 134, "minion", "<EOS>", 234, 9, 237, 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "_type": "Compare", "left": {"id": "minion", "_type": "Name"}, "ops": [{"_type": "IsNot"}]}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            if minion is not self.target:\n                minion.damage(player.effective_spell_damage(4), self)\n", "score": -7.303055032472109, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -0.011368751525878906, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.000225067138671875, -1.1444091796875e-05, -0.00116729736328125, -1.9073486328125e-06, -0.0020236968994140625, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008431673049926758, -1.9073486328125e-06, -0.00010703956650104374, 0.0, -1.52587890625e-05, -7.038566589355469, -0.00064849853515625, -0.002899169921875, -0.0002498626708984375, -0.000209808349609375, -1.9073486328125e-06, -0.0030469894409179688, 0.0, -0.12826061248779297, -0.015344619750976562, -2.09808349609375e-05, -0.0015106201171875, -0.000102996826171875, -0.0006542205810546875, 0.0, -0.03812885284423828, 0.0, -0.007153511047363281, 0.0, -9.5367431640625e-06, -0.03126049041748047, -1.52587890625e-05, -4.00543212890625e-05, 0.0, -0.00013446807861328125, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000316619873046875, -6.67572021484375e-05, -5.7220458984375e-06, 0.0, -0.0024156570434570312, -1.9073486328125e-06, -0.00043201440712437034, 0.0, -0.0015448288759216666, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.33514404296875e-05]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 30, 193, "range", "<EOS>", "3", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"hole1": 3, "hole0": "range", "_type": "Template34"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in range(3):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -7.319731587408654, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -6.662090301513672, -0.0011386871337890625, -0.0449906587600708, -3.814697265625e-05, -0.39785051345825195, 0.0, -0.18981552124023438, -0.0012664794921875, -3.24249267578125e-05, -0.0005283355712890625, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0013294219970703125, -1.9073486328125e-06, 0.0, -0.0008697509765625, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.004284858703613281, 0.0, -0.0005940156406722963, 0.0, -0.0008594982791692019, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -8.58306884765625e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -7.732851132438093, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -7.7008562088012695, 0.0, -0.0001773834228515625, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -0.0004634857177734375, -1.4185905456542969e-05, -6.079643571865745e-05, -0.000274658203125, -2.47955322265625e-05, -1.1444091796875e-05, -0.000209808349609375, -0.0001201629638671875, -1.71661376953125e-05, 0.0, -0.0002739429473876953, 0.0, -9.5367431640625e-06, 0.0, -6.29425048828125e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000408172607421875, 0.0, -0.011754035949707031, -8.0108642578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0002288818359375, -1.1444091796875e-05, -0.001171112060546875, -1.9073486328125e-06, -0.0020389556884765625, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008488893508911133, -1.9073486328125e-06, -0.00010715877579059452, 0.0, -1.52587890625e-05, -0.00104522705078125, -3.814697265625e-06, -0.0002593994140625, 0.0, -1.9073486328125e-05, 0.0, -0.0002499818801879883, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.006488800048828125, 0.0, -0.0005538462428376079, 0.0, -0.001444574212655425, -1.1920928244535389e-07, -3.0517578125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 14, 105, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", 72, 23, 139, "1", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "BinOp", "left": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "right": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in (game.other_player - 1):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -7.738919491729661, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -6.341809272766113, -0.010866165161132812, -0.053086280822753906, 0.0, -0.003871917724609375, -7.62939453125e-06, -0.0051708221435546875, 0.0, -0.17564678192138672, 0.0, -0.7060432434082031, -0.08909416198730469, -7.2479248046875e-05, -0.00018441663996782154, 0.0, -0.31914234161376953, -0.007607460021972656, -4.38690185546875e-05, -0.000110626220703125, -1.9073486328125e-06, -0.00024127960205078125, 0.0, -0.0064239501953125, -3.814697265625e-06, 0.0, -0.0011425018310546875, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.00244903564453125, 0.0, -0.0005855534109286964, 0.0, -0.0013587462017312646, -2.3841855067985307e-07, -4.1961669921875e-05, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 14, 105, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", 71, 23, 139, "1", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "BinOp", "left": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "right": {"_type": "Num", "n": 1}, "op": {"_type": "Add"}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in (game.other_player + 1):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -7.938169083247999, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -6.341809272766113, -0.010866165161132812, -0.053086280822753906, 0.0, -0.003871917724609375, -7.62939453125e-06, -0.0051708221435546875, 0.0, -0.17564678192138672, 0.0, -0.7625827789306641, -0.04774284362792969, -0.00095367431640625, -0.00514682661741972, 0.0, -0.47737884521484375, -0.02629375457763672, -7.62939453125e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.0004930496215820312, 0.0, -0.0072040557861328125, -1.9073486328125e-06, 0.0, -0.0013523101806640625, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.002399444580078125, 0.0, -0.0005679110763594508, 0.0, -0.0014336096355691552, -2.0265579223632812e-06, -4.1961669921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Flamestrike", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.random_choice(targets):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -8.062637445148646, "score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -0.011368751525878906, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.000225067138671875, -1.1444091796875e-05, -7.684453010559082, 0.0, -0.09762763977050781, 0.0, -8.0108642578125e-05, -0.08685302734375, 0.0, -0.12234210968017578, -1.9073486328125e-06, -0.004925727844238281, -0.024591445922851562, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.008518338203430176, -1.9073486328125e-06, -0.00030732154846191406, -3.814697265625e-06, 0.0, -0.000583648681640625, -8.96453857421875e-05, -5.7220458984375e-06, 0.0, -0.004845619201660156, 0.0, -0.0004642009153030813, 0.0, -0.0012617087922990322, -1.1920928244535389e-07, -2.47955322265625e-05, 0.0, -8.20159912109375e-05, -1.1444091796875e-05]}]}
{"index": 34, "beams": [{"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -0.12748054654819896, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -0.014566898345947266, -1.9073486328125e-06, -0.00020456314086914062, 0.0, -0.0001354217529296875, -0.000553131103515625, -1.71661376953125e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-05, -0.0016937255859375, 0.0, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005397796630859375, -0.00017547607421875, -4.208087921142578e-05, -1.204010459332494e-05, -7.18832015991211e-05, -1.1920928244535389e-07, -0.0035344171337783337, 0.0, -0.0001087188720703125, -0.009120941162109375, -0.0007494688034057617, -3.826618194580078e-05, -0.0003795623779296875, -0.007030487060546875, -0.000301361083984375, -0.02710193395614624, -8.499559771735221e-05, -0.0010471343994140625, -0.0009670257568359375, -0.0001925826072692871, -5.24516508448869e-05, -1.9669374523800798e-05, -0.0015938864089548588, -0.000756715249735862]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Flametongue", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -3.5749733866814424, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.1639328002929688, -0.0191802978515625, -5.91278076171875e-05, 0.0, -0.0001259988930542022, -2.1457672119140625e-06, -1.9669532775878906e-05, 0.0, -0.00191497802734375, -0.0023908615112304688, -4.1961669921875e-05, -0.0010133633622899652, -0.00028765201568603516, -0.0016920932102948427, -3.814697265625e-06, -0.0004711151123046875, 0.0, -0.007056332193315029, -3.814697265625e-06, -4.57763671875e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -7.2479248046875e-05, 0.0, -0.008345484733581543, -7.62939453125e-06, -8.7738037109375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003681182861328125, -1.9073486328125e-06, -0.021120429039001465, 0.0, -0.000102996826171875, -1.9073486328125e-05, -0.0004711151123046875, -2.1457672119140625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.9073486328125e-06, -0.00069427490234375, -0.0017299652099609375, -0.03824901580810547, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -1.537799835205078e-05, -1.9073486328125e-06, -6.103515625e-05, -0.0001583099365234375, -0.0012989044189453125, -4.4465065002441406e-05, -1.1205671398784034e-05, -0.002951383590698242, 0.0, -0.016050128266215324, 0.0, -0.0006809234619140625, -0.006674766540527344, -0.0003122091293334961, -9.942054748535156e-05, -0.0001010894775390625, -0.005290985107421875, -0.00038909912109375, -0.2553986608982086, -2.0384748495416716e-05, -0.012022018432617188, -0.0004253387451171875, -0.00011670589447021484, -3.9696180465398356e-05, -2.8609872970264405e-05, -0.0011284099891781807, -0.0005920586991123855]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Adjacent()))])\n", "score": -3.9853870961551223, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -0.014566898345947266, -1.9073486328125e-06, -0.00020456314086914062, 0.0, -0.0001354217529296875, -0.000553131103515625, -1.71661376953125e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-05, -0.0016937255859375, 0.0, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005397796630859375, -0.00017547607421875, -4.208087921142578e-05, -1.204010459332494e-05, -7.18832015991211e-05, -1.1920928244535389e-07, -0.0035344171337783337, 0.0, -0.0001087188720703125, -0.009120941162109375, -0.0007494688034057617, -3.826618194580078e-05, -0.0003795623779296875, -0.007030487060546875, -0.000301361083984375, -3.8858225345611572, -4.184219869785011e-05, -0.0004024505615234375, -0.0015926361083984375, -0.0002962350845336914, -0.00017165832105092704, -1.9430961401667446e-05, -0.0007079537026584148, -0.0006682031089439988]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -4.552007976608344, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -4.4370903968811035, 0.0, -0.00047707557678222656, -1.1920928244535389e-07, -0.0026092529296875, -0.0001239776611328125, -1.1444091796875e-05, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -0.0026702880859375, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -3.814697265625e-06, -0.0005035400390625, -0.0001735687255859375, -3.826618194580078e-05, -1.1444046322139911e-05, -6.604194641113281e-05, -1.1920928244535389e-07, -0.0036190315149724483, 0.0, -0.000102996826171875, -0.009066581726074219, -0.0007704496383666992, -3.635883331298828e-05, -0.000396728515625, -0.006876945495605469, -0.00029754638671875, -0.026026546955108643, -8.714128489373252e-05, -0.0010433197021484375, -0.0009365081787109375, -0.00019186735153198242, -5.2332445193314925e-05, -1.9788581994362175e-05, -0.0015740263042971492, -0.0007569534936919808]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Flametongue", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Adjacent()))])\n", "score": -4.968091692851878, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.1639328002929688, -0.0191802978515625, -5.91278076171875e-05, 0.0, -0.0001259988930542022, -2.1457672119140625e-06, -1.9669532775878906e-05, 0.0, -0.00191497802734375, -0.0023908615112304688, -4.1961669921875e-05, -0.0010133633622899652, -0.00028765201568603516, -0.0016920932102948427, -3.814697265625e-06, -0.0004711151123046875, 0.0, -0.007056332193315029, -3.814697265625e-06, -4.57763671875e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -7.2479248046875e-05, 0.0, -0.008345484733581543, -7.62939453125e-06, -8.7738037109375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003681182861328125, -1.9073486328125e-06, -0.021120429039001465, 0.0, -0.000102996826171875, -1.9073486328125e-05, -0.0004711151123046875, -2.1457672119140625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.9073486328125e-06, -0.00069427490234375, -0.0017299652099609375, -0.03824901580810547, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -1.537799835205078e-05, -1.9073486328125e-06, -6.103515625e-05, -0.0001583099365234375, -0.0012989044189453125, -4.4465065002441406e-05, -1.1205671398784034e-05, -0.002951383590698242, 0.0, -0.016050128266215324, 0.0, -0.0006809234619140625, -0.006674766540527344, -0.0003122091293334961, -9.942054748535156e-05, -0.0001010894775390625, -0.005290985107421875, -0.00038909912109375, -1.6551687717437744, -1.764294211170636e-05, -0.0058002471923828125, -0.0003528594970703125, -0.00024634599685668945, -4.5775712351314723e-05, -3.0397963200812228e-05, -0.0006538407178595662, -0.0005743078654631972]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template14", "hole2": "SHAMAN"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -5.776656898849055, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -5.179435729980469, -0.0001926422119140625, -7.152555099310121e-07, -9.739398956298828e-05, -0.00020623207092285156, 0.0, -6.544378993567079e-05, 0.0, -0.38670384883880615, 0.0, -0.00014507770538330078, 0.0, -2.503394853192731e-06, 0.0, 0.0, -9.1552734375e-05, -4.00543212890625e-05, -2.1457672119140625e-06, -7.271760750882095e-06, -6.413459777832031e-05, -1.1920928244535389e-07, -0.002505092415958643, 0.0, -0.000263214111328125, -0.008752822875976562, -0.00033652782440185547, -5.3763389587402344e-05, -0.0002193450927734375, -0.007470130920410156, -0.0002994537353515625, -0.1816255748271942, -2.956380194518715e-05, -0.004245758056640625, -0.000537872314453125, -0.00011968612670898438, -4.160346361459233e-05, -2.479527029208839e-05, -0.0012303860858082771, -0.0006379274418577552]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "3", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 3, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(3), MinionSelector(\n            Adjacent()))])\n", "score": -5.858339380508355, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -0.014566898345947266, -1.9073486328125e-06, -0.00020456314086914062, 0.0, -0.0001354217529296875, -0.000553131103515625, -1.71661376953125e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-05, -0.0016937255859375, 0.0, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005397796630859375, -0.00017547607421875, -4.208087921142578e-05, -1.204010459332494e-05, -7.18832015991211e-05, -1.1920928244535389e-07, -0.0035344171337783337, 0.0, -0.0001087188720703125, -0.009120941162109375, -0.0007494688034057617, -3.826618194580078e-05, -0.0003795623779296875, -0.007030487060546875, -0.000301361083984375, -5.75149393081665, -0.0003522601327858865, -0.007907867431640625, -0.0001125335693359375, -0.00018741190433502197, -8.845296542858705e-05, -1.0490362910786644e-05, -0.001990867778658867, -0.000531413999851793]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem Totem", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem Totem', 2, CHARACTER_CLASS.\n            SHAMAN, CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -6.4992572346090896, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -6.364680290222168, -0.0005658864974975586, 0.0, -0.014058878645300865, 0.0, -0.009462714195251465, -3.814697265625e-06, -0.0003110170364379883, -1.9073486328125e-06, -0.0002498626708984375, -0.00089263916015625, -1.71661376953125e-05, 0.0, -8.392333984375e-05, -2.288818359375e-05, -0.0014057159423828125, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.000537872314453125, -0.0002117156982421875, -5.352497100830078e-05, -1.3709019185625948e-05, -7.009506225585938e-05, -1.1920928244535389e-07, -0.0037123672664165497, 0.0, -0.0001163482666015625, -0.008363723754882812, -0.0007513761520385742, -3.826618194580078e-05, -0.000377655029296875, -0.0067501068115234375, -0.0003070831298828125, -0.02719902992248535, -8.630685624666512e-05, -0.001068115234375, -0.0009822845458984375, -0.0001952052116394043, -5.2332445193314925e-05, -1.9669374523800798e-05, -0.0015580966137349606, -0.0007668406469747424]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 39, 110, 21, 134, "Mana", "Change", "<EOS>", 237, 64, 222, 99, 23, 139, "Adjacent", "<EOS>", 39, 109, 21, 134, "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Is", "Minion", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"_type": "Call", "args": [{"operand": {"_type": "Num", "n": 0}, "_type": "UnaryOp", "op": {"_type": "USub"}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ManaChange(-0), MinionSelector(\n            condition=IsMinion()))])\n", "score": -6.509374029881641, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -0.014566898345947266, -1.9073486328125e-06, -0.00020456314086914062, 0.0, -0.0001354217529296875, -0.000553131103515625, -1.71661376953125e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-05, -0.0016937255859375, 0.0, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005397796630859375, -0.00017547607421875, -4.208087921142578e-05, -1.204010459332494e-05, -7.18832015991211e-05, -1.1920928244535389e-07, -0.0035344171337783337, 0.0, -0.0001087188720703125, -0.009120941162109375, -0.0007494688034057617, -3.826618194580078e-05, -0.0003795623779296875, -5.229455947875977, -0.0027141571044921875, -0.0012798309326171875, -7.43865966796875e-05, -0.010697714053094387, -0.0008800935465842485, -1.4424319488171022e-05, -0.0003509521484375, -0.0011005401611328125, -0.00025177001953125, -0.0006046295166015625, -0.038585662841796875, -0.0001010894775390625, -0.0011198517167940736, -0.11090213060379028, -0.0001201629638671875, -0.6030435562133789, -0.0001049041748046875, -3.814697265625e-06, -0.39801451563835144, -2.682209014892578e-05, 0.0, -0.0003204345703125, -2.47955322265625e-05, -5.7220458984375e-06, -0.004235506057739258, -1.71661376953125e-05, -0.0020761489868164062, -1.9073486328125e-06, -0.004777485970407724, -0.010126066394150257, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -6.821204012790979, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -6.709665775299072, -1.5497207641601562e-05, -0.0005611181259155273, 0.0, -0.0001068115234375, -0.0004634857177734375, -1.52587890625e-05, 0.0, -0.0001983642578125, -1.71661376953125e-05, -0.0014705657958984375, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.00054931640625, -0.000186920166015625, -4.398822784423828e-05, -1.1920896213268861e-05, -8.356571197509766e-05, 0.0, -0.0028965179808437824, 0.0, -0.00011444091796875, -0.009236335754394531, -0.0007399320602416992, -3.826618194580078e-05, -0.0003833770751953125, -0.006859779357910156, -0.0003032684326171875, -0.026265114545822144, -8.654526027385145e-05, -0.0010471343994140625, -0.0009555816650390625, -0.00019222497940063477, -5.447820512927137e-05, -1.9788581994362175e-05, -0.0015898417914286256, -0.0007593359332531691]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "5", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 5, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(5), MinionSelector(\n            Adjacent()))])\n", "score": -6.967828598294531, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -0.014566898345947266, -1.9073486328125e-06, -0.00020456314086914062, 0.0, -0.0001354217529296875, -0.000553131103515625, -1.71661376953125e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-05, -0.0016937255859375, 0.0, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005397796630859375, -0.00017547607421875, -4.208087921142578e-05, -1.204010459332494e-05, -7.18832015991211e-05, -1.1920928244535389e-07, -0.0035344171337783337, 0.0, -0.0001087188720703125, -0.009120941162109375, -0.0007494688034057617, -3.826618194580078e-05, -0.0003795623779296875, -0.007030487060546875, -0.000301361083984375, -6.867824077606201, -0.00018000227282755077, -0.002079010009765625, -0.0001506805419921875, -0.00018656253814697266, -0.00013697068789042532, -3.588141771615483e-05, -0.0007155826897360384, -0.0008556789834983647]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template14", "hole2": "MAGE"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -7.322566021936595, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -5.179435729980469, -0.0001926422119140625, -7.152555099310121e-07, -9.739398956298828e-05, -0.00020623207092285156, 0.0, -6.544378993567079e-05, 0.0, -1.961326003074646, -1.9073486328125e-06, -0.000965118408203125, 0.0, -2.384185791015625e-06, 0.0, 0.0, -8.0108642578125e-05, -4.76837158203125e-05, -2.0265579223632812e-06, -9.655922440288123e-06, -3.3020973205566406e-05, -1.1920928244535389e-07, -0.0021427874453365803, 0.0, -0.000156402587890625, -0.00881195068359375, -0.00040841102600097656, -4.220008850097656e-05, -0.000255584716796875, -0.008035659790039062, -0.0002918243408203125, -0.15153226256370544, -2.944459265563637e-05, -0.00446319580078125, -0.0004978179931640625, -0.00012218952178955078, -4.303392779547721e-05, -2.4199236577260308e-05, -0.0013569968286901712, -0.00067735998891294]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "_type": "Template14", "hole2": "PALADIN"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -7.443367179894025, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -5.179435729980469, -0.0001926422119140625, -7.152555099310121e-07, -9.739398956298828e-05, -0.00020623207092285156, 0.0, -6.544378993567079e-05, 0.0, -2.0325872898101807, 0.0, -0.023571014404296875, 0.0, -2.9802317840221804e-06, 0.0, 0.0, -0.0011615753173828125, -4.9591064453125e-05, -2.0265579223632812e-06, -6.437291176553117e-06, -3.921985626220703e-05, -1.1920928244535389e-07, -0.002825565868988633, 0.0, -0.000156402587890625, -0.01158905029296875, -0.00040924549102783203, -4.792213439941406e-05, -0.000213623046875, -0.007357597351074219, -0.00030517578125, -0.17414017021656036, -2.8252517950022593e-05, -0.0050506591796875, -0.0005664825439453125, -0.00012248754501342773, -4.267631084076129e-05, -2.3841617803554982e-05, -0.0012511714594438672, -0.0006099294405430555]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "buffs", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": 2, "hole0": "Flametongue Totem", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "buffs", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, buffs=True)\n", "score": -7.487215665237258, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -0.014566898345947266, -1.9073486328125e-06, -0.00020456314086914062, 0.0, -0.0001354217529296875, -0.000553131103515625, -1.71661376953125e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-05, -0.0016937255859375, 0.0, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005397796630859375, -0.00017547607421875, -4.208087921142578e-05, -1.204010459332494e-05, -7.18832015991211e-05, -1.1920928244535389e-07, -6.685744285583496, -4.1961669921875e-05, -0.7268295288085938, -4.1961669921875e-05, -0.00013589859008789062, -2.110004425048828e-05]}, {"choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Flametongue", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "3", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FlametongueTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 3, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(3), MinionSelector(\n            Adjacent()))])\n", "score": -7.928893387706914, "score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.1639328002929688, -0.0191802978515625, -5.91278076171875e-05, 0.0, -0.0001259988930542022, -2.1457672119140625e-06, -1.9669532775878906e-05, 0.0, -0.00191497802734375, -0.0023908615112304688, -4.1961669921875e-05, -0.0010133633622899652, -0.00028765201568603516, -0.0016920932102948427, -3.814697265625e-06, -0.0004711151123046875, 0.0, -0.007056332193315029, -3.814697265625e-06, -4.57763671875e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -7.2479248046875e-05, 0.0, -0.008345484733581543, -7.62939453125e-06, -8.7738037109375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003681182861328125, -1.9073486328125e-06, -0.021120429039001465, 0.0, -0.000102996826171875, -1.9073486328125e-05, -0.0004711151123046875, -2.1457672119140625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.000141143798828125, -1.9073486328125e-06, -0.00069427490234375, -0.0017299652099609375, -0.03824901580810547, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -1.537799835205078e-05, -1.9073486328125e-06, -6.103515625e-05, -0.0001583099365234375, -0.0012989044189453125, -4.4465065002441406e-05, -1.1205671398784034e-05, -0.002951383590698242, 0.0, -0.016050128266215324, 0.0, -0.0006809234619140625, -0.006674766540527344, -0.0003122091293334961, -9.942054748535156e-05, -0.0001010894775390625, -0.005290985107421875, -0.00038909912109375, -4.416203022003174, -0.00014126248424872756, -0.20478057861328125, -0.000102996826171875, -0.0001621246337890625, -2.801401205942966e-05, -1.6927575416048057e-05, -0.0019825762137770653, -0.0002743821241892874]}]}
{"index": 35, "beams": [{"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -0.0984613868931632, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -0.0017460485687479377, 0.0, -0.05237331986427307, -1.9073486328125e-06, -5.7220458984375e-06, -0.000881195068359375, -0.0001773834228515625, -2.825220326485578e-05, -1.442432312614983e-05, -1.0012954589910805e-05, -4.5299530029296875e-06, -0.0014660211745649576, -0.000255584716796875, -0.0006685256958007812, -4.1961669921875e-05, -0.006574265193194151, -8.58306884765625e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n", "score": -3.2965874146575374, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -0.0017460485687479377, 0.0, -3.253579616546631, 0.0, -1.9073486328125e-06, -0.000247955322265625, -0.000102996826171875, -4.649158654501662e-06, -2.71793978754431e-05, -2.8610170375031885e-06, -2.9802317840221804e-06, -0.0008985683671198785, -6.29425048828125e-05, -0.0006608963012695312, -1.52587890625e-05, -0.004998910240828991, -0.00010824203491210938]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Frog", "<EOS>", "0", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": 0, "hole0": "Frog", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n", "score": -4.307789268131316, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -4.287570953369141, -0.0002651214599609375, -1.1444091796875e-05, -0.00015972858818713576, -0.00015431083738803864, -4.768370445162873e-07, -0.005563259124755859, 0.0, -0.0002346011169720441, -1.1920928244535389e-07, -3.62396240234375e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0007325410842895508, -7.62939453125e-06, -0.002620697021484375, -4.57763671875e-05, -0.0002492666244506836, 0.0, -0.0059593915939331055, 0.0, -1.52587890625e-05, -8.392333984375e-05, -6.29425048828125e-05, -8.10622896096902e-06, -2.9802276912960224e-06, -7.152428224799223e-06, -3.576278118089249e-07, -0.0006244168034754694, -1.9073486328125e-06, -0.0005741119384765625, -7.62939453125e-06, -0.00029325459036044776, -3.361701965332031e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "Minion", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, Minion):\n        return Minion(0, 1, taunt=True)\n", "score": -5.082966163924411, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -0.0017460485687479377, 0.0, -5.03963041305542, -0.0001392364501953125, -5.7220458984375e-06, -0.001373291015625, -9.1552734375e-05, -2.50339189733495e-06, -3.564294092939235e-05, -3.2186399039346725e-06, -1.0728830375228426e-06, -0.0008901109686121345, -1.9073486328125e-05, -0.0005426406860351562, -1.33514404296875e-05, -0.004235853441059589, -0.0001100301742553711]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "False", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -5.3343937449680965, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -0.0017460485687479377, 0.0, -0.05237331986427307, -1.9073486328125e-06, -5.7220458984375e-06, -0.000881195068359375, -0.0001773834228515625, -2.825220326485578e-05, -1.442432312614983e-05, -1.0012954589910805e-05, -4.5299530029296875e-06, -0.0014660211745649576, -0.000255584716796875, -0.0006685256958007812, -4.1961669921875e-05, -5.242525577545166, -6.687641143798828e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "DEMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "DEMON", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -5.632635313047999, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -5.542747497558594, -0.000171661376953125, -0.0009166356758214533, -1.9073486328125e-06, -0.05047018453478813, -1.9073486328125e-06, -5.7220458984375e-06, -0.0007762908935546875, -0.0001964569091796875, -2.3483953555114567e-05, -1.263618378288811e-05, -1.0370684321969748e-05, -4.410743713378906e-06, -0.0013298775302246213, -0.000278472900390625, -0.00063323974609375, -2.6702880859375e-05, -0.00561439199373126, -0.00010120868682861328]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -6.1112991056570465, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -6.061705589294434, -5.91278076171875e-05, -1.9073486328125e-06, -0.0016172584146261215, 0.0, -0.0007365942001342773, -5.7220458984375e-06, -0.0050716400146484375, -0.0002498626708984375, -0.0001220703125, -2.288818359375e-05, -4.02921432396397e-05, -0.0001354217529296875, -5.7220458984375e-06, -0.00047280569560825825, -5.805492401123047e-05, -2.6702880859375e-05, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0003265140694566071, -2.622604142743512e-06, -0.0005847204010933638, -3.814697265625e-06, -2.6702880859375e-05, -3.0517578125e-05, -1.9073486328125e-05, -4.57763671875e-05, -0.0028989315032958984, -7.152551916078664e-06, -0.00017464156553614885, -1.9073486328125e-06, -0.00058746337890625, -4.57763671875e-05, -0.00012803077697753906, -2.0265579223632812e-06, -0.001163482666015625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0003342628479003906, -2.491474151611328e-05, -0.0019350051879882812, -1.3470649719238281e-05, -0.0013538594357669353, -7.62939453125e-06, -0.006074185483157635, -1.9073486328125e-05, -9.5367431640625e-06, -0.0011930465698242188, -6.29425048828125e-05, -2.6702524337451905e-05, -3.695487976074219e-05, -1.6568454157095402e-05, -8.344650268554688e-06, -0.001369805890135467, -0.0002994537353515625, -0.0005855560302734375, -4.57763671875e-05, -0.00478743901476264, -7.43865966796875e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "create_minion", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "create_minion", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, create_minion):\n        return Minion(0, 1, taunt=True)\n", "score": -6.435459209181758, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -0.0017460485687479377, 0.0, -6.390626430511475, 0.0, -3.814697265625e-06, -0.000530242919921875, -0.0001220703125, -2.074220174108632e-05, -7.390974587906385e-06, -3.2186108001042157e-06, -4.5299530029296875e-06, -0.0009301661630161107, -0.0001926422119140625, -0.000701904296875, -3.4332275390625e-05, -0.0063063958659768105, -0.00010287761688232422]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -6.716420612877862, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -5.9048309326171875, -6.29425048828125e-05, -0.000308990478515625, -4.0531158447265625e-06, -0.00010597164509817958, -5.340576171875e-05, -9.5367431640625e-06, -8.48866329761222e-05, -1.3232214769232087e-05, -0.0007572174072265625, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, -0.0004105564730707556, -1.0728830375228426e-06, -0.00014221652236301452, -1.9073486328125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -1.71661376953125e-05, -2.47955322265625e-05, -0.001725316047668457, -5.006785613659304e-06, -0.000182986244908534, 0.0, -0.000453948974609375, -4.38690185546875e-05, -0.00014126300811767578, -2.0265579223632812e-06, -0.0032958984375, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00042343136738054454, -2.300739288330078e-05, -0.0019161701202392578, -1.71661376953125e-05, -0.1674652099609375, -0.5533151626586914, -5.91278076171875e-05, -0.0031224489212036133, -0.0001220703125, -0.005387661978602409, -1.9073486328125e-06, -0.03835413604974747, -1.3470649719238281e-05, -1.33514404296875e-05, -0.0019083023071289062, -0.0001087188720703125, -4.386805812828243e-05, -7.474422454833984e-05, -1.1204479960724711e-05, -1.633167266845703e-05, -0.0017568806651979685, -0.0005321502685546875, -0.0007076263427734375, -7.43865966796875e-05, -0.007830249145627022, -7.295608520507812e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "MINION_TYPE", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "MINION_TYPE", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, MINION_TYPE):\n        return Minion(0, 1, taunt=True)\n", "score": -7.05625328619179, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -0.0017460485687479377, 0.0, -7.009860515594482, -0.0003842113073915243, -1.52587890625e-05, -0.0005035400390625, -9.34600830078125e-05, -1.597391747054644e-05, -7.748602001811378e-06, -4.887468094239011e-06, -4.649161837733118e-06, -0.0016960991779342294, -0.000164031982421875, -0.0007495880126953125, -5.91278076171875e-05, -0.006745449732989073, -7.62939453125e-05]}, {"choice_history": [70, 147, "Frog", "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrogFrog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class FrogFrog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -7.112591423495097, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -6.970873832702637, -0.020542128011584282, -1.5139456081669778e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.02155303955078125, -0.0173797607421875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014138217375148088, 0.0, -9.465213952353224e-05, -1.9073486328125e-06, -0.0062713623046875, -7.62939453125e-06, -0.0003833770751953125, -2.3841855067985307e-07, -7.366952195297927e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.0821240721270442e-05, -5.245203283266164e-06, -0.00022125244140625, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -7.569788431283087e-05, -2.3841855067985307e-07, -5.555071766139008e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0003987550735473633, -5.960462772236497e-07, -0.00026810169219970703, 0.0, -0.0001239776611328125, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007152557373046875, -2.09808349609375e-05, -0.0048465728759765625, -7.62939453125e-05, -0.0017557137180119753, 0.0, -0.05501042678952217, -1.9073486328125e-06, -5.7220458984375e-06, -0.000858306884765625, -0.0001773834228515625, -2.7894584491150454e-05, -1.251697449333733e-05, -1.0132163879461586e-05, -4.5299530029296875e-06, -0.0014612526865676045, -0.0002384185791015625, -0.0006580352783203125, -4.00543212890625e-05, -0.006479613482952118, -9.143352508544922e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "p", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "p"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def p(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -7.396559287203658, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -7.172673225402832, -1.9073486328125e-06, -0.17750173807144165, -1.9073486328125e-06, -5.7220458984375e-06, -0.0018978118896484375, -0.0002288818359375, -5.149708886165172e-05, -1.9669532775878906e-05, -1.2396281817927957e-05, -4.291534423828125e-06, -0.0026677793357521296, -0.0001735687255859375, -0.0006093978881835938, -4.57763671875e-05, -0.0064533911645412445, -8.392333984375e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, charge=True)\n", "score": -7.53532328215077, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -0.0017460485687479377, 0.0, -0.05237331986427307, -1.9073486328125e-06, -5.7220458984375e-06, -0.000881195068359375, -0.0001773834228515625, -2.825220326485578e-05, -1.442432312614983e-05, -1.0012954589910805e-05, -4.5299530029296875e-06, -7.430429458618164, -0.0043792724609375, -0.004456520080566406, -0.0001678466796875, -0.006480574607849121, -4.0411949157714844e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        return Minion(0, 1, taunt=True)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -9.027595879599566, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -8.961540222167969, -0.010899543762207031, -2.3841852225814364e-07, -0.00010942813969450071, -2.3841835172788706e-07, -4.768360213347478e-06, -0.0035868792328983545, -1.9073486328125e-06, -0.0011730194091796875, -4.76837158203125e-05, -0.00081717933062464, -2.9921531677246094e-05, -0.0009801668347790837, 0.0, -0.04083675518631935, -1.33514404296875e-05, -1.52587890625e-05, -0.0004558563232421875, -5.340576171875e-05, -2.3841830625315197e-06, -7.986990567587782e-06, -1.3112830856698565e-06, -5.245195097813848e-06, -0.001973181264474988, -2.288818359375e-05, -0.00066375732421875, -2.6702880859375e-05, -0.0018426100723445415, -5.245208376436494e-05]}, {"choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Frog", "<EOS>", "0", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Frog", "hole2": [{"hole1": 0, "hole0": "Frog", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -9.62765497171911, "score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -4.287570953369141, -0.0002651214599609375, -1.1444091796875e-05, -0.00015972858818713576, -0.00015431083738803864, -4.768370445162873e-07, -0.005563259124755859, 0.0, -0.0002346011169720441, -1.1920928244535389e-07, -3.62396240234375e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0007325410842895508, -7.62939453125e-06, -0.002620697021484375, -4.57763671875e-05, -0.0002492666244506836, 0.0, -5.325499534606934, 0.0, -7.62939453125e-06, -7.62939453125e-05, -8.96453857421875e-05, -4.649158654501662e-06, -9.536738616588991e-07, -5.6026219681371e-06, -2.3841855067985307e-07, -0.0006215558969415724, -1.9073486328125e-06, -0.000492095947265625, -7.62939453125e-06, -0.0006728169391863048, -6.020069122314453e-05]}]}
{"index": 36, "beams": [{"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "add_buff", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -0.08778736619830596, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -0.014291167259216309, -6.866455078125e-05, -0.001419002772308886, 0.0, -0.000507354736328125, -0.008813858032226562, -9.5367431640625e-06, -0.005916595458984375, 0.0, -0.0016463994979858398, 0.0, -0.0267869234085083, 0.0, -0.000217437744140625, -0.001636505126953125, -0.000644683837890625, -0.0018095937557518482, -7.867813110351562e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "add_buff", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.random_choice.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -4.962645690497872, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -4.638553142547607, 0.0, -0.04071354866027832, 0.0, -0.0018901824951171875, -0.21643543243408203, -7.62939453125e-06, -0.003047943115234375, 0.0, -0.0013447999954223633, 0.0, -0.03223729133605957, 0.0, -0.0002536773681640625, -0.0015659332275390625, -0.0006122589111328125, -0.001964207738637924, -7.867813110351562e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n", "score": -5.1533028876464115, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -0.014291167259216309, -6.866455078125e-05, -0.001419002772308886, 0.0, -0.000507354736328125, -4.871674537658691, -3.814697265625e-06, -0.0023746490478515625, -1.33514404296875e-05, -0.005405426025390625, -7.62939453125e-06, -0.0058841705322265625, 0.0, -0.22764134407043457, 0.0]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "die", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.die(self)\n", "score": -5.306429723469471, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -0.014291167259216309, -6.866455078125e-05, -0.001419002772308886, 0.0, -0.000507354736328125, -0.008813858032226562, -9.5367431640625e-06, -0.005916595458984375, 0.0, -0.0016463994979858398, 0.0, -4.985044479370117, 0.0, -0.00177001953125, -0.19080352783203125, -1.9073486328125e-06, -0.07212352752685547, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "add_buff", "hole0": {"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.card.add_buff(Buff(Frozen()))\n", "score": -5.650062539099842, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -0.014291167259216309, -6.866455078125e-05, -0.001419002772308886, 0.0, -0.000507354736328125, -0.008813858032226562, -9.5367431640625e-06, -5.245318412780762, -1.1444091796875e-05, -0.0056781768798828125, 0.0, -0.0007697343826293945, 0.0, -0.2949509620666504, -4.0531076592742465e-06, -0.040348172187805176, 0.0, -5.7220458984375e-06, -0.008464813232421875, -0.0040569305419921875, -0.001319049159064889, -1.3709068298339844e-05]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "add_buff", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n", "score": -5.702683830010635, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -5.273310661315918, -0.0006275177001953125, -3.62396240234375e-05, -0.0004425048828125, -0.00034332275390625, -1.33514404296875e-05, -0.0028162002563476562, -9.5367431640625e-06, -0.03480243682861328, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -6.866455078125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.001656651496887207, -5.7220458984375e-06, -0.0007504019886255264, 0.0, -3.814697265625e-05, -0.001461029052734375, -5.7220458984375e-06, -0.0007839202880859375, 0.0, -0.0002734661102294922, 0.0, -0.36338651180267334, 0.0, -8.392333984375e-05, -0.0013599395751953125, -0.0012054443359375, -0.002316236263141036, -6.079673767089844e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n", "score": -6.370263602077891, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.108207702636719, 0.0, -0.035994529724121094, -7.43865966796875e-05, -0.06472587585449219, -1.9073486328125e-06, -0.004405975341796875, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007114410400390625, -1.9073486328125e-06, -0.000693362089805305, -4.57763671875e-05, -0.0013103485107421875, -0.0008831024169921875, -0.2968524098396301, -3.814697265625e-06, -0.012471199035644531, -0.7973899841308594, -6.29425048828125e-05, -9.5367431640625e-06, -0.0009746551513671875, -0.000308990478515625, 0.0, -0.036373138427734375, -2.47955322265625e-05, -0.001232147216796875, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", "minions", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "minion", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.random_choice.minions:\n            minion.<UNK>()\n", "score": -6.625308081117389, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -4.638553142547607, 0.0, -0.04071354866027832, 0.0, -0.0018901824951171875, -1.6834678649902344, -5.7220458984375e-06, -0.0021419525146484375, -2.09808349609375e-05, -0.00405120849609375, -1.1444091796875e-05, -0.005825042724609375, 0.0, -0.224615216255188, 0.0]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "3", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            player.draw()\n", "score": -6.647611822426249, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.108207702636719, 0.0, -0.035994529724121094, -7.43865966796875e-05, -0.06472587585449219, -1.9073486328125e-06, -0.004405975341796875, -1.33514404296875e-05, -1.1444091796875e-05, -0.0007114410400390625, -1.9073486328125e-06, -0.000693362089805305, -4.57763671875e-05, -0.0013103485107421875, -0.0008831024169921875, -1.3803892135620117, -9.5367431640625e-06, -0.004756927490234375, -0.01671600341796875, -0.000125885009765625, -9.5367431640625e-06, -0.0006732940673828125, -0.0001697540283203125, 0.0, -0.01767444610595703, -2.09808349609375e-05, -0.002506256103515625, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "deathrattle", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "add_buff", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "target": {"id": "deathrattle", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for deathrattle in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -6.852307648473349, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -6.502655506134033, 0.0, -0.10388374328613281, -6.4849853515625e-05, -0.1255817413330078, -6.866455078125e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.006239891052246094, 0.0, -0.05532515048980713, -9.5367431640625e-05, -0.004294208716601133, -1.9073486328125e-06, -0.00028228759765625, -0.0031452178955078125, -7.62939453125e-06, -0.011159896850585938, 0.0, -0.0017006397247314453, 0.0, -0.025813937187194824, 0.0, -0.000354766845703125, -0.001598358154296875, -0.000553131103515625, -0.0019653979688882828, -7.867813110351562e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", 237, 44, 134, "self", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"id": "self", "_type": "Name"}], "func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.heal(player.effective_spell_damage(self), self)\n", "score": -7.104756334987307, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -0.014291167259216309, -6.866455078125e-05, -0.001419002772308886, 0.0, -0.000507354736328125, -0.008813858032226562, -9.5367431640625e-06, -0.005916595458984375, 0.0, -0.0016463994979858398, 0.0, -5.135227203369141, -1.4305104514278355e-06, -7.62939453125e-05, -0.24522781372070312, -0.0001010894775390625, -4.38690185546875e-05, -0.000244140625, -0.00321197509765625, -1.9073486328125e-06, -0.007244110107421875, -2.47955322265625e-05, -0.4478551149368286, 0.0, -5.7220458984375e-05, -0.3654298782348633, -7.62939453125e-06, -0.654268741607666, 0.0, -0.0042018890380859375, -5.7220458984375e-06, -0.18484115600585938, 0.0]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "append", "<EOS>", 237, 39, 110, 13, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "append", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.append(minion.card(<UNK>))\n", "score": -7.183331826892285, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -0.014291167259216309, -6.866455078125e-05, -0.001419002772308886, 0.0, -0.000507354736328125, -0.008813858032226562, -9.5367431640625e-06, -0.005916595458984375, 0.0, -0.0016463994979858398, 0.0, -4.971057891845703, -1.5497195136049413e-06, -0.0041179656982421875, -0.20815181732177734, -4.9591064453125e-05, -0.1365671157836914, -0.002777099609375, -0.00075531005859375, -4.76837158203125e-05, -0.46717166900634766, 0.0, -0.9960372447967529, -1.1920928244535389e-07, -0.1048126220703125, -0.14817523956298828, -1.9073486328125e-06, -0.08692264556884766, 0.0]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "die", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.die(self)\n", "score": -7.255401873570797, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -5.273310661315918, -0.0006275177001953125, -3.62396240234375e-05, -0.0004425048828125, -0.00034332275390625, -1.33514404296875e-05, -0.0028162002563476562, -9.5367431640625e-06, -0.03480243682861328, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -6.866455078125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.001656651496887207, -5.7220458984375e-06, -0.0007504019886255264, 0.0, -3.814697265625e-05, -0.001461029052734375, -5.7220458984375e-06, -0.0007839202880859375, 0.0, -0.0002734661102294922, 0.0, -1.554430365562439, 0.0, -0.000461578369140625, -0.16698741912841797, -1.9073486328125e-06, -0.19919300079345703, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "extend", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 21, 134, "targets", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "extend", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}]}, {"iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"hole1": "add_buff", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            minion.add_buff(Buff(Frozen()))\n", "score": -7.578301511198205, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -6.135473251342773, -1.9073486328125e-05, -3.814697265625e-06, -0.0002269744873046875, -3.0517578125e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0002180337905883789, 0.0, -3.814697265625e-05, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.47955322265625e-05, -0.010145187377929688, -3.0517578125e-05, -3.0517578125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.08309102058410645, -3.814697265625e-06, -0.00048828125, -0.0002288818359375, -3.814697265625e-06, -1.71661376953125e-05, -0.24538040161132812, -3.814697265625e-06, -0.00017178058624267578, -3.814697265625e-06, -0.001148223876953125, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0022426843643188477, -5.7220458984375e-06, -0.0011791366850957274, 0.0, -0.0006389617919921875, -0.0001544952392578125, -0.001155853271484375, -3.814697265625e-06, -0.0010328292846679688, 0.0, -0.06356143951416016, 0.0, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.010213851928710938, -1.1444091796875e-05, -0.06488609313964844, 0.0, -0.006094694137573242, 0.0, -0.04745960235595703, -5.53131103515625e-05, -4.00543212890625e-05, 0.0, -0.000232696533203125, -1.9073486328125e-06, -0.12772083282470703, -5.91278076171875e-05, -0.007518768310546875, -1.9073486328125e-06, -9.5367431640625e-06, -0.013515472412109375, -6.103515625e-05, -0.000213623046875, -1.9073486328125e-06, -0.00015938282012939453, 0.0, -0.7447830438613892, -1.1920928244535389e-07, -0.0008296966552734375, -0.0010356903076171875, -0.0010833740234375, -0.0024099345318973064, -6.079673767089844e-06]}, {"choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "append", "<EOS>", 237, 39, 110, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostNova", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "append", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.append(self.target(<UNK>))\n", "score": -7.72677896377126, "score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -0.014291167259216309, -6.866455078125e-05, -0.001419002772308886, 0.0, -0.000507354736328125, -0.008813858032226562, -9.5367431640625e-06, -0.005916595458984375, 0.0, -0.0016463994979858398, 0.0, -4.971057891845703, -1.5497195136049413e-06, -0.0041179656982421875, -0.20815181732177734, -4.9591064453125e-05, -0.1365671157836914, -0.002777099609375, -0.00075531005859375, -4.76837158203125e-05, -1.545736312866211, -7.62939453125e-06, -0.00376129150390625, 0.0, -0.008270263671875, -0.32620906829833984, -1.9073486328125e-06, -0.4625821113586426, 0.0]}]}
{"index": 37, "beams": [{"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -0.10437511202110272, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011766433715820312, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.02519702911376953, 0.0, -0.0033092498779296875, -0.0034914016723632812, -0.000225067138671875, -0.01110696792602539, -4.398822784423828e-05]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -4.1136905985382555, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011766433715820312, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -4.0497894287109375, 0.0, -1.9073486328125e-06, -0.0003910064697265625, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -0.00013411043619271368, 0.0, -0.0020713764242827892, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -4.536663997603341, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.449140548706055, 0.0, -7.05718994140625e-05, -4.00543212890625e-05, -0.0002193450927734375, -0.002742767333984375, -1.9073486328125e-06, -0.0002193450927734375, -1.52587890625e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001659393310546875, -1.9073486328125e-06, -7.450580596923828e-05, 0.0, -0.007282257080078125, 0.0, -0.00016438961029052734, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.005542755126953125, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.00026702880859375, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005588531494140625, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.001712287776172161, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.004974365234375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011745452880859375, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.025237083435058594, 0.0, -0.0033092498779296875, -0.0034923553466796875, -0.000225067138671875, -0.01110696792602539, -4.398822784423828e-05]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n", "score": -5.072979249210789, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -4.449337005615234, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.5586528778076172, 0.0, -0.0031305551528930664, 0.0, -0.0004483461380004883, 0.0, -0.008280754089355469, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -1.33514404296875e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -0.0001506805419921875, 0.0, -0.0033931033685803413, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -3.62396240234375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Damage", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Damage", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Damage()))\n", "score": -5.545593845808639, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011766433715820312, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.02519702911376953, 0.0, -0.0033092498779296875, -0.0034914016723632812, -0.000225067138671875, -5.452330112457275, -3.9577484130859375e-05]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -5.615198719465866, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -5.424287796020508, -2.6702880859375e-05, -0.004565238952636719, -5.7220458984375e-06, -0.020387649536132812, -3.24249267578125e-05, -0.0434112548828125, 0.0, -0.07836437225341797, -3.814697265625e-06]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_effect", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_effect(player.effective_spell_damage(1), self)\n", "score": -5.616345325868338, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011766433715820312, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.439774513244629, 0.0, -0.110260009765625, -0.0002593994140625, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0002288818359375, 0.0, -0.0009015798568725586, 0.0, -0.0037898339796811342, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.76837158203125e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Mana", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Mana", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Mana()))\n", "score": -5.767311799490585, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011766433715820312, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.02519702911376953, 0.0, -0.0033092498779296875, -0.0034914016723632812, -0.000225067138671875, -5.4511332511901855, -0.2229543924331665]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -5.816024646778828, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -5.719127655029297, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -0.0052585601806640625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -4.52994936495088e-06, -0.0001354217529296875, -0.0001544952392578125, -2.6702880859375e-05, -0.000247955322265625, 0.0, -0.0002651214599609375, 0.0, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.000568389892578125, 0.0, -1.9073486328125e-06, -0.0004405975341796875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.00170966237783432, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0051021575927734375, -9.1552734375e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.011579513549804688, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.025226593017578125, 0.0, -0.00325775146484375, -0.0035085678100585938, -0.0002269744873046875, -0.011112570762634277, -4.398822784423828e-05]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(player.effective_spell_damage(1), self)\n", "score": -5.908988036831602, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011766433715820312, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.02519702911376953, 0.0, -5.744361877441406, -0.06358814239501953, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.0003871917724609375, -1.9073486328125e-06, -0.011277556419372559, 0.0, -0.0030317804776132107, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -4.38690185546875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -5.913811796032064, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -5.868931770324707, -1.1444091796875e-05, -1.1444091796875e-05, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, 0.0, -1.537799835205078e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.000125885009765625, -5.7220458984375e-06, -3.3378591979271732e-06, -0.000110626220703125, -0.00084686279296875, -4.76837158203125e-05, -8.7738037109375e-05, -1.9073486328125e-06, -0.0051975250244140625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.0014019012451171875, 0.0, -1.9073486328125e-06, -0.00035858154296875, -3.814697265625e-06, -0.0002498626708984375, -3.814697265625e-06, -0.000118255615234375, 0.0, -0.0001314878318225965, 0.0, -0.0016680657863616943, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -5.963531601626187, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.869322776794434, 0.0, -3.814697265625e-05, -0.0001983642578125, -0.0001430511474609375, -0.009168624877929688, -1.9073486328125e-06, -0.000209808349609375, -9.5367431640625e-06, -6.103515625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000179290771484375, -1.9073486328125e-06, -7.259845733642578e-05, 0.0, -0.007415771484375, 0.0, -0.00017392635345458984, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.005579948425292969, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.00026702880859375, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017124067526310682, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0049591064453125, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.01177978515625, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.025226593017578125, 0.0, -0.003314971923828125, -0.0034914016723632812, -0.000225067138671875, -0.011107921600341797, -4.398822784423828e-05]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "overload", "<EOS>", 23, 139, "1", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"_type": "Num", "n": 1}, "_type": "keyword", "arg": "overload"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -6.6677179431140985, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -5.9981689453125, 0.0, -0.018678665161132812, -0.000263214111328125, -0.39921167492866516, 0.0, -0.0002193450927734375, 0.0, -1.9073486328125e-06, 0.0, -0.00018310546875, -1.1444091796875e-05, -5.7220458984375e-06, -2.2649765014648438e-06, -0.1667013168334961, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, 0.0, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -5.841247457283316e-06, -7.2479248046875e-05, -0.000362396240234375, -7.43865966796875e-05, -0.00048065185546875, 0.0, -0.0002880096435546875, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005741119384765625, 0.0, -1.9073486328125e-06, -0.0004405975341796875, -1.9073486328125e-06, -0.0001316070556640625, -3.814697265625e-06, -0.0001163482666015625, 0.0, -0.00012838839029427618, 0.0, -0.0016964240930974483, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0070858001708984375, -9.34600830078125e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.0075511932373046875, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.02562999725341797, 0.0, -0.0027751922607421875, -0.0032215118408203125, -0.000225067138671875, -0.010907292366027832, -4.208087921142578e-05]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "overload", "<EOS>", 23, 139, "0", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"_type": "Num", "n": 0}, "_type": "keyword", "arg": "overload"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=0)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -7.343238333154318, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -5.9981689453125, 0.0, -0.018678665161132812, -0.000263214111328125, -1.1146045923233032, 0.0, -0.000274658203125, 0.0, -3.814697265625e-06, 0.0, -0.000263214111328125, -1.9073486328125e-05, -9.5367431640625e-06, -2.1457672119140625e-06, -0.12469291687011719, -3.0517578125e-05, -3.814697265625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.5497207641601562e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.67572021484375e-05, -5.7220458984375e-06, -5.6028297876764555e-06, -4.9591064453125e-05, -0.0005702972412109375, -8.96453857421875e-05, -0.0005168914794921875, 0.0, -0.0003108978271484375, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000568389892578125, 0.0, -1.9073486328125e-06, -0.0004425048828125, -1.9073486328125e-06, -0.0001354217529296875, -3.814697265625e-06, -0.0001163482666015625, 0.0, -0.00012838839029427618, 0.0, -0.001692489953711629, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00771331787109375, -9.1552734375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.0068149566650390625, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.02773284912109375, 0.0, -0.0026454925537109375, -0.0031194686889648438, -0.0002231597900390625, -0.01086723804473877, -4.017353057861328e-05]}, {"choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "FrostShock", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(game.other_player.hero)\n", "score": -7.521330936962499, "score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011766433715820312, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.02519702911376953, 0.0, -0.0033092498779296875, -6.525388717651367, -0.0012187957763671875, -8.392333984375e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.6680793762207031, 0.0, -0.21608543395996094, -3.814697265625e-06, -0.02090596780180931, 0.0]}]}
{"index": 38, "beams": [{"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -0.15857910757073057, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.016969680786132812, -0.0004863739013671875, -0.0001220703125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.02499866485595703, 0.0, -0.0002384185791015625, -0.014693260192871094, -0.00016021728515625, -0.004740715026855469, -0.00012671947479248047]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -3.7685229743005024, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -3.675635814666748, 0.0, -0.004590511322021484, -2.3841855067985307e-07, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.007807731628417969, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008381843566894531, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.0002841949462890625, -4.1961669921875e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.0036869049072265625, 0.0, -5.7220458984375e-06, -0.0008258819580078125, -1.9073486328125e-06, -0.0005588531494140625, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.01708221435546875, -0.000476837158203125, -0.0001201629638671875, -3.814697265625e-06, -0.000152587890625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.025040626525878906, 0.0, -0.0002384185791015625, -0.014693260192871094, -0.00016021728515625, -0.0047397613525390625, -0.00012671947479248047]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "DRUID", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.DRUID, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -4.112815972614406, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -4.023194789886475, -1.9073486328125e-06, -0.0007952451705932617, -2.3841855067985307e-07, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -0.008575439453125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008264541625976562, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.1961669921875e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00025653839111328125, 0.0, -0.0036907196044921875, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.017009735107421875, -0.0004863739013671875, -0.0001220703125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.02498340606689453, 0.0, -0.0002384185791015625, -0.014689445495605469, -0.00016021728515625, -0.0047435760498046875, -0.00012671947479248047]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -4.372519847202383, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -4.133145332336426, -9.5367431640625e-06, -0.03866767883300781, -1.9073486328125e-06, -0.027479171752929688, -2.86102294921875e-05, -0.002582550048828125, 0.0, -0.07471275329589844, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -4.443981044656866, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.016969680786132812, -0.0004863739013671875, -0.0001220703125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.32924747467041, 0.0, -1.33514404296875e-05, -0.000335693359375, -1.9073486328125e-06, -9.34600830078125e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -0.00025069707771763206, 0.0, -0.0002704826765693724, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.20159912109375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "WARLOCK", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -4.9065535033227405, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -4.816391468048096, 0.0, -0.0005446672439575195, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -8.7738037109375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.009888648986816406, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.007777214050292969, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.0002880096435546875, -4.00543212890625e-05, -0.000156402587890625, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.0036602020263671875, 0.0, -5.7220458984375e-06, -0.0008296966552734375, -1.9073486328125e-06, -0.0005588531494140625, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.017017364501953125, -0.00048828125, -0.0001239776611328125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.024951934814453125, 0.0, -0.0002384185791015625, -0.014703750610351562, -0.00016021728515625, -0.004736900329589844, -0.00012671947479248047]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -5.2252134049262295, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -5.072574615478516, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -0.006838798522949219, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.215931297338102e-05, -4.76837158203125e-05, -0.0003662109375, -4.00543212890625e-05, -0.0001544952392578125, -5.340576171875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.0035858154296875, 0.0, -5.7220458984375e-06, -0.000850677490234375, -1.9073486328125e-06, -0.000583648681640625, -1.71661376953125e-05, -0.000194549560546875, 0.0, -0.0002367490524193272, 0.0, -0.00036477786488831043, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.021068572998046875, -0.00046539306640625, -0.0001239776611328125, -3.814697265625e-06, -0.0001373291015625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.02644824981689453, 0.0, -0.0002384185791015625, -0.014451980590820312, -0.0001621246337890625, -0.004725456237792969, -0.00012671947479248047]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(ChangeAttack(2)))\n", "score": -5.409322496700369, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.016969680786132812, -0.0004863739013671875, -0.0001220703125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.02499866485595703, 0.0, -0.0002384185791015625, -4.4170942306518555, -0.0011310577392578125, -0.006642580032348633, -2.47955322265625e-05, -0.4844823181629181, -0.27033233642578125, -1.9073486328125e-06, -0.09067878127098083, -7.62939453125e-05]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "taunt", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.taunt, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -6.004635926458256, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -5.91062593460083, -3.814697265625e-06, -0.00013685220619663596, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.011964797973632812, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.010193824768066406, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.22785213534371e-05, -4.76837158203125e-05, -0.0002803802490234375, -4.1961669921875e-05, -0.000164031982421875, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00025463104248046875, 0.0, -0.0037364959716796875, 0.0, -5.7220458984375e-06, -0.000820159912109375, -1.9073486328125e-06, -0.0005588531494140625, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023853719176258892, 0.0, -0.00036084395833313465, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.016651153564453125, -0.00048065185546875, -0.0001201629638671875, -3.814697265625e-06, -0.000148773193359375, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.025114059448242188, 0.0, -0.0002384185791015625, -0.014613151550292969, -0.00016021728515625, -0.0047626495361328125, -0.00012481212615966797]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.heal(player.effective_heal_power(3), self)\n", "score": -6.0209723671072055, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.016969680786132812, -0.0004863739013671875, -0.0001220703125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.829514026641846, 0.0, -4.00543212890625e-05, -0.00040435791015625, -1.52587890625e-05, -0.001560211181640625, -4.1961669921875e-05, -9.5367431640625e-05, 0.0, -0.07558584213256836, -2.1457672119140625e-06, -3.480864688754082e-05, 0.0, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, 0.0]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -6.083932277010135, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -5.934317588806152, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.009796142578125, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.22785213534371e-05, -4.57763671875e-05, -0.0002841949462890625, -4.1961669921875e-05, -0.000164031982421875, -5.7220458984375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00024700164794921875, 0.0, -0.0037250518798828125, 0.0, -5.7220458984375e-06, -0.0008182525634765625, -1.9073486328125e-06, -0.00055694580078125, -1.9073486328125e-05, -0.000194549560546875, 0.0, -0.00023829878773540258, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.016641616821289062, -0.0005168914794921875, -0.000125885009765625, -3.814697265625e-06, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.02460193634033203, 0.0, -0.0002384185791015625, -0.01468658447265625, -0.00016021728515625, -0.0047740936279296875, -0.00012481212615966797]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Mana", "Damage", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ManaDamage", "hole0": "Buff", "_type": "Template23", "hole2": 2}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(ManaDamage(2)))\n", "score": -6.1812397504330505, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.016969680786132812, -0.0004863739013671875, -0.0001220703125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.02499866485595703, 0.0, -0.0002384185791015625, -4.4170942306518555, -0.0011310577392578125, -0.006642580032348633, -2.47955322265625e-05, -1.2189297676086426, -0.26298439502716064, 0.0, -0.13545075058937073, -0.0001239776611328125]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Damage", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Damage", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Damage()))\n", "score": -6.2034127676955535, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.016969680786132812, -0.0004863739013671875, -0.0001220703125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.02499866485595703, 0.0, -0.0002384185791015625, -0.014693260192871094, -0.00016021728515625, -6.0496978759765625, -3.218649908376392e-06]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -6.3849538556208785, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -5.895480155944824, 0.0, -1.33514404296875e-05, -0.0005950927734375, -1.1444091796875e-05, -0.0036468505859375, -4.57763671875e-05, -0.000415802001953125, 0.0, -0.30921053886413574, -2.2649765014648438e-06, -3.516627839417197e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.043209075927734375, -0.00060272216796875, -0.00020599365234375, -3.814697265625e-06, -0.000118255615234375, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.02056407928466797, 0.0, -0.0002422332763671875, -0.01593303680419922, -0.00016021728515625, -0.004354238510131836, -0.0001266002655029297]}, {"choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Frostbolt", "hole2": [{"hole1": 2, "hole0": "Frostbolt", "hole2": "MAGE", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.<UNK>()\n", "score": -6.955866214084708, "score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -4.133145332336426, -9.5367431640625e-06, -0.03866767883300781, -1.9073486328125e-06, -0.027479171752929688, -2.86102294921875e-05, -0.002582550048828125, 0.0, -2.6580686569213867, 0.0]}]}
{"index": 39, "beams": [{"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -0.005989173772348977, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -0.0025386810302734375, -1.1444091796875e-05, -0.00023901430540718138, -8.106231689453125e-05]}, {"choice_history": [70, 150, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 93, 196, 33, 205, "Frostwolf", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 44, 134, "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "summon", "hole0": {"hole0": "Frostwolf", "_type": "Template39"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            Frostwolf().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -8.250942041481593, "score_history": [-7.62939453125e-06, -6.679186820983887, -8.58306884765625e-06, -4.768370445162873e-07, -5.722029527532868e-06, -0.004448147490620613, -0.0001049041748046875, -2.622600959512056e-06, -1.33514404296875e-05, -0.000202178955078125, -4.57763671875e-05, 0.0, -3.528594970703125e-05, -1.1920928244535389e-07, 0.0, -2.2715539671480656e-06, -1.1920928244535389e-07, -0.00020396709442138672, 0.0, -0.005059242248535156, 0.0, -0.0006772279739379883, -1.9073486328125e-06, -0.0001964569091796875, -1.9073486328125e-05, -0.00011348714178893715, -1.4066685253055766e-05, -0.08889007568359375, -5.7220458984375e-06, -5.7220458984375e-06, -0.000125885009765625, -0.0004901885986328125, -7.62939453125e-06, 0.0, -0.00026214122772216797, -5.7220458984375e-06, -0.000244140625, 0.0, -0.0021076202392578125, -3.814697265625e-06, -0.00029778480529785156, -7.62939453125e-06, -0.1748952865600586, -9.72747802734375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0026700496673583984, 0.0, -0.0013561248779296875, -5.91278076171875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0003511885879561305, -2.622604142743512e-06, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-06, -0.000883217086084187, -0.0001926422119140625, -0.0007991790771484375, 0.0, -0.04543217271566391, -5.7220458984375e-06, -0.0011386871337890625, -0.00574493408203125, -0.0011348724365234375, -0.00029754638671875, -0.002841949462890625, -0.006215223576873541, -0.35689371824264526, -0.3780125379562378, -9.655952453613281e-06, -0.0020351409912109375, -0.014409065246582031, -3.814697265625e-06, -0.27145683765411377, -1.9073486328125e-06, -0.013716697692871094, -2.86102294921875e-05, -0.0006816387176513672, -7.987022399902344e-06, -0.03692626953125, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -0.001582503318786621, -7.62939453125e-06, -0.0004215240478515625, -0.00020599365234375, -2.47955322265625e-05, -5.340576171875e-05, 0.0, -0.00015079975128173828, 0.0, -0.0007517337799072266, 0.0, -1.9073486328125e-06, -0.0008392333984375, -0.0031871795654296875, -0.010580062866210938, 0.0, -0.0062198638916015625, -0.0002593994140625, -0.006215095520019531, -0.000263214111328125, -2.47955322265625e-05, -2.8967857360839844e-05, -0.00815582275390625, -0.00017368793487548828, -1.9073486328125e-06, -2.86102294921875e-05, -4.29153169534402e-06, -1.5020355931483209e-05, -0.0001354217529296875, -0.010541915893554688, -0.0004444122314453125, -0.0030202865600585938, -0.0010528564453125, -0.002788543701171875, -9.5367431640625e-06, -0.003856658935546875, -5.340576171875e-05, -0.0002040863037109375, -1.1444091796875e-05, -0.031168699264526367, -5.7220458984375e-06, -0.005459785461425781, 0.0, -0.0242462158203125, -3.814697265625e-06, -0.001344919204711914, -4.1961669921875e-05, -0.00274658203125, -0.0004291534423828125, -0.0002307891845703125, -0.000225067138671875, -5.7220458984375e-06, 0.0, -0.005141722969710827, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0008296965970657766, 0.0, -0.006405353546142578, -1.9073486328125e-06, -0.00244140625, -0.0018529891967773438, -3.814697265625e-05, -0.0011968612670898438, -1.33514404296875e-05, -0.0040634265169501305, -7.62939453125e-06]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "players", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "players", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, players=True)\n", "score": -8.27130399152108, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -8.249021530151367, -0.000324249267578125, -0.019064903259277344, -1.9073486328125e-05, -0.0003679990768432617, -0.00014710426330566406]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n", "score": -8.386394004071434, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -8.381193161010742, -7.2479248046875e-05, -0.0023374557495117188, -9.5367431640625e-06, -0.0003743171691894531, -4.792213439941406e-05]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "2", "<EOS>", 63, 205, "Hero", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "Call", "args": [{"hole1": 2, "hole0": "Heal", "_type": "Template34"}, {"hole0": "HeroSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=Deathrattle(Heal(2), HeroSelector()))\n", "score": -8.390362748725664, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -6.846846580505371, -8.96453857421875e-05, -0.00028228759765625, -7.62939453125e-06, -0.007152318488806486, -1.4901160284352954e-05, -0.001552581787109375, -0.016431808471679688, -2.86102294921875e-05, -0.4954912066459656, -0.0006486173951998353, -0.35383841395378113, -4.172325134277344e-06, -0.012890815734863281, -4.9591064453125e-05, -0.6508705615997314, -0.0009696483612060547, -7.43865966796875e-05]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "False", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -8.63632057114907, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -0.0025386810302734375, -1.1444091796875e-05, -8.630489349365234, -0.0001621246337890625]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "2", "<EOS>", 63, 205, "Weapon", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "Call", "args": [{"hole1": 2, "hole0": "Heal", "_type": "Template34"}, {"hole0": "WeaponSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=Deathrattle(Heal(2), WeaponSelector()))\n", "score": -8.978563556297075, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -6.846846580505371, -8.96453857421875e-05, -0.00028228759765625, -7.62939453125e-06, -0.007152318488806486, -1.4901160284352954e-05, -0.001552581787109375, -0.016431808471679688, -2.86102294921875e-05, -0.4954912066459656, -0.0006486173951998353, -0.35383841395378113, -4.172325134277344e-06, -0.012890815734863281, -4.9591064453125e-05, -1.2398178577423096, -0.000232696533203125, -6.4849853515625e-05]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "Minion", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 0, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 0, taunt=True)\n", "score": -9.22021973130493, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -9.215473175048828, -0.0001316070556640625, -0.0005464553833007812, -1.9073486328125e-06, -0.0017118453979492188, -1.1444091796875e-05, -0.00010538091737544164, -6.198883056640625e-05]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Damage", "<EOS>", "1", "<EOS>", 63, 205, "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "Call", "args": [{"hole1": 1, "hole0": "Damage", "_type": "Template34"}, {"hole0": "SelfSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=Deathrattle(Damage(1), SelfSelector()))\n", "score": -9.474109569762476, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -6.846846580505371, -8.96453857421875e-05, -0.00028228759765625, -7.62939453125e-06, -0.007152318488806486, -1.4901160284352954e-05, -0.001552581787109375, -0.016431808471679688, -2.86102294921875e-05, -1.287678837776184, -6.198883056640625e-06, -0.1522725224494934, -1.1920922133867862e-06, -0.04217338562011719, -1.9073486328125e-06, -1.1161314249038696, -4.410743713378906e-05, -0.000274658203125]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "1", "<EOS>", 63, 205, "Hero", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "Call", "args": [{"hole1": 1, "hole0": "Heal", "_type": "Template34"}, {"hole0": "HeroSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=Deathrattle(Heal(1), HeroSelector()))\n", "score": -9.605688134055953, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -6.846846580505371, -8.96453857421875e-05, -0.00028228759765625, -7.62939453125e-06, -0.007152318488806486, -1.4901160284352954e-05, -0.001552581787109375, -0.016431808471679688, -2.86102294921875e-05, -0.4954912066459656, -0.0006486173951998353, -1.2115932703018188, -1.9073468138230965e-06, -0.04669666290283203, -7.62939453125e-06, -0.9750432968139648, -0.0005390644073486328, -0.000141143798828125]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 89, 154, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template15", "hole2": "ALL", "hole3": "COMMON"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -9.669648891121597, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -9.642925262451172, -0.00014495849609375, 0.0, -5.0783142796717584e-05, 0.0, 0.0, -5.008325388189405e-06, -2.1457672119140625e-06, -6.16312026977539e-05, 0.0, -0.020861029624938965, 0.0, -3.1232761102728546e-05, 0.0, -0.00012922286987304688, 0.0, -1.9073486328125e-06, -5.53131103515625e-05, -6.103515625e-05, 1.1920926823449918e-07, -9.536738616588991e-07, -0.00022864884522277862, -1.1920928244535389e-07, -0.0007216930389404297, -1.9073486328125e-06, -0.002635955810546875, -1.1444091796875e-05, -3.778933023568243e-05, -7.712841033935547e-05]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -9.758229354741587, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -0.0025386810302734375, -1.1444091796875e-05, -0.00023901430540718138, -9.750846862792969, -0.0014743804931640625]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "Grunt", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 0, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 0, taunt=True)\n", "score": -9.769245467799436, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -9.764384269714355, -1.1920928244535389e-07, -0.000596963451243937, 0.0, -0.0017442703247070312, -1.33514404296875e-05, -0.00027608778327703476, -5.447864532470703e-05]}, {"choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 33, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "FrostwolfGrunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"hole0": "BothPlayer", "_type": "Template39"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=BothPlayer())\n", "score": -9.863755206311424, "score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -9.677780151367188, -0.009515762329101562, -0.17273437976837158, -0.0005677938461303711, -3.814697265625e-05]}, {"choice_history": [70, 147, "<UNK>", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Grunt", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Grunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -10.060713748789084, "score_history": [-7.62939453125e-06, -0.00150299072265625, -10.054767608642578, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -0.0025386810302734375, -1.1444091796875e-05, -0.00023901430540718138, -8.106231689453125e-05]}]}
{"index": 40, "beams": [{"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -0.00403427845088089, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -0.0006798505783081055, -3.814697265625e-06, -0.001560211181640625, -1.1444091796875e-05, -0.0002890816831495613, -6.794929504394531e-05]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "False", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -8.517257569738312, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -0.0006798505783081055, -3.814697265625e-06, -0.001560211181640625, -1.1444091796875e-05, -8.513481140136719, -9.918212890625e-05]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "players", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "players", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, players=True)\n", "score": -8.559758661695405, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -8.539813995361328, -0.0002460479736328125, -0.017810821533203125, -1.71661376953125e-05, -0.00034356117248535156, -0.00010514259338378906]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True)\n", "score": -8.631688950963898, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -8.627805709838867, -6.4849853515625e-05, -0.0019750595092773438, -9.5367431640625e-06, -0.0003771781921386719, -3.4689903259277344e-05]}, {"choice_history": [70, 150, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 93, 196, 33, 205, "Goldshire", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 44, 134, "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "summon", "hole0": {"hole0": "Goldshire", "_type": "Template39"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            Goldshire().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -8.997631388962013, "score_history": [-5.7220458984375e-06, -7.353163719177246, -4.172325134277344e-06, -4.768370445162873e-07, -3.6954811548639555e-06, -0.003444616449996829, -7.2479248046875e-05, -2.861018856492592e-06, -3.24249267578125e-05, -0.0001659393310546875, -3.24249267578125e-05, 0.0, -3.6835670471191406e-05, -3.576278118089249e-07, 0.0, -3.325939178466797e-05, -1.1920928244535389e-07, -9.524822235107422e-05, 0.0, -0.03124237060546875, 0.0, -0.001969575881958008, 0.0, -0.000476837158203125, -1.52587890625e-05, -0.00025248495512641966, -1.740454899845645e-05, -0.05420875549316406, -7.62939453125e-06, -5.7220458984375e-06, -0.00016021728515625, -0.0005950927734375, -1.33514404296875e-05, 0.0, -0.0005199909210205078, -7.62939453125e-06, -0.000392913818359375, 0.0, -0.0023403167724609375, -3.814697265625e-06, -0.00026917457580566406, -7.62939453125e-06, -0.21947574615478516, -0.0001201629638671875, -2.47955322265625e-05, -5.7220458984375e-06, -0.002855539321899414, 0.0, -0.0013103485107421875, -6.103515625e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.00040363919106312096, -3.6954863844584906e-06, -0.00034332275390625, -9.918212890625e-05, -1.9073486328125e-06, -0.0016955060418695211, -0.00019073486328125, -0.0006847381591796875, 0.0, -0.08951573073863983, -5.7220458984375e-06, -0.0011444091796875, -0.005396842956542969, -0.001155853271484375, -0.0002956390380859375, -0.0025482177734375, -0.013673409819602966, -0.321340948343277, -0.3316676914691925, -7.748603820800781e-06, -0.0021991729736328125, -0.013040542602539062, -3.814697265625e-06, -0.313854455947876, -1.9073486328125e-06, -0.01377105712890625, -3.0517578125e-05, -0.000716090202331543, -8.106231689453125e-06, -0.036041259765625, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0026220083236694336, -7.62939453125e-06, -0.0003871917724609375, -0.0002079010009765625, -2.6702880859375e-05, -5.53131103515625e-05, 0.0, -0.0002881288528442383, 0.0, -0.0009175539016723633, 0.0, -1.9073486328125e-06, -0.00112152099609375, -0.0037708282470703125, -0.012022614479064941, 0.0, -0.0098876953125, -0.00026702880859375, -0.00933837890625, -0.0004291534423828125, -3.62396240234375e-05, -2.8848648071289062e-05, -0.0076541900634765625, -0.00023853778839111328, -1.9073486328125e-06, -2.6702880859375e-05, -3.8146954466355965e-06, -2.2172904209583066e-05, -0.00016021728515625, -0.011835098266601562, -0.00041961669921875, -0.0032558441162109375, -0.0010499954223632812, -0.00347137451171875, -9.5367431640625e-06, -0.00390625, -4.57763671875e-05, -0.0003337860107421875, -9.5367431640625e-06, -0.03782761096954346, -5.7220458984375e-06, -0.0065784454345703125, 0.0, -0.023016929626464844, -3.814697265625e-06, -0.001291513442993164, -5.14984130859375e-05, -0.0028448104858398438, -0.0003719329833984375, -0.000255584716796875, -0.0002346038818359375, -5.7220458984375e-06, 0.0, -0.005422224756330252, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0018604992656037211, 0.0, -0.009411334991455078, -1.9073486328125e-06, -0.0026264190673828125, -0.001651763916015625, -3.4332275390625e-05, -0.0013284683227539062, -1.9073486328125e-05, -0.00548166548833251, -7.62939453125e-06]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "1", "<EOS>", 63, 205, "Hero", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "Call", "args": [{"hole1": 1, "hole0": "Heal", "_type": "Template34"}, {"hole0": "HeroSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=Deathrattle(Heal(1), HeroSelector()))\n", "score": -9.239795861240218, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -0.0006798505783081055, -3.814697265625e-06, -7.655702114105225, -9.1552734375e-05, -0.00029754638671875, -9.5367431640625e-06, -0.007527470123022795, -1.7046926586772315e-05, -0.0015811920166015625, -0.014994621276855469, -2.86102294921875e-05, -0.5233713388442993, -0.0004434581205714494, -0.02417510747909546, -2.0265558760002023e-06, -0.04358673095703125, -9.5367431640625e-06, -0.9653205871582031, -0.00039446353912353516, -0.0001373291015625]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 89, 154, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template15", "hole2": "ALL", "hole3": "COMMON"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -9.585669873943687, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.541370391845703, -0.0002155303955078125, 0.0, -4.053115117130801e-05, 0.0, 0.0, -1.9073486328125e-05, -5.364403477869928e-06, -4.3511390686035156e-05, 0.0, -0.04009449481964111, 0.0, -2.2411340978578664e-05, 0.0, -0.0001956224296009168, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -7.43865966796875e-05, -1.1920926823449918e-07, -1.1920922133867862e-06, -1.9550292563508265e-05, 0.0, -0.0007498264312744141, -3.814697265625e-06, -0.00173187255859375, -1.1444091796875e-05, -0.0001540182565804571, -5.841255187988281e-05]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "enrage", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, enrage=True)\n", "score": -9.725168703271656, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -9.66064739227295, -3.814697265625e-06, -0.062530517578125, -1.33514404296875e-05, -0.0005221364554017782, -2.956390380859375e-05]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "1", "<EOS>", 63, 205, "Weapon", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "Call", "args": [{"hole1": 1, "hole0": "Heal", "_type": "Template34"}, {"hole0": "WeaponSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=Deathrattle(Heal(1), WeaponSelector()))\n", "score": -9.856174049373458, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -0.0006798505783081055, -3.814697265625e-06, -7.655702114105225, -9.1552734375e-05, -0.00029754638671875, -9.5367431640625e-06, -0.007527470123022795, -1.7046926586772315e-05, -0.0015811920166015625, -0.014994621276855469, -2.86102294921875e-05, -0.5233713388442993, -0.0004434581205714494, -0.02417510747909546, -2.0265558760002023e-06, -0.04358673095703125, -9.5367431640625e-06, -1.582066535949707, -9.1552734375e-05, -7.2479248046875e-05]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "Call", "args": [{"hole1": 1, "hole0": "Heal", "_type": "Template34"}, {"hole0": "MinionSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=Deathrattle(Heal(1), MinionSelector()))\n", "score": -9.87694650649626, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -0.0006798505783081055, -3.814697265625e-06, -7.655702114105225, -9.1552734375e-05, -0.00029754638671875, -9.5367431640625e-06, -0.007527470123022795, -1.7046926586772315e-05, -0.0015811920166015625, -0.014994621276855469, -2.86102294921875e-05, -0.5233713388442993, -0.0004434581205714494, -0.02417510747909546, -2.0265558760002023e-06, -0.04358673095703125, -9.5367431640625e-06, -1.602959156036377, -1.52587890625e-05, -2.86102294921875e-05]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -9.952633855400954, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -0.0006798505783081055, -3.814697265625e-06, -0.001560211181640625, -1.1444091796875e-05, -0.0002890816831495613, -9.947288513183594, -0.0013790130615234375]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "spell_targetable", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, spell_targetable=True)\n", "score": -10.00888240171701, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -10.000658988952637, 0.0, -0.006024360656738281, -1.33514404296875e-05, -0.000682949845213443, -8.082389831542969e-05]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n", "score": -10.0434285371661, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -10.039708137512207, -7.62939453125e-06, -7.62939453125e-06, -7.05718994140625e-05, -5.53131103515625e-05, -1.9073486328125e-06, -9.536738616588991e-07, -2.7775735361501575e-05, 0.0, -0.000690460205078125, -3.814697265625e-06, -0.0011911392211914062, -1.1444091796875e-05, -0.0004248599580023438, -6.258487701416016e-05]}, {"choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GoldshireFootman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -10.069516657125114, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -10.063458442687988, 0.0, -7.987022399902344e-06, 0.0, -0.002505421405658126, 0.0, -9.5367431640625e-06, -7.2479248046875e-05, -3.4332275390625e-05, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.4199451218009926e-05, 0.0, -0.0005615949630737305, -3.814697265625e-06, -0.001445770263671875, -1.1444091796875e-05, -0.0002473588683642447, -5.650520324707031e-05]}, {"choice_history": [70, 147, "<UNK>", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Footman", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Footman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -10.326702831391621, "score_history": [-5.7220458984375e-06, -0.0007228851318359375, -10.322701454162598, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -0.0006798505783081055, -3.814697265625e-06, -0.001560211181640625, -1.1444091796875e-05, -0.0002890816831495613, -6.794929504394531e-05]}]}
{"index": 41, "beams": [{"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -0.3044710702073701, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -0.18950340151786804, -5.8412379075889476e-06, -0.00180816650390625, -0.000125885009765625, -0.000461578369140625, -7.62939453125e-05, -3.0274270102381706e-05, -0.0006284713745117188, -1.1920928244535389e-07, -0.0010662078857421875, -0.000171661376953125, -9.5367431640625e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0013089001877233386, -0.0007832050323486328, 0.0, -0.0029697418212890625, -0.0001392364501953125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0015395879745483398, -2.86102294921875e-05, -0.005277752876281738, -3.0517578125e-05, -0.000469207763671875, 0.0, -0.0007528065470978618, -0.0006353855133056641, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -2.1960451173121385, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -2.0822384357452393, -1.752369644236751e-05, -0.000606536865234375, -0.0006885528564453125, -0.000762939453125, -0.0001354217529296875, -7.445155642926693e-05, -0.0004322528839111328, -1.1920928244535389e-07, -0.0012493133544921875, -0.00022125244140625, -9.5367431640625e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.0010136603377759457, -0.0006878376007080078, 0.0, -0.002819061279296875, -0.0001373291015625, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -0.0011504888534545898, -1.71661376953125e-05, -0.005180478096008301, -2.86102294921875e-05, -0.00051116943359375, 0.0, -0.0007274149684235454, -0.0007002353668212891, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 201, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>", 237, 62, 204, "Aura", "<EOS>", 238, 58, 192, "1", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38", "hole2": [{"hole1": [{"hole0": 1, "_type": "Template33"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38_expr_seq"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())), Aura(ChangeHealth(1\n            ), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -4.1058898204315994, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -3.161221504211426, -0.001748800277709961, -1.9550314391381107e-05, -9.5367431640625e-06, -0.1446380615234375, -0.00035858154296875, -0.6651266813278198, -2.467625745339319e-05, -0.0001888275146484375, -0.0004253387451171875, -0.0009937286376953125, -0.00012969970703125, -6.118393503129482e-05, -0.001222848892211914, -1.1920928244535389e-07, -0.0005645751953125, -0.00030517578125, -7.62939453125e-06, -6.29425048828125e-05, -5.7220458984375e-06, -0.001073617022484541, -0.0006763935089111328, 0.0, -0.0033550262451171875, -0.0001392364501953125, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -0.0015796422958374023, -3.4332275390625e-05, -0.005306363105773926, -4.00543212890625e-05, -0.0005016326904296875, 0.0, -0.0007359980372712016, -0.0007688999176025391, -9.5367431640625e-06, 0.0, -0.0002651214599609375, -0.00012969970703125, -0.031076431274414062, -0.0011768341064453125, -3.814697265625e-06, -0.035552978515625, -0.005520820617675781, -0.00016780616715550423, -2.622600959512056e-06, -0.0072231292724609375, -2.86102294921875e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.0009781867265701294, -0.0008279085159301758, 0.0, -0.000659942626953125, -0.000820159912109375, -9.5367431640625e-06, -4.76837158203125e-05, -5.7220458984375e-06, -0.00040419274591840804, -0.0003210306167602539, 0.0, -0.003093719482421875, -9.72747802734375e-05, -2.09808349609375e-05, -2.6702880859375e-05, 0.0, -0.0014498233795166016, -2.6702880859375e-05, -0.006349682807922363, -3.24249267578125e-05, -0.0005550384521484375, 0.0, -0.0009474753751419485, -0.00037980079650878906, -7.62939453125e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 201, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>", 237, 62, 204, "Aura", "<EOS>", 238, 58, 192, "1", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38", "hole2": [{"hole1": [{"hole0": 1, "_type": "Template33"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38_expr_seq"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())), Aura(ChangeHealth(1\n            ), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -4.423932371281502, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -3.161221504211426, -0.001748800277709961, -1.9550314391381107e-05, -9.5367431640625e-06, -0.1446380615234375, -0.00035858154296875, -0.9832719564437866, -6.794924956921022e-06, -0.0005207061767578125, -8.20159912109375e-05, -0.000598907470703125, -0.0001277923583984375, -3.0021416023373604e-05, -0.0010628700256347656, 0.0, -0.001033782958984375, -0.000274658203125, -5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -0.0007771840319037437, -0.0007139444351196289, 0.0, -0.0033397674560546875, -0.0001239776611328125, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -0.0015871524810791016, -3.814697265625e-05, -0.005390286445617676, -3.4332275390625e-05, -0.0005092620849609375, 0.0, -0.0007393358973786235, -0.0007288455963134766, -1.1444091796875e-05, 0.0, -0.000255584716796875, -0.000133514404296875, -0.03171360492706299, -0.001163482666015625, -3.814697265625e-06, -0.0351104736328125, -0.005591392517089844, -0.00016625318676233292, -2.622600959512056e-06, -0.0072078704833984375, -2.86102294921875e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.0009750127792358398, -0.0008183717727661133, 0.0, -0.0006504058837890625, -0.000827789306640625, -9.5367431640625e-06, -4.76837158203125e-05, -5.7220458984375e-06, -0.00040085590444505215, -0.0003210306167602539, 0.0, -0.00311279296875, -9.72747802734375e-05, -2.09808349609375e-05, -2.6702880859375e-05, 0.0, -0.001486063003540039, -2.6702880859375e-05, -0.006382107734680176, -3.24249267578125e-05, -0.0005588531494140625, 0.0, -0.000953197421040386, -0.00038170814514160156, -5.7220458984375e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "5", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 5, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(5), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -4.473294582270142, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -4.3594231605529785, -1.561632234370336e-05, -0.0009059906005859375, -0.000377655029296875, -0.00025177001953125, -5.340576171875e-05, -2.3592263460159302e-05, -0.0001822709891712293, -1.1920928244535389e-07, -0.00128173828125, -0.00026702880859375, -7.62939453125e-06, -7.82012939453125e-05, -9.5367431640625e-06, -0.0011737248860299587, -0.0009948015213012695, 0.0, -0.0029354095458984375, -0.0001316070556640625, -1.52587890625e-05, -3.0517578125e-05, 0.0, -0.0012935400009155273, -2.288818359375e-05, -0.005420804023742676, -2.6702880859375e-05, -0.00046539306640625, 0.0, -0.0007480381755158305, -0.0006411075592041016, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "Until", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 0, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(0), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -4.92322310603177, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -4.805194854736328, -3.039828152395785e-05, -0.001880645751953125, -0.0006771087646484375, -0.0002880096435546875, -0.0001163482666015625, -0.0001827799715101719, -0.001265883445739746, -1.1920928244535389e-07, -0.000705718994140625, -0.0002117156982421875, -9.5367431640625e-06, -7.62939453125e-05, -1.52587890625e-05, -0.003249355359002948, -0.0012763738632202148, 0.0, -0.00258636474609375, -0.0001506805419921875, -1.52587890625e-05, -3.0517578125e-05, 0.0, -0.0015397071838378906, -2.86102294921875e-05, -0.005312085151672363, -3.0517578125e-05, -0.000446319580078125, 0.0, -0.0007387398509308696, -0.0006468296051025391, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "Change", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 0, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(0), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -4.966072508062474, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -4.8487043380737305, -0.0012813068460673094, -0.001861572265625, -0.00030517578125, -0.000255584716796875, -4.00543212890625e-05, -0.00019821804016828537, -0.0007615089416503906, 0.0, -0.0004940032958984375, -0.0002307891845703125, -9.5367431640625e-06, -8.20159912109375e-05, -1.33514404296875e-05, -0.002573313657194376, -0.001675248146057129, 0.0, -0.002651214599609375, -0.0001583099365234375, -1.52587890625e-05, -3.4332275390625e-05, 0.0, -0.0011734962463378906, -2.09808349609375e-05, -0.005170941352844238, -2.6702880859375e-05, -0.000446319580078125, 0.0, -0.0006830691127106547, -0.0006887912750244141, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "Minion", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 0, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(0), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -5.47966162684444, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -5.362629413604736, -0.0007622204138897359, -0.0030765533447265625, -0.0004177093505859375, -0.000278472900390625, -0.0001544952392578125, -0.00013384409248828888, -0.0005774497985839844, 0.0, -0.001361846923828125, -0.0002307891845703125, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -0.001218406017869711, -0.0005658864974975586, 0.0, -0.0024929046630859375, -0.000152587890625, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -0.0015376806259155273, -2.47955322265625e-05, -0.005396008491516113, -2.86102294921875e-05, -0.0005130767822265625, 0.0, -0.0007981060771271586, -0.0006754398345947266, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -5.585548270146234, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -5.2292704582214355, 0.0, -0.00016700341075193137, 0.0, -0.0003013609384652227, 0.0, -1.9073486328125e-06, -0.0011310577392578125, -0.0001583099365234375, -2.5033941710717045e-06, -4.6491513785440475e-06, -9.334539936389774e-05, -5.8412379075889476e-06, -0.0013115170877426863, -1.1920928244535389e-07, -8.20159912109375e-05, -0.047916412353515625, -0.0017282962799072266, -0.0005730390548706055, -2.86102294921875e-05, -0.032806396484375, -0.000804901123046875, -0.24754860997200012, -5.960446742392378e-06, -0.0018253326416015625, -0.0001239776611328125, -0.000385284423828125, -7.2479248046875e-05, -2.9199523851275444e-05, -0.0006382465362548828, -1.1920928244535389e-07, -0.0010814666748046875, -0.0001811981201171875, -9.5367431640625e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0012972261756658554, -0.0007736682891845703, 0.0, -0.003002166748046875, -0.0001392364501953125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0015319585800170898, -2.86102294921875e-05, -0.005279660224914551, -3.0517578125e-05, -0.000461578369140625, 0.0, -0.0007545946864411235, -0.0006296634674072266, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.PIRATE), BothPlayer()))])\n", "score": -6.388224774242559, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -0.18950340151786804, -5.8412379075889476e-06, -0.00180816650390625, -0.000125885009765625, -0.000461578369140625, -7.62939453125e-05, -3.0274270102381706e-05, -0.0006284713745117188, -1.1920928244535389e-07, -0.0010662078857421875, -0.000171661376953125, -9.5367431640625e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0013089001877233386, -0.0007832050323486328, 0.0, -0.0029697418212890625, -0.0001392364501953125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0015395879745483398, -2.86102294921875e-05, -6.084996223449707, 0.0, -0.0031404495239257812, 0.0, -0.0006951082614250481, -0.0020608901977539062, -3.62396240234375e-05]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 39, 110, 21, 134, "<UNK>", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "<UNK>", "_type": "Name"}}, {"hole1": [{"hole0": 1, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(<UNK>(IsType(MINION_TYPE.MURLOC),\n            BothPlayer()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -6.599656953026539, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -3.6416072845458984, -0.0001010894775390625, -0.000125885009765625, -0.000244140625, -2.0212152004241943, -0.05846543610095978, -0.0016326904296875, -0.035121917724609375, -0.0002002716064453125, -0.0001964569091796875, -1.33514404296875e-05, -0.5474279522895813, -0.03060559742152691, -1.1920928244535389e-07, -0.009378433227539062, -0.002147674560546875, -5.340576171875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.005924224387854338, -3.8743019104003906e-05, -0.005537271499633789, -1.1444091796875e-05, -0.0008678436279296875, 0.0, -0.0020810363348573446, -0.0014139413833618164, -1.71661376953125e-05, -0.09831714630126953, -0.004197120666503906, -7.164478302001953e-05, -7.867813110351562e-06, -1.52587890625e-05, -0.060097694396972656, -0.000396728515625, -0.006376594305038452, -9.477036655880511e-05, -0.00043070275569334626, -1.0132789611816406e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 39, 110, 21, 134, "Murloc", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "Murloc", "_type": "Name"}}, {"hole1": [{"hole0": 1, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(Murloc(IsType(MINION_TYPE.MURLOC),\n            BothPlayer()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -6.65206055750005, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -3.6416072845458984, -0.0001010894775390625, -0.000125885009765625, -0.000244140625, -1.8640575408935547, -0.007573843002319336, -0.000347137451171875, -0.044060707092285156, -2.47955322265625e-05, -0.0001316070556640625, -1.71661376953125e-05, -0.7865890264511108, -0.0342809297144413, -1.1920928244535389e-07, -0.013658523559570312, -0.01177215576171875, -8.7738037109375e-05, -5.340576171875e-05, 0.0, -0.007058023475110531, -2.384185791015625e-05, -0.005993247032165527, -7.62939453125e-06, -0.00026702880859375, 0.0, -0.0020570755004882812, -0.0017722845077514648, -1.71661376953125e-05, -0.09849834442138672, -0.0040225982666015625, -7.534027099609375e-05, -7.867813110351562e-06, -1.71661376953125e-05, -0.05521583557128906, -0.0003833770751953125, -0.006210237741470337, -9.584328654455021e-05, -0.0004312988603487611, -1.0132789611816406e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 63, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, {"hole0": "BothPlayer", "_type": "Template39"}], "func": {"id": "MinionSelector", "_type": "Name"}}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MECH), BothPlayer()))])\n", "score": -7.061258608502982, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -0.18950340151786804, -5.8412379075889476e-06, -0.00180816650390625, -0.000125885009765625, -0.000461578369140625, -7.62939453125e-05, -3.0274270102381706e-05, -0.0006284713745117188, -1.1920928244535389e-07, -0.0010662078857421875, -0.000171661376953125, -9.5367431640625e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0013089001877233386, -0.0007832050323486328, 0.0, -0.0029697418212890625, -0.0001392364501953125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0015395879745483398, -2.86102294921875e-05, -6.757809638977051, 0.0, -0.0035791397094726562, 0.0, -0.0013947483384981751, -0.0011410713195800781, -3.814697265625e-05]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 198, "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole0": "", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[()])\n", "score": -7.784547197444603, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -7.077140808105469, -0.691166877746582]}, {"choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 198, "Aura", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GrimscaleOracle", "hole2": [{"hole1": 1, "hole0": "Grimscale Oracle", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras", "hole3": {"hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura()])\n", "score": -8.241352188213035, "score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -7.077140808105469, -1.1479101181030273, -6.175041198730469e-05]}]}
{"index": 42, "beams": [{"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -0.0733489926076345, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -0.025213956832885742, -3.814697265625e-06, -1.4543528777721804e-05, 0.0, -1.1444091796875e-05, -0.01265716552734375, -0.000213623046875, -0.0005897283554077148, 0.0, -4.0531158447265625e-06, 0.0]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Minion", "<EOS>", "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 5, "hole0": "Minion", "_type": "Template30", "hole2": 6}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_weapon(self, player):\n        return Minion(5, 6)\n", "score": -4.398413887835204, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -3.8359954357147217, -3.0517578125e-05, -9.024075552588329e-05, 0.0, -1.33514404296875e-05, -0.1261768341064453, -0.4012012481689453, -3.933906555175781e-06, -6.4849853515625e-05, -0.00012969970703125, -5.709961988031864e-05, -6.079673767089844e-06, -3.933898824470816e-06]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "5", "<EOS>", "6", "<EOS>", 244, 66, 175, "Character", "Attack", "<EOS>", 237, 63, 205, "Is", "Hero", "<EOS>", 237, 50, 169, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 5, "hole0": "Minion", "_type": "Template30", "hole2": 6, "hole3": [{"hole1": [{"hole0": "IsHero", "_type": "Template39"}], "hole0": "CharacterAttack", "_type": "Template20", "hole2": [{"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template19", "hole3": "HeroSelector"}]}]}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_weapon(self, player):\n        return Minion(5, 6, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Heal(6), HeroSelector()))])\n", "score": -5.256632017271613, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -3.8359954357147217, -3.0517578125e-05, -9.024075552588329e-05, 0.0, -1.33514404296875e-05, -0.1261768341064453, -1.1226625442504883, -2.491474151611328e-05, -5.7220458984375e-06, -0.00177764892578125, -2.1219027985353023e-05, -4.88758041683468e-06, -1.1205610462639015e-05, -0.0021228790283203125, -0.0027332305908203125, -0.00789642333984375, -0.06140667200088501, -0.010366559028625488, 0.0, -0.004360198974609375, -0.00527191162109375, -0.0001583099365234375, -0.00818169116973877, -0.016146136447787285, -1.3470649719238281e-05, -1.71661376953125e-05, -0.000621795654296875, -0.000164031982421875, -0.002618311205878854, -7.5101784204889555e-06, -1.9073486328125e-06, -0.005435943603515625, 0.0, -0.003115816041827202, 0.0, -0.004515528678894043, -2.1338462829589844e-05, 0.0]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "5", "<EOS>", "6", "<EOS>", "deathrattle", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "6", "<EOS>", 53, 182, "Hero", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template22", "hole2": "deathrattle", "hole3": {"_type": "Call", "args": [{"hole1": 6, "hole0": "Heal", "_type": "Template34"}, {"hole1": "EnemyPlayer", "hole0": "HeroSelector", "_type": "Template26"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6, deathrattle=Deathrattle(Heal(6), HeroSelector(\n            EnemyPlayer())))\n", "score": -5.303817458538774, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -0.025213956832885742, -3.814697265625e-06, -1.4543528777721804e-05, 0.0, -1.1444091796875e-05, -4.3953857421875, -0.002773284912109375, -0.0004138946533203125, -1.1920928244535389e-07, -2.1457672119140625e-06, 0.0, -0.5506339073181152, -1.1920928244535389e-07, -0.000244140625, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00034570679417811334, -9.5367431640625e-06, -2.47955322265625e-05, -0.0003452301025390625, -5.7220458984375e-05, -0.006216793321073055, -0.0019116149051114917, -0.0010059624910354614, -0.00018368464952800423, -0.024377822875976562, -0.0022792816162109375, -0.01357579231262207, -0.0010551338782534003, -2.741813204920618e-06, -0.24087107181549072, -0.0021971464157104492, -6.79492904964718e-06]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Guardian", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Guardian", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Guardian(6),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -6.1628509607241995, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -6.04588508605957, -0.004732965957373381, -0.019781112670898438, -0.014955520629882812, 0.0, -0.00021068926434963942, -3.814697265625e-06, -0.0006028413772583008, -3.802776336669922e-05, 0.0, -0.01703500747680664, -3.814697265625e-06, -1.5139572496991605e-05, 0.0, -9.5367431640625e-06, -0.03523063659667969, -0.000232696533203125, -0.0005477666854858398, 0.0, -4.0531158447265625e-06, 0.0]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_weapon(self, player):\n        return Minion(5, 6)\n", "score": -6.558472507064572, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -3.8359954357147217, -3.0517578125e-05, -9.024075552588329e-05, 0.0, -1.33514404296875e-05, -2.6856985092163086, -0.0013446807861328125, -0.0006546974182128906, -2.3841855067985307e-07, -4.0531158447265625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Guardian", "of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianofKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianofKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -6.667022239621474, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -6.233474254608154, -0.364388644695282, -0.00025188003201037645, -5.722029527532868e-06, -1.9073486328125e-06, -3.254413604736328e-05, -5.53131103515625e-05, -0.0045642852783203125, -0.0001087188720703125, -2.622600959512056e-06, -0.001279816497117281, -2.562999361543916e-05, -2.682209014892578e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001512765884399414, -5.245195097813848e-06, -0.0014935731887817383, 0.0, -0.00032460689544677734, 0.0, -0.011202812194824219, -0.000766754150390625, -0.005422067362815142, -0.00013338679855223745, -0.0043773651123046875, -0.00025177001953125, 0.0, -0.00036306315450929105, -5.7220458984375e-06, -0.0003281831741333008, -3.9696693420410156e-05, -1.9073486328125e-06, -0.02568984031677246, -3.814697265625e-06, -1.6450876501039602e-05, 0.0, -1.1444091796875e-05, -0.010530471801757812, -0.00017547607421875, -0.0006107091903686523, 0.0, -4.0531158447265625e-06, 0.0]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "WARRIOR", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -6.838279831428508, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -6.762377738952637, 0.0, -0.0004922151565551758, 0.0, -0.014451026916503906, -0.0007152557373046875, -0.005364278331398964, -0.00014065760478843004, -0.0054531097412109375, -0.0002498626708984375, 0.0, -0.00033207706292159855, -5.7220458984375e-06, -0.00031280517578125, -4.553794860839844e-05, -1.9073486328125e-06, -0.025729775428771973, -3.814697265625e-06, -1.4543528777721804e-05, 0.0, -1.1444091796875e-05, -0.0112152099609375, -0.0001964569091796875, -0.0005859136581420898, 0.0, -4.0531158447265625e-06, 0.0]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 16, 110, 21, 134, "Battlecry", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "6", "<EOS>", 53, 182, "Hero", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"_type": "Call", "args": [{"hole1": 6, "hole0": "Heal", "_type": "Template34"}, {"hole1": "EnemyPlayer", "hole0": "HeroSelector", "_type": "Template26"}], "func": {"id": "Battlecry", "_type": "Name"}}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -6.869060542356898, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -5.551296234130859, -0.0001964569091796875, -4.1961669921875e-05, -1.9073486328125e-06, -0.0011020898818969727, -3.814697265625e-06, -0.16687774658203125, -0.5477437973022461, -0.0006313323974609375, -0.20137155055999756, -6.663752719759941e-05, -0.03643590211868286, -2.992108420585282e-05, -0.04690265655517578, -0.000156402587890625, -0.1410273313522339, -0.000537751882802695, -1.1920928244535389e-07, -0.1366291344165802, -0.00032222268055193126, -1.9073486328125e-06, -1.9550323486328125e-05, 0.0, -0.00040793418884277344, 0.0, -1.9073486328125e-06, -0.020610809326171875, -2.6702880859375e-05, -0.004196882247924805, -1.1920928244535389e-07, -3.933906555175781e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "6", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 6, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -7.51455747437079, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -0.025213956832885742, -3.814697265625e-06, -1.4543528777721804e-05, 0.0, -1.1444091796875e-05, -0.01265716552734375, -0.000213623046875, -7.441745281219482, -1.1920928244535389e-07, -5.6743596360320225e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 90, 178, "5", "<EOS>", "6", "<EOS>", "deathrattle", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "6", "<EOS>", 53, 182, "Hero", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template22", "hole2": "deathrattle", "hole3": {"_type": "Call", "args": [{"hole1": 6, "hole0": "Heal", "_type": "Template34"}, {"hole1": "EnemyPlayer", "hole0": "HeroSelector", "_type": "Template26"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_weapon(self, player):\n        return Minion(5, 6, deathrattle=Deathrattle(Heal(6), HeroSelector(\n            EnemyPlayer())))\n", "score": -7.8718816794987205, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -3.8359954357147217, -3.0517578125e-05, -9.024075552588329e-05, 0.0, -1.33514404296875e-05, -3.2914161682128906, -0.0030612945556640625, -0.0010089874267578125, -2.3841855067985307e-07, -2.2649765014648438e-06, 0.0, -0.41633927822113037, -1.1920928244535389e-07, -0.0002536773681640625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00037181362858973444, -9.5367431640625e-06, -2.6702880859375e-05, -0.000377655029296875, -5.53131103515625e-05, -0.006376394536346197, -0.001882691285572946, -0.0010059624910354614, -0.00018809456378221512, -0.024190902709960938, -0.0022411346435546875, -0.01362156867980957, -0.0010467895772308111, -2.741813204920618e-06, -0.2354266494512558, -0.002187371253967285, -6.675719760096399e-06]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "5", "<EOS>", "6", "<EOS>", "enrage", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "0", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Restore", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template22", "hole2": "enrage", "hole3": {"hole1": [{"hole0": 0, "_type": "Template32"}, {"hole1": "Restore", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6, enrage=[Aura(ChangeAttack(0), MinionSelector(\n            Restore()))])\n", "score": -8.010959871656944, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -0.025213956832885742, -3.814697265625e-06, -1.4543528777721804e-05, 0.0, -1.1444091796875e-05, -4.3953857421875, -0.002773284912109375, -0.0004138946533203125, -1.1920928244535389e-07, -2.1457672119140625e-06, 0.0, -1.2215123176574707, 0.0, -0.00435638427734375, -0.02013683319091797, -0.05502617359161377, -7.62939453125e-06, -1.9073486328125e-06, -0.5126914978027344, -9.72747802734375e-05, -0.5847511887550354, -2.09808349609375e-05, -0.11375236511230469, -0.0005207061767578125, -0.8695449233055115, -0.0004487037658691406, -5.1140759751433507e-05, -0.16452248394489288, -0.005057751666754484]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "5", "<EOS>", "6", "<EOS>", "deathrattle", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "6", "<EOS>", 53, 182, "Hero", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": 7, "hole0": "Guardian of Kings", "hole2": "PALADIN", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole3": "battlecry"}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template22", "hole2": "deathrattle", "hole3": {"_type": "Call", "args": [{"hole1": 6, "hole0": "Heal", "_type": "Template34"}, {"hole1": "Adjacent", "hole0": "HeroSelector", "_type": "Template26"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6, deathrattle=Deathrattle(Heal(6), HeroSelector(\n            Adjacent())))\n", "score": -8.099600143584425, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -0.025213956832885742, -3.814697265625e-06, -1.4543528777721804e-05, 0.0, -1.1444091796875e-05, -4.3953857421875, -0.002773284912109375, -0.0004138946533203125, -1.1920928244535389e-07, -2.1457672119140625e-06, 0.0, -0.5506339073181152, -1.1920928244535389e-07, -0.000244140625, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00034570679417811334, -9.5367431640625e-06, -2.47955322265625e-05, -0.0003452301025390625, -5.7220458984375e-05, -0.006216793321073055, -0.0019116149051114917, -0.0010059624910354614, -0.00018368464952800423, -0.024377822875976562, -0.0022792816162109375, -0.01357579231262207, -0.0010551338782534003, -2.741813204920618e-06, -3.038832187652588, -2.551055331423413e-05]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Guardian", " ", "of", " ", "Kings", "<EOS>", 46, 139, "7", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "choices", "<EOS>", 32, 201, "Choice", "<EOS>", 239, 63, 205, "Guardian", "<UNK>", "<EOS>", 59, 193, "Heal", "<EOS>", "6", "<EOS>", 63, 205, "Hero", "Selector", "<EOS>", 237, 62, 204, "Choice", "<EOS>", 238, 63, 205, "Bounce", "<EOS>", 63, 205, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"hole1": [{"hole0": "Guardian<UNK>", "_type": "Template39"}, {"hole1": 6, "hole0": "Heal", "_type": "Template34"}, {"hole0": "HeroSelector", "_type": "Template39"}], "hole0": "Choice", "_type": "Template38", "hole2": [{"hole1": [{"hole0": "Bounce", "_type": "Template39"}, {"hole0": "SelfSelector", "_type": "Template39"}], "hole0": "Choice", "_type": "Template38_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, choices=[Choice(Guardian<UNK>(), Heal(6),\n            HeroSelector()), Choice(Bounce(), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -10.968944276865841, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -5.463125228881836, -0.0004634857177734375, -6.67572021484375e-05, -1.9073486328125e-06, -6.914136611158028e-05, 0.0, -1.1682510375976562e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0006198883056640625, -1.823885577323381e-05, -3.0517576306010596e-05, -2.586841583251953e-05, -7.104873657226562e-05, -2.551078432588838e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00023186206817626953, -1.0967240996251348e-05, -3.0517578125e-05, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.613357305061072e-05, 0.0, -0.06465387344360352, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001277923583984375, 0.0, -0.2553931474685669, 0.0, -0.0017299652099609375, -0.07530975341796875, -0.0001354217529296875, -1.0620832443237305, 0.0, -0.042049407958984375, -0.01277923583984375, -0.0005817413330078125, -3.933906555175781e-06, -0.0011272430419921875, -9.5367431640625e-05, -5.7220458984375e-06, -0.11009940505027771, -0.7521671056747437, -0.0003875493712257594, -0.0048236846923828125, -1.1444091796875e-05, -0.011603116057813168, -0.0009476714767515659, -0.008427023887634277, -1.4424220353248529e-05, -0.02239227294921875, -7.62939453125e-06, -0.6362094879150391, -7.843971252441406e-05, -1.9073486328125e-06, 0.0, -0.0001163482666015625, -8.20159912109375e-05, -0.3572462797164917, -1.9073486328125e-06, -0.6243391036987305, -0.09076499938964844, -3.814697265625e-06, -0.6273879408836365, -0.0069735050201416016, -0.6723470687866211, -5.7220458984375e-06, -0.02744043618440628, -7.748603820800781e-06, -0.000301361083984375, -0.0026721954345703125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, 0.0, -0.012186050415039062, -1.9073486328125e-05, -0.014670491218566895, 0.0, -3.933906555175781e-06, 0.0]}, {"choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Guardian", " ", "of", " ", "Kings", "<EOS>", 46, 139, "7", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "choices", "<EOS>", 32, 201, "Choice", "<EOS>", 239, 63, 205, "Guardian", "<UNK>", "<EOS>", 59, 193, "Heal", "<EOS>", "6", "<EOS>", 63, 205, "Hero", "Selector", "<EOS>", 237, 62, 204, "Choice", "<EOS>", 238, 63, 205, "Bounce", "<EOS>", 53, 182, "Transform", "<EOS>", "Restore", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GuardianOfKings", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"hole1": [{"hole0": "Guardian<UNK>", "_type": "Template39"}, {"hole1": 6, "hole0": "Heal", "_type": "Template34"}, {"hole0": "HeroSelector", "_type": "Template39"}], "hole0": "Choice", "_type": "Template38", "hole2": [{"hole1": [{"hole0": "Bounce", "_type": "Template39"}, {"hole1": "Restore", "hole0": "Transform", "_type": "Template26"}], "hole0": "Choice", "_type": "Template38_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}], "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, choices=[Choice(Guardian<UNK>(), Heal(6),\n            HeroSelector()), Choice(Bounce(), Transform(Restore()))])\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -13.723820961383353, "score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -5.463125228881836, -0.0004634857177734375, -6.67572021484375e-05, -1.9073486328125e-06, -6.914136611158028e-05, 0.0, -1.1682510375976562e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0006198883056640625, -1.823885577323381e-05, -3.0517576306010596e-05, -2.586841583251953e-05, -7.104873657226562e-05, -2.551078432588838e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00023186206817626953, -1.0967240996251348e-05, -3.0517578125e-05, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.613357305061072e-05, 0.0, -0.06465387344360352, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001277923583984375, 0.0, -0.2553931474685669, 0.0, -0.0017299652099609375, -0.07530975341796875, -0.0001354217529296875, -1.0620832443237305, 0.0, -0.042049407958984375, -0.01277923583984375, -0.0005817413330078125, -3.933906555175781e-06, -0.0011272430419921875, -9.5367431640625e-05, -5.7220458984375e-06, -0.11009940505027771, -0.7521671056747437, -0.0003875493712257594, -0.0048236846923828125, -1.1444091796875e-05, -0.011603116057813168, -0.0009476714767515659, -0.008427023887634277, -1.4424220353248529e-05, -0.02239227294921875, -7.62939453125e-06, -0.6362094879150391, -7.843971252441406e-05, -1.9073486328125e-06, 0.0, -0.0001163482666015625, -8.20159912109375e-05, -0.3572462797164917, -1.9073486328125e-06, -0.6243391036987305, -0.09076499938964844, -3.814697265625e-06, -0.6273879408836365, -0.0069735050201416016, -0.9125432968139648, -4.9591064453125e-05, -0.805085301399231, -1.2397755199344829e-05, -1.2476660013198853, -0.01858028583228588, -0.0013394355773925781, 0.0, -0.00015651261492166668, 0.0, 0.0, -0.4978952407836914, -3.814697265625e-05, -0.001177668571472168, 0.0, -4.0531158447265625e-06, 0.0]}]}
{"index": 43, "beams": [{"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Character", "Damaged", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Minion", "Is", "Target", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}, {"hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -0.09712942632808108, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -0.009195908904075623, -0.010713338851928711, -8.2254373410251e-06, -0.00038909912109375, -2.288818359375e-05, -3.814697265625e-06, -0.012350201606750488, -1.9073486328125e-06, -0.0003795623779296875, 0.0, -0.003346563782542944, -0.0024758577346801758, -0.007143095135688782, -5.7220458984375e-06, -0.000141143798828125, -0.0001010894775390625, -0.0003663301467895508, -4.971027374267578e-05, -1.9073486328125e-06, -0.0009822845458984375, -0.000400543212890625, -0.024628203362226486, -3.814697265625e-05, -0.000274658203125, -1.33514404296875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Character", "Damaged", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Minion", "Is", "Target", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}, {"hole1": [{"hole0": 1, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n", "score": -3.8895039962507667, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -0.009195908904075623, -0.010713338851928711, -8.2254373410251e-06, -0.00038909912109375, -2.288818359375e-05, -3.814697265625e-06, -0.012350201606750488, -1.9073486328125e-06, -0.0003795623779296875, 0.0, -0.003346563782542944, -0.0024758577346801758, -0.007143095135688782, -5.7220458984375e-06, -0.000141143798828125, -0.0001010894775390625, -0.0003663301467895508, -4.971027374267578e-05, -1.9073486328125e-06, -0.0009822845458984375, -0.000400543212890625, -3.816920757293701, -5.7220458984375e-06, -0.000392913818359375, -9.5367431640625e-06, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Character", "Damaged", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}]}, {"hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(player=\n            BothPlayer()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "score": -4.742174256490159, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -0.009195908904075623, -0.010713338851928711, -8.2254373410251e-06, -0.00038909912109375, -2.288818359375e-05, -3.814697265625e-06, -4.660759925842285, 0.0, -3.0517578125e-05, 0.0, -0.005431652069091797, -2.8014183044433594e-05, -2.6702880859375e-05, -1.9073486328125e-05, -0.0001430511474609375, -0.0001277923583984375, -8.7738037109375e-05, 0.0, -0.0012989044189453125, -0.0004596710205078125, -0.02905740775167942, -5.340576171875e-05, -0.000213623046875, -9.5367431640625e-06, 0.0]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Character", "<UNK>", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Minion", "Is", "Target", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "Character<UNK>", "_type": "Name"}, "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}, {"hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Character<UNK>(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -5.204869502408599, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -0.009195908904075623, -5.111535549163818, -8.559162233723328e-05, -0.00058746337890625, -0.000335693359375, 0.0, -0.012427806854248047, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -0.007244229782372713, -0.0033054351806640625, -0.007616688963025808, -7.62939453125e-06, -0.000141143798828125, -0.00011444091796875, -0.0004101991653442383, -4.398822784423828e-05, -1.9073486328125e-06, -0.00099945068359375, -0.0004138946533203125, -0.025675276294350624, -3.62396240234375e-05, -0.00028228759765625, -1.1444091796875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Character", "Damaged", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Minion", "Is", "Minion", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"hole0": "MinionIsMinion", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}, {"hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsMinion()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -5.535741783110041, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -0.009195908904075623, -0.010713338851928711, -8.2254373410251e-06, -0.00038909912109375, -2.288818359375e-05, -3.814697265625e-06, -0.012350201606750488, -1.9073486328125e-06, -0.0003795623779296875, 0.0, -0.003346563782542944, -0.0024758577346801758, -5.446436882019043, -0.00026702880859375, -2.09808349609375e-05, -0.000335693359375, -0.00029206275939941406, -4.38690185546875e-05, 0.0, -0.0008754730224609375, -0.000469207763671875, -0.023605357855558395, -3.0517578125e-05, -0.0003643035888671875, -1.71661376953125e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Character", "Damaged", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Is", "Minion", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}, {"hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "score": -6.100220305742312, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -0.009195908904075623, -0.010713338851928711, -8.2254373410251e-06, -0.00038909912109375, -2.288818359375e-05, -3.814697265625e-06, -0.012350201606750488, -1.9073486328125e-06, -0.0003795623779296875, 0.0, -6.023391246795654, -0.0007259324193000793, -0.0003147125244140625, -1.71661376953125e-05, -0.0003108978271484375, -0.00034737586975097656, -5.53131103515625e-05, 0.0, -0.001140594482421875, -0.0003986358642578125, -0.01596088334918022, -3.4332275390625e-05, -0.0003452301025390625, -1.71661376953125e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 19, 129, 237, 52, 180, "Minion", "Count", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"hole0": "MinionCount", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Buff(MinionCount())])\n", "score": -6.172116020595183, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -5.129112243652344, -0.0023546218872070312, -0.0007152557373046875, -0.004223823547363281, -0.000545501708984375, -0.7356517314910889, -0.29292964935302734, -0.00026106834411621094]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Spell", "Cast", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Minion", "Is", "Target", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "SpellCast", "_type": "Name"}, "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}, {"hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(SpellCast(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -6.337348745570978, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -6.1262030601501465, -0.06921195983886719, -4.0531158447265625e-06, -8.96453857421875e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.04387867450714111, -1.9073486328125e-06, -0.00054168701171875, 0.0, -0.02927541732788086, -0.006359100341796875, -0.005876520182937384, -5.7220458984375e-06, -0.00016021728515625, -0.0001316070556640625, -0.0004349946975708008, -4.208087921142578e-05, -1.9073486328125e-06, -0.0009784698486328125, -0.0004425048828125, -0.029115526005625725, -3.62396240234375e-05, -0.00028228759765625, -1.1444091796875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Minion", "Died", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Minion", "Is", "Target", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}, "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}, {"hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(MinionDied(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -6.422096722660115, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -5.3677191734313965, -0.5255031585693359, -1.9073486328125e-06, -3.62396240234375e-05, -0.0004425048828125, 0.0, -0.4149665832519531, -5.7220458984375e-06, -0.0011920928955078125, 0.0, -0.045366644859313965, -0.006810188293457031, -0.006164968945086002, -3.814697265625e-06, -0.00019073486328125, -0.000125885009765625, -0.0003968477249145508, -4.00543212890625e-05, 0.0, -0.0010166168212890625, -0.0004138946533203125, -0.027275754138827324, -3.62396240234375e-05, -0.0002803802490234375, -1.1444091796875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 89, 154, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Character", "Damaged", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Minion", "Is", "Target", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template15", "hole2": "ALL", "hole3": "COMMON"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"hole1": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}]}, {"hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}], "hole0": "Effect", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -6.46201520572248, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -6.330682754516602, -5.340576171875e-05, 0.0, -7.832043775124475e-05, 0.0, 0.0, -5.006789433537051e-05, -7.390948667307384e-06, -2.765655517578125e-05, 0.0, -0.003773212432861328, 0.0, -3.0159924790496007e-05, -3.814697265625e-06, -3.099440846199286e-06, 0.0, 0.0, -3.62396240234375e-05, -4.38690185546875e-05, 0.0, -1.7881377516459906e-06, -2.1338462829589844e-05, -5.9126061387360096e-05, -0.002067327033728361, -1.9073486328125e-06, -0.011641502380371094, -0.00063323974609375, -0.0006829500198364258, 0.0, -7.62939453125e-06, -0.0001049041748046875, -0.00048065185546875, -3.24249267578125e-05, -5.7220458984375e-06, -0.009088939055800438, -0.010838985443115234, -4.172325134277344e-06, -0.0001392364501953125, -2.09808349609375e-05, -1.9073486328125e-06, -0.034842610359191895, -1.9073486328125e-06, -0.000797271728515625, 0.0, -0.018313288688659668, -0.0036754608154296875, -0.005194361787289381, -5.7220458984375e-06, -0.0001354217529296875, -0.0001125335693359375, -0.0003815889358520508, -4.780292510986328e-05, -1.9073486328125e-06, -0.0010166168212890625, -0.0004215240478515625, -0.02579672634601593, -3.814697265625e-05, -0.0002727508544921875, -1.33514404296875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 19, 129, 237, 52, 180, "Cant", "Attack", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"hole0": "CantAttack", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Buff(CantAttack())])\n", "score": -7.166078427705486, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -5.129112243652344, -0.0023546218872070312, -0.0007152557373046875, -0.004223823547363281, -0.000545501708984375, -2.0099143981933594, -0.012881040573120117, -9.417532055522315e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 19, 129, 237, 52, 180, "this", "Health", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"hole0": "thisHealth", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Buff(thisHealth())])\n", "score": -7.207609275256743, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -5.129112243652344, -0.0023546218872070312, -0.0007152557373046875, -0.004223823547363281, -0.000545501708984375, -1.0331084728240967, -1.0312215089797974, -5.7220458984375e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 19, 129, 237, 52, 180, "this", "Attack", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"hole0": "thisAttack", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Buff(thisAttack())])\n", "score": -7.238152841003227, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -5.129112243652344, -0.0023546218872070312, -0.0007152557373046875, -0.004223823547363281, -0.000545501708984375, -1.0331084728240967, -1.0617256164550781, -4.518031710176729e-05]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 19, 129, 237, 52, 180, "Minion", "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"hole0": "MinionNull", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Buff(MinionNull())])\n", "score": -7.680742600830797, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -5.129112243652344, -0.0023546218872070312, -0.0007152557373046875, -0.004223823547363281, -0.000545501708984375, -0.7356517314910889, -1.8018074035644531, -9.894368304230738e-06]}, {"choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "GurubashiBerserker", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, spell_damage=1)\n", "score": -7.987181851773919, "score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -6.848954677581787, -3.576278118089249e-07, -0.9538097381591797, -0.035858154296875, -0.14476808905601501, -1.1920928244535389e-07]}]}
{"index": 44, "beams": [{"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -0.0616746596874691, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006619691848754883, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0052318572998046875, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006465911865234375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033307020203210413, -2.7418097943154862e-06, -0.0047217607498168945, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021946430206298828, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013900160789489746, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.<UNK>()\n", "score": -4.361500328022089, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006619691848754883, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0052318572998046875, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006465911865234375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033307020203210413, -2.7418097943154862e-06, -0.0047217607498168945, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021946430206298828, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -4.313724994659424, -8.344646857949556e-07]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -4.556805675502346, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -4.517250061035156, 0.0, -0.0001087188720703125, -0.000675201416015625, -2.288818359375e-05, -5.161762237548828e-05, -9.059892363438848e-06, -0.000148773193359375, -6.4849853515625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003490447998046875, -5.7220458984375e-06, -6.139278411865234e-05, 0.0, -0.0007326602935791016, 0.0, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0051727294921875, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006504058837890625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033318938221782446, -2.7418097943154862e-06, -0.0047217607498168945, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021851062774658203, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013887763023376465, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -4.578054135360162, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -4.5390825271606445, 0.0, -0.0002231597900390625, -0.0001850128173828125, -2.288818359375e-05, -3.814697265625e-05, -7.152556463552173e-06, -9.5367431640625e-05, -4.38690185546875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000263214111328125, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.0007002353668212891, 0.0, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.005160331726074219, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006465911865234375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033307020203210413, -2.7418097943154862e-06, -0.0047217607498168945, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021851062774658203, -1.1444091796875e-05, -0.000324249267578125, -7.82012939453125e-05, -0.0002288818359375, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013909697532653809, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -5.545794671009844, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -5.49580192565918, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.018175125122070312, -1.9073486328125e-06, -2.288818359375e-05, -0.0003566741943359375, -4.00543212890625e-05, -4.398822784423828e-05, -1.5139492461457849e-05, -0.0001678466796875, -0.000179290771484375, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000335693359375, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006638765335083008, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.005228996276855469, -7.62939453125e-06, 0.0, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006465911865234375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033307020203210413, -2.7418097943154862e-06, -0.0047217607498168945, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021851062774658203, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013898253440856934, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n        player.draw()\n", "score": -5.990097706718188, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006619691848754883, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0052318572998046875, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006465911865234375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033307020203210413, -2.7418097943154862e-06, -5.938598155975342, -9.65590606938349e-06, -3.814697265625e-06, 0.0, -0.00020599365234375, -2.09808349609375e-05, -0.000186920166015625, -7.2479248046875e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.000186920166015625, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.008733987808227539, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "damage", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n", "score": -6.233832332398379, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006619691848754883, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0052318572998046875, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006465911865234375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033307020203210413, -2.7418097943154862e-06, -6.181887626647949, -0.0013606823049485683, -3.814697265625e-06, 0.0, -0.00020515918731689453, -3.24249267578125e-05, -0.0003337860107421875, -8.392333984375e-05, -0.0001010894775390625, -3.814697265625e-06, -0.0002231597900390625, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.00760960578918457, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -6.625852172757277, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -6.566995620727539, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.026964187622070312, 0.0, -2.09808349609375e-05, -0.0003871917724609375, -4.1961669921875e-05, -4.208087921142578e-05, -1.633156898606103e-05, -0.0001735687255859375, -0.0001773834228515625, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00034332275390625, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006657838821411133, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.005214691162109375, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00064849853515625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033318938221782446, -2.7418097943154862e-06, -0.0047217607498168945, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021851062774658203, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013896346092224121, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -7.206760828229328, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006619691848754883, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -7.162375450134277, -8.7738037109375e-05, -1.9073486328125e-06, -0.0001163482666015625, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.6028297876764555e-06, -0.00010120868682861328, -0.002239227294921875, -3.4332275390625e-05, -4.00543212890625e-05, -0.0001544952392578125, -4.38690185546875e-05, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -0.001453399658203125, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.000346421409631148, -2.9802276912960224e-06, -0.004404663573950529, -4.6491513785440475e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00018703937530517578, -1.1444091796875e-05]}, {"choice_history": [70, 149, "Hammer", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -7.6478484468231045, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -7.574325084686279, -0.013466927222907543, -2.8599402867257595e-05, -2.241134461655747e-05, 0.0, -5.91278076171875e-05, -0.00032806396484375, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -1.7404556274414062e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -4.76837158203125e-05, -4.660974445869215e-05, -8.213520050048828e-05, -6.723403930664062e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -1.0728830375228426e-06, -2.86102294921875e-05, -8.96453857421875e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.070456533459947e-05, 0.0, -0.007188916206359863, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000339508056640625, -1.9073486328125e-06, -0.022344589233398438, -1.9073486328125e-06, -2.6702880859375e-05, -0.0003108978271484375, -4.00543212890625e-05, -4.589557647705078e-05, -1.4066622497921344e-05, -0.0001735687255859375, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000339508056640625, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006562471389770508, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.005237579345703125, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006465911865234375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033307020203210413, -2.7418097943154862e-06, -0.004721641540527344, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021946430206298828, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013902068138122559, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -7.65407056135291, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -7.604194641113281, -1.9073486328125e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.017980575561523438, -1.9073486328125e-06, -2.288818359375e-05, -0.000331878662109375, -4.1961669921875e-05, -4.971027374267578e-05, -1.573553163325414e-05, -0.000171661376953125, -0.0001850128173828125, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003337860107421875, -3.814697265625e-06, -6.330013275146484e-05, 0.0, -0.0006676912307739258, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.005249977111816406, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.000644683837890625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033497755066491663, -2.7418097943154862e-06, -0.004721641540527344, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021946430206298828, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013898253440856934, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        player.draw()\n", "score": -7.8265528094373025, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006619691848754883, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0052318572998046875, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -7.7613725662231445, -1.1920928244535389e-07, -9.5367431640625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.009503839537501335, -7.605277642142028e-05, -0.0028579235076904297, -3.576272320060525e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00010895729064941406, -1.9073486328125e-06, -0.0001735687255859375, -2.47955322265625e-05, -0.0004596710205078125, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.3589859008789062e-05, 0.0, -0.010823607444763184, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -7.887839024444922, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -7.829229354858398, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0029659271240234375, -9.5367431640625e-06, 0.0, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.52994936495088e-06, -0.00012981891632080078, -8.7738037109375e-05, -1.52587890625e-05, -0.00014495849609375, -6.103515625e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0006771087646484375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0003288978186901659, -2.7418097943154862e-06, -0.004729509353637695, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021469593048095703, -1.1444091796875e-05, -0.000247955322265625, -8.392333984375e-05, -0.0002307891845703125, -3.814697265625e-06, -0.0001926422119140625, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013795256614685059, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "minions", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "minions", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.minions,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -8.296430294918991, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -8.254636764526367, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002040863037109375, -1.9073486328125e-06, -0.009805679321289062, -1.9073486328125e-06, -2.6702880859375e-05, -0.0003261566162109375, -4.76837158203125e-05, -4.208087921142578e-05, -1.4662661669717636e-05, -0.0001735687255859375, -0.0001773834228515625, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000362396240234375, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006219148635864258, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.005236625671386719, -7.62939453125e-06, 0.0, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00064849853515625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033318938221782446, -2.7418097943154862e-06, -0.004721641540527344, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021851062774658203, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013893485069274902, 0.0]}, {"choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HammerOfWrath", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "score": -8.30135912191831, "score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006619691848754883, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -8.135587692260742, -0.0004062652587890625, -1.9073486328125e-06, -6.29425048828125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-06, 0.0, -2.0861480152234435e-05, -2.372264862060547e-05, -0.0003452301025390625, -2.47955322265625e-05, -0.00012969970703125, -6.4849853515625e-05, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -1.1920928244535389e-07, -0.0011425018310546875, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00031113551813177764, -1.6689286894688848e-06, -0.004939436912536621, -5.364403477869928e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00031578540802001953, -1.33514404296875e-05, -0.059864044189453125, -0.002521514892578125, -0.002201080322265625, -1.9073486328125e-06, -0.0001735687255859375, -1.9073486328125e-06, -3.063678741455078e-05, 0.0, -0.009437918663024902, -1.1920928244535389e-07, -0.0007114410400390625, -9.5367431640625e-06, -0.0001049041748046875, -1.1444091796875e-05, -0.0003566741943359375, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.018201589584350586, -3.576278118089249e-07, -0.0038623809814453125, -1.52587890625e-05, -0.000244140625, -1.52587890625e-05, -0.0005817413330078125, 0.0, -9.357929229736328e-05, 0.0, -0.024236679077148438, -4.768370445162873e-07]}]}
{"index": 45, "beams": [{"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -0.23604027563850138, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10944938659667969, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.0108184814453125, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.014525890350341797, 0.0, -0.028916358947753906, -0.000888824462890625, -5.53131103515625e-05, 0.0]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -2.4851461552103586, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -2.2908878326416016, -0.000171661376953125, -9.5367431640625e-05, -2.09808349609375e-05, -0.0002956390380859375, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.152555099310121e-07, -0.05497085675597191, -1.0728830375228426e-06, -0.000827789306640625, -0.004738807678222656, -0.005532264709472656, -0.05840117111802101, -0.0012976019643247128]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "PALADIN", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.PALADIN, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -4.210079234140707, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -4.002720832824707, -5.7220458984375e-06, -0.0068721771240234375, -0.0001277923583984375, -1.1444091796875e-05, -0.00042724609375, -4.184246063232422e-05, -0.001392364501953125, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00164031982421875, -3.4332275390625e-05, -0.0013182160910218954, -2.7179718017578125e-05, -0.00047564494889229536, -1.33514404296875e-05, -8.463858830509707e-05, 0.0, -0.001511216163635254, 0.0, -0.00122833251953125, -0.00017547607421875, -4.0411949157714844e-05, -3.576272320060525e-06, -0.0027523040771484375, -1.9073486328125e-05, -1.9073486328125e-06, -0.00072479248046875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.11260604858398438, -7.43865966796875e-05, -0.0003414154052734375, -0.000324249267578125, -0.011013031005859375, -0.0017900466918945312, 0.0, -0.0004329681396484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.014545917510986328, 0.0, -0.028993606567382812, -0.0008869171142578125, -5.53131103515625e-05, 0.0]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 21, 134, "frog", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = frog\n", "score": -4.868320625369947, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10944938659667969, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.0108184814453125, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.014525890350341797, 0.0, -3.7910633087158203, -0.000278472900390625, -0.8707990646362305, 0.0]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.taunt = True\n", "score": -5.262096803729932, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10944938659667969, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.0108184814453125, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -5.0617241859436035, 0.0, -0.0076751708984375, -0.000988006591796875, -5.340576171875e-05, -2.1457672119140625e-06]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Divine", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "Divine", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Divine()))\n", "score": -5.574352435862792, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -2.2908878326416016, -0.000171661376953125, -9.5367431640625e-05, -2.09808349609375e-05, -0.0002956390380859375, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, -7.152555099310121e-07, -0.05497085675597191, -1.0728830375228426e-06, -0.000827789306640625, -0.004738807678222656, -0.005532264709472656, -3.0758869647979736, -0.07301808893680573]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "player", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "player", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.player, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -5.625455063138347, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -5.410991668701172, 0.0, -0.012552261352539062, -0.0001220703125, -3.24249267578125e-05, -0.00052642822265625, -8.118152618408203e-05, -0.0002155303955078125, -2.288818359375e-05, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0006961822509765625, -4.00543212890625e-05, -0.0008268355741165578, -3.0875205993652344e-05, -0.0003844499296974391, -1.71661376953125e-05, -0.00014138220285531133, 0.0, -0.001894831657409668, 0.0, -0.0016613006591796875, -0.0001983642578125, -3.4809112548828125e-05, -3.576272320060525e-06, -0.0027599334716796875, -2.09808349609375e-05, -1.9073486328125e-06, -0.000789642333984375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.826618194580078e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.62396240234375e-05, -2.86102294921875e-05, -2.3245811462402344e-05, -1.33514404296875e-05, -0.11519145965576172, -7.43865966796875e-05, -0.0003337860107421875, -0.00032806396484375, -0.011241912841796875, -0.0017681121826171875, 0.0, -0.0004329681396484375, 0.0, -0.000110626220703125, -1.9073486328125e-06, -0.00041961669921875, -1.6689286894688848e-06, -0.014607906341552734, 0.0, -0.02913951873779297, -0.000885009765625, -5.7220458984375e-05, 0.0]}, {"choice_history": [70, 149, "Hand", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -5.748174983501684, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -5.51396369934082, -0.002218763343989849, -8.530914783477783e-06, -4.0531158447265625e-06, 0.0, -1.33514404296875e-05, -0.0069866180419921875, -0.0001621246337890625, -1.71661376953125e-05, 0.0, -2.622604142743512e-06, 0.0, -0.00010502338409423828, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, -0.0010776519775390625, -2.384185791015625e-05, -9.524822235107422e-05, -4.327296846895479e-05, -8.594989776611328e-05, -2.1696090698242188e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.7762173229129985e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.0003871917724609375, -5.7220458984375e-06, 0.0, -0.0004162788391113281, -3.814697265625e-06, -0.002310633659362793, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.0001373291015625, -1.9073486328125e-06, -0.039247751235961914, -9.34600830078125e-05, -0.0004787445068359375, -5.7220458984375e-05, -2.288818359375e-05, -0.0002956390380859375, -3.1113613658817485e-05, -0.0009441375732421875, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0019321441650390625, -3.0517578125e-05, -0.0009964703349396586, -2.3245811462402344e-05, -0.0004783867043443024, -1.1444091796875e-05, -8.237361180363223e-05, 0.0, -0.0014597177505493164, 0.0, -0.0011615753173828125, -0.0001735687255859375, -4.0411949157714844e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10941219329833984, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.010816574096679688, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.01452493667602539, 0.0, -0.028913497924804688, -0.000888824462890625, -5.53131103515625e-05, 0.0]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -5.813280027407913, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -5.605934143066406, 0.0, -0.00966644287109375, -7.43865966796875e-05, -2.47955322265625e-05, -0.0002841949462890625, -4.7206878662109375e-05, -0.000396728515625, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.0017032623291015625, -2.86102294921875e-05, -0.001365303760394454, -2.5272369384765625e-05, -0.0005033015040680766, -1.52587890625e-05, -8.583068120060489e-05, 0.0, -0.0014481544494628906, 0.0, -0.0011005401611328125, -0.000171661376953125, -4.4226646423339844e-05, -3.3378546504536644e-06, -0.0027141571044921875, -1.9073486328125e-05, -1.9073486328125e-06, -0.000690460205078125, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.33514404296875e-05, -0.11119556427001953, -7.43865966796875e-05, -0.0003414154052734375, -0.0003261566162109375, -0.010953903198242188, -0.0017986297607421875, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0004138946533203125, -1.6689286894688848e-06, -0.01449441909790039, 0.0, -0.029010772705078125, -0.00089263916015625, -5.53131103515625e-05, 0.0]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "SHAMAN", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "SHAMAN", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.SHAMAN = True\n", "score": -5.8396383934668705, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10944938659667969, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.0108184814453125, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -5.538753509521484, -1.9073486328125e-06, -0.10704326629638672, -0.002109527587890625, -7.62939453125e-05, 0.0]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "game", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "game", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.game, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -5.8440536670573096, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -5.642549514770508, 0.0, -0.0004749298095703125, -0.00011444091796875, -5.7220458984375e-06, -0.00075531005859375, -2.586841583251953e-05, -0.003253936767578125, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0015506744384765625, -4.57763671875e-05, -0.0012309548910707235, -2.9087066650390625e-05, -0.00046193585149012506, -1.33514404296875e-05, -8.38041232782416e-05, 0.0, -0.0016580820083618164, 0.0, -0.001178741455078125, -0.0001735687255859375, -4.0411949157714844e-05, -3.4570634852570947e-06, -0.002742767333984375, -1.9073486328125e-05, -1.9073486328125e-06, -0.00070953369140625, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.33514404296875e-05, -0.11121845245361328, -7.43865966796875e-05, -0.0003414154052734375, -0.000324249267578125, -0.010934829711914062, -0.001796722412109375, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.01453256607055664, 0.0, -0.028969764709472656, -0.000888824462890625, -5.53131103515625e-05, 0.0]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 21, 134, "justice", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"id": "justice", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = justice\n", "score": -5.869826477115552, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10944938659667969, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.0108184814453125, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.014525890350341797, 0.0, -3.7910633087158203, -0.000278472900390625, -1.872304916381836, 0.0]}, {"choice_history": [70, 149, "Hand", "<UNK>", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hand<UNK>", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hand<UNK>(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -5.933625060558569, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -5.699413776397705, -0.002218763343989849, -8.530914783477783e-06, -4.0531158447265625e-06, 0.0, -1.33514404296875e-05, -0.0069866180419921875, -0.0001621246337890625, -1.71661376953125e-05, 0.0, -2.622604142743512e-06, 0.0, -0.00010502338409423828, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, -0.0010776519775390625, -2.384185791015625e-05, -9.524822235107422e-05, -4.327296846895479e-05, -8.594989776611328e-05, -2.1696090698242188e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.7762173229129985e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.0003871917724609375, -5.7220458984375e-06, 0.0, -0.0004162788391113281, -3.814697265625e-06, -0.002310633659362793, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.0001373291015625, -1.9073486328125e-06, -0.039247751235961914, -9.34600830078125e-05, -0.0004787445068359375, -5.7220458984375e-05, -2.288818359375e-05, -0.0002956390380859375, -3.1113613658817485e-05, -0.0009441375732421875, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0019321441650390625, -3.0517578125e-05, -0.0009964703349396586, -2.3245811462402344e-05, -0.0004783867043443024, -1.1444091796875e-05, -8.237361180363223e-05, 0.0, -0.0014597177505493164, 0.0, -0.0011615753173828125, -0.0001735687255859375, -4.0411949157714844e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10941219329833984, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.010816574096679688, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.01452493667602539, 0.0, -0.028913497924804688, -0.000888824462890625, -5.53131103515625e-05, 0.0]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 31, 195, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "find_minion_spell_target", "hole0": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = (hearthbreaker.targeting.\n            find_minion_spell_target())\n", "score": -6.285422280525367, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10944938659667969, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.0108184814453125, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.014525890350341797, 0.0, -5.904231071472168, -0.0027828216552734375, -2.6702880859375e-05, -5.340576171875e-05, -0.00406646728515625, -1.9073486328125e-06, -0.039669036865234375, -3.814697265625e-06, -0.056296225637197495, -4.172325134277344e-06, -0.07209531217813492, -1.1563301086425781e-05]}, {"choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Hand", " ", "of", " ", "Protection", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HandOfProtection", "hole2": [{"hole1": 1, "hole0": "Hand of Protection", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "NameConstant", "value": true}, "_type": "Assign", "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -6.318692451798249, "score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -6.184754371643066, -0.002315521240234375, -1.2040065485052764e-05, -0.002702796133235097, -0.0003908828948624432, -6.67572021484375e-05, -0.0004289149946998805, -3.814697265625e-06, -0.00011658668518066406, -1.013275596051244e-05, -0.008602852001786232, 0.0, -0.008375536650419235, 0.0, -0.0007508993148803711, 0.0, -0.0010377168655395508, 0.0, -0.0035400390625, -8.96453857421875e-05, -8.58306884765625e-06, -3.254377588746138e-05, -0.0034580230712890625, -5.7220458984375e-06, -3.814697265625e-06, -0.0005645751953125, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.826618194580078e-05, -2.47955322265625e-05, -3.62396240234375e-05, -7.62939453125e-06, -3.24249267578125e-05, -5.14984130859375e-05, -2.5272369384765625e-05, -3.0517578125e-05, -0.035195350646972656, -6.67572021484375e-05, -0.000354766845703125, -0.0003490447998046875, -0.01071929931640625, -0.0018291473388671875, 0.0, -0.0003948211669921875, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.0003719329833984375, -1.5497195136049413e-06, -0.014421343803405762, 0.0, -0.027591705322265625, -0.000804901123046875, -5.340576171875e-05, 0.0]}]}
{"index": 46, "beams": [{"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -0.09556600979394148, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -0.006252288818359375, 0.0, -1.33514404296875e-05, 0.0, -0.001194000244140625, -0.0012111663818359375, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003073934931308031, -7.343292236328125e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -0.020502090454101562, -0.0002275572915095836, -0.0028429031372070312, 0.0, -0.00054931640625, -0.0001201629638671875, -0.0045642852783203125, -0.00044989585876464844, -7.199995161499828e-05, -3.814697265625e-06, -0.0021839141845703125, -0.0001583099365234375, -0.0008384920656681061, 0.0, -0.0015961724566295743, -5.7220458984375e-06, -1.9073486328125e-06, -7.43865966796875e-05, -0.000629425048828125, -2.47955322265625e-05, -0.004793286323547363, -5.7220458984375e-06, -0.0013265609741210938, -0.0012187957763671875, -0.0002956390380859375, -4.8041292757261544e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, CARD_RARITY.FREE, True)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -4.203549188492943, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -4.089731216430664, -3.62396240234375e-05, -0.0002040863037109375, 0.0, -0.009881973266601562, -1.9073486328125e-06, -0.0025522708892822266, 0.0, -0.010324478149414062, -4.57763671875e-05, -0.0048732757568359375, 0.0, -0.0043163299560546875, 0.0, -7.62939453125e-05, 0.0, -0.0016078948974609375, -0.0024423599243164062, -0.004498481750488281, -1.0728830375228426e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.0001062098381225951, -5.078315734863281e-05, -1.1920928244535389e-07, -8.96453857421875e-05, -5.7220458984375e-05, -0.034775733947753906, -0.0001687957119429484, -0.002190113067626953, 0.0, -0.0003833770751953125, -0.000118255615234375, -0.00467681884765625, -0.00041854381561279297, -6.925832713022828e-05, -3.814697265625e-06, -0.002117156982421875, -0.000152587890625, -0.000862346962094307, -1.1920928244535389e-07, -0.0010406600777059793, -5.7220458984375e-06, -1.9073486328125e-06, -9.918212890625e-05, -0.0006866455078125, -2.47955322265625e-05, -0.004647374153137207, -3.814697265625e-06, -0.0013055801391601562, -0.0012264251708984375, -0.0003070831298828125, -4.8160502046812326e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 174, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>", 237, 45, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20", "hole3": [{"_type": "NameConstant", "value": "Null"}]}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null))), Null])\n", "score": -5.767524392433728, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -0.006252288818359375, 0.0, -1.33514404296875e-05, 0.0, -0.001194000244140625, -0.0012111663818359375, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003073934931308031, -7.343292236328125e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -4.616281509399414, -0.001479029655456543, -0.0064258575439453125, -1.71661376953125e-05, -0.0001735687255859375, -0.00030517578125, -0.730412483215332, -0.013753890991210938, -2.7417810997576453e-05, -1.9073486328125e-06, -0.0018358230590820312, -8.392333984375e-05, -0.0002603009343147278, 0.0, -0.021488334983587265, -1.33514404296875e-05, 0.0, -0.000247955322265625, -0.000446319580078125, -5.340576171875e-05, -0.0093994140625, -5.7220458984375e-06, -0.0017309188842773438, -0.00089263916015625, -0.0002841949462890625, -2.5629986339481547e-05, -7.62939453125e-06, -0.3084383010864258, -0.0002727508544921875, -0.00010693073272705078, -2.002716064453125e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(players=BothPlayer())))])\n", "score": -5.934324120844934, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -0.006252288818359375, 0.0, -1.33514404296875e-05, 0.0, -0.001194000244140625, -0.0012111663818359375, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003073934931308031, -7.343292236328125e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -0.020502090454101562, -0.0002275572915095836, -0.0028429031372070312, 0.0, -0.00054931640625, -0.0001201629638671875, -0.0045642852783203125, -0.00044989585876464844, -7.199995161499828e-05, -3.814697265625e-06, -0.0021839141845703125, -0.0001583099365234375, -0.0008384920656681061, 0.0, -0.0015961724566295743, -5.7220458984375e-06, -1.9073486328125e-06, -7.43865966796875e-05, -0.000629425048828125, -2.47955322265625e-05, -5.829947471618652, 0.0, -0.000171661376953125, 0.0, -0.016037464141845703, -0.00028955936431884766, 0.0]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "use", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def use(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -6.013762471881442, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -5.934688568115234, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0012149810791015625, -0.0004482269287109375, -0.0005950927734375, -8.344646857949556e-07, -3.814697265625e-06, -4.38690185546875e-05, -0.0004940004437230527, -8.07046890258789e-05, -2.3841855067985307e-07, -0.000164031982421875, -0.000141143798828125, -0.012067794799804688, -0.0002440076641505584, -0.0025491714477539062, 0.0, -0.000499725341796875, -0.0001201629638671875, -0.0046482086181640625, -0.000493168830871582, -7.557597564300522e-05, -3.814697265625e-06, -0.00261688232421875, -0.0001621246337890625, -0.0007906761020421982, -1.1920928244535389e-07, -0.0014875645283609629, -7.62939453125e-06, -1.9073486328125e-06, -7.2479248046875e-05, -0.00063323974609375, -2.47955322265625e-05, -0.0033894777297973633, -3.814697265625e-06, -0.00130462646484375, -0.0012302398681640625, -0.0002956390380859375, -4.8041292757261544e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -6.334654562623285, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -6.242653846740723, -2.6702880859375e-05, -0.00264739990234375, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -0.004161834716796875, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-05, -8.7738037109375e-05, 0.0, -0.0013141632080078125, 0.0, -0.016283035278320312, -5.53131103515625e-05, -0.002910614013671875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.0006885528564453125, -2.86102294921875e-05, -0.0031566619873046875, 0.0, -0.0062274932861328125, 0.0, -1.33514404296875e-05, 0.0, -0.0012416839599609375, -0.001239776611328125, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003165697562508285, -7.331371307373047e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -0.020702362060546875, -0.00022612701286561787, -0.0028352737426757812, 0.0, -0.0005512237548828125, -0.0001201629638671875, -0.004565238952636719, -0.0004489421844482422, -7.199995161499828e-05, -3.814697265625e-06, -0.0021791458129882812, -0.0001583099365234375, -0.0008386056870222092, 0.0, -0.0015880933497101068, -5.7220458984375e-06, -1.9073486328125e-06, -7.43865966796875e-05, -0.000629425048828125, -2.47955322265625e-05, -0.0047904253005981445, -5.7220458984375e-06, -0.0013265609741210938, -0.0012187957763671875, -0.0002956390380859375, -4.8041292757261544e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Started", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnStarted", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnStarted(), ActionTag(Heal(1\n            ), MinionSelector(condition=Null)))])\n", "score": -6.377054371289518, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -0.006252288818359375, 0.0, -1.33514404296875e-05, 0.0, -0.001194000244140625, -0.0012111663818359375, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003073934931308031, -7.343292236328125e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -0.020502090454101562, -0.0002275572915095836, -6.251743316650391, -0.00010383129119873047, -0.002532958984375, -9.34600830078125e-05, -0.032833099365234375, -0.0007046459941193461, -0.00020060948736499995, -1.9073486328125e-06, -0.005557060241699219, -0.00091552734375, -0.0006825337186455727, 0.0, -0.0018714196048676968, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, -0.0007762908935546875, -5.340576171875e-05, -0.0022279024124145508, -1.9073486328125e-06, -0.0014944076538085938, -0.0010967254638671875, -0.0003204345703125, -4.041191641590558e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "True", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -6.399392843912629, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -6.300684928894043, 0.0, -0.0002899169921875, -3.814697265625e-05, -0.001651763916015625, -9.5367431640625e-06, -0.00164031982421875, -1.71661376953125e-05, -0.002704620361328125, 0.0, -0.01120758056640625, 0.0, -1.52587890625e-05, 0.0, -0.0011348724365234375, -0.0013427734375, -0.000640869140625, -9.536738616588991e-07, -5.7220458984375e-06, -2.6702880859375e-05, -0.0002821285743266344, -6.961822509765625e-05, -2.3841855067985307e-07, -0.0001544952392578125, -0.0001239776611328125, -0.02066516876220703, -0.00022815325064584613, -0.0028333663940429688, 0.0, -0.0005397796630859375, -0.0001201629638671875, -0.004561424255371094, -0.0004565715789794922, -7.188075687736273e-05, -3.814697265625e-06, -0.0022192001342773438, -0.0001544952392578125, -0.0008329953998327255, -1.1920928244535389e-07, -0.0013358502183109522, -5.7220458984375e-06, -1.9073486328125e-06, -8.58306884765625e-05, -0.0006465911865234375, -2.47955322265625e-05, -0.004529118537902832, -3.814697265625e-06, -0.0013113021850585938, -0.001220703125, -0.0002994537353515625, -4.8041292757261544e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_weapon(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -6.430569263338697, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -6.351872444152832, -4.00543212890625e-05, -4.38690185546875e-05, 0.0, -0.0010528564453125, -0.0002841949462890625, -0.0005931854248046875, -1.4305104514278355e-06, -3.814697265625e-06, -4.38690185546875e-05, -0.00039426659350283444, -7.319450378417969e-05, -2.3841855067985307e-07, -0.000179290771484375, -0.000179290771484375, -0.010515213012695312, -0.00024579386808909476, -0.0031652450561523438, 0.0, -0.000476837158203125, -0.0001163482666015625, -0.004706382751464844, -0.0005034208297729492, -7.402637129416689e-05, -3.814697265625e-06, -0.002460479736328125, -0.0001544952392578125, -0.0008153617382049561, 0.0, -0.0015892918454483151, -5.7220458984375e-06, -1.9073486328125e-06, -7.43865966796875e-05, -0.0006389617919921875, -2.47955322265625e-05, -0.004263043403625488, -3.814697265625e-06, -0.00131988525390625, -0.0012149810791015625, -0.0002956390380859375, -4.8041292757261544e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 167, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole0": "Kill", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Kill(),\n            MinionSelector(condition=Null)))])\n", "score": -6.474197087697199, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -0.006252288818359375, 0.0, -1.33514404296875e-05, 0.0, -0.001194000244140625, -0.0012111663818359375, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003073934931308031, -7.343292236328125e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -0.020502090454101562, -0.0002275572915095836, -0.0028429031372070312, 0.0, -0.00054931640625, -0.0001201629638671875, -6.288503646850586, -0.08285284042358398, -7.271752110682428e-06, -0.00038601458072662354, -1.71661376953125e-05, -1.1920928244535389e-07, -0.011204719543457031, -0.0001316070556640625, -7.62939453125e-06, -0.0009235143079422414, -1.9073486328125e-06, -0.004817008972167969, -0.007737159729003906, -0.0002636909484863281, -6.794810178689659e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "copy", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "copy", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.copy,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -6.604652068669196, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -6.50514030456543, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-05, -0.003719329833984375, 0.0, -0.00502777099609375, 0.0, -0.017421722412109375, -3.62396240234375e-05, -0.005690574645996094, 0.0, -0.0001373291015625, -3.814697265625e-06, -0.0001316070556640625, -3.814697265625e-06, -0.00109100341796875, -2.6702880859375e-05, -0.0028362274169921875, 0.0, -0.0066699981689453125, 0.0, -1.52587890625e-05, 0.0, -0.00102996826171875, -0.001117706298828125, -0.0005664825439453125, -8.344646857949556e-07, -5.7220458984375e-06, -2.288818359375e-05, -0.00029273517429828644, -7.152557373046875e-05, -2.3841855067985307e-07, -0.0001678466796875, -0.0001201629638671875, -0.01991748809814453, -0.00022743811132386327, -0.0028963088989257812, 0.0, -0.00054931640625, -0.000118255615234375, -0.004557609558105469, -0.00045180320739746094, -7.176155486376956e-05, -3.814697265625e-06, -0.0021953582763671875, -0.000156402587890625, -0.0008381456136703491, 0.0, -0.0016968154814094305, -5.7220458984375e-06, -1.9073486328125e-06, -7.05718994140625e-05, -0.0006256103515625, -2.47955322265625e-05, -0.004877209663391113, -5.7220458984375e-06, -0.001331329345703125, -0.0012149810791015625, -0.000293731689453125, -4.8041292757261544e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "CharacterSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            CharacterSelector(condition=Null)))])\n", "score": -6.787775650166246, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -0.006252288818359375, 0.0, -1.33514404296875e-05, 0.0, -0.001194000244140625, -0.0012111663818359375, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003073934931308031, -7.343292236328125e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -0.020502090454101562, -0.0002275572915095836, -0.0028429031372070312, 0.0, -0.00054931640625, -0.0001201629638671875, -0.0045642852783203125, -0.00044989585876464844, -7.199995161499828e-05, -3.814697265625e-06, -0.0021839141845703125, -0.0001583099365234375, -0.0008384920656681061, 0.0, -6.447091102600098, -7.64121868996881e-05, -1.1920928244535389e-07, -0.0024690628051757812, -0.000255584716796875, -1.9073486328125e-06, -0.2494891881942749, -7.62939453125e-06, -0.0013799667358398438, -0.001163482666015625, -0.00023651123046875, -5.9127763961441815e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "TOTEM", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "TOTEM"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def TOTEM(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -6.795196724470287, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -6.712586402893066, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0014247894287109375, -0.0009174346923828125, -0.00055694580078125, -9.536738616588991e-07, -5.7220458984375e-06, -2.288818359375e-05, -0.0003649522550404072, -7.331371307373047e-05, -2.3841855067985307e-07, -0.000194549560546875, -0.000141143798828125, -0.013819694519042969, -0.00024412556376773864, -0.0028409957885742188, 0.0, -0.0004940032958984375, -0.0001201629638671875, -0.00461578369140625, -0.00046622753143310547, -7.16423528501764e-05, -3.814697265625e-06, -0.002376556396484375, -0.00016021728515625, -0.0008221268653869629, 0.0, -0.0015108506195247173, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -0.000637054443359375, -2.47955322265625e-05, -0.004549145698547363, -5.7220458984375e-06, -0.0013170242309570312, -0.001216888427734375, -0.0002956390380859375, -4.8160502046812326e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "TOTEM", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20"}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.TOTEM, CARD_RARITY.FREE, True)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -6.884595496445726, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -6.517392158508301, 0.0, -0.2233257293701172, -1.33514404296875e-05, -0.00011444091796875, -1.9073486328125e-06, -0.04318428039550781, -1.9073486328125e-06, -0.005489468574523926, 0.0, -0.0058803558349609375, -5.53131103515625e-05, -0.005711555480957031, 0.0, -0.00441741943359375, 0.0, -6.4849853515625e-05, 0.0, -0.001697540283203125, -0.002544403076171875, -0.004137992858886719, -1.0728830375228426e-06, -3.814697265625e-06, -5.14984130859375e-05, -0.00011431517486926168, -5.066394805908203e-05, -1.1920928244535389e-07, -9.1552734375e-05, -5.7220458984375e-05, -0.034255027770996094, -0.0001668883633101359, -0.002228260040283203, 0.0, -0.0003871917724609375, -0.0001163482666015625, -0.004691123962402344, -0.0004165172576904297, -6.901992310304195e-05, -3.814697265625e-06, -0.0021123886108398438, -0.000152587890625, -0.0008653607219457626, -1.1920928244535389e-07, -0.0011901763500645757, -5.7220458984375e-06, -1.9073486328125e-06, -8.96453857421875e-05, -0.0006694793701171875, -2.47955322265625e-05, -0.004974484443664551, -5.7220458984375e-06, -0.0013103485107421875, -0.0012226104736328125, -0.0003032684326171875, -4.8160502046812326e-05]}, {"choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 174, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>", 237, 50, 169, "Give", "<EOS>", 237, 57, 191, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HealingTotem", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2, "hole3": [{"hole2": [{"hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole3": "MinionSelector", "hole5": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "hole0": "TurnEnded", "_type": "Template20", "hole3": [{"hole1": [{"hole0": 1, "_type": "Template32"}], "hole0": "Give", "_type": "Template19", "hole3": "SelfSelector"}]}]}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null))), ActionTag(Give(ChangeAttack(1\n            )), SelfSelector())])\n", "score": -10.40704191578206, "score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -0.006252288818359375, 0.0, -1.33514404296875e-05, 0.0, -0.001194000244140625, -0.0012111663818359375, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003073934931308031, -7.343292236328125e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -4.616281509399414, -0.001479029655456543, -0.0064258575439453125, -1.71661376953125e-05, -0.0001735687255859375, -0.00030517578125, -0.730412483215332, -0.013753890991210938, -2.7417810997576453e-05, -1.9073486328125e-06, -0.0018358230590820312, -8.392333984375e-05, -0.0002603009343147278, 0.0, -0.021488334983587265, -1.33514404296875e-05, 0.0, -0.000247955322265625, -0.000446319580078125, -5.340576171875e-05, -0.0093994140625, -5.7220458984375e-06, -0.0017309188842773438, -0.00089263916015625, -0.0002841949462890625, -2.5629986339481547e-05, -7.62939453125e-06, -1.8663749694824219, -2.8930368423461914, -0.046471238136291504, 0.0, -1.9073486328125e-06, -0.06968975067138672, -0.0004558563232421875, -0.06711158901453018, 0.0, -0.00519406795501709, -1.9311904907226562e-05, 0.0]}]}
{"index": 47, "beams": [{"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -0.06149534777228638, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.0057201385498046875, -0.000545501708984375, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.000743865966796875, -1.52587890625e-05, -1.549716034787707e-05, -0.000396728515625, -7.43865966796875e-05, -0.0004940032958984375, -6.67572021484375e-05, -0.0008525848388671875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0033208131790161133, 0.0, -4.38690185546875e-05, -0.000720977783203125, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011966052697971463, -1.3709068298339844e-05, -0.0004245042509865016, -1.1801670552813448e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -3.4155123671660093, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -3.3913841247558594, 0.0, -7.62939453125e-05, -4.38690185546875e-05, -1.71661376953125e-05, -7.462501525878906e-05, -7.033347174001392e-06, -4.9591064453125e-05, -1.71661376953125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001430511474609375, -2.09808349609375e-05, -0.0001659393310546875, -1.9073486328125e-06, -0.0012073516845703125, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -9.1552734375e-05, 0.0, -7.2479248046875e-05, -1.52587890625e-05, -3.635883331298828e-05, -1.9311904907226562e-05, -0.005791664123535156, -0.0005359649658203125, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.0007534027099609375, -1.52587890625e-05, -1.537795105832629e-05, -0.000400543212890625, -7.43865966796875e-05, -0.0004978179931640625, -6.67572021484375e-05, -0.0008544921875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0033208131790161133, 0.0, -4.38690185546875e-05, -0.00072479248046875, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011958901304751635, -1.3709068298339844e-05, -0.0004245042509865016, -1.1801670552813448e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -5.9870421127568605, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -5.963037490844727, 0.0, -3.62396240234375e-05, -4.00543212890625e-05, -2.6702880859375e-05, -7.069110870361328e-05, -5.245207830739673e-06, -0.000125885009765625, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001697540283203125, -2.09808349609375e-05, -0.0001735687255859375, -1.9073486328125e-06, -0.0010776519775390625, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.635883331298828e-05, -1.9311904907226562e-05, -0.005734443664550781, -0.0005435943603515625, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.0007457733154296875, -1.52587890625e-05, -1.549716034787707e-05, -0.000396728515625, -7.43865966796875e-05, -0.0004940032958984375, -6.67572021484375e-05, -0.0008525848388671875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0033208131790161133, 0.0, -4.38690185546875e-05, -0.0007228851318359375, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0012001811992377043, -1.3709068298339844e-05, -0.0004262923903297633, -1.1682462172757369e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n        player.draw()\n", "score": -6.064548170654923, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -5.756803512573242, -0.05409717559814453, -3.814697265625e-06, -0.000335693359375, -1.9073486328125e-06, 0.0, 0.0, -0.00016307830810546875, 0.0, -3.0875205993652344e-05, -1.9073486328125e-06, -0.00014317035675048828, -1.52587890625e-05, -1.0609603123157285e-05, -0.0003223419189453125, -0.0006732940673828125, -7.2479248046875e-05, -0.0002384185791015625, -0.0006618499755859375, -1.52587890625e-05, 0.0, -4.00543212890625e-05, -1.71661376953125e-05, -4.00543212890625e-05, -1.1920928244535389e-07, -0.0032215118408203125, 0.0, -4.1961669921875e-05, -0.000728607177734375, -6.103515625e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0011390193831175566, -1.1920928955078125e-05, -0.00043869015644304454, -1.1801670552813448e-05, -2.6702880859375e-05, -4.38690185546875e-05, -8.034706115722656e-05, -1.9073486328125e-06, -0.1178903579711914, -5.7220458984375e-06, -0.01585865020751953, -9.72747802734375e-05, -0.0035572052001953125, -1.9073486328125e-06, -0.0044231414794921875, -1.9073486328125e-06, -0.017864346504211426, -5.602820692729438e-06, -0.0014667510986328125, -1.1444091796875e-05, -0.008004188537597656, -2.6702880859375e-05, -0.0021419525146484375, -5.7220458984375e-06, -0.004893064498901367, -1.9073486328125e-06, -0.022713780403137207, -6.556489552167477e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(player.effective_heal_power(8), self)\n", "score": -6.83549599520871, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.0057201385498046875, -0.000545501708984375, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.000743865966796875, -1.52587890625e-05, -1.549716034787707e-05, -0.000396728515625, -7.43865966796875e-05, -0.0004940032958984375, -6.67572021484375e-05, -0.0008525848388671875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -6.417725563049316, 0.0, -0.2758312225341797, -0.07729911804199219, -7.43865966796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002900362014770508, -1.9073486328125e-06, -0.007334098685532808, -1.1682510375976562e-05, -0.001309394370764494, -6.31808916295995e-06, -1.9073486328125e-05, -6.67572021484375e-05, -4.398822784423828e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n", "score": -6.932331373196355, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -6.819030284881592, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -0.00011289119720458984, -1.9073486328125e-06, -0.0013735294342041016, -2.288818359375e-05, -2.396090167167131e-05, -0.0007839202880859375, -8.96453857421875e-05, -0.0001773834228515625, -0.000217437744140625, -0.00070953369140625, -3.0517578125e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.00543212890625e-05, -1.1920928244535389e-07, -0.0024644136428833008, 0.0, -3.24249267578125e-05, -0.0006008148193359375, -6.29425048828125e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011566762113943696, -1.3828277587890625e-05, -0.00040745732258073986, -1.26361273942166e-05, -2.6702880859375e-05, -4.1961669921875e-05, -7.843971252441406e-05, -1.9073486328125e-06, -0.0032672882080078125, -3.814697265625e-06, -0.02316570281982422, -2.09808349609375e-05, -0.005512237548828125, -5.7220458984375e-06, -0.0017434358596801758, -1.9073486328125e-06, -0.0246812105178833, -6.198863957251888e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -7.0835119923638175, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -7.026394844055176, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0031871795654296875, -1.9073486328125e-05, -0.0347747802734375, -3.814697265625e-06, -2.09808349609375e-05, -4.57763671875e-05, -2.47955322265625e-05, -4.792213439941406e-05, -8.106222594506107e-06, -0.0001163482666015625, -4.9591064453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001773834228515625, -1.71661376953125e-05, -0.0001621246337890625, -1.9073486328125e-06, -0.00095367431640625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.0108642578125e-05, 0.0, -6.866455078125e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.005848884582519531, -0.000537872314453125, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016045570373535156, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.0007266998291015625, -1.52587890625e-05, -1.549716034787707e-05, -0.000396728515625, -7.43865966796875e-05, -0.00049591064453125, -6.67572021484375e-05, -0.0008544921875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0033189058303833008, 0.0, -4.38690185546875e-05, -0.00072479248046875, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.001196128549054265, -1.3709068298339844e-05, -0.0004245042509865016, -1.1801670552813448e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -7.283155484944253, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -7.238750457763672, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0033664703369140625, -5.7220458984375e-06, -0.021846771240234375, -1.9073486328125e-06, -1.9073486328125e-05, -6.103515625e-05, -2.86102294921875e-05, -4.029273986816406e-05, -8.344639354618266e-06, -0.00011444091796875, -5.14984130859375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001697540283203125, -1.9073486328125e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.0009555816650390625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.0108642578125e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.635883331298828e-05, -1.9311904907226562e-05, -0.0057888031005859375, -0.00054168701171875, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.00077056884765625, -1.52587890625e-05, -1.549716034787707e-05, -0.000400543212890625, -7.43865966796875e-05, -0.00049591064453125, -6.67572021484375e-05, -0.0008525848388671875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.003319859504699707, 0.0, -4.38690185546875e-05, -0.0007228851318359375, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.001196247641928494, -1.3709068298339844e-05, -0.0004245042509865016, -1.1801670552813448e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "i", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "i", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID, i.FREE,\n            target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -7.358197137142959, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.289803504943848, 0.0, -0.046607017517089844, -3.814697265625e-06, -9.5367431640625e-06, -4.9591064453125e-05, -1.52587890625e-05, -0.00010502338409423828, -4.29153169534402e-06, -0.0001163482666015625, -6.103515625e-05, -4.57763671875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001735687255859375, -1.9073486328125e-05, -0.00014495849609375, -1.9073486328125e-06, -0.0009708404541015625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, 0.0, -6.866455078125e-05, -1.52587890625e-05, -3.635883331298828e-05, -1.7404556274414062e-05, -0.00579071044921875, -0.0005435943603515625, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00015866756439208984, 0.0, -2.8848648071289062e-05, -1.9073486328125e-06, -0.000774383544921875, -1.52587890625e-05, -1.549716034787707e-05, -0.0004024505615234375, -7.43865966796875e-05, -0.0004940032958984375, -6.67572021484375e-05, -0.000850677490234375, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0033208131790161133, 0.0, -4.38690185546875e-05, -0.0007266998291015625, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.001194221549667418, -1.3709068298339844e-05, -0.0004225969023536891, -1.1920878932869527e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "COMMON", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "COMMON", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID, COMMON.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -7.371095581457446, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.264854431152344, 0.0, -0.08454227447509766, -3.814697265625e-06, -3.24249267578125e-05, -5.53131103515625e-05, -1.71661376953125e-05, -4.8041343688964844e-05, -6.0796710386057384e-06, -8.96453857421875e-05, -3.4332275390625e-05, -5.340576171875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.71661376953125e-05, -0.0001373291015625, -1.9073486328125e-06, -0.0009899139404296875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.0108642578125e-05, 0.0, -6.866455078125e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.005784034729003906, -0.00054168701171875, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00015866756439208984, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.0007610321044921875, -1.52587890625e-05, -1.5616367818438448e-05, -0.0003986358642578125, -7.43865966796875e-05, -0.0004940032958984375, -6.67572021484375e-05, -0.0008487701416015625, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.003319859504699707, 0.0, -4.38690185546875e-05, -0.0007266998291015625, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.001198154641315341, -1.3709068298339844e-05, -0.0004262923903297633, -1.1682462172757369e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -7.685463947950446, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -7.624616622924805, -1.71661376953125e-05, -6.103515625e-05, 0.0, -0.00011444091796875, 0.0, -7.2479248046875e-05, -9.5367431640625e-06, -2.6941299438476562e-05, -1.7404556274414062e-05, -0.006072998046875, -0.0005245208740234375, -2.6702880859375e-05, -0.0001659393310546875, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -9.191036224365234e-05, 0.0, -2.8848648071289062e-05, -1.9073486328125e-06, -0.0006389617919921875, -1.52587890625e-05, -1.5616367818438448e-05, -0.00038909912109375, -7.2479248046875e-05, -0.0005054473876953125, -6.866455078125e-05, -0.000835418701171875, -7.62939453125e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.1920928244535389e-07, -0.003319859504699707, 0.0, -4.38690185546875e-05, -0.0007762908935546875, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011941008269786835, -1.3709068298339844e-05, -0.0004281997389625758, -1.1682462172757369e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "self", "<EOS>", "player", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "self", "hole3": "player"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(self, player)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -7.919621987528224, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.0057201385498046875, -0.000545501708984375, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -7.851239204406738, -1.9073486328125e-06, -0.00955963134765625, -1.52587890625e-05, -0.0001659393310546875, -0.000186920166015625, -6.4849853515625e-05, -6.67572021484375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.47955322265625e-05, -1.1920928244535389e-07, -0.0028592348098754883, -1.9073486328125e-06, -4.00543212890625e-05, -0.0009250640869140625, -3.814697265625e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00108717055991292, -1.3947486877441406e-05, -0.00035750865936279297, -1.6569983927183785e-05, -2.86102294921875e-05, -3.4332275390625e-05, -8.416175842285156e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n", "score": -7.93691269957305, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.0057201385498046875, -0.000545501708984375, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.000743865966796875, -1.52587890625e-05, -1.549716034787707e-05, -0.000396728515625, -7.43865966796875e-05, -0.0004940032958984375, -6.67572021484375e-05, -0.0008525848388671875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0033208131790161133, 0.0, -4.38690185546875e-05, -0.000720977783203125, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011966052697971463, -1.3709068298339844e-05, -7.875906467437744, -5.960462772236497e-07, -9.5367431640625e-06, -9.5367431640625e-06, -7.653236389160156e-05, 0.0]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "gamegame"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, gamegame)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -7.985416701427091, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.0057201385498046875, -0.000545501708984375, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.000743865966796875, -1.52587890625e-05, -1.549716034787707e-05, -7.917052268981934, -0.0076160430908203125, -6.103515625e-05, -0.00055694580078125, -4.9591064453125e-05, -0.0008945465087890625, -8.392333984375e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -4.1961669921875e-05, -1.1920928244535389e-07, -0.002915501594543457, 0.0, -4.00543212890625e-05, -0.000568389892578125, -8.96453857421875e-05, -5.53131103515625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0012689722934737802, -1.3709068298339844e-05, -0.0004478692717384547, -1.1205629562027752e-05, -2.6702880859375e-05, -4.1961669921875e-05, -7.653236389160156e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HealingTouch", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(target.\n            calculate_max_health()), self)\n", "score": -9.075128139782237, "score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.0057201385498046875, -0.000545501708984375, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.000743865966796875, -1.52587890625e-05, -1.549716034787707e-05, -0.000396728515625, -7.43865966796875e-05, -0.0004940032958984375, -6.67572021484375e-05, -0.0008525848388671875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0033208131790161133, 0.0, -4.38690185546875e-05, -7.556852340698242, -1.71661376953125e-05, -0.00023651123046875, -0.0009670257568359375, -3.814697265625e-06, 0.0, -0.001810312271118164, -5.7220458984375e-06, -0.01748526096343994, 0.0, -0.00070953369140625, -0.009616851806640625, -0.000453948974609375, -0.10131263732910156, 0.0, -0.8225702047348022, -5.9604644775390625e-06, -0.49160194396972656, -1.1920928244535389e-07, -0.002178192138671875, -1.9073486328125e-06, -0.010459184646606445, -7.62939453125e-06]}]}
{"index": 48, "beams": [{"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -1.2674063680493575, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -0.3277921676635742, -1.9073486328125e-06, -0.08424055576324463, -1.52587890625e-05, -0.005690454505383968, -2.1457672119140625e-06, -0.006868204567581415, -9.5367431640625e-06, -0.009146327152848244, -3.254413604736328e-05, -0.015594281256198883, -0.0009480714797973633, -0.0009288787841796875, -7.62939453125e-06, -2.288818359375e-05, -0.0076446533203125, -8.0108642578125e-05, -0.013640999794006348, -1.9073486328125e-06, -0.004284858703613281, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.009004592895507812, -3.24249267578125e-05, -0.13932764530181885, -3.576278118089249e-07, -0.01891946792602539, 0.0, -0.000583648681640625, -0.0030422210693359375, -0.0011034011840820312, -0.0001875162124633789, -6.7589629907161e-05, -0.001346588134765625, -5.7220458984375e-06, -0.0025844573974609375, -0.0007648468017578125, -1.9073486328125e-06, -0.00701904296875, -0.0008182525634765625, -0.00025963413645513356, -3.933906555175781e-06, -0.024745821952819824, -1.1920928244535389e-07, -9.918212890625e-05, -9.5367431640625e-06, -0.10185492038726807, 0.0, -0.0053997039794921875, -5.7220458984375e-05, -0.0009708404541015625, -0.000904083251953125, -0.011766433715820312, 0.0, -0.0015826221788302064, 0.0, -0.006565093994140625, -3.6954863844584906e-06, -0.001367330551147461, -8.106231689453125e-06, -0.000274658203125, -0.0036487579345703125, -3.0517578125e-05, -0.0005747079267166555, -4.768370445162873e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -2.841368424643683, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -1.292515754699707, -3.0517578125e-05, -0.0028514862060546875, -1.9073486328125e-06, -0.031200766563415527, -7.62939453125e-06, -0.00910616759210825, -4.5299530029296875e-06, -0.008275628089904785, -1.52587890625e-05, -0.3562447130680084, -3.24249267578125e-05, -0.30526453256607056, -9.655952453613281e-06, -0.016832925379276276, -0.0006810426712036133, -0.0014667510986328125, -7.62939453125e-06, -2.47955322265625e-05, -0.00662994384765625, -6.866455078125e-05, -0.010182380676269531, -1.9073486328125e-06, -0.003964424133300781, -2.86102294921875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0066967010498046875, -2.47955322265625e-05, -0.14561569690704346, -4.768370445162873e-07, -0.019944429397583008, 0.0, -0.0006122589111328125, -0.0032958984375, -0.0011491775512695312, -0.0001913309097290039, -6.818563997512683e-05, -0.0013103485107421875, -5.7220458984375e-06, -0.0026912689208984375, -0.0007076263427734375, -1.9073486328125e-06, -0.007050514221191406, -0.00081634521484375, -0.0002604686887934804, -3.933906555175781e-06, -0.024860262870788574, -1.1920928244535389e-07, -0.0001010894775390625, -9.5367431640625e-06, -0.10146486759185791, 0.0, -0.0054645538330078125, -5.7220458984375e-05, -0.0009517669677734375, -0.00089263916015625, -0.011697769165039062, 0.0, -0.0017338987672701478, 0.0, -0.00691986083984375, -3.8146954466355965e-06, -0.0013740062713623047, -8.106231689453125e-06, -0.0002765655517578125, -0.0035800933837890625, -2.86102294921875e-05, -0.0005682706250809133, -4.768370445162873e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.hunter.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -3.6826333171298344, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -1.292515754699707, -3.0517578125e-05, -0.0028514862060546875, -1.9073486328125e-06, -0.031200766563415527, -7.62939453125e-06, -0.00910616759210825, -4.5299530029296875e-06, -0.008275628089904785, -1.52587890625e-05, -1.3446403741836548, -2.9325485229492188e-05, -0.15964771807193756, -7.748603820800781e-06, -0.016317348927259445, -0.0007277727127075195, -0.000560760498046875, -7.62939453125e-06, -2.288818359375e-05, -0.006412506103515625, -7.43865966796875e-05, -0.011116623878479004, -1.9073486328125e-06, -0.004408836364746094, -3.24249267578125e-05, -7.62939453125e-06, -7.62939453125e-06, -0.006641387939453125, -2.6702880859375e-05, -0.14509713649749756, -4.768370445162873e-07, -0.01983773708343506, 0.0, -0.0006313323974609375, -0.0032863616943359375, -0.00115966796875, -0.0001932382583618164, -6.818563997512683e-05, -0.001285552978515625, -5.7220458984375e-06, -0.0027217864990234375, -0.0006961822509765625, -1.9073486328125e-06, -0.007111549377441406, -0.0008220672607421875, -0.0002604686887934804, -3.933906555175781e-06, -0.024918437004089355, -1.1920928244535389e-07, -0.0001010894775390625, -9.5367431640625e-06, -0.10147058963775635, 0.0, -0.0054454803466796875, -5.7220458984375e-05, -0.0009517669677734375, -0.0009212493896484375, -0.01171875, 0.0, -0.0014640090521425009, 0.0, -0.006203651428222656, -3.6954863844584906e-06, -0.0013778209686279297, -8.106231689453125e-06, -0.0002689361572265625, -0.0037555694580078125, -3.0517578125e-05, -0.0005773305310867727, -4.768370445162873e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "temp_attack", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -4.254450765797962, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -3.081137180328369, 0.0, -0.3000221252441406, -0.000690460205078125, -8.0108642578125e-05, -0.0003528594970703125, -0.0071163177490234375, -0.000301361083984375, -0.0030307769775390625, -2.09808349609375e-05, -0.08082008361816406, -1.9073486328125e-06, -0.22800469398498535, -1.1444091796875e-05, -0.005312751978635788, -2.1457672119140625e-06, -0.00653798645362258, -7.62939453125e-06, -0.008660378865897655, -1.3470649719238281e-05, -0.01530024316161871, -0.0005826950073242188, -0.00089263916015625, -5.7220458984375e-06, -2.09808349609375e-05, -0.009563446044921875, -8.392333984375e-05, -0.011739373207092285, -1.9073486328125e-06, -0.0045871734619140625, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.008565902709960938, -3.62396240234375e-05, -0.1379176378250122, -3.576278118089249e-07, -0.018425583839416504, 0.0, -0.0005512237548828125, -0.00311279296875, -0.00109100341796875, -0.0001856088638305664, -6.711282912874594e-05, -0.001384735107421875, -5.7220458984375e-06, -0.0025501251220703125, -0.000797271728515625, -1.9073486328125e-06, -0.0069828033447265625, -0.000812530517578125, -0.00025999173521995544, -3.933906555175781e-06, -0.024668574333190918, -1.1920928244535389e-07, -9.918212890625e-05, -9.5367431640625e-06, -0.10199892520904541, 0.0, -0.0053997039794921875, -5.7220458984375e-05, -0.0009784698486328125, -0.000881195068359375, -0.011674880981445312, 0.0, -0.0017297264421358705, 0.0, -0.0070056915283203125, -3.8146954466355965e-06, -0.0013644695281982422, -8.106231689453125e-06, -0.000278472900390625, -0.0035829544067382812, -3.0517578125e-05, -0.0005720853223465383, -4.768370445162873e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "justice", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "justice", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = justice\n        self.target.<UNK>(minion)\n", "score": -4.697454595417007, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -0.3277921676635742, -1.9073486328125e-06, -0.08424055576324463, -1.52587890625e-05, -0.005690454505383968, -2.1457672119140625e-06, -0.006868204567581415, -9.5367431640625e-06, -0.009146327152848244, -3.254413604736328e-05, -0.015594281256198883, -0.0009480714797973633, -0.0009288787841796875, -7.62939453125e-06, -2.288818359375e-05, -0.0076446533203125, -8.0108642578125e-05, -0.013640999794006348, -1.9073486328125e-06, -0.004284858703613281, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.009004592895507812, -3.24249267578125e-05, -0.13932764530181885, -3.576278118089249e-07, -0.01891946792602539, 0.0, -0.000583648681640625, -0.0030422210693359375, -0.0011034011840820312, -0.0001875162124633789, -6.7589629907161e-05, -0.001346588134765625, -5.7220458984375e-06, -0.0025844573974609375, -0.0007648468017578125, -1.9073486328125e-06, -0.00701904296875, -0.0008182525634765625, -0.00025963413645513356, -3.933906555175781e-06, -0.024745821952819824, -1.1920928244535389e-07, -9.918212890625e-05, -9.5367431640625e-06, -3.523937702178955, -4.768370445162873e-07, -0.0010013580322265625, -2.288818359375e-05, -0.0018711090087890625, -0.000370025634765625, -0.022127151489257812, -1.9073486328125e-06, -0.0007132288301363587, 0.0, -0.006903648376464844, -4.053113570989808e-06, -0.0033942461013793945, -8.106231689453125e-06, -0.0001239776611328125, -0.004038810729980469, -3.4332275390625e-05, -0.0005040168762207031, -3.576278118089249e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = self.player.game.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -4.83396358612287, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -0.3277921676635742, -1.9073486328125e-06, -2.55228853225708, -1.9073486328125e-06, -0.09852264076471329, -7.62939453125e-06, -0.48625028133392334, -7.462501525878906e-05, -0.48665085434913635, -2.002716064453125e-05, -0.014871630817651749, -0.0008193254470825195, -0.0050945281982421875, -3.814697265625e-06, -9.5367431640625e-06, -0.005695343017578125, -0.0001678466796875, -0.03933382034301758, -1.9073486328125e-06, -0.0037469863891601562, -5.91278076171875e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.03173065185546875, -2.09808349609375e-05, -0.134796142578125, -3.576278118089249e-07, -0.021366119384765625, 0.0, -0.000705718994140625, -0.0035343170166015625, -0.000858306884765625, -0.0001779794692993164, -7.092727173585445e-05, -0.0014553070068359375, -5.7220458984375e-06, -0.0024242401123046875, -0.00087738037109375, -1.9073486328125e-06, -0.007030487060546875, -0.0007877349853515625, -0.00025009753881022334, -3.933906555175781e-06, -0.02592158317565918, -1.1920928244535389e-07, -9.72747802734375e-05, -9.5367431640625e-06, -0.10190165042877197, 0.0, -0.005283355712890625, -5.7220458984375e-05, -0.00096893310546875, -0.0009212493896484375, -0.012140274047851562, 0.0, -0.0012009142665192485, 0.0, -0.00568389892578125, -3.576277322281385e-06, -0.0013797283172607422, -6.198883056640625e-06, -0.0002613067626953125, -0.004490852355957031, -3.24249267578125e-05, -0.0006048679351806641, -4.768370445162873e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -4.855898239315422, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -4.1422505378723145, -4.1961669921875e-05, -9.5367431640625e-06, -0.0001659393310546875, 0.0, 0.0, -5.7220458984375e-06, -4.0768893086351454e-05, -5.841255187988281e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.053375244140625, -2.09808349609375e-05, -0.0007610321044921875, -3.814697265625e-06, -0.011026382446289062, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -6.079655122448457e-06, -0.023565053939819336, -1.1920922133867862e-06, -5.7220458984375e-06, -0.000949859619140625, -0.0011196136474609375, -0.5303871035575867, -0.055313464254140854]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "player", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = player\n        self.target.<UNK>(minion)\n", "score": -4.9322357417581415, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -0.3277921676635742, -1.9073486328125e-06, -0.08424055576324463, -1.52587890625e-05, -0.005690454505383968, -2.1457672119140625e-06, -0.006868204567581415, -9.5367431640625e-06, -0.009146327152848244, -3.254413604736328e-05, -0.015594281256198883, -0.0009480714797973633, -0.0009288787841796875, -7.62939453125e-06, -2.288818359375e-05, -0.0076446533203125, -8.0108642578125e-05, -0.013640999794006348, -1.9073486328125e-06, -0.004284858703613281, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.009004592895507812, -3.24249267578125e-05, -0.13932764530181885, -3.576278118089249e-07, -0.01891946792602539, 0.0, -0.000583648681640625, -0.0030422210693359375, -0.0011034011840820312, -0.0001875162124633789, -6.7589629907161e-05, -0.001346588134765625, -5.7220458984375e-06, -0.0025844573974609375, -0.0007648468017578125, -1.9073486328125e-06, -0.00701904296875, -0.0008182525634765625, -0.00025963413645513356, -3.933906555175781e-06, -0.024745821952819824, -1.1920928244535389e-07, -9.918212890625e-05, -9.5367431640625e-06, -3.736565589904785, 0.0, -0.015436172485351562, -1.1444091796875e-05, -0.0152740478515625, -3.814697265625e-06, -0.0030345916748046875, 0.0, -0.0008996724500320852, 0.0, -0.000762939453125, -3.933904736186378e-06, -0.020009517669677734, -5.7220458984375e-06, -0.0003662109375, -0.006768226623535156, -4.76837158203125e-05, -0.0006487369537353516, -2.3841855067985307e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "chosen_card", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "chosen_card", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        chosen_card = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -5.184031496271608, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -4.166335582733154, -1.9073486328125e-06, -0.0244140625, -0.00075531005859375, -7.62939453125e-05, -0.0007076263427734375, -0.003696441650390625, -0.0001964569091796875, -0.0019321441650390625, -2.288818359375e-05, -0.0755758285522461, -1.9073486328125e-06, -0.3368813991546631, -1.33514404296875e-05, -0.006514244247227907, -4.0531158447265625e-06, -0.0069917235523462296, -5.7220458984375e-06, -0.012895315885543823, -1.3470649719238281e-05, -0.015999769791960716, -0.0007505416870117188, -0.000995635986328125, -3.814697265625e-06, -7.62939453125e-06, -0.015344619750976562, -8.7738037109375e-05, -0.01595175266265869, -1.9073486328125e-06, -0.004153251647949219, -3.62396240234375e-05, -7.62939453125e-06, -1.52587890625e-05, -0.015176773071289062, -4.76837158203125e-05, -0.13624989986419678, -2.3841855067985307e-07, -0.017935514450073242, 0.0, -0.0005321502685546875, -0.003021240234375, -0.0010986328125, -0.0001875162124633789, -6.520559691125527e-05, -0.0013408660888671875, -5.7220458984375e-06, -0.0025272369384765625, -0.000782012939453125, -1.9073486328125e-06, -0.007073402404785156, -0.000820159912109375, -0.0002592764503788203, -3.933906555175781e-06, -0.02477729320526123, -1.1920928244535389e-07, -9.918212890625e-05, -9.5367431640625e-06, -0.10194456577301025, 0.0, -0.0054302215576171875, -5.7220458984375e-05, -0.000972747802734375, -0.000896453857421875, -0.011707305908203125, 0.0, -0.0016272064531221986, 0.0, -0.00670623779296875, -3.6954863844584906e-06, -0.0013692378997802734, -8.106231689453125e-06, -0.0002765655517578125, -0.003620147705078125, -3.0517578125e-05, -0.0005738734616898, -4.768370445162873e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = self.player.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -5.258374799890241, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -0.3277921676635742, -1.9073486328125e-06, -2.55228853225708, -1.9073486328125e-06, -0.09852264076471329, -7.62939453125e-06, -1.402854323387146, -0.0013875961303710938, -0.010205253027379513, -1.5497207641601562e-05, -0.016252513974905014, -0.0009022951126098633, -0.0061740875244140625, -5.7220458984375e-06, -5.7220458984375e-06, -0.008056640625, -0.0001125335693359375, -0.030898213386535645, -1.9073486328125e-06, -0.00380706787109375, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.022428512573242188, -2.86102294921875e-05, -0.13286232948303223, -3.576278118089249e-07, -0.019005894660949707, 0.0, -0.0005207061767578125, -0.00312042236328125, -0.0009756088256835938, -0.0001894235610961914, -6.9020054070279e-05, -0.0013866424560546875, -5.7220458984375e-06, -0.00246429443359375, -0.0008449554443359375, -1.9073486328125e-06, -0.0070781707763671875, -0.000812530517578125, -0.000253316160524264, -3.933906555175781e-06, -0.025711774826049805, -1.1920928244535389e-07, -9.918212890625e-05, -9.5367431640625e-06, -0.10206472873687744, 0.0, -0.0054035186767578125, -5.7220458984375e-05, -0.00096893310546875, -0.000888824462890625, -0.011993408203125, 0.0, -0.001631855615414679, 0.0, -0.00679779052734375, -3.6954863844584906e-06, -0.0013768672943115234, -8.106231689453125e-06, -0.0002765655517578125, -0.0036153793334960938, -3.0517578125e-05, -0.0005738734616898, -4.768370445162873e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "0/1", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "0/1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "0/1", "_type": "Template25"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "0/1", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(0/1()))\n        self.target.add_buff(Buff(0/1()))\n", "score": -5.666471612469927, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -3.448488235473633, -3.0517578125e-05, -7.62939453125e-06, -9.5367431640625e-05, 0.0, 0.0, -1.9073486328125e-06, -3.409334021853283e-05, -6.318092346191406e-06, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.14984130859375e-05, -7.987022399902344e-06, -2.09808349609375e-05, -0.2916383743286133, -5.7220458984375e-05, -0.01968669891357422, -3.814697265625e-06, -0.03474617004394531, 0.0, -2.6941299438476562e-05, 0.0, -1.71661376953125e-05, -5.722029527532868e-06, -0.08369410037994385, -1.9073468138230965e-06, -3.0517578125e-05, -0.0012531280517578125, -0.0014820098876953125, -0.8125263452529907, -0.04207753390073776, -0.001964569091796875, -3.4332275390625e-05, -0.1462106704711914, -1.1444091796875e-05, -0.0348052978515625, 0.0, -0.0007394552230834961, 0.0, -1.1444091796875e-05, -2.7418097943154862e-06, -0.043421149253845215, -1.1920928244535389e-07, -7.62939453125e-06, -0.004581451416015625, -0.0019550323486328125, -0.6280713081359863, -0.03189096599817276]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "0/1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "0/1", "_type": "Template25"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.add_buff(Buff(0/1()))\n", "score": -5.7973191261456165, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -3.448488235473633, -3.0517578125e-05, -7.62939453125e-06, -9.5367431640625e-05, 0.0, 0.0, -1.9073486328125e-06, -3.409334021853283e-05, -6.318092346191406e-06, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.14984130859375e-05, -7.987022399902344e-06, -2.09808349609375e-05, -0.2916383743286133, -5.7220458984375e-05, -0.01968669891357422, -3.814697265625e-06, -0.03474617004394531, 0.0, -2.6941299438476562e-05, 0.0, -1.71661376953125e-05, -5.722029527532868e-06, -0.08369410037994385, -1.9073468138230965e-06, -3.0517578125e-05, -0.0012531280517578125, -0.0014820098876953125, -0.9433738589286804, -0.04207753390073776, -0.001964569091796875, -3.4332275390625e-05, -0.1462106704711914, -1.1444091796875e-05, -0.0348052978515625, 0.0, -0.0007394552230834961, 0.0, -1.1444091796875e-05, -2.7418097943154862e-06, -0.043421149253845215, -1.1920928244535389e-07, -7.62939453125e-06, -0.004581451416015625, -0.0019550323486328125, -0.6280713081359863, -0.03189096599817276]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 249, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "score": -5.940087001840823, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -5.8953986167907715, -0.004207611083984375, -9.5367431640625e-06, -0.0035877227783203125, 0.0, 0.0, -5.7220458984375e-06, -5.14971834491007e-05, -4.649161837733118e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -1.1682510375976562e-05, -9.5367431640625e-06]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Template36"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"attr": "card", "_type": "Attribute", "value": {"id": "minion", "_type": "Name"}}]}, {"hole1": "<UNK>", "hole0": {"attr": "card", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.card.<UNK>(minion)\n", "score": -6.383610867028423, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -0.3277921676635742, -1.9073486328125e-06, -0.08424055576324463, -1.52587890625e-05, -0.005690454505383968, -2.1457672119140625e-06, -0.006868204567581415, -9.5367431640625e-06, -0.009146327152848244, -3.254413604736328e-05, -0.015594281256198883, -0.0009480714797973633, -0.0009288787841796875, -7.62939453125e-06, -2.288818359375e-05, -0.0076446533203125, -8.0108642578125e-05, -0.013640999794006348, -1.9073486328125e-06, -0.004284858703613281, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.009004592895507812, -3.24249267578125e-05, -0.13932764530181885, -3.576278118089249e-07, -0.01891946792602539, 0.0, -0.000583648681640625, -0.0030422210693359375, -0.0011034011840820312, -0.0001875162124633789, -6.7589629907161e-05, -0.001346588134765625, -5.7220458984375e-06, -0.0025844573974609375, -0.0007648468017578125, -1.9073486328125e-06, -0.00701904296875, -0.0008182525634765625, -0.00025963413645513356, -3.933906555175781e-06, -0.024745821952819824, -1.1920928244535389e-07, -9.918212890625e-05, -9.5367431640625e-06, -0.10185492038726807, 0.0, -0.0053997039794921875, -5.7220458984375e-05, -0.0009708404541015625, -0.000904083251953125, -4.459738731384277, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0006924867630004883, 0.0, -0.00404810905456543, -5.006674109608866e-05, -0.005981802474707365, -2.145764938177308e-06, -0.48298704624176025, -5.841255187988281e-06, -0.0013408660888671875, -0.18552780151367188, -1.71661376953125e-05, -0.0016022920608520508, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Hex", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 33, 205, "super", "<EOS>", "reveal", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Hex", "hole2": [{"hole1": 3, "hole0": "Hex", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "reveal", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.PRIEST, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        super().reveal()\n", "score": -9.925863299903654, "score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -7.077545166015625, -0.00032806396484375, -5.960462772236497e-07, 0.0, -1.1920926112907182e-07, -2.3841855067985307e-07, -0.03739798069000244, 0.0, -0.0002567768096923828, 0.0, -0.000339508056640625, 0.0, -2.3365020751953125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0002390146255493164, -3.58813522325363e-05, -0.12606239318847656, -1.33514404296875e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, 0.0, -1.9073486328125e-06, -1.978861473617144e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.0517578125e-05, -7.748603820800781e-06, -1.33514404296875e-05, -1.942744255065918, -3.814697265625e-05, -0.531768798828125, -0.0001220703125, -0.17423725128173828, -7.62939453125e-06, -0.0033216397278010845, -2.0265579223632812e-06, -0.030297517776489258, 0.0]}]}
{"index": 49, "beams": [{"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -0.05233006785817196, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030385255813598633, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005512237548828125, -9.1552734375e-05, -0.0004711151123046875, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -0.008653640747070312, 0.0, -5.7220458984375e-05, -0.003162384033203125, -3.4332275390625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0007326601189561188, -9.417532055522315e-06, -0.0006748437881469727, -1.4424220353248529e-05, -6.103515625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -5.00705569098897, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -4.966814994812012, 0.0, -9.918212890625e-05, -0.000110626220703125, -3.62396240234375e-05, -7.832050323486328e-05, -5.9604644775390625e-06, -3.24249267578125e-05, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001373291015625, -9.5367431640625e-06, -8.58306884765625e-05, 0.0, -0.0040836334228515625, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.00014495849609375, 0.0, -0.0001049041748046875, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006979942321777344, -0.0006961822509765625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030518770217895508, -2.6702880859375e-05, -8.34464663057588e-06, -0.0005474090576171875, -9.1552734375e-05, -0.0004730224609375, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -0.008663177490234375, 0.0, -5.7220458984375e-05, -0.0031490325927734375, -3.4332275390625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000732540909666568, -9.417532055522315e-06, -0.0006748437881469727, -1.4424220353248529e-05, -6.103515625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -5.198222091898394, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -5.1586456298828125, 0.0, -3.62396240234375e-05, -0.000125885009765625, -4.00543212890625e-05, -7.450580596923828e-05, -4.0531158447265625e-06, -5.7220458984375e-05, -1.71661376953125e-05, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000209808349609375, -7.62939453125e-06, -8.20159912109375e-05, 0.0, -0.0036945343017578125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -8.7738037109375e-05, 0.0, -9.72747802734375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006751060485839844, -0.0007190704345703125, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030385255813598633, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005474090576171875, -9.1552734375e-05, -0.0004730224609375, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -0.008654594421386719, 0.0, -5.7220458984375e-05, -0.0031070709228515625, -3.4332275390625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0007367132348008454, -9.417532055522315e-06, -0.0006748437881469727, -1.4424220353248529e-05, -6.103515625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}, {"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n        player.draw()\n        player.draw()\n", "score": -6.052633574747112, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -5.260632514953613, -0.022861480712890625, -1.9073486328125e-06, -0.0002040863037109375, -3.814697265625e-06, 0.0, 0.0, -3.4809112548828125e-05, -1.9073486328125e-06, -5.352497100830078e-05, -1.9073486328125e-06, -0.0003987550735473633, -2.09808349609375e-05, -5.364416665543104e-06, -0.0003414154052734375, -0.001453399658203125, -9.5367431640625e-05, -0.000156402587890625, -8.58306884765625e-05, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -3.0517578125e-05, 0.0, -0.006285667419433594, 0.0, -3.62396240234375e-05, -0.003612518310546875, -3.4332275390625e-05, -3.24249267578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0007193087367340922, -7.390974587906385e-06, -0.0006688833236694336, -1.3947389561508317e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.6547784805297852, -9.5367431640625e-06, -0.00676727294921875, -2.09808349609375e-05, -0.0082855224609375, -1.9073486328125e-06, -0.009225845336914062, -1.9073486328125e-06, -0.005951881408691406, -2.50339189733495e-06, -0.018667221069335938, -1.1444091796875e-05, -0.00732421875, -2.6702880859375e-05, -0.0040493011474609375, -3.814697265625e-06, -0.009657621383666992, -1.9073486328125e-06, -0.0033341646194458008, -7.271740287251305e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -6.156797936663104, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -6.105161666870117, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -8.20159912109375e-05, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -1.3470649719238281e-05, -1.1682510375976562e-05, -0.00885772705078125, -0.0006198883056640625, -9.5367431640625e-06, -0.0001068115234375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.537799835205078e-05, -3.814697265625e-06, -6.318092346191406e-05, -1.9073486328125e-06, -0.0029811859130859375, -2.6702880859375e-05, -8.34464663057588e-06, -0.0005664825439453125, -8.96453857421875e-05, -0.000484466552734375, -7.2479248046875e-05, -6.4849853515625e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -4.00543212890625e-05, -3.4332275390625e-05, 0.0, -0.008634567260742188, 0.0, -5.7220458984375e-05, -0.00391387939453125, -3.4332275390625e-05, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0007266996544785798, -9.417532055522315e-06, -0.0006729364395141602, -1.4424220353248529e-05, -6.103515625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -6.193773320421194, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -6.147910118103027, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007686614990234375, -3.0517578125e-05, -0.01192474365234375, -1.9073486328125e-06, -1.52587890625e-05, -8.392333984375e-05, -5.7220458984375e-05, -6.496906280517578e-05, -2.741813204920618e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001621246337890625, -5.7220458984375e-06, -5.91278076171875e-05, 0.0, -0.00333404541015625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001239776611328125, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.3589859008789062e-05, -0.0071773529052734375, -0.000713348388671875, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030366182327270508, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005512237548828125, -9.1552734375e-05, -0.0004730224609375, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -0.0086517333984375, 0.0, -5.7220458984375e-05, -0.0031757354736328125, -3.4332275390625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000732540909666568, -9.417532055522315e-06, -0.0006748437881469727, -1.4424220353248529e-05, -6.103515625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "self", "<EOS>", "player", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "self", "hole3": "player"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(self, player)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -6.315119436355751, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -6.183550834655762, -1.9073486328125e-06, -0.08308696746826172, -3.62396240234375e-05, -0.0001125335693359375, -0.0001163482666015625, -4.57763671875e-05, -1.71661376953125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -0.008026123046875, 0.0, -8.58306884765625e-05, -0.00396728515625, -2.09808349609375e-05, -4.57763671875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006691216258332133, -1.192092622659402e-05, -0.000708460807800293, -2.4318398573086597e-05, -6.29425048828125e-05, -2.09808349609375e-05, -3.62396240234375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(player.effective_heal_power(6), self)\n", "score": -6.49555807405374, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030385255813598633, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005512237548828125, -9.1552734375e-05, -0.0004711151123046875, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -5.36324405670166, 0.0, -0.5610809326171875, -0.520930290222168, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0011081695556640625, -1.9073486328125e-06, -0.0096055269241333, -1.1920928955078125e-05, -0.0005866285064257681, -8.940656698541716e-06, -5.7220458984375e-05, -3.0517578125e-05, -3.24249267578125e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -6.577125838502859, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -6.512392997741699, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001983642578125, -2.6702880859375e-05, -0.03202247619628906, -1.9073486328125e-06, -9.5367431640625e-06, -0.000125885009765625, -5.340576171875e-05, -5.733966827392578e-05, -2.741813204920618e-06, -7.05718994140625e-05, -4.38690185546875e-05, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000156402587890625, -5.7220458984375e-06, -6.67572021484375e-05, 0.0, -0.0030231475830078125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00012969970703125, 0.0, -0.0001010894775390625, -2.47955322265625e-05, -1.52587890625e-05, -1.3709068298339844e-05, -0.006819725036621094, -0.0007343292236328125, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.982948303222656e-05, -1.9073486328125e-06, -0.0030404329299926758, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005474090576171875, -9.1552734375e-05, -0.0004673004150390625, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -0.008646965026855469, 0.0, -5.7220458984375e-05, -0.0030918121337890625, -3.4332275390625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0007345674675889313, -9.417532055522315e-06, -0.0006767511367797852, -1.4424220353248529e-05, -6.103515625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(game.current_player.hero)\n", "score": -6.681063703087027, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030385255813598633, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005512237548828125, -9.1552734375e-05, -0.0004711151123046875, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -5.36324405670166, 0.0, -0.8551721572875977, -0.015177726745605469, -0.0002460479736328125, -0.06528282165527344, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.031665921211242676, -1.9073486328125e-06, -0.25196373462677, 0.0, -0.05947268009185791, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(target.\n            calculate_max_health()), self)\n", "score": -6.79316060879534, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030385255813598633, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005512237548828125, -9.1552734375e-05, -0.0004711151123046875, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -0.008653640747070312, 0.0, -5.7220458984375e-05, -5.897533416748047, -1.33514404296875e-05, -5.7220458984375e-05, -0.0001811981201171875, -3.814697265625e-06, 0.0, -0.0005475282669067383, -5.7220458984375e-06, -0.035338521003723145, 0.0, -0.0009365081787109375, -0.010998725891113281, -0.0001220703125, -0.0628814697265625, 0.0, -0.5314364433288574, -9.655952453613281e-06, -0.20172321796417236, 0.0, -0.002368927001953125, -1.9073486328125e-06, -0.00147247314453125, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -7.065556219604666, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030385255813598633, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005512237548828125, -9.1552734375e-05, -0.0004711151123046875, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -6.957322597503662, 0.0, -0.008821487426757812, -0.05949211120605469, -9.5367431640625e-06, -0.000972747802734375, -0.0001220703125]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 238, 47, 143, "card_drawn", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "card_drawn"}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health('card_drawn', self)\n", "score": -7.138157515612299, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030385255813598633, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005512237548828125, -9.1552734375e-05, -0.0004711151123046875, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -5.36324405670166, 0.0, -0.5610809326171875, -0.9711704254150391, -5.7220458984375e-06, -0.10143039375543594, 0.0, -0.061283111572265625, -0.0016803741455078125, -0.03944683074951172, 0.0]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "game", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "game", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(game, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -7.3432487758622, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -7.289822578430176, -1.9073486328125e-05, -0.004957437515258789, -8.7738037109375e-05, -0.0001220703125, -0.0005474090576171875, -5.340576171875e-05, -5.14984130859375e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -0.007985115051269531, 0.0, -4.1961669921875e-05, -0.0033893585205078125, -4.76837158203125e-05, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0007641314878128469, -9.179114385915454e-06, -0.0006684064865112305, -1.168244216387393e-05, -5.7220458984375e-05, -2.47955322265625e-05, -3.4332275390625e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyLight", "hole2": [{"hole1": 2, "hole0": "Holy Light", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "heal", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -8.421220460178859, "score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -7.740044593811035, -0.001712799072265625, -4.887580871582031e-05, -0.0003974114079028368, -3.576278118089249e-07, -2.622604142743512e-06, -2.6702555260271765e-05, -2.622600959512056e-06, -0.6310825347900391, 0.0, -0.0003072023100685328, 0.0, -0.008920431137084961, 0.0, -0.0011750459671020508, -1.9073486328125e-06, -0.0001506805419921875, -4.76837158203125e-05, -3.063678741455078e-05, -1.549720582261216e-05, -0.020600318908691406, -0.000232696533203125, -9.5367431640625e-06, -0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -6.711483001708984e-05, -1.9073486328125e-06, -4.208087921142578e-05, -1.9073486328125e-06, -0.0003186464309692383, -1.9073486328125e-05, -6.914137884450611e-06, -0.000156402587890625, -0.0001506805419921875, -0.00074005126953125, -5.91278076171875e-05, -7.43865966796875e-05, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -3.4332275390625e-05, 0.0, -0.008453369140625, 0.0, -5.14984130859375e-05, -0.0029850006103515625, -3.0517578125e-05, -3.4332275390625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0007474420126527548, -9.417532055522315e-06, -0.0006552934646606445, -1.4066597032069694e-05, -6.29425048828125e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-06]}]}
{"index": 50, "beams": [{"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -0.286860130846712, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.2032155990600586, -1.9073486328125e-06, -3.62396240234375e-05, -0.002399444580078125, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.005869150161743164, 0.0, -0.002407287945970893, 0.0, -7.82012939453125e-05, -0.0001239776611328125, -1.1444091796875e-05, -1.9073486328125e-06, -0.010801315307617188, -1.9073486328125e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.0014295578002929688, 0.0, -0.0036754608154296875, -8.7738037109375e-05, -0.0012912750244140625, -3.814697265625e-06, -0.0019168853759765625, 0.0, -0.0008240938186645508, -3.814697265625e-06, -0.0002307891845703125, -0.0010051727294921875, -3.0517578125e-05, -0.00157928466796875, -3.814697265625e-06, -7.259845733642578e-05, -1.9073486328125e-06, -0.004528999328613281, 0.0, -0.0002593994140625, -0.001922607421875, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.003685593605041504, -3.218649908376392e-06, -0.00014028482837602496, 0.0, -8.392333984375e-05, -0.0001583099365234375, -3.4332275390625e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -1.840955348862785, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -1.764007568359375, 0.0, -9.918212890625e-05, -0.00189208984375, -4.00543212890625e-05, -9.34600830078125e-05, -1.52587890625e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.004091739654541016, -7.152555099310121e-07, -0.0002571765216998756, 0.0, -0.000102996826171875, -0.000141143798828125, -2.86102294921875e-05, 0.0, -0.00640106201171875, -1.71661376953125e-05, -8.392333984375e-05, -5.7220458984375e-06, -0.0021295547485351562, 0.0, -0.005421638488769531, -6.4849853515625e-05, -0.0008792877197265625, -3.814697265625e-06, -0.0016994476318359375, 0.0, -0.0006982088088989258, -3.814697265625e-06, -0.000213623046875, -0.0009555816650390625, -3.4332275390625e-05, -0.002239227294921875, -3.814697265625e-06, -6.496906280517578e-05, -1.9073486328125e-06, -0.004286766052246094, 0.0, -0.0002956390380859375, -0.00177764892578125, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0036798715591430664, -3.3378591979271732e-06, -0.00013683020370081067, 0.0, -8.392333984375e-05, -0.0001583099365234375, -3.4332275390625e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -5.5288009676472, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.2032155990600586, -1.9073486328125e-06, -3.62396240234375e-05, -0.002399444580078125, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -5.253109931945801, -1.1920928244535389e-07, -0.0008455063798464835, 0.0, -0.0001125335693359375, -0.000152587890625, -2.09808349609375e-05, 0.0, -0.0060272216796875, -1.9073486328125e-05, -8.0108642578125e-05, -5.7220458984375e-06, -0.0019016265869140625, 0.0, -0.0043506622314453125, -7.62939453125e-05, -0.0010223388671875, -3.814697265625e-06, -0.00188446044921875, 0.0, -0.0008069276809692383, -3.814697265625e-06, -0.00022125244140625, -0.0009670257568359375, -3.24249267578125e-05, -0.00203704833984375, -3.814697265625e-06, -6.878376007080078e-05, -1.9073486328125e-06, -0.004338264465332031, 0.0, -0.000278472900390625, -0.0018529891967773438, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.003658890724182129, -3.218649908376392e-06, -0.00013849817332811654, 0.0, -8.392333984375e-05, -0.0001583099365234375, -3.4332275390625e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "extend", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 21, 134, "targets", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "extend", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}]}, {"iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -5.583899423541922, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -4.755244255065918, -0.0007572174072265625, -2.09808349609375e-05, -3.4332275390625e-05, -8.392333984375e-05, -2.09808349609375e-05, 0.0, -0.00018143653869628906, 0.0, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, 0.0, -1.1563301086425781e-05, -3.0517578125e-05, -0.2418537139892578, -5.91278076171875e-05, -7.43865966796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -0.006889820098876953, -1.1444091796875e-05, -0.0010166168212890625, -0.000274658203125, -0.0008525848388671875, -1.52587890625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.00014531610941048712, -3.814697265625e-06, -0.0001220703125, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.76837158203125e-05, -4.00543212890625e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.0030612945556640625, -1.9073486328125e-06, -0.00015604487271048129, 0.0, -0.000293731689453125, -0.0002288818359375, -0.0001506805419921875, -3.814697265625e-05, -0.0010271072387695312, -7.62939453125e-06, -0.05115795135498047, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.4376659393310547, -1.1444091796875e-05, -0.004634857177734375, -1.9073486328125e-06, -0.0012359619140625, 0.0, -0.005391120910644531, -2.288818359375e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.0002593994140625, -5.7220458984375e-06, -0.020421981811523438, -0.0008392333984375, -0.0006437301635742188, -1.9073486328125e-06, -0.00037384033203125, -0.0006866455078125, -5.53131103515625e-05, -0.000118255615234375, -7.62939453125e-06, -8.058547973632812e-05, -9.5367431640625e-06, -0.03346824645996094, 0.0, -0.00014495849609375, -0.0011425018310546875, -2.86102294921875e-05, -6.67572021484375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.005167722702026367, -7.152555099310121e-07, -0.00018808539607562125, -1.1920928244535389e-07, -9.5367431640625e-05, -0.000133514404296875, -2.86102294921875e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "die", "<EOS>", 237, 44, 134, "minion", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "die", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.die(minion)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -5.9842810559529696, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -4.817030906677246, -3.814697265625e-06, -0.0003643035888671875, -0.032980918884277344, -1.33514404296875e-05, -0.3860788345336914, -3.814697265625e-06, -0.5030307769775391, -0.0002288818359375, -1.52587890625e-05, -3.814697265625e-06, -0.0006066560745239258, -1.9073486328125e-06, -0.04732704162597656, -3.62396240234375e-05, -0.015522003173828125, -1.9073486328125e-06, -0.10001564025878906, 0.0, -0.0006427764892578125, -1.9073486328125e-06, -0.000659942626953125, -0.001659393310546875, -3.0517578125e-05, -0.000797271728515625, -3.814697265625e-06, -3.147125244140625e-05, -3.814697265625e-06, -0.03059101104736328, 0.0, -0.0002079010009765625, -0.0012989044189453125, -3.0517578125e-05, -8.20159912109375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.005796909332275391, -8.344646857949556e-07, -0.0002357174234930426, 0.0, -9.5367431640625e-05, -0.00014495849609375, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "die", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.die(self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -6.1720656022989075, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -4.817030906677246, -3.814697265625e-06, -0.0003643035888671875, -0.032980918884277344, -1.33514404296875e-05, -1.1638641357421875, -3.814697265625e-06, -0.013300895690917969, -0.0002193450927734375, -1.1444091796875e-05, -1.9073486328125e-06, -0.002552032470703125, -1.9073486328125e-06, -0.020380020141601562, -1.9073486328125e-05, -0.00632476806640625, -1.9073486328125e-06, -0.04554557800292969, 0.0, -0.0007381439208984375, -1.9073486328125e-06, -0.000522613525390625, -0.0032901763916015625, -3.4332275390625e-05, -0.000423431396484375, -3.814697265625e-06, -3.3736228942871094e-05, -1.9073486328125e-06, -0.01793384552001953, 0.0, -0.0002155303955078125, -0.0015840530395507812, -2.288818359375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.005390644073486328, -8.344646857949556e-07, -0.00023678407887928188, 0.0, -9.72747802734375e-05, -0.00014495849609375, -3.24249267578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "extend", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 21, 134, "targets", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "extend", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}]}, {"iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -6.307787932401013, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -4.755244255065918, -0.0007572174072265625, -2.09808349609375e-05, -3.4332275390625e-05, -8.392333984375e-05, -2.09808349609375e-05, 0.0, -0.00018143653869628906, 0.0, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, 0.0, -1.1563301086425781e-05, -3.0517578125e-05, -0.2418537139892578, -5.91278076171875e-05, -7.43865966796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -0.006889820098876953, -1.1444091796875e-05, -0.0010166168212890625, -0.000274658203125, -0.0008525848388671875, -1.52587890625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.00014531610941048712, -3.814697265625e-06, -0.0001220703125, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.76837158203125e-05, -4.00543212890625e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.0030612945556640625, -1.9073486328125e-06, -0.00015604487271048129, 0.0, -0.000293731689453125, -0.0002288818359375, -0.0001506805419921875, -3.814697265625e-05, -0.0010271072387695312, -7.62939453125e-06, -0.05115795135498047, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -1.0948209762573242, -9.5367431640625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0617297887802124, 0.0, -0.00043904781341552734, 0.0, -0.03209495544433594, -6.29425048828125e-05, -3.814697265625e-05, -3.814697265625e-06, -0.000545501708984375, -7.62939453125e-06, -0.010027885437011719, -0.0006771087646484375, -0.0005254745483398438, -1.9073486328125e-06, -0.0009403228759765625, -0.0006656646728515625, -5.7220458984375e-05, -0.000110626220703125, -7.62939453125e-06, -0.00012636184692382812, -7.62939453125e-06, -0.027640342712402344, 0.0, -8.7738037109375e-05, -0.0010776519775390625, -3.4332275390625e-05, -6.866455078125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.004490494728088379, -7.152555099310121e-07, -0.00019904508371837437, -1.1920928244535389e-07, -8.96453857421875e-05, -0.0001373291015625, -2.86102294921875e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -6.3621619443468305, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -6.053770065307617, 0.0, -0.0009208917617797852, 0.0, -0.0004062652587890625, -0.005518913269042969, -2.6702880859375e-05, -6.103515625e-05, -1.9073486328125e-06, -3.933906555175781e-05, -7.62939453125e-06, -0.2223062515258789, -1.9073486328125e-06, -4.1961669921875e-05, -0.00254058837890625, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.005220651626586914, 0.0, -0.002455972135066986, 0.0, -7.62939453125e-05, -0.000133514404296875, -1.1444091796875e-05, -1.9073486328125e-06, -0.010997772216796875, -1.9073486328125e-05, -6.866455078125e-05, -5.7220458984375e-06, -0.001415252685546875, 0.0, -0.0036897659301757812, -8.7738037109375e-05, -0.0012950897216796875, -3.814697265625e-06, -0.001911163330078125, 0.0, -0.0008202791213989258, -3.814697265625e-06, -0.0002307891845703125, -0.0010013580322265625, -3.0517578125e-05, -0.00157928466796875, -3.814697265625e-06, -7.259845733642578e-05, -1.9073486328125e-06, -0.004530906677246094, 0.0, -0.0002593994140625, -0.0019207000732421875, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.003685593605041504, -3.218649908376392e-06, -0.00014028482837602496, 0.0, -8.392333984375e-05, -0.0001583099365234375, -3.4332275390625e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -6.424524871112503, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.2032155990600586, -1.9073486328125e-06, -3.62396240234375e-05, -0.002399444580078125, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.005869150161743164, 0.0, -0.002407287945970893, 0.0, -7.82012939453125e-05, -0.0001239776611328125, -1.1444091796875e-05, -1.9073486328125e-06, -0.010801315307617188, -1.9073486328125e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.0014295578002929688, 0.0, -0.0036754608154296875, -8.7738037109375e-05, -0.0012912750244140625, -3.814697265625e-06, -0.0019168853759765625, 0.0, -0.0008240938186645508, -3.814697265625e-06, -0.0002307891845703125, -0.0010051727294921875, -3.0517578125e-05, -0.00157928466796875, -3.814697265625e-06, -7.259845733642578e-05, -1.9073486328125e-06, -6.119772911071777, -1.9073486328125e-06, -0.000110626220703125, -0.008347511291503906, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.01850271224975586, 0.0, -0.001627485267817974, 0.0, -7.43865966796875e-05, -0.0001087188720703125, -1.33514404296875e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -6.439549852238365, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.2032155990600586, -1.9073486328125e-06, -3.62396240234375e-05, -0.002399444580078125, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.005869150161743164, 0.0, -6.158589839935303, 0.0, -1.33514404296875e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -0.0074520111083984375, -1.33514404296875e-05, -0.0001163482666015625, -5.7220458984375e-06, -0.0008554458618164062, 0.0, -0.0033168792724609375, -9.34600830078125e-05, -0.0024013519287109375, -5.7220458984375e-06, -0.0016117095947265625, 0.0, -0.0008527040481567383, -3.814697265625e-06, -0.0002040863037109375, -0.0010280609130859375, -2.86102294921875e-05, -0.00128173828125, -3.814697265625e-06, -8.022785186767578e-05, -1.9073486328125e-06, -0.004730224609375, 0.0, -0.0002593994140625, -0.0020084381103515625, -2.288818359375e-05, -0.0001068115234375, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.003769397735595703, -3.218649908376392e-06, -0.00013897511234972626, 0.0, -8.58306884765625e-05, -0.0001544952392578125, -3.4332275390625e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"hole1": "heal", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -6.537356358753009, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.2032155990600586, -1.9073486328125e-06, -3.62396240234375e-05, -0.002399444580078125, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.005869150161743164, 0.0, -0.002407287945970893, 0.0, -7.82012939453125e-05, -0.0001239776611328125, -1.1444091796875e-05, -1.9073486328125e-06, -4.914019584655762, -0.0004596710205078125, -5.91278076171875e-05, -1.52587890625e-05, -0.029582977294921875, -1.9073486328125e-06, -1.329141616821289, 0.0, -0.0013179779052734375, 0.0, -0.003643035888671875, 0.0, -1.9073486328125e-05, -0.0006351470947265625, -1.9073486328125e-05, -0.0023746490478515625, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0028318166732788086, -2.1457672119140625e-06, -0.00025087068206630647, 0.0, -4.1961669921875e-05, -3.62396240234375e-05, -2.47955322265625e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "MAGE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -6.686402686254318, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -6.404814720153809, 0.0, -3.62396240234375e-05, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.728534698486328e-05, -1.7404405298293568e-05, -0.011602401733398438, -0.0001354217529296875, -4.1961669921875e-05, -2.288818359375e-05, -6.29425048828125e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -1.9073486328125e-05, -0.00206756591796875, -1.9073486328125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.001946568489074707, 0.0, -0.0034332275390625, -0.0065555572509765625, -0.0001087188720703125, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008031129837036133, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.288818359375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0030422210693359375, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007419586181640625, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.20232582092285156, -1.9073486328125e-06, -3.62396240234375e-05, -0.002407073974609375, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0058863162994384766, 0.0, -0.0024112071841955185, 0.0, -7.82012939453125e-05, -0.0001220703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.010286331176757812, -1.9073486328125e-05, -7.05718994140625e-05, -7.62939453125e-06, -0.0014591217041015625, 0.0, -0.0036916732788085938, -8.96453857421875e-05, -0.0012798309326171875, -3.814697265625e-06, -0.001911163330078125, 0.0, -0.0008202791213989258, -3.814697265625e-06, -0.0002288818359375, -0.001003265380859375, -3.0517578125e-05, -0.001598358154296875, -3.814697265625e-06, -7.259845733642578e-05, -1.9073486328125e-06, -0.004535675048828125, 0.0, -0.0002593994140625, -0.001922607421875, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.003685593605041504, -3.218649908376392e-06, -0.00014040403766557574, 0.0, -8.392333984375e-05, -0.0001583099365234375, -3.4332275390625e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PALADIN"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -6.72477341941822, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -6.441625595092773, 0.0, -3.0517578125e-05, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.110004425048828e-05, -1.6569954823353328e-05, -0.011747360229492188, -0.0001430511474609375, -4.1961669921875e-05, -2.288818359375e-05, -6.103515625e-05, -5.7220458984375e-06, 0.0, -0.00010728836059570312, 0.0, -1.1444091796875e-05, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -1.9073486328125e-05, -0.0021038055419921875, -1.9073486328125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019437074661254883, 0.0, -0.003475189208984375, -0.006468772888183594, -0.0001087188720703125, -0.000316619873046875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.00072479248046875, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0030460357666015625, -1.9073486328125e-06, -0.0001602169795660302, 0.0, -0.000209808349609375, -0.0007419586181640625, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.20395183563232422, -1.9073486328125e-06, -3.62396240234375e-05, -0.002410888671875, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0058863162994384766, 0.0, -0.0024096621200442314, 0.0, -7.82012939453125e-05, -0.0001239776611328125, -1.1444091796875e-05, -1.9073486328125e-06, -0.010082244873046875, -1.9073486328125e-05, -6.866455078125e-05, -7.62939453125e-06, -0.0014753341674804688, 0.0, -0.00370025634765625, -8.96453857421875e-05, -0.001277923583984375, -3.814697265625e-06, -0.0019168853759765625, 0.0, -0.0008202791213989258, -3.814697265625e-06, -0.0002288818359375, -0.0010051727294921875, -2.86102294921875e-05, -0.0016021728515625, -3.814697265625e-06, -7.259845733642578e-05, -1.9073486328125e-06, -0.0045375823974609375, 0.0, -0.0002593994140625, -0.0019235610961914062, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.003685593605041504, -3.218649908376392e-06, -0.00014040403766557574, 0.0, -8.392333984375e-05, -0.0001583099365234375, -3.4332275390625e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_spell_damage(2), self)\n", "score": -6.822890997344352, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.2032155990600586, -1.9073486328125e-06, -3.62396240234375e-05, -0.002399444580078125, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.005869150161743164, 0.0, -0.002407287945970893, 0.0, -7.82012939453125e-05, -0.0001239776611328125, -1.1444091796875e-05, -1.9073486328125e-06, -0.010801315307617188, -1.9073486328125e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.0014295578002929688, 0.0, -0.0036754608154296875, -8.7738037109375e-05, -0.0012912750244140625, -3.814697265625e-06, -0.0019168853759765625, 0.0, -0.0008240938186645508, -3.814697265625e-06, -0.0002307891845703125, -0.0010051727294921875, -3.0517578125e-05, -0.00157928466796875, -3.814697265625e-06, -7.259845733642578e-05, -1.9073486328125e-06, -0.004528999328613281, 0.0, -0.0002593994140625, -0.001922607421875, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -6.539159297943115, 0.0, -0.0007369052618741989, 0.0, -5.14984130859375e-05, -0.0001659393310546875, -2.09808349609375e-05, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolyNova", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}, {"iter": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "target": {"id": "minion", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -6.864988382500364, "score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -4.755244255065918, -0.0007572174072265625, -2.09808349609375e-05, -3.4332275390625e-05, -8.392333984375e-05, -2.09808349609375e-05, 0.0, -0.00018143653869628906, 0.0, -9.5367431640625e-06, 0.0, -4.76837158203125e-05, 0.0, -1.1563301086425781e-05, -3.0517578125e-05, -1.7394943237304688, -2.288818359375e-05, -0.000148773193359375, -3.814697265625e-06, -0.0006923675537109375, 0.0, -0.0057239532470703125, -0.007378578186035156, -8.392333984375e-05, -0.0002727508544921875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0009747743606567383, -1.9073486328125e-06, -0.000766754150390625, 0.0, -5.340576171875e-05, -2.47955322265625e-05, -3.24249267578125e-05, -2.09808349609375e-05, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00302886962890625, -1.9073486328125e-06, -0.00016200511890929192, 0.0, -0.0001659393310546875, -0.000682830810546875, -7.62939453125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -6.0677528381347656e-05, -5.7220458984375e-06, -0.20235633850097656, -1.9073486328125e-06, -4.00543212890625e-05, -0.0024929046630859375, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.006014108657836914, 0.0, -0.002511049620807171, 0.0, -7.82012939453125e-05, -0.0001220703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.010914802551269531, -1.52587890625e-05, -0.0001659393310546875, -1.33514404296875e-05, -0.001758575439453125, 0.0, -0.012497901916503906, -0.0001068115234375, -0.0022430419921875, -5.7220458984375e-06, -0.022344589233398438, 0.0, -0.0009843111038208008, -3.814697265625e-06, -0.00019073486328125, -0.0007572174072265625, -3.24249267578125e-05, -0.001056671142578125, -5.7220458984375e-06, -7.450580596923828e-05, -1.9073486328125e-06, -0.0046672821044921875, 0.0, -0.0002613067626953125, -0.001888275146484375, -2.288818359375e-05, -9.918212890625e-05, -1.52587890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0036989450454711914, -3.3378591979271732e-06, -0.00013706868048757315, 0.0, -8.58306884765625e-05, -0.000156402587890625, -3.4332275390625e-05, 0.0, -0.006461143493652344, -1.1444091796875e-05, -0.0001926422119140625, -9.5367431640625e-06, -0.002841949462890625, -1.9073486328125e-06, -0.021561622619628906, -8.0108642578125e-05, -0.0015277862548828125, -5.7220458984375e-06, -0.017383575439453125, 0.0, -0.0007287263870239258, -3.814697265625e-06, -0.0001773834228515625, -0.000736236572265625, -3.62396240234375e-05, -0.00136566162109375, -5.7220458984375e-06, -6.496906280517578e-05, -1.9073486328125e-06, -0.00437164306640625, 0.0, -0.00031280517578125, -0.0018625259399414062, -2.288818359375e-05, -9.918212890625e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0036760568618774414, -3.3378591979271732e-06, -0.00013123033568263054, 0.0, -8.58306884765625e-05, -0.000156402587890625, -3.4332275390625e-05, 0.0]}]}
{"index": 51, "beams": [{"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.194906589081981, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -0.17240917682647705, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.014516830444335938, -1.9073486328125e-06, -4.1961669921875e-05, -9.918212890625e-05, -8.96453857421875e-05, -2.6702880859375e-05, -2.741813204920618e-06, -6.103515625e-05, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.0001583099365234375, 0.0, -7.62939453125e-05, 0.0, -0.0009250640869140625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.0003108978271484375, -0.000171661376953125, -9.5367431640625e-06, -0.0002765655517578125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003833770751953125, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007305145263671875, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.0002079010009765625, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017499906243756413, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -2.0456922021424333, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -2.0261306762695312, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.011602401733398438, 0.0, -4.76837158203125e-05, -0.000110626220703125, -8.392333984375e-05, -2.47955322265625e-05, -2.384185791015625e-06, -6.103515625e-05, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0001583099365234375, 0.0, -6.103515625e-05, 0.0, -0.000911712646484375, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.000308990478515625, -0.000171661376953125, -9.5367431640625e-06, -0.0002803802490234375, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003871917724609375, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007305145263671875, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017487985314801335, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -4.568459149858697, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -4.541135787963867, 0.0, -5.91278076171875e-05, 0.0, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.019191741943359375, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001316070556640625, -8.96453857421875e-05, -2.47955322265625e-05, -3.218649908376392e-06, -7.43865966796875e-05, -9.1552734375e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.0009307861328125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.000293731689453125, -0.0001735687255859375, -9.5367431640625e-06, -0.000293731689453125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003986358642578125, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007171630859375, -8.0108642578125e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017666799249127507, -1.1920928244535389e-07, -0.00014102205750532448, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -4.989855882219032, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -0.17240917682647705, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.809353828430176, 0.0, -0.000263214111328125, -5.91278076171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.384185791015625e-06, -6.4849853515625e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00019073486328125, 0.0, -5.91278076171875e-05, 0.0, -0.0009212493896484375, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.000293731689453125, -0.000179290771484375, -9.5367431640625e-06, -0.000293731689453125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.537799835205078e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003814697265625, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007171630859375, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017321092309430242, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.308106657555797, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -5.2797441482543945, 0.0, -5.340576171875e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.020374298095703125, 0.0, -3.814697265625e-05, -0.0001049041748046875, -8.7738037109375e-05, -2.47955322265625e-05, -2.861022494471399e-06, -6.29425048828125e-05, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0001621246337890625, 0.0, -7.82012939453125e-05, 0.0, -0.000919342041015625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.00029754638671875, -0.0001735687255859375, -9.5367431640625e-06, -0.0002880096435546875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.00038909912109375, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.000720977783203125, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017487985314801335, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.622582670739391, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -5.601820945739746, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.012653350830078125, -1.9073486328125e-06, -4.57763671875e-05, -0.0001277923583984375, -0.0001010894775390625, -2.47955322265625e-05, -2.861022494471399e-06, -6.67572021484375e-05, -7.43865966796875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.0001697540283203125, 0.0, -8.96453857421875e-05, 0.0, -0.00092315673828125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.0002956390380859375, -0.0001735687255859375, -9.5367431640625e-06, -0.0002899169921875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003910064697265625, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.000720977783203125, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017487985314801335, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.712480184129461, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -0.17240917682647705, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -5.530744552612305, 0.0, -0.0015087127685546875, -5.7220458984375e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.1457672119140625e-06, -4.9591064453125e-05, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, 0.0, -0.000152587890625, 0.0, -5.7220458984375e-05, 0.0, -0.0009288787841796875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -1.71661376953125e-05, -1.1444091796875e-05, -2.1457672119140625e-06, -0.00030517578125, -0.0001773834228515625, -9.5367431640625e-06, -0.0002899169921875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.537799835205078e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003910064697265625, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007228851318359375, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001983642578125, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017487985314801335, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.044338342240778, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -6.025196075439453, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.011144638061523438, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001392364501953125, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -6.29425048828125e-05, -6.103515625e-05, -7.62939453125e-06, 0.0, -1.71661376953125e-05, 0.0, -0.000171661376953125, 0.0, -8.20159912109375e-05, 0.0, -0.00092315673828125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.0002994537353515625, -0.0001735687255859375, -9.5367431640625e-06, -0.0002841949462890625, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003833770751953125, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007228851318359375, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.0002079010009765625, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017499906243756413, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.621902939370372, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -6.594512939453125, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.01941680908203125, 0.0, -4.00543212890625e-05, -0.0001163482666015625, -8.392333984375e-05, -2.47955322265625e-05, -2.9802317840221804e-06, -6.67572021484375e-05, -7.62939453125e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -0.000904083251953125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.000286102294921875, -0.00017547607421875, -9.5367431640625e-06, -0.00029754638671875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.00038909912109375, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.000713348388671875, -8.0108642578125e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017499906243756413, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "target_func", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "target_func", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.target_func, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.051813003099895, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -0.17240917682647705, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -6.86982536315918, 0.0, -0.00164794921875, -0.0001220703125, -7.82012939453125e-05, -5.14984130859375e-05, -2.1457672119140625e-06, -7.05718994140625e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0001850128173828125, 0.0, -5.340576171875e-05, 0.0, -0.0008335113525390625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -2.2649765014648438e-06, -0.00029754638671875, -0.0001811981201171875, -9.5367431640625e-06, -0.0003032684326171875, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.537799835205078e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0004024505615234375, -2.09808349609375e-05, -8.463848644169047e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.000720977783203125, -8.0108642578125e-05, -2.6702880859375e-05, -0.0001983642578125, 0.0, -5.7220458984375e-06, 0.0, -0.0002040863037109375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017845614638645202, -1.1920928244535389e-07, -0.00014114126679487526, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .EPIC, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.108879682115273, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -2.0261306762695312, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -5.074584007263184, 0.0, -0.000301361083984375, -7.82012939453125e-05, -4.57763671875e-05, -2.86102294921875e-05, -2.1457672119140625e-06, -6.67572021484375e-05, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-05, 0.0, -0.000202178955078125, 0.0, -4.9591064453125e-05, 0.0, -0.0009326934814453125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.0002918243408203125, -0.000179290771484375, -9.5367431640625e-06, -0.0002956390380859375, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.537799835205078e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003833770751953125, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007171630859375, -8.0108642578125e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017499906243756413, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 2}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.1147289243252345, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -6.981321334838867, -2.0265579223632812e-06, -1.33514404296875e-05, -7.43865966796875e-05, -2.47955322265625e-05, -0.00020599365234375, -0.00017464160919189453, 0.0, -0.11138248443603516, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -6.103515625e-05, 0.0, -0.015054702758789062, -1.9073486328125e-06, -4.00543212890625e-05, -9.1552734375e-05, -8.7738037109375e-05, -2.6702880859375e-05, -2.741813204920618e-06, -6.103515625e-05, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -0.000156402587890625, 0.0, -7.43865966796875e-05, 0.0, -0.0009212493896484375, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.00031280517578125, -0.000171661376953125, -9.5367431640625e-06, -0.0002765655517578125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.00038909912109375, -2.09808349609375e-05, -8.463848644169047e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007305145263671875, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.0002079010009765625, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017499906243756413, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.535682794145075, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -7.503547668457031, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.024234771728515625, 0.0, -3.0517578125e-05, -9.918212890625e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.622604142743512e-06, -6.103515625e-05, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0001583099365234375, 0.0, -6.866455078125e-05, 0.0, -0.00092315673828125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.0003070831298828125, -0.000171661376953125, -9.5367431640625e-06, -0.0002765655517578125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.537799835205078e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003795623779296875, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.000728607177734375, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.0002079010009765625, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017499906243756413, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "game", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "game", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.game, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.646911617807106, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -0.17240917682647705, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -7.466394424438477, 0.0, -4.1961669921875e-05, -0.0003490447998046875, -5.53131103515625e-05, -5.7220458984375e-05, -2.1457672119140625e-06, -7.2479248046875e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -1.52587890625e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.000904083251953125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -0.0002899169921875, -0.00018310546875, -9.5367431640625e-06, -0.0002918243408203125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.1563301086425781e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.000362396240234375, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007171630859375, -8.0108642578125e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.00020599365234375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.0001733301323838532, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}, {"choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "HolySmite", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.741773959673381, "score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -2.0261306762695312, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -5.706667900085449, 0.0, -0.0011539459228515625, -6.67572021484375e-05, -4.1961669921875e-05, -2.86102294921875e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001544952392578125, 0.0, -4.57763671875e-05, 0.0, -0.00092315673828125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.1444091796875e-05, -2.1457672119140625e-06, -0.0002994537353515625, -0.0001811981201171875, -9.5367431640625e-06, -0.0002994537353515625, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.537799835205078e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0004024505615234375, -2.09808349609375e-05, -8.463848644169047e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.000720977783203125, -8.0108642578125e-05, -2.6702880859375e-05, -0.0001983642578125, 0.0, -5.7220458984375e-06, 0.0, -0.0002040863037109375, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017654879775363952, -1.1920928244535389e-07, -0.00014102205750532448, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0]}]}
{"index": 52, "beams": [{"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 165, "Give", "<EOS>", 237, 42, 129, 239, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 52, 180, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"_type": "List", "elts": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole0": "Taunt", "_type": "Template25"}]}], "hole0": "Give", "hole2": "MinionSelector", "_type": "Template18", "hole4": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -0.35028275184970425, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -0.09549522399902344, -0.0006104782223701477, -0.0014087589224800467, -3.814697265625e-06, -0.00206756591796875, -0.00012969970703125, -0.0073184967041015625, -0.0042591094970703125, -2.47955322265625e-05, -0.0008447659783996642, -4.839897155761719e-05, -0.0014502692501991987, -0.1230316162109375, -5.53131103515625e-05, -0.0026751263067126274, -1.9073486328125e-06, -0.005077362060546875, -0.0041790008544921875, -0.00021755695343017578, -1.9073486328125e-06, -0.0008028745651245117, -0.0039119720458984375, -3.814697265625e-06, -0.0016146916896104813, 0.0, -0.007890701293945312, -0.000400543212890625, -0.0014958088286221027, -0.0022950160782784224, -0.00012436509132385254, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0011463165283203125, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0010733604431152344, -0.00012969970703125, -5.7220458984375e-06, -2.288818359375e-05, -8.392333984375e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.030185818672180176, -7.62939453125e-06, -0.00083160400390625, 0.0, -0.000308990478515625, -0.0001354217529296875, 0.0, -0.0016423463821411133, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -0.0006530264508910477, -0.0007820128230378032, -1.9073486328125e-06, -0.0002269744873046875, -0.00067138671875, -0.0001355290733044967, 0.0, -0.0008110413909889758, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 165, "Give", "<EOS>", 237, 42, 129, 239, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 52, 180, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"_type": "List", "elts": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole0": "Taunt", "_type": "Template25"}]}], "hole0": "Give", "hole2": "MinionSelector", "_type": "Template18", "hole4": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -2.395241509115408, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -0.09549522399902344, -0.0006104782223701477, -0.0014087589224800467, -3.814697265625e-06, -0.00206756591796875, -0.00012969970703125, -0.0073184967041015625, -0.0042591094970703125, -2.47955322265625e-05, -0.0008447659783996642, -4.839897155761719e-05, -0.0014502692501991987, -2.164484977722168, -4.57763671875e-05, -0.0010277165565639734, -1.9073486328125e-06, -0.0047588348388671875, -0.0040798187255859375, -0.00010883808135986328, -1.9073486328125e-06, -0.000420451135141775, -0.00505828857421875, -1.9073486328125e-06, -0.001680995337665081, 0.0, -0.0118408203125, -0.0004119873046875, -0.001956124324351549, -0.001365899806842208, -0.00013524293899536133, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0008678436279296875, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0009682178497314453, -0.0001201629638671875, -5.7220458984375e-06, -2.288818359375e-05, -7.2479248046875e-05, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.03198254108428955, -7.62939453125e-06, -0.0007915496826171875, 0.0, -0.0003108978271484375, -0.0001316070556640625, 0.0, -0.0016040802001953125, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -0.0006736497161909938, -0.0007972716121003032, -1.9073486328125e-06, -0.0002307891845703125, -0.0006866455078125, -0.00013374122499953955, 0.0, -0.0008104457519948483, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 165, "Give", "<EOS>", 237, 42, 129, 239, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 52, 180, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"_type": "List", "elts": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole0": "Taunt", "_type": "Template25"}]}], "hole0": "Give", "hole2": "MinionSelector", "_type": "Template18", "hole4": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": [{"_type": "Call", "args": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(self.target), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.92419526519015, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -0.09549522399902344, -0.0006104782223701477, -0.0014087589224800467, -3.814697265625e-06, -0.00206756591796875, -0.00012969970703125, -0.0073184967041015625, -0.0042591094970703125, -2.47955322265625e-05, -0.0008447659783996642, -4.839897155761719e-05, -0.0014502692501991987, -0.1230316162109375, -5.53131103515625e-05, -0.0026751263067126274, -1.9073486328125e-06, -0.005077362060546875, -0.0041790008544921875, -0.00021755695343017578, -1.9073486328125e-06, -0.0008028745651245117, -0.0039119720458984375, -3.814697265625e-06, -0.0016146916896104813, 0.0, -0.007890701293945312, -0.000400543212890625, -0.0014958088286221027, -0.0022950160782784224, -0.00012436509132385254, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0011463165283203125, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0010733604431152344, -0.00012969970703125, -5.7220458984375e-06, -2.288818359375e-05, -8.392333984375e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.569427490234375, -4.00543212890625e-05, -0.026456832885742188, -1.9073486328125e-06, -0.005084991455078125, -4.00543212890625e-05, -1.9073486328125e-06, -0.006507992744445801, -2.3841855067985307e-07, -3.24249267578125e-05, -1.9073486328125e-06, -0.0005818557692691684, -0.0009145736112259328, -7.62939453125e-06, -0.0002727508544921875, -0.000736236572265625, -0.00010453985305503011, 0.0, -0.00026447628624737263, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 164, "Give", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}], "hole0": "Give", "_type": "Template18", "hole2": "MinionSelector", "hole3": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give(Buff(ChangeAttack(2))), MinionSelector(IsType(\n            MINION_TYPE.BEAST))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.858565992678564, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -2.895233154296875, -0.054877325892448425, -0.0019630249589681625, -0.000926971435546875, -0.46999645233154297, -6.29425048828125e-05, -0.012974260374903679, -5.125998541188892e-06, -0.001176736201159656, -0.5120506286621094, -9.5367431640625e-06, -0.003719863947480917, -1.9073486328125e-06, -0.0006253477185964584, -1.9073486328125e-06, -1.9073486328125e-05, -0.000164031982421875, -0.0002269744873046875, -9.72747802734375e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.0005929470062255859, -0.0006732940673828125, -3.814697265625e-06, -4.57763671875e-05, -3.814697265625e-05, -2.09808349609375e-05, -6.103515625e-05, -3.814697265625e-06, -0.6972986459732056, -9.5367431640625e-06, -0.0006618499755859375, 0.0, -0.16043376922607422, -0.0005397796630859375, -7.700882270000875e-05, -3.814689989667386e-06, -0.00021764363918919116, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 164, "Give", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 2}], "hole0": "Give", "_type": "Template18", "hole2": "MinionSelector", "hole3": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), MinionSelector(IsType(\n            MINION_TYPE.BEAST))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.309646797748542, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -2.895233154296875, -0.054877325892448425, -0.0019630249589681625, -0.000926971435546875, -0.46999645233154297, -6.29425048828125e-05, -0.012974260374903679, -5.125998541188892e-06, -0.001176736201159656, -0.9310216903686523, -1.1444091796875e-05, -0.00837612058967352, -1.9073486328125e-06, -0.0010430001420900226, 0.0, -4.38690185546875e-05, -0.000125885009765625, -0.0003299713134765625, -7.62939453125e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.0006409883499145508, -0.0007038116455078125, -3.814697265625e-06, -4.76837158203125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.714093804359436, -9.5367431640625e-06, -0.0006580352783203125, 0.0, -0.17050743103027344, -0.00054931640625, -7.033317524474114e-05, -3.576272320060525e-06, -0.0002157381095457822, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 165, "Give", "<EOS>", 237, 42, 129, 239, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"_type": "List", "elts": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}]}], "hole0": "Give", "hole2": "MinionSelector", "_type": "Template18", "hole4": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.\n            BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.621047724849738, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -0.09549522399902344, -0.0006104782223701477, -0.0014087589224800467, -3.814697265625e-06, -0.00206756591796875, -0.00012969970703125, -0.0073184967041015625, -0.0042591094970703125, -2.47955322265625e-05, -0.0008447659783996642, -4.839897155761719e-05, -0.0014502692501991987, -0.1230316162109375, -5.53131103515625e-05, -0.0026751263067126274, -1.9073486328125e-06, -0.005077362060546875, -0.0041790008544921875, -0.00021755695343017578, -1.9073486328125e-06, -0.0008028745651245117, -0.0039119720458984375, -3.814697265625e-06, -0.0016146916896104813, 0.0, -4.97943115234375, -0.002086639404296875, -0.00012826919555664062, -1.9073486328125e-06, -0.0005445478018373251, -0.0033435821533203125, -1.9073486328125e-06, -0.003338764887303114, 0.0, -0.007618963718414307, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.00038909912109375, -7.05718994140625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0016388893127441406, -0.00029754638671875, -3.814697265625e-06, -2.6702880859375e-05, -9.72747802734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.3161736726760864, -1.1444091796875e-05, -0.0012731552124023438, 0.0, -0.000244140625, -0.0001430511474609375, 0.0, -0.0014287233352661133, -1.1920928244535389e-07, -0.000133514404296875, -1.9073486328125e-06, -0.0008230184903368354, -0.0008873938350006938, -1.9073486328125e-06, -0.000225067138671875, -0.00069427490234375, -0.00012897330452688038, 0.0, -0.000806764408480376, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 164, "Give", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}], "hole0": "Give", "_type": "Template18", "hole2": "MinionSelector", "hole3": [{"_type": "Call", "args": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give(Buff(ChangeAttack(2))), MinionSelector(IsType(\n            self.target))))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.67282156118992, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -2.895233154296875, -0.054877325892448425, -0.0019630249589681625, -0.000926971435546875, -0.46999645233154297, -6.29425048828125e-05, -0.012974260374903679, -5.125998541188892e-06, -0.001176736201159656, -0.5120506286621094, -9.5367431640625e-06, -0.003719863947480917, -1.9073486328125e-06, -0.0006253477185964584, -1.9073486328125e-06, -1.9073486328125e-05, -0.000164031982421875, -0.0002269744873046875, -9.72747802734375e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.0005929470062255859, -0.0006732940673828125, -3.814697265625e-06, -4.57763671875e-05, -3.814697265625e-05, -2.09808349609375e-05, -6.103515625e-05, -3.814697265625e-06, -0.7237297296524048, -0.0001010894775390625, -0.019377708435058594, -1.9073486328125e-06, -0.04584312438964844, -6.29425048828125e-05, -0.0009285211563110352, -1.9073486328125e-06, -0.000396728515625, -0.000400543212890625, -0.000133514404296875, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001697540283203125, -5.7220458984375e-06, -3.0517578125e-05, -0.00031876564025878906, -8.344646857949556e-07, -0.2848825454711914, -0.0001373291015625, -7.62939453125e-06, -0.00864410400390625, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0020732879638671875, -0.0025148391723632812, -8.96453857421875e-05, -2.6702880859375e-05, -0.002849578857421875, -1.9073486328125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -4.00543212890625e-05, -2.3841855067985307e-07, -0.1575310230255127, 0.0, -8.20159912109375e-05, -0.11944866180419922, -0.000545501708984375, -0.30284005403518677, -3.0994415283203125e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 164, "Give", "<EOS>", 237, 42, 129, 239, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 52, 180, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"_type": "List", "elts": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole0": "Taunt", "_type": "Template25"}]}], "hole0": "Give", "_type": "Template18", "hole2": "MinionSelector", "hole3": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.7318387083533935, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -2.895233154296875, -0.054877325892448425, -0.0019630249589681625, -0.000926971435546875, -2.0109782218933105, -0.000186920166015625, -0.13746261596679688, -0.0030536651611328125, -4.57763671875e-05, -0.0010526992846280336, -1.072883515007561e-05, -0.001191087532788515, -0.12717056274414062, -5.7220458984375e-05, -0.008725712075829506, -3.814697265625e-06, -0.0040836334228515625, -0.0033664703369140625, -0.00028443336486816406, -3.814697265625e-06, -0.001218557357788086, -0.003414154052734375, -3.814697265625e-06, -0.0017998937983065844, 0.0, -0.005404472351074219, -0.0003681182861328125, -0.0017157598631456494, -0.0020683996845036745, -0.00021010637283325195, -9.655952453613281e-06, -7.62939453125e-06, -1.52587890625e-05, -0.005084991455078125, -2.86102294921875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.001155853271484375, -0.000324249267578125, -3.814697265625e-06, -3.0517578125e-05, -9.1552734375e-05, -1.71661376953125e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.09009301662445068, -7.62939453125e-06, -0.0007152557373046875, 0.0, -0.32277584075927734, -0.000560760498046875, -0.00010096991172758862, -7.629365427419543e-06, -0.00013171383761800826, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 165, "Give", "<EOS>", 237, 42, 129, 239, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 52, 180, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"_type": "List", "elts": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole0": "Taunt", "_type": "Template25"}]}], "hole0": "Give", "hole2": "MinionSelector", "_type": "Template18", "hole4": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": [{"_type": "Call", "args": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(self.target), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.915187737791797, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -0.09549522399902344, -0.0006104782223701477, -0.0014087589224800467, -3.814697265625e-06, -0.00206756591796875, -0.00012969970703125, -0.0073184967041015625, -0.0042591094970703125, -2.47955322265625e-05, -0.0008447659783996642, -4.839897155761719e-05, -0.0014502692501991987, -2.164484977722168, -4.57763671875e-05, -0.0010277165565639734, -1.9073486328125e-06, -0.0047588348388671875, -0.0040798187255859375, -0.00010883808135986328, -1.9073486328125e-06, -0.000420451135141775, -0.00505828857421875, -1.9073486328125e-06, -0.001680995337665081, 0.0, -0.0118408203125, -0.0004119873046875, -0.001956124324351549, -0.001365899806842208, -0.00013524293899536133, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0008678436279296875, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0009682178497314453, -0.0001201629638671875, -5.7220458984375e-06, -2.288818359375e-05, -7.2479248046875e-05, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -3.514163017272949, -4.1961669921875e-05, -0.028855323791503906, -1.9073486328125e-06, -0.0057392120361328125, -4.00543212890625e-05, -1.9073486328125e-06, -0.006508946418762207, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -0.0005878160591237247, -0.0009185075177811086, -7.62939453125e-06, -0.0002727508544921875, -0.000736236572265625, -0.00010394387209089473, 0.0, -0.00026495312340557575, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 165, "Give", "<EOS>", 237, 42, 129, 239, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 52, 180, "Taunt", "<EOS>", 52, 180, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"_type": "List", "elts": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole0": "Taunt", "_type": "Template25"}, {"hole0": "Taunt", "_type": "Template25"}]}], "hole0": "Give", "hole2": "MinionSelector", "_type": "Template18", "hole4": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": [{"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(Taunt()), Buff(\n            Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.944105257043809, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -0.09549522399902344, -0.0006104782223701477, -0.0014087589224800467, -3.814697265625e-06, -0.00206756591796875, -0.00012969970703125, -0.0073184967041015625, -0.0042591094970703125, -2.47955322265625e-05, -0.0008447659783996642, -4.839897155761719e-05, -0.0014502692501991987, -0.1230316162109375, -5.53131103515625e-05, -0.0026751263067126274, -1.9073486328125e-06, -5.51713752746582, -0.0010051727294921875, -0.0002969153574667871, -0.0006444454193115234, -0.043761253356933594, -7.43865966796875e-05, -0.00024151797697413713, -0.0007909536361694336, -0.001510418951511383, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -0.04284095764160156, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005109310150146484, -0.0001201629638671875, -3.814697265625e-06, -2.288818359375e-05, -7.62939453125e-06, -1.52587890625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.04601120948791504, -7.62939453125e-06, -0.0005035400390625, 0.0, -0.000431060791015625, -0.000156402587890625, 0.0, -0.0015717744827270508, -1.1920928244535389e-07, -0.0002841949462890625, -1.9073486328125e-06, -0.0005822163075208664, -0.0005203484906814992, -1.9073486328125e-06, -0.00022125244140625, -0.0006618499755859375, -0.00013469487021211535, 0.0, -0.0007757798302918673, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 160, "Give", "<EOS>", "Minion", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole2": "MinionSelector", "hole0": "Give", "_type": "Template18", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give(), MinionSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.945881812101959, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -5.595911026000977, -0.16434548795223236, -0.0011291808914393187, -0.0010166005231440067, -3.4689903259277344e-05, -3.159046173095703e-05, -0.03916358947753906, -2.09808349609375e-05, -1.9073486328125e-06, -0.01788771152496338, 0.0, -7.62939453125e-06, -2.47955322265625e-05, -0.00016033649444580078, -8.034706115722656e-05, 0.0, -0.000278472900390625, -1.9073486328125e-06, -0.08007431030273438, -5.960462772236497e-07, -8.96453857421875e-05, -5.7220458984375e-06, -0.0002607107162475586, -0.0002892017364501953, 0.0, -0.00019073486328125, -0.000507354736328125, -0.0002566212206147611, 0.0, -0.0003781412378884852, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 164, "Give", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole1": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 2}], "hole0": "Give", "_type": "Template18", "hole2": "MinionSelector", "hole3": [{"_type": "Call", "args": [{"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "_type": "FunctionDef", "name": "use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), MinionSelector(IsType(\n            self.target))))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -6.083801879222591, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -2.895233154296875, -0.054877325892448425, -0.0019630249589681625, -0.000926971435546875, -0.46999645233154297, -6.29425048828125e-05, -0.012974260374903679, -5.125998541188892e-06, -0.001176736201159656, -0.9310216903686523, -1.1444091796875e-05, -0.00837612058967352, -1.9073486328125e-06, -0.0010430001420900226, 0.0, -4.38690185546875e-05, -0.000125885009765625, -0.0003299713134765625, -7.62939453125e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.0006409883499145508, -0.0007038116455078125, -3.814697265625e-06, -4.76837158203125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.7078815698623657, -0.0001049041748046875, -0.019224166870117188, 0.0, -0.04522514343261719, -6.29425048828125e-05, -0.0008780955686233938, -1.9073486328125e-06, -0.00040435791015625, -0.0004100799560546875, -0.0001277923583984375, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -0.00032258033752441406, -8.344646857949556e-07, -0.2880373001098633, -0.0001373291015625, -7.62939453125e-06, -0.008548736572265625, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.00206756591796875, -0.002521514892578125, -8.96453857421875e-05, -2.6702880859375e-05, -0.0028514862060546875, -1.9073486328125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -4.00543212890625e-05, -2.3841855067985307e-07, -0.15764641761779785, 0.0, -8.20159912109375e-05, -0.11960697174072266, -0.000545501708984375, -0.3029203712940216, -3.0994415283203125e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 159, "Give", "<EOS>", "Minion", "Selector", "<EOS>", 96, 218, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole2": "MinionSelector", "hole0": "Give", "_type": "Template18"}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template7", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n", "score": -6.23624913298238, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -4.731256008148193, -0.01597755029797554, -0.004491447936743498, -0.2885977625846863, -5.2094459533691406e-05, -1.9073486328125e-06, -0.34931182861328125, -0.016248703002929688, -0.00010871293488889933, -1.7046813809429295e-05, -0.0031479056924581528, 0.0, -0.07227110862731934, -5.7220458984375e-06, -0.7051763534545898, -0.0023345947265625, -0.0034967660903930664, -2.110004425048828e-05]}, {"choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 159, "Give", "<EOS>", "Minion", "Selector", "<EOS>", 96, 218, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 4, "hole0": "Houndmaster", "hole2": "HUNTER", "hole8": {"hole2": "MinionSelector", "hole0": "Give", "_type": "Template18"}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "FREE", "hole7": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template7", "hole2": "taunt", "hole3": {"_type": "Num", "n": 1}}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=1)\n", "score": -6.468511338314897, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -4.731256008148193, -0.01597755029797554, -0.004491447936743498, -0.2885977625846863, -5.2094459533691406e-05, -1.9073486328125e-06, -0.34931182861328125, -0.016248703002929688, -0.00010871293488889933, -1.7046813809429295e-05, -0.0031479056924581528, 0.0, -0.07227110862731934, -5.7220458984375e-06, -0.8858680725097656, -0.0243988037109375, -0.0330241434276104, 0.0]}, {"choice_history": [69, 133, 249, 89, 154, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>"], "model_output": {"body": [{"hole1": 4, "hole0": "Houndmaster", "_type": "Template15", "hole2": "HUNTER", "hole3": "FREE"}], "_type": "Module"}, "inferred_code": "super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER, CARD_RARITY.FREE)\n", "score": -10.188744425723826, "score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -9.871341705322266, -0.007856369018554688, -6.9141146923357155e-06, -7.152555099310121e-07, -9.298322765971534e-06, -8.821463779895566e-06, -0.25698113441467285, 0.0, -0.05071699619293213, 0.0]}]}
{"index": 53, "beams": [{"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -0.06446519586228305, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -0.0022478103637695312, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9788742065429688e-05, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -0.0003108978271484375, -4.1961669921875e-05, -0.0005570650100708008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -0.011142492294311523, -1.9073486328125e-06, -9.34600830078125e-05, -2.6702880859375e-05, -0.0002422332763671875, -7.62939453125e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -4.606292158446621, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -4.573535919189453, -1.1444091796875e-05, -7.62939453125e-05, 0.0, -9.059880540007725e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -4.38690185546875e-05, -5.8531761169433594e-05, 0.0, -0.0006489753141067922, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0009976625442504883, 0.0, -0.0002803802490234375, -0.0038776397705078125, -8.392333984375e-05, -0.0022563934326171875, -5.7220458984375e-06, -0.0001506805419921875, 0.0, -2.3841855067985307e-07, 0.0, -1.9073486328125e-05, -6.4849853515625e-05, -2.6702880859375e-05, -1.9073486328125e-05, -5.876845170860179e-05, -1.3232223864179105e-05, -2.145764938177308e-06, -0.010526180267333984, -1.9073486328125e-06, -8.20159912109375e-05, -2.47955322265625e-05, -0.000148773193359375, -5.7220458984375e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -4.922998571450073, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -4.873563766479492, -7.05718994140625e-05, -0.0001888275146484375, -2.0265579223632812e-06, -3.9695980376563966e-05, -7.62939453125e-06, 0.0, -2.479420800227672e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-05, -2.956390380859375e-05, 0.0, -0.0016864538192749023, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7697296142578125e-05, 0.0, -0.000415802001953125, -5.14984130859375e-05, -1.52587890625e-05, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -0.00010538101196289062, -3.814697265625e-05, -0.018978118896484375, 0.0, -4.76837158203125e-05, -0.00066375732421875, -1.52587890625e-05, -0.0029088258743286133, -5.9604644775390625e-06, -0.00024044513702392578, 0.0, -8.821482879284304e-06, 0.0, -5.7220458984375e-05, -0.000171661376953125, -9.918212890625e-05, -2.872943878173828e-05, -0.00010907075920840725, -1.3709059203392826e-05, -5.8412379075889476e-06, -0.009711146354675293, -1.9073486328125e-06, -8.392333984375e-05, -2.47955322265625e-05, -0.00017940998077392578, -5.7220458984375e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -5.061741463912966, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -5.0069427490234375, -3.24249267578125e-05, -1.9073486328125e-06, -2.2888154489919543e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -0.0028839111328125, -0.000213623046875, -6.67572021484375e-05, -6.079673767089844e-06, -6.437291176553117e-06, -0.000194549560546875, -1.9073486328125e-06, -0.00016232533380389214, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.1576881408691406e-05, -1.9073486328125e-06, -0.0021075010299682617, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -6.29425048828125e-05, 0.0, -5.1856040954589844e-05, 0.0, -0.00029754638671875, -0.0001163482666015625, -1.71661376953125e-05, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.0001226663589477539, -4.57763671875e-05, -0.03207206726074219, 0.0, -7.62939453125e-06, 0.0, -0.004388928413391113, 0.0, -2.09808349609375e-05, -0.0003376007080078125, -0.0001983642578125, -4.971027374267578e-05, -2.3126376618165523e-05, -5.6980941735673696e-05, -7.152555099310121e-07, -0.005809903144836426, -1.9073486328125e-06, -9.72747802734375e-05, -2.09808349609375e-05, -6.306171417236328e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, stealth=True)\n", "score": -5.2494169780888456, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -0.0022478103637695312, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9788742065429688e-05, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -0.0003108978271484375, -4.1961669921875e-05, -0.0005570650100708008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -5.1958327293396, -1.9073486328125e-06, -0.0004673004150390625, -5.7220458984375e-06, -0.00015461444854736328, -3.933906555175781e-06]}, {"choice_history": [70, 147, "Huffer", "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "HufferHuffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class HufferHuffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -5.81822327454114, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -5.756834030151367, -0.004113712348043919, -4.053113570989808e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0006866455078125, -0.003383636474609375, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, 0.0, -6.4849853515625e-05, 0.0, -0.03640937805175781, -2.47955322265625e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.463859558105469e-05, -1.9073486328125e-06, -0.0022879838943481445, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.7881393432617188e-05, 0.0, -4.57763671875e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003070831298828125, -4.1961669921875e-05, -0.0005704164505004883, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.53131103515625e-05, -9.72747802734375e-05, -5.14984130859375e-05, -2.872943878173828e-05, -4.446415914571844e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -0.01121675968170166, -1.9073486328125e-06, -9.34600830078125e-05, -2.6702880859375e-05, -0.0002422332763671875, -7.62939453125e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, windfury=True)\n", "score": -6.352173716751565, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -0.0022478103637695312, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9788742065429688e-05, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -0.0003108978271484375, -4.1961669921875e-05, -0.0005570650100708008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -6.298633098602295, 0.0, -0.0004482269287109375, -1.33514404296875e-05, -0.00012624263763427734, -2.0265579223632812e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "divine_shield", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, divine_shield=True)\n", "score": -6.4125554868855374, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -0.0022478103637695312, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9788742065429688e-05, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -0.0003108978271484375, -4.1961669921875e-05, -0.0005570650100708008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -6.359014987945557, 0.0, -0.0003528594970703125, -3.814697265625e-06, -0.00023102760314941406, -2.0265579223632812e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -6.52922633380598, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -6.467375755310059, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -5.5789947509765625e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, -0.0003108978271484375, -4.38690185546875e-05, -0.0005227327346801758, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.390969585685525e-06, 0.0, -5.14984130859375e-05, -0.000102996826171875, -5.53131103515625e-05, -2.872943878173828e-05, -4.494097447604872e-05, -1.2993807104066946e-05, -3.3378546504536644e-06, -0.010781049728393555, -1.9073486328125e-06, -9.34600830078125e-05, -2.6702880859375e-05, -0.0002422332763671875, -7.62939453125e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Huffer", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": 3, "hole0": "Huffer", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -7.625266821947598, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.545440673828125, -0.0010852813720703125, -4.112720489501953e-05, -1.597404116182588e-05, -3.933906555175781e-06, 0.0, -0.046230316162109375, 0.0, -0.00025022024055942893, -1.1920928244535389e-07, -3.4332275390625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.01369333267211914, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -8.392333984375e-05, -9.34600830078125e-05, -4.57763671875e-05, -3.445148468017578e-05, -1.1086422091466375e-05, -1.5974001144059002e-05, -3.576278118089249e-07, -0.0134810209274292, 0.0, -7.62939453125e-05, -2.47955322265625e-05, -0.00011444091796875, -9.5367431640625e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, taunt=True)\n", "score": -7.88126769754075, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -0.0022478103637695312, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9788742065429688e-05, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -0.0003108978271484375, -4.1961669921875e-05, -0.0005570650100708008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -7.827963352203369, 0.0, -0.0002536773681640625, -9.5367431640625e-06, -7.87973403930664e-05, -1.1563301086425781e-05]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -8.0116049358516, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -7.949318885803223, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -4.0531158447265625e-05, 0.0, -4.57763671875e-05, -1.1444091796875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0003261566162109375, -4.1961669921875e-05, -0.0006333589553833008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.5101784204889555e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -0.011096596717834473, -1.9073486328125e-06, -9.34600830078125e-05, -2.6702880859375e-05, -0.0002422332763671875, -7.62939453125e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "deathrattle", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "2", "<EOS>", 53, 182, "Hero", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "deathrattle", "hole3": {"_type": "Call", "args": [{"hole1": 2, "hole0": "Heal", "_type": "Template34"}, {"hole1": "EnemyPlayer", "hole0": "HeroSelector", "_type": "Template26"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, deathrattle=Deathrattle(Heal(2), HeroSelector(\n            EnemyPlayer())))\n", "score": -9.124727684470201, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -0.0022478103637695312, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9788742065429688e-05, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -0.0003108978271484375, -4.1961669921875e-05, -0.0005570650100708008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -7.4502482414245605, 0.0, -0.02173900604248047, -1.9073486328125e-06, -7.62939453125e-05, -3.814697265625e-06, -0.0052165985107421875, -8.344646857949556e-07, -0.0004520416259765625, -0.2922201156616211, -1.9073486328125e-05, -0.1267702877521515, -0.000500628026202321, -0.08055984228849411, -2.0265579223632812e-06, -0.6821794509887695, -0.0002307891845703125, -0.05119657516479492, -0.000950188550632447, -2.9802317840221804e-06, -0.32685476541519165, -0.032547637820243835, -3.814697265625e-06]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": 3, "hole0": "Huffer", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -9.211880711971595, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.167377471923828, -0.0002269744873046875, -9.5367431640625e-06, -0.014309167861938477, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0015344619750976562, -1.1920928244535389e-07, -0.00011599038407439366, 0.0, -0.004474639892578125, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.537799835205078e-05, -1.52587890625e-05, -0.00482940673828125, 0.0, -5.7220458984375e-06, 0.0, -0.0003528594970703125, 0.0, -2.09808349609375e-05, -0.0003070831298828125, -0.0001087188720703125, -0.00011241436004638672, -3.6954863844584906e-06, -9.154935833066702e-05, -1.1920928244535389e-07, -0.013217687606811523, 0.0, -6.29425048828125e-05, -2.86102294921875e-05, -0.00016021728515625, -1.52587890625e-05]}, {"choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "deathrattle", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Heal", "<EOS>", "2", "<EOS>", 39, 109, 21, 134, "Character", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Huffer", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "deathrattle", "hole3": {"_type": "Call", "args": [{"hole1": 2, "hole0": "Heal", "_type": "Template34"}, {"_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}]}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, deathrattle=Deathrattle(Heal(2),\n            CharacterSelector(players=BothPlayer())))\n", "score": -9.508162908828183, "score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -0.0022478103637695312, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9788742065429688e-05, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -0.0003108978271484375, -4.1961669921875e-05, -0.0005570650100708008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -7.4502482414245605, 0.0, -0.02173900604248047, -1.9073486328125e-06, -7.62939453125e-05, -3.814697265625e-06, -0.0052165985107421875, -8.344646857949556e-07, -0.0004520416259765625, -0.2922201156616211, -1.9073486328125e-05, -0.1267702877521515, -0.000500628026202321, -0.08055984228849411, -2.0265579223632812e-06, -0.7758359909057617, -0.6885852813720703, -5.340576171875e-05, 0.0, -0.004007986281067133, -0.0005255936412140727, -3.814697265625e-06, -0.0044841766357421875, -2.09808349609375e-05, -1.9073486328125e-06, -0.00313568115234375, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005402565002441406, -2.3245811462402344e-05, -0.000164031982421875]}]}
{"index": 54, "beams": [{"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -0.20743855675831213, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -0.07501423358917236, 0.0, -8.58306884765625e-05, -0.04210186004638672, -0.000972747802734375, -0.0024900436401367188, -0.0006275177001953125, -0.00010907615069299936, 0.0, -0.034969329833984375, -0.000530242919921875, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002269744873046875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0009770391043275595, 0.0]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n", "score": -3.694103924547413, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -3.333677291870117, 0.0, -0.0001239776611328125, -0.2571744918823242, -0.0011997222900390625, -0.0031023025512695312, -0.0012378692626953125, -0.00012242753291502595, 0.0, -0.04638957977294922, -0.00054168701171875, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002079010009765625, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0009891982190310955, 0.0]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 1}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(Buff(ChangeAttack(1)))\n", "score": -3.869340502588635, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -0.07501423358917236, 0.0, -8.58306884765625e-05, -3.6421823501586914, -0.002841949462890625, -0.0013079643249511719, -2.002716064453125e-05, -0.02106436900794506, -0.04720926284790039, -9.775161743164062e-06, -0.030339743942022324, -1.52587890625e-05]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -4.3820939038424385, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -4.1960225105285645, 0.0, -0.00011658562289085239, -1.1920928244535389e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003223419189453125, 0.0, -2.4437889805994928e-05, -2.1576881408691406e-05, -0.00044596195220947266, 0.0, -6.4849853515625e-05, 0.0, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.000125885009765625, -1.9788742065429688e-05, -2.0265558760002023e-06, -0.0020885467529296875, -0.0002384185791015625, -2.09808349609375e-05, -0.000217437744140625, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, -1.8596643712953664e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3470647900248878e-05, -5.7220458984375e-06, -0.021564483642578125, -0.0004825592041015625, -7.62939453125e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -0.07485496997833252, 0.0, -8.58306884765625e-05, -0.04200935363769531, -0.0009746551513671875, -0.0024929046630859375, -0.0006275177001953125, -0.00010907615069299936, 0.0, -0.034961700439453125, -0.0005321502685546875, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002269744873046875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0009771583136171103, 0.0]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 14, 105, 13, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "BinOp", "left": {"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n", "score": -4.58040556182052, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -4.485852241516113, -1.33514404296875e-05, 0.0, -0.0006580352783203125, -4.1961669921875e-05, -0.02847588062286377, 0.0, -0.012269973754882812, -0.0024242401123046875, -5.91278076171875e-05, 0.0, -0.0039234161376953125, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -0.006252646446228027, -3.3378546504536644e-06, -0.010928153991699219, -0.0007066726684570312, -2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -4.00543212890625e-05, 0.0, -3.0517578125e-05, 0.0, -0.0008240935276262462, 0.0]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -5.062301604938362, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -4.088475227355957, 0.0, -0.00339508056640625, -0.1608257293701172, -0.000118255615234375, -0.0045986175537109375, -3.814697265625e-06, -6.866455078125e-05, 0.0, -0.000522613525390625, 0.0, -7.2479248046875e-05, -1.5497195136049413e-06, -0.7549687623977661, -1.0728830375228426e-06]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 71, 23, 139, "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"_type": "Num", "n": 1}, "op": {"_type": "Add"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 + 1)\n", "score": -5.150278656791514, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -0.07501423358917236, 0.0, -8.58306884765625e-05, -0.04210186004638672, -0.000972747802734375, -0.0024900436401367188, -0.0006275177001953125, -0.00010907615069299936, 0.0, -3.8596067428588867, -1.119156837463379, -0.0006046295166015625, -0.0002592806704342365, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score": -5.2544908661742085, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -4.700040817260742, -1.52587890625e-05, -0.000728607177734375, -0.0002460479736328125, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -7.152555099310121e-07, -0.4845857620239258, -2.0503914129221812e-05, -0.0410335510969162, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self.target.health)\n", "score": -5.3083256175046, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -4.189528465270996, 0.0, -3.0517578125e-05, -0.36563587188720703, -0.000316619873046875, -0.0046558380126953125, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.0044231414794921875, 0.0, -3.814697265625e-05, -1.4305104514278355e-06, -0.6944013833999634, -5.960462772236497e-07]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.calculate_attack())\n", "score": -5.537684886647945, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -0.07501423358917236, 0.0, -8.58306884765625e-05, -5.361691474914551, -1.9073486328125e-06, -0.004993438720703125, -6.4849853515625e-05, -0.0023441314697265625, -4.9591064453125e-05, -1.1563301086425781e-05, 0.0, -1.9073486328125e-06, 0.0, -0.04417622089385986, 0.0]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "divine_shield", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.divine_shield)\n", "score": -5.556652872753567, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -4.088475227355957, 0.0, -0.00339508056640625, -0.1608257293701172, -0.000118255615234375, -0.0045986175537109375, -3.814697265625e-06, -6.866455078125e-05, 0.0, -0.000522613525390625, 0.0, -7.2479248046875e-05, -1.5497195136049413e-06, -1.2493211030960083, 0.0]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 1}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(Buff(ChangeAttack(1)))\n", "score": -5.716418302186717, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -3.333677291870117, 0.0, -0.0001239776611328125, -2.1368494033813477, -0.002132415771484375, -0.0011564489686861634, -2.419947304588277e-05, -0.12444426864385605, -0.05511891841888428, -8.82148651726311e-06, -0.013607904314994812, -2.491474151611328e-05]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -5.843437878114138, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -4.700040817260742, -1.52587890625e-05, -0.000728607177734375, -0.0002460479736328125, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -7.152555099310121e-07, -1.1142845153808594, -2.2649765014648438e-06, -0.0002996909897774458, -4.768370445162873e-07]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "<UNK>", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(<UNK>)\n", "score": -6.65936908025909, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -4.189528465270996, 0.0, -3.0517578125e-05, -2.217813491821289, -8.20159912109375e-05, -0.20266485214233398, 0.0]}, {"choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 71, 24, 145, 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 73, 124, 14, 105, 21, 134, "<UNK>", "<EOS>", 72, 23, 139, "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "Humility", "hole2": [{"hole1": 1, "hole0": "Humility", "hole2": "PALADIN", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"_type": "Subscript", "value": {"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "slice": {"_type": "Index", "value": {"_type": "BinOp", "left": {"id": "<UNK>", "_type": "Name"}, "right": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}}}, "op": {"_type": "Add"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 + player.minions[<UNK> - 1])\n", "score": -8.130334464881194, "score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -0.07501423358917236, 0.0, -8.58306884765625e-05, -0.04210186004638672, -0.000972747802734375, -0.0024900436401367188, -0.0006275177001953125, -0.00010907615069299936, 0.0, -3.8596067428588867, -1.5088882446289062, -0.09631538391113281, -0.000667572021484375, 0.0, -0.0002079010009765625, 0.0, -0.2127838134765625, 0.0, -0.2707512378692627, 0.0, -0.28778743743896484, -0.000820159912109375, -0.2169332504272461, -0.16431617736816406, -0.0001354217529296875, -1.9073486328125e-06, -0.9055180549621582, 0.0, -0.27188587188720703, -0.16286945343017578, -2.09808349609375e-05, -0.00017380667850375175, 0.0]}]}
{"index": 55, "beams": [{"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -0.6509790858392392, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -0.2346782684326172, -2.86102294921875e-05, -0.0014667510986328125, -0.000614166259765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -0.1472914218902588, -7.62939453125e-06, -0.0008542374125681818, -5.960462772236497e-07]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -2.3218243717704325, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -1.5689868927001953, -0.00046539306640625, -8.392333984375e-05, -3.0517578125e-05, -7.2479248046875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -4.768370445162873e-07, -0.3654252290725708, 0.0, -0.0001220703125, -0.0595550537109375, -0.0014190673828125, -0.01686859130859375, -0.0008983612060546875, -0.0004657501121982932, 0.0, -0.034942626953125, -0.0015935897827148438, -8.20159912109375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -3.4332275390625e-05, 0.0, -0.0044792890548706055, 0.0]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "<UNK>", " ", "Mark", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Num", "n": 0}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -3.2465584013536244, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.7337923049926758, -0.285064697265625, -0.00045013427734375, 0.0, -3.24249267578125e-05, 0.0, -4.4345855712890625e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.05014174059033394, -7.450580596923828e-05, -2.562999725341797e-05, -5.7220458984375e-05, -4.38690185546875e-05, 0.0, -0.00321710086427629, -1.4305104514278355e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.193440741393715e-05, 0.0, -0.07496464252471924, 0.0, 0.0, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0006542205810546875, -1.9073486328125e-06, -0.6254329681396484, 0.0, -4.00543212890625e-05, -8.58306884765625e-05, -5.53131103515625e-05, -0.0006999969482421875, 0.0, -0.00034332275390625, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0011730194091796875, -1.1444091796875e-05, -7.450580596923828e-05, -1.9073486328125e-06, -0.0007497072219848633, 0.0, -0.0001583099365234375, 0.0, -0.0001888275146484375, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.02939128875732422, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.24249267578125e-05, -0.2674064636230469, -2.6702880859375e-05, -0.0014400482177734375, -0.0005092620849609375, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -0.14290070533752441, -7.62939453125e-06, -0.0008555481326766312, -5.960462772236497e-07]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "<UNK>", " ", "Mark", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Num", "n": 0}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -3.4178359242779806, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.7337923049926758, -0.285064697265625, -0.00045013427734375, 0.0, -3.24249267578125e-05, 0.0, -4.4345855712890625e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.05014174059033394, -7.450580596923828e-05, -2.562999725341797e-05, -5.7220458984375e-05, -4.38690185546875e-05, 0.0, -0.00321710086427629, -1.4305104514278355e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.193440741393715e-05, 0.0, -0.07496464252471924, 0.0, 0.0, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0006542205810546875, -1.9073486328125e-06, -0.7964572906494141, 0.0, -2.09808349609375e-05, -0.000110626220703125, -7.82012939453125e-05, -0.0007343292236328125, 0.0, -0.0004596710205078125, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0010356903076171875, -9.5367431640625e-06, -8.404254913330078e-05, 0.0, -0.0008450746536254883, 0.0, -0.00017547607421875, 0.0, -0.000186920166015625, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.02945995330810547, -2.09808349609375e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.24249267578125e-05, -0.2675800323486328, -2.6702880859375e-05, -0.001445770263671875, -0.000507354736328125, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -0.14275288581848145, -7.62939453125e-06, -0.0008560248534195125, -5.960462772236497e-07]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -3.460946024001359, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -1.5689868927001953, -0.00046539306640625, -8.392333984375e-05, -3.0517578125e-05, -7.2479248046875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -4.768370445162873e-07, -1.5107604265213013, 0.0, -0.0003185272216796875, -0.006560325622558594, -5.7220458984375e-05, -0.010334014892578125, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.67572021484375e-05, 0.0, -5.7220458984375e-05, -1.0728830375228426e-06, -0.09712827205657959, -3.576278118089249e-07]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score": -3.9269648199692, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -0.2346782684326172, -2.86102294921875e-05, -0.0014667510986328125, -0.000614166259765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.1479122638702393, -9.775161743164062e-06, -0.27621757984161377, 0.0]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_armor", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_armor", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_armor(1)\n", "score": -4.055310583396377, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -0.2346782684326172, -2.86102294921875e-05, -0.0014667510986328125, -0.000614166259765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.5510647296905518, -2.0265579223632812e-06, -0.0014183876337483525, -2.3841855067985307e-07]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n", "score": -4.255571127475733, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -0.2346782684326172, -2.86102294921875e-05, -0.0014667510986328125, -0.000614166259765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.468679666519165, 0.0, -0.28406602144241333, -2.3841855067985307e-07]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "<UNK>", " ", "Mark", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Num", "n": 0}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -4.779334177057748, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.7337923049926758, -0.285064697265625, -0.00045013427734375, 0.0, -3.24249267578125e-05, 0.0, -4.4345855712890625e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.05014174059033394, -7.450580596923828e-05, -2.562999725341797e-05, -5.7220458984375e-05, -4.38690185546875e-05, 0.0, -0.00321710086427629, -1.4305104514278355e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.193440741393715e-05, 0.0, -0.07496464252471924, 0.0, 0.0, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0006542205810546875, -1.9073486328125e-06, -0.6254329681396484, 0.0, -4.00543212890625e-05, -8.58306884765625e-05, -5.53131103515625e-05, -0.0006999969482421875, 0.0, -0.00034332275390625, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0011730194091796875, -1.1444091796875e-05, -7.450580596923828e-05, -1.9073486328125e-06, -0.0007497072219848633, 0.0, -0.0001583099365234375, 0.0, -0.0001888275146484375, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.02939128875732422, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.24249267578125e-05, -1.4536914825439453, -0.00048828125, -7.82012939453125e-05, -3.0517578125e-05, -7.2479248046875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -4.768370445162873e-07, -0.37145519256591797, 0.0, -0.0001220703125, -0.05949592590332031, -0.001422882080078125, -0.01647663116455078, -0.000904083251953125, -0.0004773130640387535, 0.0, -0.034714698791503906, -0.0016231536865234375, -8.20159912109375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00026702880859375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -3.4332275390625e-05, 0.0, -0.004487872123718262, 0.0]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Gallywix's", " ", "Mark", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Gallywix's Mark"}, {"_type": "Num", "n": 0}, {"attr": "DREAM", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Mark\", 0, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -4.797219260084418, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.7337923049926758, -1.5461502075195312, -0.0005931854248046875, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.072883515007561e-05, 0.0, -0.0028553009033203125, -0.0002460479736328125, -1.9073486328125e-06, -0.41066908836364746, -0.00023651123046875, -0.0010934509336948395, -0.0213623046875, -8.392333984375e-05, 0.0, -0.24602460861206055, 0.0, -6.866455078125e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -0.1667853593826294, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002956390380859375, 0.0, -0.1420842409133911, 0.0, -0.02561187744140625, -0.0001430511474609375, -0.000152587890625, -7.62939453125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -0.16006851196289062, 0.0, -0.017171859741210938, -5.7220458984375e-06, -0.007598876953125, 0.0, -6.4849853515625e-05, 0.0, -2.300739288330078e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -0.01935291290283203, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.914137884450611e-06, -1.71661376953125e-05, -0.15857315063476562, -2.47955322265625e-05, -0.0010547637939453125, -0.0004253387451171875, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -0.10727810859680176, -5.7220458984375e-06, -0.0009025114704854786, -5.960462772236497e-07]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "<UNK>", " ", "Mark", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Num", "n": 0}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -4.950201143305307, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -1.7337923049926758, -0.285064697265625, -0.00045013427734375, 0.0, -3.24249267578125e-05, 0.0, -4.4345855712890625e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.05014174059033394, -7.450580596923828e-05, -2.562999725341797e-05, -5.7220458984375e-05, -4.38690185546875e-05, 0.0, -0.00321710086427629, -1.4305104514278355e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.193440741393715e-05, 0.0, -0.07496464252471924, 0.0, 0.0, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0006542205810546875, -1.9073486328125e-06, -0.7964572906494141, 0.0, -2.09808349609375e-05, -0.000110626220703125, -7.82012939453125e-05, -0.0007343292236328125, 0.0, -0.0004596710205078125, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0010356903076171875, -9.5367431640625e-06, -8.404254913330078e-05, 0.0, -0.0008450746536254883, 0.0, -0.00017547607421875, 0.0, -0.000186920166015625, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.02945995330810547, -2.09808349609375e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.24249267578125e-05, -1.4531183242797852, -0.0004901885986328125, -7.82012939453125e-05, -3.0517578125e-05, -7.2479248046875e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -4.768370445162873e-07, -0.3715686798095703, 0.0, -0.0001220703125, -0.059566497802734375, -0.0014219284057617188, -0.016469955444335938, -0.0009059906005859375, -0.000479220412671566, 0.0, -0.034720420837402344, -0.0016269683837890625, -8.20159912109375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00026702880859375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -3.4332275390625e-05, 0.0, -0.004488825798034668, 0.0]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -5.095252216400169, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -0.2346782684326172, -2.86102294921875e-05, -0.0014667510986328125, -0.000614166259765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.1479122638702393, -9.775161743164062e-06, -1.444504976272583, 0.0]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "3", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "increase_health", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 3}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n", "score": -5.39741319471743, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -0.2346782684326172, -2.86102294921875e-05, -0.0014667510986328125, -0.000614166259765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.468679666519165, 0.0, -1.4259083271026611, 0.0]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"_type": "Expr", "value": {"hole1": "<UNK>", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template31", "hole2": 1}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(1)\n", "score": -5.521946879525252, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -0.2346782684326172, -2.86102294921875e-05, -0.0014667510986328125, -0.000614166259765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -5.017393589019775, 0.0, -0.0017279702005907893, -1.1920928244535389e-07]}, {"choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 13, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 5, 237, 46, 139, "0", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 45, 136, "Null", "<EOS>", 250, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "<UNK>Mark", "hole2": [{"hole1": 0, "hole0": "<UNK> Mark", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "change_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}, {"value": {"attr": "health", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "die", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "NameConstant", "value": "Null"}]}], "_type": "If", "test": {"comparators": [{"_type": "Num", "n": 0}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Gt"}]}, "orelse": [{"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "set_health_to", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"id": "<UNK>", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n        <UNK> = self.target.health\n        if <UNK> > 0:\n            self.target.die(Null)\n        else:\n            self.target.set_health_to(<UNK>)\n            self.target.set_health_to(<UNK>)\n", "score": -10.638164219512483, "score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -3.576101303100586, -0.0017223358154296875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.933906555175781e-06, 0.0, -1.9073486328125e-05, -1.71661376953125e-05, -9.298322765971534e-06, -8.392333984375e-05, -0.42328739166259766, -0.0001888275146484375, -0.00011444091796875, -6.4849853515625e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.576278118089249e-07, -0.47475171089172363, 0.0, -8.20159912109375e-05, -0.07482719421386719, -0.00140380859375, -0.008622169494628906, -0.000823974609375, -0.0003933896077796817, 0.0, -0.03684806823730469, -0.0013799667358398438, -7.82012939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.004218578338623047, 0.0, -0.029214859008789062, -5.7220458984375e-06, -2.09808349609375e-05, -0.000423431396484375, -1.9073486328125e-05, -0.01641678810119629, 0.0, -0.3076152801513672, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.0011959075927734375, 0.0, -4.57763671875e-05, 0.0, -3.62396240234375e-05, -4.768370445162873e-07, -0.018529891967773438, -4.768370445162873e-07, -0.20371055603027344, -0.031360626220703125, -0.002597808837890625, -0.000995635986328125, -0.059322357177734375, -3.814697265625e-06, -0.773815393447876, -2.9802276912960224e-06, -0.0016727447509765625, -0.05652332305908203, -2.86102294921875e-05, -0.0020437240600585938, -0.004077911376953125, -0.0010162569815292954, -1.52587890625e-05, -0.0016632080078125, -0.6629400253295898, -0.000152587890625, -0.0004520416259765625, -0.0001087188720703125, -2.86102294921875e-05, 0.0, -0.0002599954605102539, 0.0, -2.09808349609375e-05, 0.0, -0.6595603227615356, 0.0, -1.1444091796875e-05, -0.6313552856445312, -0.00052642822265625, -2.9325485229492188e-05, -1.2159347534179688e-05, -0.1595001220703125, -0.00220489501953125, -0.000396728515625, -0.2555084228515625, -1.52587890625e-05, -0.000408172607421875, 0.0, -9.560585021972656e-05, 0.0, -0.0001068115234375, -2.3841855067985307e-07, -0.67839515209198, 0.0, -4.9591064453125e-05, -0.005869865417480469, -1.9073486328125e-06, -0.06039142608642578, -3.933906555175781e-06, -0.000713348388671875, -2.6702880859375e-05, -0.000316619873046875, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.0001201629638671875, 0.0, -2.47955322265625e-05, -1.1920928244535389e-07, -0.5880023241043091, 0.0, -4.57763671875e-05, -0.02116870880126953, -1.9073486328125e-06, -0.555203914642334, -1.3470649719238281e-05]}]}
{"index": 56, "beams": [{"choice_history": [69, 133, 249, 78, 112, "Ironforge", "Rifleman", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 2, "hole0": 2, "_type": "Template8"}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -0.6057335294362787, "score_history": [-0.5351266860961914, -0.00018310546875, -2.288818359375e-05, -0.00103759765625, -9.5367431640625e-06, -4.31528314948082e-05, -2.9802276912960224e-06, -6.556489552167477e-06, -2.6702880859375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -2.3841312213335186e-07, -0.00013768664211966097, -1.1920928244535389e-07, -0.000247955322265625, -0.0004482269287109375, -0.000156402587890625, -0.00013064485392533243, -7.271766662597656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.0001233815710293129, -1.9073486328125e-06, -0.016353726387023926, 0.0, -0.002012968063354492, 0.0, -0.0006122589111328125, 0.0, -0.002803802490234375, -1.9073486328125e-06, -0.012994766235351562, 0.0, -0.0010645389556884766, 0.0, -0.0003414154052734375, -0.012431144714355469, -0.0020207413472235203, -9.536738616588991e-07, -2.86102294921875e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.0010831357212737203, -4.0531158447265625e-06, -0.0002560611173976213, -1.1444091796875e-05, -1.71661376953125e-05, -0.000457763671875, -5.14984130859375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.00020599365234375, -1.33514404296875e-05, -5.7220458984375e-06, -0.000202178955078125, -8.392333984375e-05, -0.003711700439453125, -1.9073486328125e-06, -0.009220123291015625, -6.103515625e-05, -0.0006122589111328125, -0.0003452301025390625, 0.0, -0.000274658203125, -7.82012939453125e-05, -4.5776359911542386e-05, 0.0, -0.0002950438647530973, 0.0]}, {"choice_history": [70, 147, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "2", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronforgeRifleman", "hole2": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Damage"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -1.107166458650454, "score_history": [-0.9190912246704102, -8.392333984375e-05, -0.0013677061069756746, -3.3378546504536644e-06, -6.09140915912576e-05, -7.152555099310121e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.0002231597900390625, -0.09539222717285156, -9.775161743164062e-06, -0.00012230608263053, 0.0, 0.0, -5.91278076171875e-05, 0.0, -0.0011752843856811523, -1.33514404296875e-05, -0.0021843602880835533, 0.0, -0.0001010894775390625, -3.24249267578125e-05, 0.0, -0.05126144737005234, -3.826618194580078e-05, -0.0011581623693928123, -2.47955322265625e-05, 0.0, -0.0016765594482421875, -0.0001068115234375, -3.814697265625e-06, -0.000263214111328125, -3.814697265625e-06, -0.0001468658447265625, -5.7220458984375e-06, -0.000247955322265625, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.0013866424560546875, 0.0, -0.026292800903320312, -1.9073486328125e-06, -0.0005379915237426758, -0.00017762184143066406, 0.0, -2.6702880859375e-05, 0.0, -3.063678741455078e-05, 0.0, -7.05718994140625e-05, -0.0016193389892578125, -4.00543212890625e-05, -2.0265579223632812e-06, 0.0, -0.002028346061706543, 0.0]}, {"choice_history": [70, 147, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronforgeRifleman", "hole2": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.064525873314551, "score_history": [-0.9190912246704102, -8.392333984375e-05, -0.0013677061069756746, -3.3378546504536644e-06, -6.09140915912576e-05, -7.152555099310121e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.0002231597900390625, -0.09539222717285156, -9.775161743164062e-06, -0.00012230608263053, 0.0, 0.0, -5.91278076171875e-05, 0.0, -0.0011752843856811523, -1.33514404296875e-05, -0.0021843602880835533, 0.0, -0.0001010894775390625, -3.24249267578125e-05, 0.0, -3.0064752101898193, -4.589557647705078e-05, -0.001021075528115034, -3.0517578125e-05, 0.0, -0.0017852783203125, -9.1552734375e-05, -3.814697265625e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0001316070556640625, -5.7220458984375e-06, -0.0002593994140625, -1.1444091796875e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.001495361328125, 0.0, -0.028463363647460938, -1.9073486328125e-06, -0.000545501708984375, -0.00017940998077392578, 0.0, -2.86102294921875e-05, 0.0, -3.063678741455078e-05, 0.0, -7.05718994140625e-05, -0.001636505126953125, -4.00543212890625e-05, -2.0265579223632812e-06, 0.0, -0.0020339488983154297, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Ironforge", "Rifleman", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "RARE", "hole7": "battlecry"}, {"hole1": 2, "hole0": 2, "_type": "Template8"}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -5.137115934548191, "score_history": [-0.5351266860961914, -0.00018310546875, -2.288818359375e-05, -0.00103759765625, -9.5367431640625e-06, -4.31528314948082e-05, -2.9802276912960224e-06, -6.556489552167477e-06, -2.6702880859375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -2.3841312213335186e-07, -0.00013768664211966097, -1.1920928244535389e-07, -0.000247955322265625, -0.0004482269287109375, -0.000156402587890625, -0.00013064485392533243, -7.271766662597656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.0001233815710293129, -1.9073486328125e-06, -4.546409606933594, 0.0, -0.001695871353149414, 0.0, -0.002391815185546875, 0.0, -0.0020084381103515625, -1.9073486328125e-06, -0.0134735107421875, 0.0, -0.0011075735092163086, 0.0, -0.0003108978271484375, -0.012618064880371094, -0.0020964029245078564, -8.344646857949556e-07, -2.86102294921875e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.0011214017868041992, -2.2649765014648438e-06, -0.0002566572220530361, -1.1444091796875e-05, -1.71661376953125e-05, -0.0004520416259765625, -5.340576171875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -8.58306884765625e-05, -3.814697265625e-06, -0.0002079010009765625, -1.33514404296875e-05, -5.7220458984375e-06, -0.000202178955078125, -8.58306884765625e-05, -0.0036678314208984375, -1.9073486328125e-06, -0.0091400146484375, -5.91278076171875e-05, -0.0006122589111328125, -0.0003376007080078125, 0.0, -0.0002727508544921875, -7.82012939453125e-05, -4.5776359911542386e-05, 0.0, -0.0002990969514939934, 0.0]}, {"choice_history": [70, 147, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "2", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 30, 193, "Random", "Picker", "<EOS>", "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronforgeRifleman", "hole2": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole1": 3, "hole0": "RandomPicker", "_type": "Template34"}, "_type": "keyword", "arg": "picker"}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Damage"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=RandomPicker(3))))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -5.2825626031569755, "score_history": [-0.9190912246704102, -8.392333984375e-05, -0.0013677061069756746, -3.3378546504536644e-06, -6.09140915912576e-05, -7.152555099310121e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.0002231597900390625, -0.09539222717285156, -9.775161743164062e-06, -0.00012230608263053, 0.0, 0.0, -5.91278076171875e-05, 0.0, -0.0011752843856811523, -1.33514404296875e-05, -0.0021843602880835533, 0.0, -0.0001010894775390625, -3.24249267578125e-05, 0.0, -0.05126144737005234, -3.826618194580078e-05, -0.0011581623693928123, -2.47955322265625e-05, 0.0, -0.0016765594482421875, -0.0001068115234375, -3.814697265625e-06, -0.000263214111328125, -3.814697265625e-06, -0.0001468658447265625, -5.7220458984375e-06, -0.000247955322265625, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.0013866424560546875, 0.0, -3.7048234939575195, -0.002285003662109375, -0.36809444427490234, -0.005421161651611328, -8.785724639892578e-05, -0.09713691473007202, 0.0, -0.004881858825683594, 0.0, -2.002716064453125e-05, 0.0, -6.4849853515625e-05, -0.021717071533203125, -1.71661376953125e-05, -2.1457672119140625e-06, 0.0, -0.0016701222630217671, -2.0265579223632812e-06]}, {"choice_history": [69, 133, 249, 78, 112, "Ironforge", "Rifleman", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 2, "hole0": 2, "_type": "Template8"}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -5.524507679734015, "score_history": [-0.5351266860961914, -0.00018310546875, -2.288818359375e-05, -0.00103759765625, -9.5367431640625e-06, -4.31528314948082e-05, -2.9802276912960224e-06, -6.556489552167477e-06, -2.6702880859375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -2.3841312213335186e-07, -0.00013768664211966097, -1.1920928244535389e-07, -0.000247955322265625, -0.0004482269287109375, -0.000156402587890625, -0.00013064485392533243, -7.271766662597656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.0001233815710293129, -1.9073486328125e-06, -0.016353726387023926, 0.0, -0.002012968063354492, 0.0, -0.0006122589111328125, 0.0, -0.002803802490234375, -1.9073486328125e-06, -4.923648834228516, 0.0, -0.007527589797973633, 0.0, -0.0007038116455078125, -0.015594482421875, -0.0010970109142363071, -4.768370445162873e-07, -1.33514404296875e-05, -0.0001316070556640625, 0.0, -0.0003283021505922079, -5.9604644775390625e-06, -0.0002242326008854434, -1.1444091796875e-05, -1.33514404296875e-05, -0.0004425048828125, -4.9591064453125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.000202178955078125, -1.33514404296875e-05, -3.814697265625e-06, -0.0001983642578125, -9.5367431640625e-05, -0.003662109375, -1.9073486328125e-06, -0.008914947509765625, -6.4849853515625e-05, -0.00064849853515625, -0.000469207763671875, 0.0, -0.00035858154296875, -8.20159912109375e-05, -4.589556920109317e-05, 0.0, -0.0002477177476976067, 0.0]}, {"choice_history": [70, 147, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 217, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 237, 45, 136, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronforgeRifleman", "hole2": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole5": "CharacterSelector", "_type": "Template6", "hole6": [{"_type": "NameConstant", "value": "Null"}], "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.ALL, battlecry=Battlecry(Damage(1),\n            CharacterSelector(Null)))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.449158111864271, "score_history": [-0.9190912246704102, -8.392333984375e-05, -0.0013677061069756746, -3.3378546504536644e-06, -6.09140915912576e-05, -7.152555099310121e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.0002231597900390625, -3.6473355293273926, -1.060962586052483e-05, -8.284927753265947e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.00018703937530517578, 0.0, -0.4154883623123169, 0.0, -0.03083154186606407, 0.0, -9.1552734375e-05, -0.0004825592041015625, 0.0, -0.5909697413444519, -6.198883056640625e-06, -0.01449119858443737, -3.814697265625e-05, 0.0, -0.24129962921142578, -0.38282012939453125, -0.0011806488037109375, -0.0067901611328125, -1.9073486328125e-06, -0.0006543397903442383, 0.0, -8.83340835571289e-05, 0.0, -5.91278076171875e-05, -0.1944284439086914, -3.62396240234375e-05, -2.1457672119140625e-06, 0.0, -0.0009177926112897694, -3.576278118089249e-07]}, {"choice_history": [69, 133, 249, 78, 112, "Ironforge", "Rifleman", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "PIRATE", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 2, "hole0": 2, "_type": "Template8"}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.479794117859441, "score_history": [-0.5351266860961914, -0.00018310546875, -2.288818359375e-05, -0.00103759765625, -9.5367431640625e-06, -4.31528314948082e-05, -2.9802276912960224e-06, -6.556489552167477e-06, -2.6702880859375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -2.3841312213335186e-07, -0.00013768664211966097, -1.1920928244535389e-07, -0.000247955322265625, -0.0004482269287109375, -0.000156402587890625, -0.00013064485392533243, -7.271766662597656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.0001233815710293129, -1.9073486328125e-06, -0.016353726387023926, 0.0, -0.002012968063354492, 0.0, -0.0006122589111328125, 0.0, -0.002803802490234375, -1.9073486328125e-06, -5.879463195800781, 0.0, -0.0064803361892700195, 0.0, -0.00058746337890625, -0.01614665985107422, -0.0016735614044591784, -9.536738616588991e-07, -2.6702880859375e-05, -0.000110626220703125, 0.0, -0.00046169752022251487, -5.9604644775390625e-06, -0.00032389152329415083, -1.1444091796875e-05, -1.52587890625e-05, -0.000453948974609375, -5.340576171875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.62939453125e-05, -3.814697265625e-06, -0.0002117156982421875, -1.33514404296875e-05, -3.814697265625e-06, -0.000209808349609375, -0.000102996826171875, -0.003536224365234375, -1.9073486328125e-06, -0.008214950561523438, -7.05718994140625e-05, -0.000629425048828125, -0.0005093812942504883, -1.9073486328125e-06, -0.00038909912109375, -8.392333984375e-05, -4.816054570255801e-05, 0.0, -0.00023019398213364184, 0.0]}, {"choice_history": [69, 133, 249, 78, 112, "Ironforge", "Rifleman", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 30, 193, "Random", "Picker", "<EOS>", "3", "<EOS>", 97, 219, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"body": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole2": "CharacterSelector", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole1": 3, "hole0": "RandomPicker", "_type": "Template34"}, "_type": "keyword", "arg": "picker"}]}, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "COMMON", "hole7": "battlecry"}, {"hole1": 2, "hole0": 2, "_type": "Template8"}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}], "_type": "Module"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker(3))))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.549469387636222, "score_history": [-0.5351266860961914, -0.00018310546875, -2.288818359375e-05, -0.00103759765625, -9.5367431640625e-06, -4.31528314948082e-05, -2.9802276912960224e-06, -6.556489552167477e-06, -2.6702880859375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -2.3841312213335186e-07, -0.00013768664211966097, -1.1920928244535389e-07, -0.000247955322265625, -0.0004482269287109375, -0.000156402587890625, -0.00013064485392533243, -7.271766662597656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.0001233815710293129, -1.9073486328125e-06, -0.016353726387023926, 0.0, -0.002012968063354492, 0.0, -0.0006122589111328125, 0.0, -0.002803802490234375, -1.9073486328125e-06, -0.012994766235351562, 0.0, -0.0010645389556884766, 0.0, -0.0003414154052734375, -0.012431144714355469, -0.0020207413472235203, -9.536738616588991e-07, -2.86102294921875e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.0010831357212737203, -4.0531158447265625e-06, -0.0002560611173976213, -1.1444091796875e-05, -1.71661376953125e-05, -0.000457763671875, -5.14984130859375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.00020599365234375, -1.33514404296875e-05, -5.7220458984375e-06, -0.000202178955078125, -8.392333984375e-05, -0.003711700439453125, -1.9073486328125e-06, -4.7898149490356445, -0.0032320022583007812, -0.6881368160247803, -0.02904641628265381, -7.450580596923828e-05, -0.054807908833026886, 0.0, -0.38868045806884766, -0.0004291534423828125, -0.00012873823288828135, 0.0, -0.000317237398121506, 0.0]}, {"choice_history": [70, 147, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 217, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "2", "<EOS>", "Character", "Selector", "<EOS>", 239, 45, 136, "Null", "<EOS>", 63, 205, "Both", "Player", "<EOS>", 63, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronforgeRifleman", "hole2": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole5": "CharacterSelector", "_type": "Template6", "hole6": [{"_type": "NameConstant", "value": "Null"}, {"hole0": "BothPlayer", "_type": "Template39"}, {"hole0": "UserPicker", "_type": "Template39"}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Damage"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.ALL, battlecry=Battlecry(Damage(2),\n            CharacterSelector(Null, BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.604980446382676, "score_history": [-0.9190912246704102, -8.392333984375e-05, -0.0013677061069756746, -3.3378546504536644e-06, -6.09140915912576e-05, -7.152555099310121e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.0002231597900390625, -3.6473355293273926, -1.060962586052483e-05, -8.284927753265947e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.00018703937530517578, 0.0, -0.4154883623123169, 0.0, -0.03083154186606407, 0.0, -9.1552734375e-05, -0.0004825592041015625, 0.0, -0.8071218729019165, -6.556510470545618e-06, -0.042628999799489975, -5.340576171875e-05, 0.0, -0.3805809020996094, -0.19201278686523438, -0.001800537109375, -0.0014781951904296875, -3.063678741455078e-05, -0.0002269744873046875, -0.000461578369140625, -0.1494770050048828, -1.71661376953125e-05, -0.0001087188720703125, -0.0009174346923828125, -1.9073486328125e-06, -0.0045795440673828125, -0.0030764341354370117, -1.5497195136049413e-06, -9.5367431640625e-06, 0.0, -3.063678741455078e-05, 0.0, -2.09808349609375e-05, -0.002788543701171875, -4.9591064453125e-05, -2.1457672119140625e-06, 0.0, -0.0021213293075561523, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", "Bounce", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronforgeRifleman", "hole2": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "COMMON", "hole5": "Bounce", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": "Damage"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(), Bounce(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.696541118495247, "score_history": [-0.9190912246704102, -8.392333984375e-05, -0.0013677061069756746, -3.3378546504536644e-06, -6.09140915912576e-05, -7.152555099310121e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.0002231597900390625, -4.3502655029296875, -0.00020597243565134704, -0.00015377308591268957, 0.0, -5.7220458984375e-06, -1.728534698486328e-05, 0.0, -0.02438974380493164, 0.0, -0.7659323215484619, -4.768370445162873e-07, -0.5507791638374329, -1.1563301086425781e-05, -0.008593559265136719, -0.00250244140625, -6.67572021484375e-05, -0.011205673217773438, 0.0, -0.000698089599609375, -8.0108642578125e-05, -0.0004405975341796875, -2.47955322265625e-05, 0.0, -0.0001678466796875, -2.47955322265625e-05, -0.0034427642822265625, 0.0, -0.052201271057128906, -3.814697265625e-06, -0.0004119873046875, -0.0001823902130126953, 0.0, -2.6702880859375e-05, 0.0, -2.682209014892578e-05, 0.0, -6.67572021484375e-05, -0.0016326904296875, -4.57763671875e-05, -2.1457672119140625e-06, 0.0, -0.002070307731628418, 0.0]}, {"choice_history": [70, 147, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Bounce", "<EOS>", "Minion", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronforgeRifleman", "hole2": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "COMMON", "hole5": "MinionSelector", "_type": "Template6", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole3": "Bounce"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.702893185489074, "score_history": [-0.9190912246704102, -8.392333984375e-05, -0.0013677061069756746, -3.3378546504536644e-06, -6.09140915912576e-05, -7.152555099310121e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.0002231597900390625, -4.3502655029296875, -0.00020597243565134704, -0.00015377308591268957, 0.0, -5.7220458984375e-06, -1.728534698486328e-05, 0.0, -0.02438974380493164, 0.0, -1.0529816150665283, -3.933906555175781e-06, -0.2956908345222473, -0.0006084442138671875, 0.0, -0.0019016265869140625, -0.00017547607421875, -1.9073486328125e-05, -0.010090827941894531, 0.0, -0.000274658203125, -0.0001201629638671875, -0.000331878662109375, -1.52587890625e-05, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -0.0023708343505859375, 0.0, -0.03796672821044922, -3.814697265625e-06, -0.000408172607421875, -0.00013256072998046875, 0.0, -2.86102294921875e-05, 0.0, -2.872943878173828e-05, 0.0, -8.392333984375e-05, -0.0015411376953125, -4.76837158203125e-05, -2.1457672119140625e-06, 0.0, -0.0020835399627685547, 0.0]}, {"choice_history": [70, 147, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 237, 46, 139, "2", "<EOS>", "Character", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronforgeRifleman", "hole2": [{"hole1": 3, "hole0": "Ironforge Rifleman", "hole2": "COMMON", "hole5": "CharacterSelector", "_type": "Template6", "hole4": [{"_type": "Num", "n": 2}], "hole3": "Heal"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(2),\n            CharacterSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -7.127147599226149, "score_history": [-0.9190912246704102, -8.392333984375e-05, -0.0013677061069756746, -3.3378546504536644e-06, -6.09140915912576e-05, -7.152555099310121e-07, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, -0.0002231597900390625, -5.060575008392334, -5.602820692729438e-06, -5.555143434321508e-05, -4.768370445162873e-07, -3.576272320060525e-06, -3.838539123535156e-05, -1.1920928244535389e-07, -0.0011075733928009868, -1.1920928244535389e-07, -0.8078916072845459, -2.777542977128178e-05, -0.03770637512207031, -0.001312255859375, 0.0, -0.023009777069091797, -7.629365427419543e-06, -0.25136223435401917, -4.017353057861328e-05, -6.866455078125e-05, -0.008446335792541504, 0.0, -7.02127581462264e-05, 0.0, -6.103515625e-05, -0.012993812561035156, -0.000125885009765625, -1.9073486328125e-06, -2.3841855067985307e-07, -0.0013732911320403218, -4.768370445162873e-07]}, {"choice_history": [69, 133, 249, 88, 153, "Ironforge", "<EOS>", "3", "<EOS>", "ALL", "<EOS>"], "model_output": {"body": [{"hole1": 3, "hole0": "Ironforge", "_type": "Template14", "hole2": "ALL"}], "_type": "Module"}, "inferred_code": "super().__init__('Ironforge', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n", "score": -9.445594185246584, "score_history": [-0.5351266860961914, -0.00018310546875, -2.288818359375e-05, -8.704561233520508, -0.16973114013671875, -7.366876525338739e-05, -0.03545653447508812, -3.600120180635713e-05, -1.1920928244535389e-07, -0.00040090084075927734, -1.9073486328125e-06]}, {"choice_history": [69, 133, 249, 89, 154, "Ironforge", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>"], "model_output": {"body": [{"hole1": 3, "hole0": "Ironforge", "_type": "Template15", "hole2": "ALL", "hole3": "COMMON"}], "_type": "Module"}, "inferred_code": "super().__init__('Ironforge', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n", "score": -9.908098051149864, "score_history": [-0.5351266860961914, -0.00018310546875, -2.288818359375e-05, -9.247600555419922, -0.057079315185546875, -0.00013244152069091797, -0.006348798517137766, -5.924701690673828e-05, -1.7166021279990673e-05, -0.00028431363170966506, 0.0, -0.061243534088134766, 0.0]}]}
{"index": 57, "beams": [{"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -0.011126658179676951, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -0.0010380744934082031, -1.9073486328125e-06, -0.000492095947265625, -1.1444091796875e-05, -0.00013375240087043494, -3.123283386230469e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -5.723678490086485, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -5.716499328613281, 0.0, -0.00010585784912109375, 0.0, -0.001206517219543457, 0.0, -5.7220458984375e-06, -0.0001201629638671875, -0.0002155303955078125, -1.9073468138230965e-06, -1.5497195136049413e-06, -7.822226325515658e-05, -3.576278118089249e-07, -0.0009936094284057617, -1.9073486328125e-06, -0.000514984130859375, -9.5367431640625e-06, -0.00012958035222254694, -3.886222839355469e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n", "score": -6.719853058629376, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -6.710167407989502, 0.0, -5.7220458984375e-06, -6.29425048828125e-05, -0.000118255615234375, -2.622600959512056e-06, -1.1920928244535389e-07, -0.0001870551786851138, -2.3841855067985307e-07, -0.0010815858840942383, -1.9073486328125e-06, -0.00048065185546875, -1.33514404296875e-05, -0.00014412369637284428, -3.707408905029297e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "FREE", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -7.05924227062448, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -7.049413681030273, 0.0, -0.0004607438750099391, 0.0, -0.0001373291015625, -7.62939453125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -8.785724639892578e-05, -7.62939453125e-06, -0.003710031509399414, -1.9073486328125e-05, -0.00022101402282714844, 0.0, -0.0011284351348876953, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -0.0001049041748046875, -1.1920922133867862e-06, -1.0728830375228426e-06, -7.047556573525071e-05, -3.576278118089249e-07, -0.0009843111038208008, -1.9073486328125e-06, -0.0004863739013671875, -1.1444091796875e-05, -0.00015151462866924703, -4.851818084716797e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Ironfur", " ", "Grizzly", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "p", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n", "score": -7.90866511989659, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -7.825366020202637, -0.000431060791015625, -0.0004634857177734375, 0.0, -0.000249624194111675, -1.9073486328125e-06, -0.00010144709813175723, -3.814697265625e-06, -0.005649566650390625, -9.5367431640625e-06, -0.0005168914794921875, -1.1920928244535389e-07, -0.00377655983902514, -3.4570634852570947e-06, -2.3841855067985307e-07, -9.5367431640625e-06, -2.47955322265625e-05, -1.6689300537109375e-06, -2.0265579223632812e-06, -8.20159912109375e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -7.724761235294864e-05, 0.0, -3.9577309507876635e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0003510713577270508, -3.576278118089249e-07, -0.00016450881958007812, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -5.53131103515625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0004100799560546875, -1.52587890625e-05, -0.00446319580078125, -8.0108642578125e-05, -0.0017661782912909985, 0.0, -0.05667506158351898, -1.9073486328125e-06, -7.62939453125e-06, -0.0007648468017578125, -0.000148773193359375, -2.694093382160645e-05, -4.839897155761719e-05, -0.0002491235500201583, -5.483625955093885e-06, -0.0013312099035829306, -8.96453857421875e-05, -0.0006170272827148438, -2.09808349609375e-05, -0.003821250516921282, -0.00027191638946533203]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "players", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "players", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, players=True)\n", "score": -8.70567013947479, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -8.671965599060059, -9.72747802734375e-05, -0.02369213104248047, -9.918212890625e-05, -0.00034987926483154297, -4.792213439941406e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=hearthbreaker.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -8.721041115376778, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -8.534222602844238, 0.0, -0.17977356910705566, -3.814697265625e-06, -2.7179718017578125e-05, 0.0, -0.0015339851379394531, 0.0, -1.9073486328125e-06, -9.34600830078125e-05, -0.000186920166015625, -2.3841830625315197e-06, -9.536738616588991e-07, -7.048540282994509e-05, -3.576278118089249e-07, -0.0010433197021484375, 0.0, -0.0004730224609375, -1.1444091796875e-05, -0.00011682482727337629, -2.7418136596679688e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "spell_targetable", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, spell_targetable=True)\n", "score": -9.209978243989866, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -9.193778038024902, 0.0, -0.0011014938354492188, -4.38690185546875e-05, -0.005562186241149902, -7.450580596923828e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "EPIC", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -9.280494830687047, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -9.267826080322266, 0.0, -0.002573728561401367, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00011265277862548828, -7.62939453125e-06, -0.004320263862609863, -1.33514404296875e-05, -0.00020742416381835938, 0.0, -0.0012007951736450195, 0.0, -5.7220458984375e-06, -9.5367431640625e-05, -0.000102996826171875, -1.1920922133867862e-06, -1.0728830375228426e-06, -6.28455018159002e-05, -3.576278118089249e-07, -0.0010685920715332031, -1.9073486328125e-06, -0.0004978179931640625, -1.1444091796875e-05, -0.0001406666706316173, -4.279613494873047e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "enrage", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, enrage=True)\n", "score": -9.356536290301705, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -9.230865478515625, -8.392333984375e-05, -0.11565876007080078, -8.392333984375e-05, -0.00040113923023454845, -2.491474151611328e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "create_minion", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "create_minion", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, create_minion):\n        return Minion(3, 3, taunt=True)\n", "score": -9.395738600528453, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -9.385966300964355, 0.0, -3.814697265625e-06, -6.67572021484375e-05, -0.0001220703125, -3.814689989667386e-06, -1.1920928244535389e-07, -0.00024998144363053143, -3.576278118089249e-07, -0.0009506940841674805, -1.9073486328125e-06, -0.0005979537963867188, -1.52587890625e-05, -0.00016283956938423216, -4.673004150390625e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "False", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -9.46407439438812, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -0.0010380744934082031, -1.9073486328125e-06, -0.000492095947265625, -1.1444091796875e-05, -9.451546669006348, -0.0015660524368286133]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "auras", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, auras=True)\n", "score": -9.551986477002032, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -7.8472981452941895, -9.5367431640625e-06, -1.6943912506103516, -3.24249267578125e-05, -0.0008000134839676321, -3.695487976074219e-05]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 17, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 234, 6, 237, 46, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt", "hole3": {"comparators": [{"_type": "Num", "n": 1}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "GtE"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=len(MINION_TYPE.BEAST) >= 1)\n", "score": -10.490052043182772, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -0.0010380744934082031, -1.9073486328125e-06, -8.374994277954102, -0.05112934112548828, -0.04964160919189453, -0.002391815185546875, -0.0003261566162109375, -1.9073486328125e-06, -0.48006582260131836, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0001773834228515625, 0.0, -0.4297632873058319, -1.3470649719238281e-05, -0.0009118318557739258, -3.0517578125e-05, -0.0167083740234375, -0.965662956237793, -4.76837158203125e-05, -0.0020589828491210938, -1.1444091796875e-05, -0.10556525737047195, -9.655952453613281e-06]}, {"choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 201, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>", 237, 62, 204, "Aura", "<EOS>", 238, 58, 192, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "IronfurGrizzly", "hole2": [{"hole1": 3, "hole0": "Ironfur Grizzly", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38", "hole2": [{"hole1": [{"hole0": 1, "_type": "Template33"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38_expr_seq"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n", "score": -10.599895455698828, "score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -7.8472981452941895, -9.5367431640625e-06, -0.2147388458251953, -0.0017757415771484375, -0.0019685029983520508, -0.0002995729446411133, -4.1961669921875e-05, -0.01435089111328125, -6.67572021484375e-05, -0.027203762903809547, -8.45193862915039e-05, -0.16205787658691406, -1.9073486328125e-05, -0.5394647717475891, -0.0014802217483520508, -5.352497100830078e-05, -0.0001354217529296875, -0.0024242401123046875, -0.0009326934814453125, -0.00904703140258789, -0.00010919570922851562, -0.00199127197265625, -0.041571617126464844, -0.033939361572265625, -0.0001479313796153292, -4.291534423828125e-06, -1.427961826324463, -2.6702880859375e-05, -0.26092177629470825, -0.00031936168670654297, -3.0875205993652344e-05]}]}
{"index": 58, "beams": [{"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -0.6745382892365299, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -0.023418426513671875, 0.0, -0.013795852661132812, -0.0034313201904296875, -0.0007190704345703125, -0.001163482666015625, -0.0003604888916015625, -4.1961669921875e-05, -0.0006543380441144109, -1.3947389561508317e-05, -0.0009307861328125, -0.005106925964355469, -4.57763671875e-05, -0.004576683044433594, -8.0108642578125e-05, -9.5367431640625e-05, -1.71661376953125e-05, -0.0021305084228515625, -0.047570228576660156, -0.000415802001953125, -1.1444091796875e-05, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -4.589557647705078e-05, 0.0, -4.57763671875e-05, 0.0, -0.002246856689453125, 0.0, -5.14984130859375e-05, -0.0027799606323242188, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.00013172625040169805, 0.0, -0.04966407269239426, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002422332763671875, -0.00041961669921875, -0.0001087188720703125, -9.5367431640625e-06, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -4.57763671875e-05, 0.0, -0.026693344116210938, 0.0, -3.24249267578125e-05, -0.000400543212890625, -4.38690185546875e-05, -4.57763671875e-05, 0.0, -5.53131103515625e-05, 0.0, -6.806846067775041e-05, 0.0, -0.05425667017698288, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -3.576481741892799, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -0.023418426513671875, 0.0, -0.013795852661132812, -0.0034313201904296875, -0.0007190704345703125, -0.001163482666015625, -0.0003604888916015625, -4.1961669921875e-05, -0.0006543380441144109, -1.3947389561508317e-05, -0.0009307861328125, -0.005106925964355469, -4.57763671875e-05, -0.004576683044433594, -8.0108642578125e-05, -9.5367431640625e-05, -1.71661376953125e-05, -0.0021305084228515625, -0.047570228576660156, -0.000415802001953125, -1.1444091796875e-05, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -4.589557647705078e-05, 0.0, -4.57763671875e-05, 0.0, -0.002246856689453125, 0.0, -5.14984130859375e-05, -0.0027799606323242188, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.00013172625040169805, 0.0, -0.04966407269239426, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002422332763671875, -0.00041961669921875, -0.0001087188720703125, -9.5367431640625e-06, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -4.57763671875e-05, 0.0, -0.026693344116210938, 0.0, -3.24249267578125e-05, -0.000400543212890625, -4.38690185546875e-05, -4.57763671875e-05, 0.0, -5.53131103515625e-05, 0.0, -6.806846067775041e-05, 0.0, -2.956207752227783, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -9.1552734375e-05, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -3.6567271436176227, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -0.023418426513671875, 0.0, -0.013795852661132812, -0.0034313201904296875, -0.0007190704345703125, -0.001163482666015625, -0.0003604888916015625, -4.1961669921875e-05, -0.0006543380441144109, -1.3947389561508317e-05, -0.0009307861328125, -0.005106925964355469, -4.57763671875e-05, -0.004576683044433594, -8.0108642578125e-05, -9.5367431640625e-05, -1.71661376953125e-05, -0.0021305084228515625, -0.047570228576660156, -0.000415802001953125, -1.1444091796875e-05, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -4.589557647705078e-05, 0.0, -4.57763671875e-05, 0.0, -0.002246856689453125, 0.0, -5.14984130859375e-05, -0.0027799606323242188, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.00013172625040169805, 0.0, -3.041656017303467, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-05, -3.814697265625e-06, -0.0005359649658203125, -0.0004730224609375, -3.814697265625e-05, -5.7220458984375e-06, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -0.01655292510986328, 0.0, -2.6702880859375e-05, -0.0004940032958984375, -4.1961669921875e-05, -5.340576171875e-05, 0.0, -4.9591064453125e-05, 0.0, -7.295605610124767e-05, 0.0, -0.054262954741716385, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011444091796875, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 14, 105, 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "right": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "op": {"_type": "Sub"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST) - len(player.minions)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -3.89341025733183, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -1.4756555557250977, -0.0010824203491210938, -0.5999593734741211, -9.918212890625e-05, -0.2058391571044922, -7.62939453125e-06, -0.050838470458984375, 0.0, -1.1444091796875e-05, 0.0, -0.001911163330078125, 0.0, -0.0005021095275878906, 0.0, -0.016747355461120605, 0.0, -0.0046844482421875, -0.0002231597900390625, -5.7220458984375e-06, -0.00017547607421875, 0.0, -0.000125885009765625, 0.0, -5.459741078084335e-05, 0.0, -0.0009918212890625, -5.340576171875e-05, -0.0009174346923828125, -0.0014743804931640625, -0.0041294097900390625, -1.9073486328125e-06, -0.0006275177001953125, -0.0004100799560546875, -0.014100074768066406, -0.000591278076171875, -0.001430511474609375, -1.1444091796875e-05, -8.0108642578125e-05, -1.52587890625e-05, -0.029390567913651466, 0.0, -0.010204792022705078, -1.1920928244535389e-07, -0.0010211465414613485, 0.0, -8.392333984375e-05, -0.0018405914306640625, -9.5367431640625e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007061958312988281, 0.0, -0.023342132568359375, 0.0, -0.036253929138183594, -0.01903057098388672, -1.1444091796875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -0.4880075454711914, 0.0, -7.62939453125e-06, -7.43865966796875e-05, 0.0, -0.0009212493896484375, 0.0, -0.0025644302368164062, 0.0, -0.015622496604919434, 0.0, -0.23350143432617188, -0.0007686614990234375, -0.002651214599609375, -8.392333984375e-05, -0.37163734436035156, -4.9591064453125e-05, -0.0037716322112828493, -4.2437604861333966e-05, -0.00014495849609375, -0.03439521789550781, -4.57763671875e-05, -0.015330314636230469, -7.62939453125e-05, -0.0001277923583984375, -3.814697265625e-05, -0.00128936767578125, -0.024903297424316406, -0.00049591064453125, -1.1444091796875e-05, -1.71661376953125e-05, -6.29425048828125e-05, 0.0, -5.352497100830078e-05, 0.0, -4.57763671875e-05, 0.0, -0.002239227294921875, 0.0, -4.1961669921875e-05, -0.0031480789184570312, -0.0001049041748046875, -1.71661376953125e-05, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.00012779234384652227, 0.0, -0.04983235150575638, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0001316070556640625, -0.0003376007080078125, -0.00011444091796875, -1.1444091796875e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -4.57763671875e-05, 0.0, -0.021338462829589844, 0.0, -3.0517578125e-05, -0.00042724609375, -4.1961669921875e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-05, 0.0, -6.783004937460646e-05, 0.0, -0.05418595299124718, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 14, 105, 13, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 72, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "BinOp", "left": {"attr": "index", "_type": "Attribute", "value": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}}, "right": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "op": {"_type": "Sub"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.index - len(player.minions)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -4.457114724403212, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -1.4756555557250977, -0.0010824203491210938, -1.797877311706543, 0.0, -0.010766983032226562, 0.0, -0.0001068115234375, 0.0, -0.0011568069458007812, 0.0, -1.52587890625e-05, -3.6954863844584906e-06, -0.21615135669708252, 0.0, -0.048043251037597656, -0.006712913513183594, -4.57763671875e-05, -7.2479248046875e-05, 0.0, -0.025159001350402832, 0.0, -5.7220458984375e-06, -0.00011444091796875, -1.9073486328125e-06, -0.038726806640625, 0.0, -0.002643585205078125, 0.0, -0.11198627948760986, 0.0, -0.11170673370361328, -0.0007038116455078125, -0.00559234619140625, -9.918212890625e-05, -0.3273019790649414, -8.20159912109375e-05, -0.005493843462318182, -7.807903602952138e-05, -0.0001544952392578125, -0.04434490203857422, -3.814697265625e-05, -0.015906333923339844, -7.05718994140625e-05, -0.0001049041748046875, -4.38690185546875e-05, -0.00148773193359375, -0.015513420104980469, -0.0003757476806640625, -1.1444091796875e-05, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -6.508827209472656e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0019512176513671875, -1.9073486328125e-06, -3.814697265625e-05, -0.002902984619140625, -9.918212890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -0.00012397764658089727, 0.0, -0.049845095723867416, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.000148773193359375, -0.000354766845703125, -9.5367431640625e-05, -9.5367431640625e-06, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.021472930908203125, 0.0, -3.0517578125e-05, -0.0004425048828125, -4.38690185546875e-05, -4.76837158203125e-05, 0.0, -5.7220458984375e-05, 0.0, -6.783004937460646e-05, 0.0, -0.05418892204761505, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001373291015625, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 14, 105, 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 16, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "right": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "op": {"_type": "Sub"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST) - IsType(player.minions)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -4.459951507028286, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -1.4756555557250977, -0.0010824203491210938, -0.5999593734741211, -9.918212890625e-05, -0.2058391571044922, -7.62939453125e-06, -0.050838470458984375, 0.0, -1.1444091796875e-05, 0.0, -0.001911163330078125, 0.0, -0.0005021095275878906, 0.0, -0.016747355461120605, 0.0, -0.0046844482421875, -0.0002231597900390625, -5.7220458984375e-06, -0.00017547607421875, 0.0, -0.000125885009765625, 0.0, -5.459741078084335e-05, 0.0, -0.0009918212890625, -5.340576171875e-05, -0.0009174346923828125, -0.0014743804931640625, -0.0041294097900390625, -1.9073486328125e-06, -0.0006275177001953125, -0.0004100799560546875, -0.014100074768066406, -0.000591278076171875, -0.001430511474609375, -1.1444091796875e-05, -8.0108642578125e-05, -1.52587890625e-05, -0.029390567913651466, 0.0, -0.010204792022705078, -1.1920928244535389e-07, -0.0010211465414613485, 0.0, -8.392333984375e-05, -0.0018405914306640625, -9.5367431640625e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007061958312988281, 0.0, -0.023342132568359375, 0.0, -0.036253929138183594, -0.01903057098388672, -1.1444091796875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -1.0134954452514648, -0.02836894989013672, 0.0, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, 0.0, -0.002056121826171875, 0.0, -0.127066969871521, 0.0, -0.07199859619140625, -0.0006542205810546875, -0.0011043548583984375, -5.7220458984375e-05, -0.4336662292480469, -4.00543212890625e-05, -0.004358178004622459, -4.088794958079234e-05, -0.0001430511474609375, -0.043625831604003906, -4.1961669921875e-05, -0.014364242553710938, -7.62939453125e-05, -0.0001201629638671875, -3.24249267578125e-05, -0.0011196136474609375, -0.020870208740234375, -0.0005359649658203125, -9.5367431640625e-06, -1.52587890625e-05, -6.103515625e-05, 0.0, -6.306171417236328e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0021648406982421875, -1.9073486328125e-06, -4.1961669921875e-05, -0.00299072265625, -0.000102996826171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.0001276731345569715, 0.0, -0.04982377588748932, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -0.0001087188720703125, -0.000316619873046875, -0.00012969970703125, -1.1444091796875e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.020481109619140625, 0.0, -3.0517578125e-05, -0.000423431396484375, -4.1961669921875e-05, -4.38690185546875e-05, 0.0, -5.7220458984375e-05, 0.0, -6.771084008505568e-05, 0.0, -0.05417297035455704, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.PIRATE)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -4.776395335563116, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -4.029004096984863, 0.0, -0.06804180145263672, -0.04294586181640625, -0.0006008148193359375, -0.0006122589111328125, -0.0008640289306640625, -3.4332275390625e-05, -0.0005284484359435737, -2.9205850296420977e-05, -0.00046539306640625, -0.004094123840332031, -5.91278076171875e-05, -0.004367828369140625, -8.20159912109375e-05, -9.918212890625e-05, -2.09808349609375e-05, -0.0017261505126953125, -0.05062389373779297, -0.0004711151123046875, -1.1444091796875e-05, -1.33514404296875e-05, -6.4849853515625e-05, 0.0, -4.792213439941406e-05, 0.0, -4.57763671875e-05, 0.0, -0.0022678375244140625, -1.9073486328125e-06, -4.9591064453125e-05, -0.0028820037841796875, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.00013363359903451055, 0.0, -0.04974012076854706, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0001983642578125, -0.0004444122314453125, -0.000110626220703125, -9.5367431640625e-06, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -0.02821636199951172, 0.0, -3.0517578125e-05, -0.000415802001953125, -4.38690185546875e-05, -4.57763671875e-05, 0.0, -5.53131103515625e-05, 0.0, -6.806846067775041e-05, 0.0, -0.05428718030452728, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -4.977235495155291, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -0.023418426513671875, 0.0, -4.446799278259277, -0.0001773834228515625, -0.0004215240478515625, -0.00064849853515625, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -8.392333984375e-05, -1.1920928244535389e-07, -0.01752948760986328, 0.0, -0.00081634521484375, -0.005146026611328125, -5.53131103515625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.00010740753350546584, -1.1920928244535389e-07, -0.04991466552019119, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.\n                card.minion_type is MINION_TYPE.BEAST)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -5.3527659506177585, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -0.023418426513671875, 0.0, -0.013795852661132812, -0.0034313201904296875, -0.0007190704345703125, -0.001163482666015625, -0.0003604888916015625, -4.1961669921875e-05, -0.0006543380441144109, -1.3947389561508317e-05, -0.0009307861328125, -0.005106925964355469, -4.57763671875e-05, -0.004576683044433594, -8.0108642578125e-05, -9.5367431640625e-05, -1.71661376953125e-05, -0.0021305084228515625, -3.1108627319335938, -0.0004253387451171875, -0.000141143798828125, -5.7220458984375e-06, -7.62939453125e-06, -0.338037371635437, 0.0, -0.7616949081420898, -0.0002384185791015625, -8.0108642578125e-05, -0.000301361083984375, -0.000637054443359375, 0.0, -7.05718994140625e-05, 0.0, -0.20701026916503906, 0.0, -0.0009198188781738281, 0.0, -0.008137822151184082, 0.0, -0.017290115356445312, -0.000339508056640625, -7.62939453125e-06, -5.7220458984375e-05, 0.0, -0.0002766847610473633, 0.0, -7.104728138074279e-05, 0.0, -0.0011854171752929688, -4.1961669921875e-05, -0.000835418701171875, -0.00222015380859375, -0.003505706787109375, -1.9073486328125e-06, -0.0006427764892578125, -0.0004119873046875, -0.015008926391601562, -0.0006084442138671875, -0.001499176025390625, -1.1444091796875e-05, -7.62939453125e-05, -1.52587890625e-05, -0.029621120542287827, 0.0, -0.01007235050201416, -1.1920928244535389e-07, -0.0010079143103212118, 0.0, -8.20159912109375e-05, -0.0018434524536132812, -9.918212890625e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007252693176269531, 0.0, -0.023428916931152344, 0.0, -0.24931907653808594, -0.01965808868408203, -3.0517578125e-05, -1.52587890625e-05, -2.6702880859375e-05, -0.00034332275390625, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.86102294921875e-05, 0.0, -0.00199127197265625, -1.9073486328125e-06, -0.000164031982421875, -0.00069427490234375, -1.9073486328125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.818768451921642e-05, -1.1920928244535389e-07, -0.05209319666028023, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -8.58306884765625e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: (x.\n            card.minion_type is MINION_TYPE.BEAST) is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -5.3542894151198155, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -4.482839584350586, -0.014039993286132812, -0.007657051086425781, -7.2479248046875e-05, -0.0015850067138671875, -1.71661376953125e-05, -0.0003032684326171875, -9.5367431640625e-06, -0.026309721171855927, 0.0, -0.012921333312988281, -1.1920928244535389e-07, -0.0006616115570068359, 0.0, -0.0001544952392578125, -0.0023393630981445312, -0.0001220703125, -0.0001049041748046875, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007654428482055664, 0.0, -0.020904541015625, 0.0, -0.000125885009765625, -0.14946746826171875, -1.52587890625e-05, -0.0034942626953125, -1.1444091796875e-05, -4.00543212890625e-05, 0.0, -0.008865952491760254, 0.0, -0.03639698028564453, 0.0, -0.010560989379882812, -0.0026226043701171875, -0.00225067138671875, -0.0031280517578125, -0.0003795623779296875, -3.24249267578125e-05, -0.0008738036849536002, -6.079655122448457e-06, -0.0006160736083984375, -0.005526542663574219, -6.103515625e-05, -0.004399299621582031, -7.62939453125e-05, -9.5367431640625e-05, -1.9073486328125e-05, -0.001312255859375, -0.04312896728515625, -0.0004119873046875, -9.5367431640625e-06, -1.33514404296875e-05, -6.4849853515625e-05, 0.0, -5.161762237548828e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0021266937255859375, 0.0, -4.9591064453125e-05, -0.0028791427612304688, -0.0001068115234375, -1.71661376953125e-05, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.00012993811105843633, 0.0, -0.04973069205880165, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002079010009765625, -0.0003871917724609375, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -0.02715778350830078, 0.0, -3.0517578125e-05, -0.0004119873046875, -4.38690185546875e-05, -4.57763671875e-05, 0.0, -5.53131103515625e-05, 0.0, -6.806846067775041e-05, 0.0, -0.054239969700574875, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "5", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "add_buff", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 5}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.add_buff(Buff(ChangeAttack(5)))\n", "score": -5.451432322235355, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -0.023418426513671875, 0.0, -0.013795852661132812, -0.0034313201904296875, -0.0007190704345703125, -0.001163482666015625, -0.0003604888916015625, -4.1961669921875e-05, -0.0006543380441144109, -1.3947389561508317e-05, -0.0009307861328125, -0.005106925964355469, -4.57763671875e-05, -0.004576683044433594, -8.0108642578125e-05, -9.5367431640625e-05, -1.71661376953125e-05, -0.0021305084228515625, -0.047570228576660156, -0.000415802001953125, -1.1444091796875e-05, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -4.589557647705078e-05, 0.0, -4.57763671875e-05, 0.0, -0.002246856689453125, 0.0, -5.14984130859375e-05, -0.0027799606323242188, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.00013172625040169805, 0.0, -0.04966407269239426, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002422332763671875, -0.00041961669921875, -0.0001087188720703125, -9.5367431640625e-06, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -4.57763671875e-05, 0.0, -4.038948059082031, 0.0, -0.0001316070556640625, -0.02382373809814453, -0.0003795623779296875, -0.00033402442932128906, -1.9073486328125e-06, -0.0512390062212944, -0.21567535400390625, 0.0, -0.5281093716621399, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            targets = hearthbreaker.targeting.<UNK>(player.game, lambda x: \n                x.card.minion_type is MINION_TYPE.BEAST)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -5.485165748377476, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -0.023418426513671875, 0.0, -0.013795852661132812, -0.0034313201904296875, -0.0007190704345703125, -0.001163482666015625, -0.0003604888916015625, -4.1961669921875e-05, -0.0006543380441144109, -1.3947389561508317e-05, -0.0009307861328125, -0.005106925964355469, -4.57763671875e-05, -0.004576683044433594, -8.0108642578125e-05, -9.5367431640625e-05, -1.71661376953125e-05, -0.0021305084228515625, -3.1108627319335938, -0.0004253387451171875, -0.000141143798828125, -5.7220458984375e-06, -7.62939453125e-06, -1.3606456518173218, 0.0, -0.0030603408813476562, -0.0001277923583984375, -0.0002593994140625, -4.9591064453125e-05, -0.0039539337158203125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0015087127685546875, 0.0, -0.00029587745666503906, 0.0, -0.08408653736114502, 0.0, -0.011449813842773438, -0.000354766845703125, -9.5367431640625e-06, -6.4849853515625e-05, 0.0, -0.000209808349609375, 0.0, -7.057076436467469e-05, 0.0, -0.0014715194702148438, -4.1961669921875e-05, -0.000881195068359375, -0.0018177032470703125, -0.003956794738769531, -1.9073486328125e-06, -0.0006961822509765625, -0.000408172607421875, -0.015315055847167969, -0.00067901611328125, -0.0015010833740234375, -1.1444091796875e-05, -7.62939453125e-05, -1.52587890625e-05, -0.02972566708922386, 0.0, -0.010263919830322266, -1.1920928244535389e-07, -0.0010426042135804892, 0.0, -8.20159912109375e-05, -0.0018415451049804688, -9.918212890625e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007443428039550781, 0.0, -0.023443222045898438, 0.0, -0.24952030181884766, -0.019675254821777344, -2.86102294921875e-05, -1.52587890625e-05, -2.6702880859375e-05, -0.0003414154052734375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.86102294921875e-05, 0.0, -0.001995086669921875, -1.9073486328125e-06, -0.000164031982421875, -0.00069427490234375, -1.9073486328125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.818768451921642e-05, -1.1920928244535389e-07, -0.05209391191601753, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -8.58306884765625e-05, -3.814697265625e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(targets)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -5.805161997449154, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -4.7002763748168945, -0.1666259765625, -0.000293731689453125, -0.5034382343292236, -2.1457672119140625e-06, -0.005733489990234375, -0.0001277923583984375, -0.0044803619384765625, -1.9073486328125e-06, -0.007114410400390625, 0.0, -0.00029528141021728516, -5.7220458984375e-06, -2.86102294921875e-05, -1.1920928244535389e-07, -0.0044403076171875, 0.0, -3.24249267578125e-05, -0.008151054382324219, -4.00543212890625e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.00011682507465593517, 0.0, -0.05189626291394234, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001068115234375, -1.9073486328125e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 14, 105, 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 44, 134, "<UNK>", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "BinOp", "left": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "right": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "op": {"_type": "Sub"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"id": "<UNK>", "_type": "Name"}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST) - len(player.minions)\n        for i in range(0, <UNK>):\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -6.232949022609951, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -1.4756555557250977, -0.0010824203491210938, -0.5999593734741211, -9.918212890625e-05, -0.2058391571044922, -7.62939453125e-06, -0.050838470458984375, 0.0, -1.1444091796875e-05, 0.0, -0.001911163330078125, 0.0, -0.0005021095275878906, 0.0, -0.016747355461120605, 0.0, -0.0046844482421875, -0.0002231597900390625, -5.7220458984375e-06, -0.00017547607421875, 0.0, -0.000125885009765625, 0.0, -5.459741078084335e-05, 0.0, -0.0009918212890625, -5.340576171875e-05, -0.0009174346923828125, -0.0014743804931640625, -0.0041294097900390625, -1.9073486328125e-06, -0.0006275177001953125, -0.0004100799560546875, -0.014100074768066406, -0.000591278076171875, -0.001430511474609375, -1.1444091796875e-05, -8.0108642578125e-05, -1.52587890625e-05, -0.029390567913651466, 0.0, -0.010204792022705078, -1.1920928244535389e-07, -0.0010211465414613485, 0.0, -8.392333984375e-05, -0.0018405914306640625, -9.5367431640625e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007061958312988281, 0.0, -0.023342132568359375, 0.0, -0.036253929138183594, -0.01903057098388672, -1.1444091796875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -0.4880075454711914, 0.0, -7.62939453125e-06, -7.43865966796875e-05, 0.0, -0.0009212493896484375, 0.0, -0.0025644302368164062, 0.0, -0.015622496604919434, 0.0, -1.6267070770263672, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -0.006471037864685059, 0.0, -0.008150100708007812, -7.2479248046875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012295246124267578, 0.0, -0.000347137451171875, -0.0006761550903320312, -1.9073486328125e-06, -0.0001300567964790389, -1.52587890625e-05, -0.8189907073974609, -9.5367431640625e-06, -0.0381166934967041, 0.0, -0.4683570861816406, -0.10256576538085938, -0.0012722015380859375, -0.001483917236328125, -6.103515625e-05, -0.0034236907958984375, 0.0, -0.0038175582885742188, 0.0, -3.814697265625e-05, 0.0, -0.026144027709960938, 0.0, -3.814697265625e-05, -0.00089263916015625, -9.34600830078125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -6.997580931056291e-05, 0.0, -0.05246652662754059, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00012969970703125, -5.7220458984375e-06]}, {"choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "KillCommand", "hole2": [{"hole1": 3, "hole0": "Kill Command", "hole2": "HUNTER", "_type": "Template11", "hole4": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "_type": "If", "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}, "orelse": [{"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}, {"value": {"_type": "Call", "args": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"body": {"comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "_type": "Lambda", "args": {"hole0": "x", "_type": "Template21"}}], "func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n", "score": -6.523990839795886, "score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -4.446558952331543, -0.0001220703125, -2.86102294921875e-05, -0.000568389892578125, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -1.2755388524965383e-05, 0.0, -2.47955322265625e-05, 0.0, -5.14984130859375e-05, -7.62939453125e-06, -7.474422454833984e-05, -7.62939453125e-06, -0.003692626953125, -0.0002346038818359375, -4.1961669921875e-05, -8.7738037109375e-05, -0.0005207061767578125, -0.0018949508666992188, 0.0, -0.24981975555419922, -0.001270294189453125, -1.71661376953125e-05, -9.5367431640625e-06, -0.000392913818359375, 0.0, -0.0001201629638671875, 0.0, -0.0065135955810546875, 0.0, -0.0006396770477294922, 0.0, -0.01372826099395752, 0.0, -0.008816719055175781, -0.0002498626708984375, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -4.6729546738788486e-05, 0.0, -0.0012903213500976562, -5.53131103515625e-05, -0.000843048095703125, -0.0017871856689453125, -0.0032987594604492188, -1.9073486328125e-06, -0.0006160736083984375, -0.000385284423828125, -0.016107559204101562, -0.0005893707275390625, -0.0015621185302734375, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028760666027665138, 0.0, -0.01013803482055664, -1.1920928244535389e-07, -0.001025795703753829, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007214546203613281, 0.0, -0.023406028747558594, 0.0, -0.012006759643554688, -0.0019178390502929688, -0.000885009765625, -0.001674652099609375, -0.0002841949462890625, -4.38690185546875e-05, -0.0008538789697922766, -3.2543604902457446e-05, -0.0011043548583984375, -0.004016876220703125, -2.47955322265625e-05, -0.003966331481933594, -8.58306884765625e-05, -0.0001010894775390625, -1.71661376953125e-05, -0.00311279296875, -0.07413196563720703, -0.0004634857177734375, -1.33514404296875e-05, -1.52587890625e-05, -6.29425048828125e-05, 0.0, -4.792213439941406e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00234222412109375, 0.0, -5.53131103515625e-05, -0.0029001235961914062, -0.000110626220703125, -1.71661376953125e-05, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.00013172625040169805, 0.0, -0.049659550189971924, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.0002155303955078125, -0.0004825592041015625, -0.0001087188720703125, -9.5367431640625e-06, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -0.02581787109375, 0.0, -3.0517578125e-05, -0.00041961669921875, -4.1961669921875e-05, -4.38690185546875e-05, 0.0, -5.53131103515625e-05, 0.0, -6.794925866415724e-05, 0.0, -0.0541115440428257, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -0.046881675720214844, -7.05718994140625e-05, -7.62939453125e-06, -0.3952903747558594, -1.71661376953125e-05, -0.011023998260498047, 0.0, -0.7554264068603516, -0.004970550537109375, -0.0001125335693359375, -0.000141143798828125, -0.0042572021484375, 0.0, -1.9073486328125e-05, 0.0, -0.07159614562988281, 0.0, -0.00026154518127441406, 0.0, -0.021643757820129395, 0.0, -0.008319854736328125, -0.000308990478515625, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.00019657611846923828, 0.0, -6.806700548622757e-05, 0.0, -0.0015840530395507812, -4.1961669921875e-05, -0.0008678436279296875, -0.0021190643310546875, -0.0038995742797851562, -1.9073486328125e-06, -0.000659942626953125, -0.0003910064697265625, -0.013573646545410156, -0.0006046295166015625, -0.001495361328125, -1.1444091796875e-05, -7.82012939453125e-05, -1.52587890625e-05, -0.030895467847585678, 0.0, -0.010159134864807129, -1.1920928244535389e-07, -0.000987648731097579, 0.0, -8.20159912109375e-05, -0.0018415451049804688, -9.918212890625e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007252693176269531, 0.0, -0.02351665496826172, 0.0]}]}
{"index": 59, "beams": [{"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "score": -0.008258247656620199, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -0.005532026290893555, -1.0728830375228426e-06, -6.67572021484375e-05, -0.000133514404296875, -0.0006140395998954773, 0.0]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "MAGE", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, MAGE=1)\n", "score": -6.882810562234347, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -6.773157119750977, -9.655952453613281e-06, -0.1068868637084961, -4.9591064453125e-05, -0.0007964944816194475, 0.0]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Weapon", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "WeaponSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), WeaponSelector())])\n", "score": -6.888082795685591, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -6.217155933380127, 0.0, -0.007227897644042969, -0.04526329040527344, -0.030246853828430176, -1.1920928244535389e-07, -0.000232696533203125, -0.12459659576416016, -0.0002002716064453125, -0.013245007954537868, 0.0, -0.016805648803710938, -1.9073486328125e-06, -0.43115735054016113, -3.838539123535156e-05, 0.0]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n", "score": -7.705347807987103, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -7.601031303405762, -2.86102294921875e-05, -0.10230064392089844, -1.71661376953125e-05, -3.933906555175781e-06, -5.53131103515625e-05]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -7.891482763832869, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -6.217155933380127, 0.0, -0.007227897644042969, -0.04526329040527344, -0.030246853828430176, -1.1920928244535389e-07, -0.000232696533203125, -0.12459659576416016, -0.0002002716064453125, -0.013245007954537868, 0.0, -0.016805648803710938, -1.9073486328125e-06, -1.4344984292984009, -9.72747802734375e-05, 0.0]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 139, "5", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 5}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=5)\n", "score": -8.093242200000084, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -0.005532026290893555, -1.0728830375228426e-06, -6.67572021484375e-05, -0.000133514404296875, -8.085592269897461, -5.7220458984375e-06]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "Minion", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 0, "hole0": 2, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 0, spell_damage=1)\n", "score": -8.113928130503737, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -8.10722541809082, -5.733966827392578e-05, -0.00424647331237793, -9.536738616588991e-07, -5.53131103515625e-05, -8.392333984375e-05, -0.000735215493477881, 0.0]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -8.496478469950155, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -8.360042572021484, 0.0, -0.1344738006591797, -1.1444091796875e-05, -5.483625955093885e-06, -3.4332275390625e-05]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 89, 154, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template15", "hole2": "ALL", "hole3": "COMMON"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "score": -8.624687217526095, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -8.614401817321777, -0.000141143798828125, 0.0, -4.124638871871866e-05, 0.0, 0.0, -9.540294740872923e-06, -3.099440846199286e-06, -8.7738037109375e-05, 0.0, -0.0051386356353759766, 0.0, -6.914137884450611e-06, 0.0, -4.0531158447265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -7.152553962441743e-07, -4.768370445162873e-07, -0.00030568515649065375, -1.1920928244535389e-07, -0.0027056927792727947, -2.622600959512056e-06, -3.814697265625e-05, -0.0001163482666015625, -0.0005819692160002887, 0.0]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 139, "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 2}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=2)\n", "score": -8.986741574389733, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -0.005532026290893555, -1.0728830375228426e-06, -6.67572021484375e-05, -0.000133514404296875, -8.979097366333008, 0.0]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "buffs", "<EOS>", 19, 129, 237, 52, 180, "Cant", "Attack", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"hole0": "CantAttack", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, buffs=[Buff(CantAttack())])\n", "score": -9.163612278087506, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -7.643139839172363, -7.62939453125e-06, -0.012854576110839844, -0.00030517578125, -0.002483367919921875, -0.0010280609130859375, -0.0051059722900390625, -1.4836314916610718, -0.013135433197021484, -9.894371032714844e-06]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 139, "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "effects", "hole3": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=1)\n", "score": -9.389058144323037, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -8.145562171936035, 0.0, -1.2399139404296875, -0.000255584716796875, -0.0014156099641695619, 0.0]}, {"choice_history": [70, 150, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}, {"comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"_type": "Call", "args": [{"attr": "minions", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}], "func": {"id": "len", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}]}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -9.776789861982948, "score_history": [-7.62939453125e-06, -7.130075454711914, -8.463859558105469e-06, -5.960462772236497e-07, -2.0265558760002023e-06, -0.009736315347254276, -3.814697265625e-05, -2.3841855067985307e-07, -3.814697265625e-05, -0.0005207061767578125, -2.09808349609375e-05, 0.0, -5.0902366638183594e-05, -1.1920928244535389e-07, 0.0, -2.1488158381544054e-06, -1.1920928244535389e-07, -6.461143493652344e-05, 0.0, -0.06402873992919922, 0.0, -0.00074005126953125, 0.0, -3.62396240234375e-05, -2.47955322265625e-05, -5.650520324707031e-05, -3.099440846199286e-06, -0.7490472793579102, 0.0, -8.392333984375e-05, -0.00012969970703125, -4.38690185546875e-05, -0.0001735687255859375, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -2.1457672119140625e-06, -1.9073486328125e-06, -0.0021066665649414062, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.39203643798828125, 0.0, -0.019451141357421875, -0.000995635986328125, -5.7220458984375e-06, 0.0, -0.000514984130859375, 0.0, -7.62939453125e-06, -0.0001544952392578125, 0.0, -0.0025415411219000816, -1.9073486328125e-06, -0.04044914245605469, -1.52587890625e-05, -0.03489738702774048, 0.0, -7.62939453125e-05, -0.05696296691894531, -8.0108642578125e-05, -6.4849853515625e-05, -2.288818359375e-05, -0.0021762847900390625, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.004723548889160156, 0.0, -0.027517318725585938, -0.029615402221679688, -0.000156402587890625, -0.051685452461242676, 0.0, -0.0002346038818359375, -7.05718994140625e-05, -0.08591079711914062, -2.86102294921875e-05, -5.841255187988281e-06, -5.7220458984375e-06, -0.0001964569091796875, -0.07831001281738281, 0.0, -4.38690185546875e-05, -2.872943878173828e-05, -1.9073486328125e-06, -0.010250091552734375, -0.2765951156616211, -0.00034332275390625, -0.0018758773803710938, -0.0023212432861328125, -0.000797271728515625, -1.33514404296875e-05, -7.05718994140625e-05, -0.000576019287109375, -8.96453857421875e-05, 0.0, -0.00045430660247802734, 0.0, -0.11363697052001953, 0.0, -3.24249267578125e-05, 0.0, -5.3882598876953125e-05, 0.0, -0.07341670989990234, -3.814697265625e-06, -0.4079551696777344, -0.0042209625244140625, -1.9073486328125e-06, 0.0, -0.010048866271972656, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003509521484375, 0.0, -0.0012912750244140625, 0.0, -0.0015777349472045898, 0.0, -9.72747802734375e-05, -0.01643657684326172, -3.4332275390625e-05, -0.000316619873046875, 0.0, -0.06762170791625977, -5.7220458984375e-06]}, {"choice_history": [70, 150, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"_type": "Expr", "value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}], "_type": "FunctionDef", "name": "can_use", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n\n    def can_use(self, player, game):\n        super().use(player, game)\n", "score": -10.259876805607533, "score_history": [-7.62939453125e-06, -7.130075454711914, -8.463859558105469e-06, -5.960462772236497e-07, -2.0265558760002023e-06, -0.009736315347254276, -3.814697265625e-05, -2.3841855067985307e-07, -3.814697265625e-05, -0.0005207061767578125, -2.09808349609375e-05, 0.0, -5.0902366638183594e-05, -1.1920928244535389e-07, 0.0, -2.1488158381544054e-06, -1.1920928244535389e-07, -6.461143493652344e-05, 0.0, -0.06402873992919922, 0.0, -0.00074005126953125, 0.0, -3.62396240234375e-05, -2.47955322265625e-05, -5.650520324707031e-05, -3.099440846199286e-06, -0.7490472793579102, 0.0, -8.392333984375e-05, -0.00012969970703125, -4.38690185546875e-05, -0.0001735687255859375, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -2.1457672119140625e-06, -1.9073486328125e-06, -0.0021066665649414062, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.39203643798828125, 0.0, -0.019451141357421875, -0.000995635986328125, -5.7220458984375e-06, 0.0, -0.000514984130859375, 0.0, -7.62939453125e-06, -0.0001544952392578125, 0.0, -0.0025415411219000816, -1.9073486328125e-06, -0.04044914245605469, -1.52587890625e-05, -0.03489738702774048, 0.0, -7.62939453125e-05, -0.05696296691894531, -8.0108642578125e-05, -6.4849853515625e-05, -2.288818359375e-05, -0.0021762847900390625, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.004723548889160156, 0.0, -0.027517318725585938, -0.029615402221679688, -0.000156402587890625, -0.051685452461242676, 0.0, -0.0002346038818359375, -7.05718994140625e-05, -0.08591079711914062, -2.86102294921875e-05, -5.841255187988281e-06, -5.7220458984375e-06, -0.0001964569091796875, -0.07831001281738281, 0.0, -4.38690185546875e-05, -2.872943878173828e-05, -1.9073486328125e-06, -0.010250091552734375, -1.4334516525268555, -2.09808349609375e-05, -0.029695510864257812, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -3.0875205993652344e-05, 0.0, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0279157726909034e-05, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "buffs", "<EOS>", 19, 129, 237, 52, 180, "+1", "Health", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "KoboldGeomancer", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"hole0": "+1Health", "_type": "Template25"}]}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, buffs=[Buff(+1Health())])\n", "score": -10.317307980640301, "score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -7.643139839172363, -7.62939453125e-06, -0.012854576110839844, -0.00030517578125, -0.002483367919921875, -0.0010280609130859375, -0.0051059722900390625, -1.2025336027145386, -1.447896957397461, -4.1961669921875e-05]}]}
{"index": 60, "beams": [{"choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -0.024377959264029414, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -0.005444169044494629, 0.0, -0.00016021728515625, -7.43865966796875e-05, -4.00543212890625e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "Kor'kron", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Kor'kronElite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -5.26891724993061, "score_history": [-2.288818359375e-05, -0.0008392333984375, -5.258898735046387, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -0.005444169044494629, 0.0, -0.00016021728515625, -7.43865966796875e-05, -4.00543212890625e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "Force", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Force", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Force(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -5.935923784965773, "score_history": [-2.288818359375e-05, -0.0008392333984375, -5.39622688293457, -0.5050315856933594, -0.025856345891952515, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00028228759765625, -3.24249267578125e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, 0.0, -3.218651045244769e-06, -2.622604142743512e-06, -0.0014629364013671875, 0.0, -0.0001220703125, -1.9073486328125e-06, -6.902217864990234e-05, 0.0, -5.53131103515625e-05, -0.0001773834228515625, -4.00543212890625e-05, -9.5367431640625e-06, -6.43729799776338e-06, -1.9073468138230965e-06, 0.0, -0.005361080169677734, 0.0, -0.00016021728515625, -7.2479248046875e-05, -3.62396240234375e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "stealth", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, stealth=True)\n", "score": -6.5430491142399205, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -6.521137714385986, -1.9073486328125e-06, -0.0031452178955078125, -5.91278076171875e-05, -4.780292510986328e-05, -2.0265579223632812e-06]}, {"choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "divine_shield", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, divine_shield=True)\n", "score": -6.570829766286117, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -6.550491809844971, 0.0, -0.00148773193359375, -5.340576171875e-05, -0.00014138221740722656, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Force", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "ForceElite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class ForceElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -6.595557688687556, "score_history": [-2.288818359375e-05, -0.0008392333984375, -5.39622688293457, -1.189956784248352, -4.5894608774688095e-05, -3.099436753473128e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.0001316070556640625, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, 0.0, -5.245208740234375e-06, -1.5497195136049413e-06, -0.0020961761474609375, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -7.295608520507812e-05, 0.0, -4.9591064453125e-05, -0.0001697540283203125, -3.814697265625e-05, -9.5367431640625e-06, -6.43729799776338e-06, -1.9073468138230965e-06, 0.0, -0.005412578582763672, 0.0, -0.00016021728515625, -7.43865966796875e-05, -4.00543212890625e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -6.888664501200196, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -6.865865707397461, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -4.5299530029296875e-06, 0.0, -3.814697265625e-05, -0.0002079010009765625, -3.0517578125e-05, -7.62939453125e-06, -7.5101784204889555e-06, -1.5497195136049413e-06, 0.0, -0.005611300468444824, 0.0, -0.0001811981201171875, -5.91278076171875e-05, -3.62396240234375e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -7.25925816874382, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -7.223034381866455, -0.012834715656936169, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -0.0002155303955078125, -2.6702880859375e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, 0.0, -3.099441755693988e-06, -1.1920922133867862e-06, -0.0016803741455078125, 0.0, -0.0002117156982421875, 0.0, -5.3763389587402344e-05, 0.0, -5.91278076171875e-05, -0.000164031982421875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.7881377516459906e-06, 0.0, -0.005369663238525391, 0.0, -0.0001583099365234375, -7.2479248046875e-05, -3.62396240234375e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "windfury", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, windfury=True)\n", "score": -7.61565007497142, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -7.596271514892578, 0.0, -0.000644683837890625, -3.62396240234375e-05, -4.220008850097656e-05, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n", "score": -8.061322944653739, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -8.042160034179688, 0.0, -0.000446319580078125, -3.62396240234375e-05, -1.537799835205078e-05, -9.655952453613281e-06]}, {"choice_history": [70, 147, "<UNK>", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK><UNK>", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -8.08396503312565, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -8.06063461303711, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -0.005444169044494629, 0.0, -0.00016021728515625, -7.43865966796875e-05, -4.00543212890625e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "PALADIN"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -8.088164823545412, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -8.06514835357666, 0.0, -0.00013124942779541016, -1.9073486328125e-06, -5.996227264404297e-05, 0.0, -1.9073486328125e-05, -0.000263214111328125, -3.0517578125e-05, -7.62939453125e-06, -6.0796710386057384e-06, -2.0265558760002023e-06, 0.0, -0.005729079246520996, 0.0, -0.0001659393310546875, -6.866455078125e-05, -3.62396240234375e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "3", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "3Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class 3Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -8.28735959991684, "score_history": [-2.288818359375e-05, -0.0008392333984375, -8.268545150756836, -0.009377126581966877, -9.536714060232043e-06, -2.145764938177308e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0001850128173828125, -2.6702880859375e-05, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, 0.0, -5.364418029785156e-06, -1.5497195136049413e-06, -0.002166748046875, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -6.73532485961914e-05, 0.0, -5.53131103515625e-05, -0.0001697540283203125, -3.62396240234375e-05, -7.62939453125e-06, -6.675716122117592e-06, -1.9073468138230965e-06, 0.0, -0.005365848541259766, 0.0, -0.00016021728515625, -7.43865966796875e-05, -4.1961669921875e-05, -3.814697265625e-06]}, {"choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Damage", "<EOS>", "1", "<EOS>", 63, 205, "Hero", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>Elite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "deathrattle", "hole3": {"_type": "Call", "args": [{"hole1": 1, "hole0": "Damage", "_type": "Template34"}, {"hole0": "HeroSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Damage(1), HeroSelector()))\n", "score": -9.199601786620853, "score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -7.475697040557861, 0.0, -0.005131721496582031, -1.9073486328125e-06, -0.000926971435546875, -1.9073486328125e-06, -0.008735299110412598, -1.1920928244535389e-07, -0.12741947174072266, -0.1354656219482422, -1.1444091796875e-05, -0.19081901013851166, -0.0003148317337036133, -0.08583785593509674, -3.2186455882765586e-06, -0.50592041015625, -1.9073486328125e-06, -0.6443220376968384, -0.000335693359375, 0.0]}, {"choice_history": [70, 150, "Kor'kron", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 93, 196, 33, 205, "Kor'kron", "<EOS>", "summon", "<EOS>", 239, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 250, 81, 117, "deactivate", "<EOS>", 1, 225, 232, 224, "self", "<EOS>", 224, "player", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 238, 47, 143, "character_attack", "<EOS>", 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", 81, 117, "deactivate", "<EOS>", 1, 225, 232, 224, "self", "<EOS>", 224, "player", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 238, 47, 143, "character_attack", "<EOS>", 36, 103, 21, 134, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Kor'kronElite", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "summon", "hole0": {"hole0": "Kor'kron", "_type": "Template39"}, "_type": "Template37", "hole2": [{"attr": "game", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use", "hole7": [{"body": [{"hole1": "unbind", "hole0": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "character_attack"}, {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}]}], "_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}, {"body": [{"hole1": "unbind", "hole0": {"attr": "opponent", "_type": "Attribute", "value": {"id": "player", "_type": "Name"}}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "character_attack"}, {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}]}], "_type": "FunctionDef", "name": "deactivate", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}]}, "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            Kor'kron().summon(player.game, CARD_RARITY.COMMON, True)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self.target)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self.target)\n", "score": -19.04616071869316, "score_history": [-2.288818359375e-05, -7.739043235778809, -0.23631255328655243, -0.0032501989044249058, -1.2874520507466514e-05, -0.0024903854355216026, -0.000156402587890625, -3.576278118089249e-07, -0.0002193450927734375, -0.0001735687255859375, -5.7220458984375e-05, 0.0, -2.1219253540039062e-05, -2.1457672119140625e-06, 0.0, -8.940697625803296e-06, -2.622604142743512e-06, -0.00481414794921875, 0.0, -0.043460845947265625, 0.0, -0.00025975704193115234, 0.0, -0.0003681182861328125, -4.38690185546875e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.018848419189453125, -1.9073486328125e-06, -3.814697265625e-06, -0.00014495849609375, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.00013363361358642578, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -0.0246429443359375, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.1050729751586914, 0.0, -0.000263214111328125, -1.33514404296875e-05, -0.000156402587890625, 0.0, -0.0006067752838134766, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0004230682970955968, -1.9073486328125e-06, -0.00078582763671875, -4.38690185546875e-05, -0.32746386528015137, 0.0, -0.0032472610473632812, -0.7262916564941406, -0.000164031982421875, -0.001575469970703125, -1.33514404296875e-05, -0.41136041283607483, -0.0037705402355641127, -0.07408034801483154, 0.0, -0.0064983367919921875, -0.4128427505493164, -5.53131103515625e-05, -5.340576171875e-05, 0.0, -0.00028228759765625, 0.0, -0.020717620849609375, 0.0, -1.1542634963989258, -0.0001220703125, -3.814697265625e-06, 0.0, -0.3425025939941406, 0.0, -0.1454458236694336, 0.0, -0.7317972183227539, -0.0009937286376953125, -0.023590087890625, 0.0, -0.5727901458740234, -0.00014495849609375, -0.00041961669921875, -0.03640472888946533, -1.9073486328125e-06, -0.000225067138671875, -0.0010242462158203125, -0.05199241638183594, -0.0001163482666015625, -0.0026302337646484375, -1.9073486328125e-06, -8.58306884765625e-05, -2.47955322265625e-05, -1.71661376953125e-05, -0.0012531280517578125, -0.32082080841064453, -0.00311279296875, -0.014438629150390625, -7.62939453125e-06, -0.020368576049804688, 0.0, -0.0006639957427978516, 0.0, -0.1961519718170166, -1.9073486328125e-06, -0.8150187730789185, 0.0, -9.5367431640625e-06, -0.001789093017578125, -0.0007991790771484375, -0.5957284569740295, -7.82012939453125e-05, -0.00400543212890625, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -0.0001087188720703125, 0.0, -0.3660469055175781, 0.0, -0.0010051727294921875, -0.0025920867919921875, -0.8810291290283203, -1.9073486328125e-06, -6.103515625e-05, -0.0003147125244140625, -0.15456581115722656, -2.6702880859375e-05, -0.0015926361083984375, -3.814697265625e-06, -0.0001220703125, -0.000827789306640625, -9.5367431640625e-06, -0.00176239013671875, -0.22785282135009766, -0.0039424896240234375, -0.015179634094238281, -1.1444091796875e-05, -0.014245986938476562, 0.0, -0.0007423162460327148, 0.0, -0.28593266010284424, -1.9073486328125e-06, -0.8500052690505981, 0.0, -9.5367431640625e-06, -0.002086639404296875, -0.0006561279296875, -0.6077837944030762, -7.43865966796875e-05, -0.00650787353515625, -2.47955322265625e-05, -5.7220458984375e-05, 0.0, -0.0001087188720703125, 0.0, -0.411529541015625, 0.0]}]}
{"index": 61, "beams": [{"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -0.26320484215248996, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -0.004099006298929453, -5.125993993715383e-06, -0.14754676818847656, -0.000202178955078125, -0.00039500370621681213, -0.00047302243183366954, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 55, 186, "Minion", "Selector", "<EOS>", 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole1": {"id": "IsType", "_type": "Name"}, "hole0": "MinionSelector", "_type": "Template29", "hole2": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n", "score": -2.395633736422198, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -0.004099006298929453, -5.125993993715383e-06, -2.2589454650878906, -0.003803253173828125, -3.4831464290618896e-07, -0.0029554790817201138, -5.245207830739673e-06, -0.0033121109008789062, -1.9073486328125e-06, -0.0028719110414385796, -0.001021742820739746, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -7.62939453125e-06, -4.76837158203125e-05, 0.0, -0.0001997947256313637, -5.7220458984375e-06, -0.007808804512023926, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -3.0993024667877975, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -2.8681955337524414, -0.0012111663818359375, -8.96453857421875e-05, -3.576278118089249e-07, -1.311301275563892e-06, -7.62939453125e-05, -1.9073486328125e-06, -0.00024092168314382434, -3.576277322281385e-06, -5.340576171875e-05, -4.76837158203125e-05, -2.288818359375e-05, -3.814697265625e-06, -0.001187801011838019, -2.503394853192731e-06, -0.0022571079898625612, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00014340877532958984, -1.1920928244535389e-07, -0.0003713365294970572, 0.0, -0.000453948974609375, -2.288818359375e-05, -6.67572021484375e-05, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -0.0001277923583984375, -1.9073486328125e-06, -0.0022269487380981445, -2.0265579223632812e-06, -0.02074754238128662, 0.0, -0.0001087188720703125, -0.001941680908203125, -9.34600830078125e-05, -9.72747802734375e-05, -1.7404556274414062e-05, -0.00012886514014098793, 0.0, -0.0009133577696047723, 0.0, -6.67572021484375e-05, -0.0003681182861328125, -0.00037384033203125, -0.0003674030303955078, -5.090107151772827e-05, -4.768370445162873e-07, -2.0265579223632812e-06, -0.0008758305921219289, -1.9073486328125e-06, -0.0001010894775390625, -0.0043182373046875, -0.0001538989890832454, -0.0001907345576910302, -0.0003070831298828125, -0.0009899139404296875, -0.0045604705810546875, -0.003714327933266759, -5.006785613659304e-06, -0.17321205139160156, -0.000194549560546875, -0.00043177977204322815, -0.0005522966384887695, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -4.202264274441568, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -4.024588584899902, -1.71661376953125e-05, -6.4849853515625e-05, -1.1920928244535389e-07, -8.344646857949556e-07, -3.814697265625e-06, -1.9073486328125e-06, -6.437300726247486e-06, -3.099436753473128e-06, -0.000110626220703125, -6.866455078125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.0018131722463294864, -2.0265579223632812e-06, -0.0018020865973085165, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00014913082122802734, 0.0, -0.004791140556335449, 0.0, -0.0003337860107421875, -0.002597808837890625, -0.0001239776611328125, -0.000110626220703125, -3.814697265625e-06, -0.0001342296600341797, 0.0, -2.765639146673493e-05, 0.0, -2.86102294921875e-05, -0.0001010894775390625, -0.000125885009765625, -0.00016486644744873047, -4.708655978902243e-05, -3.576278118089249e-07, -3.576278118089249e-07, -0.0004714725073426962, -1.9073486328125e-06, -7.43865966796875e-05, -0.0044231414794921875, -0.00017476077482569963, -0.00012028210767311975, -0.00026702880859375, -0.00106048583984375, -0.0035276412963867188, -0.004329441115260124, -5.006785613659304e-06, -0.14208316802978516, -0.0002346038818359375, -0.0003602653741836548, -0.0004626512236427516, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole1": "MinionSelector", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MinionSelector()))])\n", "score": -4.984001446087504, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -0.004099006298929453, -5.125993993715383e-06, -3.5817604064941406, -0.012322425842285156, -0.001593165099620819, -0.0008616785053163767, -1.9073304429184645e-05, -1.2727054357528687, -0.000151392217958346, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 55, 186, "Minion", "Selector", "<EOS>", 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole1": {"id": "IsType", "_type": "Name"}, "hole0": "MinionSelector", "_type": "Template29", "hole2": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n", "score": -5.003010255069107, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -2.8681955337524414, -0.0012111663818359375, -8.96453857421875e-05, -3.576278118089249e-07, -1.311301275563892e-06, -7.62939453125e-05, -1.9073486328125e-06, -0.00024092168314382434, -3.576277322281385e-06, -5.340576171875e-05, -4.76837158203125e-05, -2.288818359375e-05, -3.814697265625e-06, -0.001187801011838019, -2.503394853192731e-06, -0.0022571079898625612, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00014340877532958984, -1.1920928244535389e-07, -0.0003713365294970572, 0.0, -0.000453948974609375, -2.288818359375e-05, -6.67572021484375e-05, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -0.0001277923583984375, -1.9073486328125e-06, -0.0022269487380981445, -2.0265579223632812e-06, -0.02074754238128662, 0.0, -0.0001087188720703125, -0.001941680908203125, -9.34600830078125e-05, -9.72747802734375e-05, -1.7404556274414062e-05, -0.00012886514014098793, 0.0, -0.0009133577696047723, 0.0, -6.67572021484375e-05, -0.0003681182861328125, -0.00037384033203125, -0.0003674030303955078, -5.090107151772827e-05, -4.768370445162873e-07, -2.0265579223632812e-06, -0.0008758305921219289, -1.9073486328125e-06, -0.0001010894775390625, -0.0043182373046875, -0.0001538989890832454, -0.0001907345576910302, -0.0003070831298828125, -0.0009899139404296875, -0.0045604705810546875, -0.003714327933266759, -5.006785613659304e-06, -2.054694175720215, -0.0038270950317382812, -5.811452865600586e-07, -0.0030149826779961586, -5.245207830739673e-06, -0.0039920806884765625, -1.9073486328125e-06, -0.002797964960336685, -0.0010619163513183594, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -4.76837158203125e-05, 0.0, -0.00018727775022853166, -5.7220458984375e-06, -0.008391499519348145, -1.9073486328125e-06]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "4", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 4, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(4), MinionSelector())])\n", "score": -5.65396034795377, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -5.532187461853027, -0.0029821395874023438, -0.005425453186035156, -0.000125885009765625, -0.0014072954654693604, -0.0013483762741088867, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Adjacent()))])\n", "score": -5.995060503346096, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -0.004099006298929453, -5.125993993715383e-06, -3.5817604064941406, -0.012322425842285156, -0.001593165099620819, -0.0008616785053163767, -1.9073304429184645e-05, -2.283444404602051, -0.00047183825518004596]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "2", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole1": "2", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(2()))])\n", "score": -6.071324280599285, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -0.004099006298929453, -5.125993993715383e-06, -3.5817604064941406, -0.012322425842285156, -0.001593165099620819, -0.0008616785053163767, -1.9073304429184645e-05, -2.360158920288086, -2.109982233378105e-05]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "find_spell_target", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole1": "find_spell_target", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            find_spell_target()))])\n", "score": -6.784009508215306, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -0.004099006298929453, -5.125993993715383e-06, -3.5817604064941406, -0.012322425842285156, -0.001593165099620819, -0.0008616785053163767, -1.9073304429184645e-05, -2.356295585632324, -0.7165696620941162]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "Leokk", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "Leokk", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        Leokk().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -7.256842939915813, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -7.018301963806152, -0.00832676887512207, -0.00021469582861755043, -1.9073486328125e-06, -0.054818153381347656, -7.43865966796875e-05, -0.000148773193359375, -1.1920928244535389e-07, -3.8146954466355965e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.4372816268587485e-06, -2.622604142743512e-06, -2.47955322265625e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00036013114731758833, -2.0265579223632812e-06, -0.0017329449765384197, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003052949905395508, 0.0, -0.0001845356891863048, 0.0, -0.000385284423828125, -1.33514404296875e-05, -5.53131103515625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.000286102294921875, -0.0001392364501953125, -0.000141143798828125, -3.933906555175781e-06, -8.09428674983792e-05, 0.0, -0.00047792569966986775, 0.0, -0.000125885009765625, -0.0002079010009765625, -0.0003185272216796875, -0.0005241632461547852, -7.497983460780233e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008096693200059235, -1.9073486328125e-06, -9.72747802734375e-05, -0.003936767578125, -0.00015318366058636457, -0.00015044186147861183, -0.0002536773681640625, -0.0010242462158203125, -0.00443267822265625, -0.004101499915122986, -5.125993993715383e-06, -0.1476306915283203, -0.000202178955078125, -0.00039622560143470764, -0.00047302243183366954, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 45, 136, "Null", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"_type": "NameConstant", "value": "Null"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), Null)])\n", "score": -7.301287099211251, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -0.004099006298929453, -5.125993993715383e-06, -7.005755424499512, -0.15597057342529297, -0.02354145050048828, -0.0014321395428851247]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -7.33235332216519, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -7.072040557861328, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.00043237206409685314, 0.0, -0.0002918243408203125, -1.71661376953125e-05, -5.53131103515625e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00034332275390625, -0.0001354217529296875, -0.0001354217529296875, -3.933906555175781e-06, -0.0001053806918207556, 0.0, -0.0006281724199652672, 0.0, -0.0001239776611328125, -0.000225067138671875, -0.000331878662109375, -0.0005240440368652344, -7.414542778860778e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008062122506089509, -1.9073486328125e-06, -9.72747802734375e-05, -0.0040569305419921875, -0.00015306445129681379, -0.0001500842481618747, -0.0002593994140625, -0.0010318756103515625, -0.0044536590576171875, -0.004052586387842894, -5.006785613659304e-06, -0.14612770080566406, -0.000202178955078125, -0.0004054419696331024, -0.00048243996570818126, -3.576278118089249e-07]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "BEAST", "_type": "Template35"}]}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, taunt=True)\n", "score": -7.62910267859813, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -7.524109840393066, 0.0, -0.0047817230224609375, -7.62939453125e-06, -0.000545501708984375, -4.291534423828125e-06]}, {"choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Leokk", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "Leokk", "hole2": [{"hole1": 3, "hole0": "Leokk", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -7.658549599934673, "score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -7.269814491271973, -0.008649826049804688, -1.9073486328125e-06, -2.229192978120409e-05, -0.00195920467376709, 0.0, -0.03491175174713135, 0.0, -0.0005091616185382009, 0.0, -0.0007791519165039062, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.0008031129837036133, -7.62939453125e-06, -5.042552947998047e-05, 0.0, -3.147124880342744e-05, 0.0, -5.7220458984375e-06, -0.0002079010009765625, -9.1552734375e-05, -0.0001938343048095703, -3.814689989667386e-06, -4.291531240596669e-06, -3.576278118089249e-07, -0.0002468824095558375, -1.9073486328125e-06, -5.14984130859375e-05, -0.007338523864746094, -0.00013422952906694263, -0.00016689284530002624, -0.0001277923583984375, -0.0016603469848632812, -0.003513336181640625, -0.004553632810711861, -4.887576324108522e-06, -0.3214836120605469, -0.000213623046875, -0.0003133602440357208, -0.00025498864124529064, -2.3841855067985307e-07]}]}
{"index": 62, "beams": [{"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -0.038438895531257344, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -0.021838068962097168, 0.0, -0.0008730886620469391, 0.0, -0.0016655921936035156, -1.52587890625e-05, -0.00016295886598527431, -7.62939453125e-06, -1.9073486328125e-06, -0.0007476806640625, -0.0021772384643554688, -0.00044610031181946397, -3.814697265625e-06, -0.00011408329010009766, -9.536738616588991e-07, -4.291534423828125e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "FREE", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "FREE", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.FREE,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -4.587308697769103, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -4.568929672241211, -5.7220458984375e-06, -0.000728000421077013, 0.0, -0.0014878511428833008, -1.33514404296875e-05, -0.0002082580904243514, -3.814697265625e-06, -1.9073486328125e-06, -0.000957489013671875, -0.004296302795410156, -0.00017855949408840388, -5.7220458984375e-06, -0.00010657310485839844, -8.344646857949556e-07, -4.410743258631555e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "WARRIOR", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -5.925323989143166, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -5.908032417297363, 0.0, -0.0013812779216095805, 0.0, -0.0019021034240722656, -9.5367431640625e-06, -0.00031638098880648613, -5.7220458984375e-06, -1.9073486328125e-06, -0.000812530517578125, -0.0020542144775390625, -0.00032526892027817667, -5.7220458984375e-06, -9.107589721679688e-05, -1.311301275563892e-06, -4.291534423828125e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -6.07996039443406, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -6.059252738952637, -3.0517578125e-05, -0.0023921725805848837, 0.0, -0.0011965036392211914, -1.33514404296875e-05, -0.000259279680904001, -5.7220458984375e-06, -1.9073486328125e-06, -0.0013580322265625, -0.004715919494628906, -0.00024768608273006976, -3.814697265625e-06, -9.500980377197266e-05, -5.960462772236497e-07, -5.006788342143409e-06, -2.0265579223632812e-06]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "game", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "game", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.game,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -6.4369307119879835, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -6.408620834350586, 0.0, -0.011324524879455566, 0.0, -0.0011293888092041016, -2.86102294921875e-05, -0.00011479839304229245, -5.7220458984375e-06, -1.9073486328125e-06, -0.00092315673828125, -0.004065513610839844, -0.00021860575361642987, -5.7220458984375e-06, -0.00010657310485839844, -7.152555099310121e-07, -4.410743258631555e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "HUNTER", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -6.580250633577741, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -6.562490463256836, 0.0, -0.0020377631299197674, 0.0, -0.0014749765396118164, -1.52587890625e-05, -0.0001637933892197907, -5.7220458984375e-06, -1.9073486328125e-06, -0.00079345703125, -0.0024137496948242188, -0.00036352191818878055, -3.814697265625e-06, -9.882450103759766e-05, -8.344646857949556e-07, -4.410743258631555e-06, -2.0265579223632812e-06]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Weapon(1, 4)\n", "score": -6.622463885737709, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -0.021838068962097168, 0.0, -0.0008730886620469391, 0.0, -6.556155681610107, 0.0, -7.748602001811378e-06, -3.814697265625e-06, 0.0, -0.02502918243408203, -0.007415771484375, -0.000519378634635359, -3.814697265625e-06, -0.0002288818359375, -2.264974000354414e-06, -3.933906555175781e-06, -2.1457672119140625e-06]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "SHAMAN", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -6.838451687423564, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -6.806920051574707, -9.5367431640625e-06, -0.013549446128308773, 0.0, -0.002037644386291504, -1.33514404296875e-05, -0.00026833941228687763, -5.7220458984375e-06, -1.9073486328125e-06, -0.001079559326171875, -0.003916740417480469, -0.000170573839568533, -7.62939453125e-06, -8.368492126464844e-05, -8.344646857949556e-07, -4.529952093434986e-06, -2.0265579223632812e-06]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "PALADIN", "hole3": "EPIC"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -7.282330465318346, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -0.021838068962097168, 0.0, -7.243497371673584, 0.0, -0.0005685091018676758, -2.09808349609375e-05, -0.000125885009765625, -9.5367431640625e-06, -1.9073486328125e-06, -0.000152587890625, -0.005427360534667969, -0.00012921466259285808, -2.0265579223632812e-06, -0.00015997886657714844, -1.07287787614041e-05, -5.841255187988281e-06, -3.576278118089249e-07]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 4, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -7.480286880657324, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -7.449909687042236, -2.7418097943154862e-06, -0.013362884521484375, 0.0, -0.0018531084060668945, 0.0, -0.0026837587356567383, -9.5367431640625e-06, -0.00012946124479640275, -5.7220458984375e-06, -1.9073486328125e-06, -0.000492095947265625, -0.001712799072265625, -0.00026961477124132216, -7.62939453125e-06, -7.593631744384766e-05, -1.1920922133867862e-06, -4.172325134277344e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "SHAMAN", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "SHAMAN", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Minion(1, 4, SHAMAN=True)\n", "score": -7.904998971385787, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -0.021838068962097168, 0.0, -0.0008730886620469391, 0.0, -0.0016655921936035156, -1.52587890625e-05, -0.00016295886598527431, -7.62939453125e-06, -1.9073486328125e-06, -7.419946670532227, -0.000835418701171875, -7.592984911752865e-05, -1.33514404296875e-05, -1.0490381100680679e-05, 0.0, -0.3744816780090332, -5.7220458984375e-06, -0.0715799331665039, -0.0009021759033203125, -0.0021915435791015625, -1.1444091796875e-05]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Gallywix's", " ", "Justice", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Gallywix's Justice"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -8.30720244992051, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -5.477712631225586, -0.13442039489746094, -0.000762939453125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.18872547149658203, -0.0003795623779296875, -2.09808349609375e-05, -0.7091954350471497, -9.572505950927734e-05, -0.003506301436573267, -0.44790947437286377, -3.814697265625e-05, 0.0, -0.0015319292433559895, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -0.21628570556640625, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -0.00228118896484375, 0.0, -0.009283065795898438, 0.0, -0.016666412353515625, -9.5367431640625e-05, -0.000118255615234375, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.004886627197265625, -3.62396240234375e-05, -0.2672595977783203, 0.0, -0.6092395782470703, -9.5367431640625e-06, -1.6927717297221534e-05, 0.0, -1.71661376953125e-05, -0.1794147491455078, -0.034317970275878906, -3.576272320060525e-06, -3.814697265625e-06, -0.0001983642578125, -1.0847986231965479e-05, -9.5367431640625e-06, -1.4305104514278355e-06]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Gallywix's", " ", "Justice", " ", "Justice", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Gallywix's Justice Justice"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "_type": "Template1", "hole4": "player", "hole3": "create_weapon"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice Justice\", 1, CHARACTER_CLASS.\n            PALADIN, CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -8.909255036281934, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -5.477712631225586, -0.13442039489746094, -0.000762939453125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.18872547149658203, -0.0003795623779296875, -2.09808349609375e-05, -0.7091954350471497, -9.572505950927734e-05, -0.003506301436573267, -1.0209895372390747, -0.00029238194110803306, -1.52587890625e-05, -3.814697265625e-05, 0.0, -0.04010584577918053, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.2569284439086914, 0.0, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.00315093994140625, 0.0, -0.0072345733642578125, 0.0, -0.010097503662109375, -8.96453857421875e-05, -8.0108642578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0038585662841796875, -4.38690185546875e-05, -0.2500905990600586, 0.0, -0.5913686752319336, -9.5367431640625e-06, -1.6927717297221534e-05, 0.0, -1.71661376953125e-05, -0.17257404327392578, -0.03442859649658203, -3.576272320060525e-06, -3.814697265625e-06, -0.0002002716064453125, -1.0490362910786644e-05, -9.5367431640625e-06, -1.4305104514278355e-06]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Gallywix's", " ", "Justice", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Gallywix's Justice"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "divine_shield", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 4, divine_shield=True)\n", "score": -9.858582190601282, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -5.477712631225586, -0.13442039489746094, -0.000762939453125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.18872547149658203, -0.0003795623779296875, -2.09808349609375e-05, -0.7091954350471497, -9.572505950927734e-05, -0.003506301436573267, -0.44790947437286377, -3.814697265625e-05, 0.0, -0.0015319292433559895, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -0.21628570556640625, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -0.00228118896484375, 0.0, -0.009283065795898438, 0.0, -0.016666412353515625, -9.5367431640625e-05, -0.000118255615234375, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.004886627197265625, -3.62396240234375e-05, -0.2672595977783203, 0.0, -0.8930912017822266, 0.0, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.3401374816894531, -0.017467498779296875, -0.00020962991402484477, -5.7220458984375e-06, -3.2544132409384474e-05, -1.9073486328125e-06, -1.1202105283737183, 0.0, -0.001140594482421875, -9.1552734375e-05, -0.002208709716796875, -7.62939453125e-06]}, {"choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Gallywix's", " ", "Justice", " ", "Justice", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "WeaponCard", "hole0": "<UNK>Justice", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Gallywix's Justice Justice"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "divine_shield", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice Justice\", 1, CHARACTER_CLASS.\n            PALADIN, CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 4, divine_shield=True)\n", "score": -10.512599414141278, "score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -5.477712631225586, -0.13442039489746094, -0.000762939453125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.18872547149658203, -0.0003795623779296875, -2.09808349609375e-05, -0.7091954350471497, -9.572505950927734e-05, -0.003506301436573267, -1.0209895372390747, -0.00029238194110803306, -1.52587890625e-05, -3.814697265625e-05, 0.0, -0.04010584577918053, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.2569284439086914, 0.0, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.00315093994140625, 0.0, -0.0072345733642578125, 0.0, -0.010097503662109375, -8.96453857421875e-05, -8.0108642578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0038585662841796875, -4.38690185546875e-05, -0.2500905990600586, 0.0, -0.9113750457763672, 0.0, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.3513050079345703, -0.017957687377929688, -0.00021475247922353446, -5.7220458984375e-06, -3.2544132409384474e-05, -1.9073486328125e-06, -1.1176223754882812, 0.0, -0.0011453628540039062, -9.72747802734375e-05, -0.00220489501953125, -7.62939453125e-06]}]}
{"index": 63, "beams": [{"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -0.006821644791834558, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -0.00041958404472097754, -8.821487426757812e-05, -0.00012636184692382812, -1.1444089977885596e-05, -0.00016999212675727904, -6.330013275146484e-05, -1.9073486328125e-06, -6.296788342297077e-06, -1.1920922133867862e-06, -7.700920104980469e-05, 0.0, -0.0003604888916015625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -0.00011765950330300257, -3.576278118089249e-07, -0.0008400678052566946, -1.9073486328125e-06, -0.0007801055908203125, -7.62939453125e-06, -0.00012135504221078008, -1.3589859008789062e-05]}, {"choice_history": [70, 147, "<UNK>", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "<UNK>OfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class <UNK>OfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -8.279679545520302, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -8.265791893005371, -0.007927078753709793, -0.0018956555286422372, -1.0848005331354216e-05, -4.410734163684538e-06, -8.4638240878121e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -0.000335693359375, -2.6702880859375e-05, -7.748596544843167e-06, -0.000441989948740229, -6.890296936035156e-05, -0.00012063980102539062, -9.179114385915454e-06, -0.00016486611275468022, -6.318092346191406e-05, -1.9073486328125e-06, -6.35744072496891e-06, -1.1920922133867862e-06, -5.042552947998047e-05, 0.0, -0.0004062652587890625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -0.0001010894775390625, -2.47955322265625e-05, -1.1920928244535389e-07, -7.390948667307384e-06, -0.00011467928561614826, -3.576278118089249e-07, -0.0008566378965042531, -1.9073486328125e-06, -0.0007829666137695312, -7.62939453125e-06, -0.00012099741434212774, -1.1682510375976562e-05]}, {"choice_history": [70, 147, "Lord", "Of", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -8.28502828140335, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -8.266009330749512, -0.005627806764096022, -2.8014183044433594e-05, -7.033334895822918e-06, -1.549708758830093e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.000370025634765625, -3.24249267578125e-05, -1.1682492186082527e-05, -0.00043793031363748014, -7.843971252441406e-05, -0.00013017654418945312, -1.1205671398784034e-05, -0.00014758086763322353, -0.007984519004821777, -0.000522613525390625, -6.644753739237785e-06, -1.5497195136049413e-06, -6.16312026977539e-05, 0.0, -0.0002803802490234375, 0.0, -1.001357759378152e-05, 0.0, -5.7220458984375e-06, -0.0001049041748046875, -2.288818359375e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -0.00011849398288177326, -4.768370445162873e-07, -0.0008013247861526906, -1.9073486328125e-06, -0.0007877349853515625, -7.62939453125e-06, -0.0001174211356556043, -1.1682510375976562e-05]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "hole2": "ALL", "_type": "Template11", "hole4": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -8.357190507693758, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -7.249844551086426, -0.0002155303955078125, -1.45434760270291e-05, -0.0003546465013641864, -0.00024080273578874767, -0.00010323524475097656, -4.4464239181252196e-05, -0.00011217593419132754, -0.0008149147033691406, 0.0, -8.179806172847748e-06, 0.0, -0.07684707641601562, 0.0, -0.2990676164627075, -7.62939453125e-06, -0.007508277893066406, -0.0005359649658203125, -5.91278076171875e-05, 0.0, -0.000217437744140625, -0.000278472900390625, -0.7147731781005859, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -0.000423431396484375, -0.000141143798828125, -5.7220458984375e-06, -1.0609570381348021e-05, -0.00018560883472673595, -9.536738616588991e-07, -0.001806973246857524, 0.0, -0.0006427764892578125, -9.5367431640625e-06, -0.00013160704111214727, -2.5272369384765625e-05]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "hole2": "ALL", "_type": "Template11", "hole4": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -8.494444030548834, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -7.249844551086426, -0.0002155303955078125, -1.45434760270291e-05, -0.0003546465013641864, -0.00024080273578874767, -0.00010323524475097656, -4.4464239181252196e-05, -0.00011217593419132754, -0.0008149147033691406, 0.0, -8.179806172847748e-06, 0.0, -0.07684707641601562, 0.0, -0.2990676164627075, -7.62939453125e-06, -0.007508277893066406, -0.0005359649658203125, -5.91278076171875e-05, 0.0, -0.000217437744140625, -0.000278472900390625, -0.8496284484863281, -3.814697265625e-06, -0.0001850128173828125, 0.0, -0.0003337860107421875, 0.0, -5.7220458984375e-06, -0.001392364501953125, -3.0517578125e-05, -4.0531158447265625e-06, -4.291525328881107e-06, -0.00017738313181325793, -4.768370445162873e-07, -0.0028113117441534996, -1.9073486328125e-06, -0.000797271728515625, -1.1444091796875e-05, -9.429449710296467e-05, -3.314018249511719e-05]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "spell_targetable", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "spell_targetable", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, spell_targetable=True)\n", "score": -8.820670259557282, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -0.00041958404472097754, -8.821487426757812e-05, -0.00012636184692382812, -1.1444089977885596e-05, -0.00016999212675727904, -6.330013275146484e-05, -1.9073486328125e-06, -6.296788342297077e-06, -1.1920922133867862e-06, -7.700920104980469e-05, 0.0, -0.0003604888916015625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -0.00011765950330300257, -3.576278118089249e-07, -8.811624526977539, 0.0, -0.0018215179443359375, -7.62939453125e-06, -0.002146124839782715, -1.3470649719238281e-05]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "players", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "players", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, players=True)\n", "score": -8.862150085530793, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -0.00041958404472097754, -8.821487426757812e-05, -0.00012636184692382812, -1.1444089977885596e-05, -0.00016999212675727904, -6.330013275146484e-05, -1.9073486328125e-06, -6.296788342297077e-06, -1.1920922133867862e-06, -7.700920104980469e-05, 0.0, -0.0003604888916015625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -0.00011765950330300257, -3.576278118089249e-07, -8.849658966064453, -4.1961669921875e-05, -0.007191658020019531, -1.52587890625e-05, -0.00016617774963378906, -1.9073486328125e-05]}, {"choice_history": [70, 147, "Lord", "Of", "Tank", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTank", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -8.89142630047467, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -8.509350776672363, -0.37517669796943665, -0.0004596845537889749, -2.6702880859375e-05, 0.0, 0.0, -0.001331329345703125, -6.103515625e-05, -1.657003303989768e-05, -0.0003719216329045594, -0.00012445449829101562, -9.179115295410156e-05, -7.605552673339844e-05, -0.000538110441993922, -5.7816505432128906e-05, 0.0, -6.417802069336176e-06, -5.960462772236497e-07, -8.64267349243164e-05, 0.0, -0.0003604888916015625, 0.0, -9.536741345073096e-06, 0.0, -5.7220458984375e-06, -8.20159912109375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -6.6756979322235566e-06, -0.000119686039397493, -3.576278118089249e-07, -0.0008592605008743703, -1.9073486328125e-06, -0.0007724761962890625, -7.62939453125e-06, -0.00013256071542855352, -1.3589859008789062e-05]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "LordLord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('LordLord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -8.964486804637254, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -8.953702926635742, -0.0026522879488766193, -0.0010349750518798828, -0.00010895729064941406, -0.00026023387908935547, -0.0006420598365366459, -0.00010919570922851562, 0.0, -6.458081770688295e-06, -1.1920922133867862e-06, -9.21487808227539e-05, 0.0, -0.0003528594970703125, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.34600830078125e-05, -2.6702880859375e-05, -1.1920928244535389e-07, -8.4638240878121e-06, -0.00011610978253884241, -3.576278118089249e-07, -0.0008534191874787211, 0.0, -0.00079345703125, -9.5367431640625e-06, -0.0001186132212751545, -1.3589859008789062e-05]}, {"choice_history": [70, 147, "Lord", "Of", "Until", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfUntil", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfUntil(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -9.00773482100822, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -8.998250007629395, -0.0022470878902822733, -0.0004661188868340105, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.0013256072998046875, -3.4332275390625e-05, -1.728527968225535e-05, -0.0003900378942489624, -0.00017404556274414062, -0.00010335445404052734, -0.00014829635620117188, -0.0006405104068107903, -9.191036224365234e-05, 0.0, -7.366470526903868e-06, -1.0728830375228426e-06, -0.00010180473327636719, 0.0, -0.00040435791015625, 0.0, -1.001357759378152e-05, 0.0, -5.7220458984375e-06, -8.58306884765625e-05, -2.6702880859375e-05, -1.1920928244535389e-07, -7.271740287251305e-06, -0.00011718265159288421, -3.576278118089249e-07, -0.0008707045926712453, -1.9073486328125e-06, -0.0007915496826171875, -7.62939453125e-06, -0.00012087819777661934, -1.5497207641601562e-05]}, {"choice_history": [70, 147, "Lord", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -9.116400107088957, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -9.107769966125488, -0.0026334889698773623, -1.3709050108445808e-05, -4.351044481154531e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0013599395751953125, -4.38690185546875e-05, -1.4543494216923136e-05, -0.0003893174580298364, -0.00015354156494140625, -0.00010335445404052734, -9.703636169433594e-05, -0.00058400584384799, -0.0001074075698852539, 0.0, -5.248701199889183e-06, -7.152555099310121e-07, -8.463859558105469e-05, 0.0, -0.0003757476806640625, 0.0, -1.01327859738376e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.6702880859375e-05, -1.1920928244535389e-07, -7.867782187531702e-06, -0.00011610978253884241, -3.576278118089249e-07, -0.0008603333262726665, -1.9073486328125e-06, -0.000782012939453125, -7.62939453125e-06, -0.0001326799247181043, -1.3589859008789062e-05]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "enrage", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "enrage", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, enrage=True)\n", "score": -9.136106741986787, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -0.00041958404472097754, -8.821487426757812e-05, -0.00012636184692382812, -1.1444089977885596e-05, -0.00016999212675727904, -6.330013275146484e-05, -1.9073486328125e-06, -6.296788342297077e-06, -1.1920922133867862e-06, -7.700920104980469e-05, 0.0, -0.0003604888916015625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -0.00011765950330300257, -3.576278118089249e-07, -9.064213752746582, 0.0, -0.06612777709960938, -5.7220458984375e-06, -0.0006909370422363281, -1.1563301086425781e-05]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 6, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n", "score": -9.14119471366677, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -0.00041958404472097754, -8.821487426757812e-05, -0.00012636184692382812, -1.1444089977885596e-05, -0.00016999212675727904, -6.330013275146484e-05, -1.9073486328125e-06, -6.296788342297077e-06, -1.1920922133867862e-06, -7.700920104980469e-05, 0.0, -0.0003604888916015625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -9.135046005249023, -4.768370445162873e-07, -0.0005178451538085938, -1.9073486328125e-06, -0.0005245208740234375, -9.5367431640625e-06, -0.00014555446978192776, -9.894371032714844e-06]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "False", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -9.196344984077932, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -0.00041958404472097754, -8.821487426757812e-05, -0.00012636184692382812, -1.1444089977885596e-05, -0.00016999212675727904, -6.330013275146484e-05, -1.9073486328125e-06, -6.296788342297077e-06, -1.1920922133867862e-06, -7.700920104980469e-05, 0.0, -0.0003604888916015625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -0.00011765950330300257, -3.576278118089249e-07, -0.0008400678052566946, -1.9073486328125e-06, -0.0007801055908203125, -7.62939453125e-06, -9.189637184143066, -2.110004425048828e-05]}, {"choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 16, 110, 21, 134, "Deathrattle", "<EOS>", 238, 59, 193, "Damage", "<EOS>", "6", "<EOS>", 63, 205, "Hero", "Selector", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "LordOfTheArena", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}], "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt", "hole3": {"_type": "Call", "args": [{"hole1": 6, "hole0": "Damage", "_type": "Template34"}, {"hole0": "HeroSelector", "_type": "Template39"}], "func": {"id": "Deathrattle", "_type": "Name"}}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=Deathrattle(Damage(6), HeroSelector()))\n", "score": -10.51229232253825, "score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -0.00041958404472097754, -8.821487426757812e-05, -0.00012636184692382812, -1.1444089977885596e-05, -0.00016999212675727904, -6.330013275146484e-05, -1.9073486328125e-06, -6.296788342297077e-06, -1.1920922133867862e-06, -7.700920104980469e-05, 0.0, -0.0003604888916015625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -0.00011765950330300257, -3.576278118089249e-07, -0.0008400678052566946, -1.9073486328125e-06, -8.704257011413574, -4.1961669921875e-05, -0.0011959075927734375, -5.7220458984375e-06, -0.00420188857242465, -1.1444091796875e-05, -0.02765655517578125, -0.055932044982910156, -3.814697265625e-05, -0.21335911750793457, -4.279612403479405e-05, -0.2320909947156906, -1.3470647900248878e-05, -0.33774757385253906, -1.9073486328125e-06, -0.929604172706604, -4.76837158203125e-05, -0.00014495849609375]}]}
{"index": 64, "beams": [{"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "MECH", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -0.027259856991165066, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -0.0017473697662353516, -1.1920928244535389e-07, -8.129773050313815e-05, -1.9073486328125e-06, -9.76323353825137e-05, 0.0, -3.0517578125e-05, -0.0002899169921875, -3.814697265625e-05, -0.00013375282287597656, 0.0, -6.198883056640625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": 1, "hole0": "Mechanical Dragonling", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -4.198448656103906, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -4.192386627197266, -1.9073486328125e-05, -2.3841855067985307e-07, -5.5789947509765625e-05, -3.576278118089249e-07, -2.3841855067985307e-07, -1.7762169591151178e-05, -1.1920928244535389e-07, -0.00033020973205566406, 0.0, -0.00013673133798874915, -3.576278118089249e-07, -0.0001239776611328125, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.002864837646484375, 0.0, -3.2544132409384474e-05, 0.0, -0.00044476985931396484, 0.0, -0.0002841949462890625, -0.0007686614990234375, -1.71661376953125e-05, -5.793571472167969e-05, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "hole3": [{"hole0": "MECH", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.MECH, minion_type=\n            MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -6.522350036487374, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -6.470453262329102, -0.000396728515625, -2.86102294921875e-05, -8.344646857949556e-07, -0.00028680491959676147, -5.245195097813848e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.002556467894464731, 0.0, -0.00025177001953125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, 0.0, -8.225307101383805e-05, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0001125335693359375, 0.0, -0.001579880714416504, 0.0, -0.0001983642578125, -8.58306884765625e-05, -9.775161743164062e-06, -8.344646857949556e-07, -0.000148773193359375, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.002154111862182617, -2.47955322265625e-05, -0.0015641450881958008, 0.0, -0.000194549560546875, -0.021968841552734375, -8.7738037109375e-05, -0.0011965036392211914, -4.768370445162873e-07, -0.0009152516722679138, -1.9073486328125e-06, -0.0004326008493080735, 0.0, -2.47955322265625e-05, -0.0004100799560546875, -3.0517578125e-05, -0.000118255615234375, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "RARE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "MECH", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -7.438918855919205, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -7.411366939544678, 0.0, -0.000865936279296875, -2.09808349609375e-05, -0.0001010894775390625, -2.3841855067985307e-07, -7.62939453125e-06, -0.0005702972412109375, -0.0001678466796875, -0.0020371675491333008, 0.0, -0.00012242113007232547, -1.9073486328125e-06, -8.475775393890217e-05, 0.0, -2.6702880859375e-05, -0.0002956390380859375, -3.62396240234375e-05, -0.00013768672943115234, 0.0, -6.318092346191406e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "PIRATE", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -7.570862807796679, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -7.545039176940918, 0.0, -0.000481848866911605, 0.0, -0.00013792453682981431, 0.0, -3.24249267578125e-05, -0.0001964569091796875, -2.09808349609375e-05, -0.00011479854583740234, 0.0, -6.198883056640625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "hole3": [{"hole0": "MECH", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.102585430889526, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -8.039475440979004, -2.86102294921875e-05, -4.00543212890625e-05, -1.1920928244535389e-07, -0.0021233793813735247, -6.437291176553117e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00012099229206796736, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.169608706026338e-05, 0.0, -0.00024543004110455513, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.004801034927368164, 0.0, -0.0058746337890625, -0.029815673828125, -0.0002231597900390625, -0.001587510108947754, 0.0, -3.3974298276007175e-05, -1.9073486328125e-06, -6.890296936035156e-05, 0.0, -1.71661376953125e-05, -0.0009059906005859375, -3.4332275390625e-05, -0.00010132789611816406, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "Minion", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "Minion", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "MECH", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.Minion,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.33918617316278, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -8.296476364135742, -0.01671123504638672, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, 0.0, -0.0005573033704422414, 0.0, -0.0002117156982421875, -9.5367431640625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0004138946533203125, -0.000125885009765625, -0.001276254653930664, -1.1920928244535389e-07, -3.671591912279837e-05, -1.9073486328125e-06, -5.626677375403233e-05, 0.0, -2.47955322265625e-05, -0.0003185272216796875, -3.814697265625e-05, -0.00013577938079833984, 0.0, -6.318092346191406e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "MURLOC", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.34907713770854, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -8.323410034179688, -2.0265579223632812e-06, -9.417434921488166e-05, 0.0, -0.0003613231237977743, 0.0, -2.86102294921875e-05, -0.0002079010009765625, -2.47955322265625e-05, -0.00010907649993896484, 0.0, -6.198883056640625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.614669414465133, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -7.750758171081543, -4.1961669921875e-05, -7.62939453125e-06, -1.5973972040228546e-05, 0.0, -0.00032198429107666016, -1.9073486328125e-06, -0.0015392303466796875, -0.0004749298095703125, -0.0001010894775390625, 0.0, -0.0006972204428166151, -3.313963316031732e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.011210569180548191, 0.0, -2.86102294921875e-05, -7.43865966796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.110004425048828e-05, 0.0, -0.00016200539539568126, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002593994140625, 0.0, -0.0015230178833007812, 0.0, -0.000377655029296875, -0.000171661376953125, -1.3470649719238281e-05, -7.152555099310121e-07, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00023090839385986328, -3.814697265625e-05, -0.0011920928955078125, 0.0, -4.0411348891211674e-05, 0.0, -0.8280997276306152, 0.0, -0.000560760498046875, -0.000301361083984375, -3.814697265625e-05, -4.017353057861328e-05, -1.1920928244535389e-07, -7.748603820800781e-06, -2.3841855067985307e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "DEMON", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.656775969528375, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -8.63129997253418, -1.311301275563892e-06, -0.00017272094555664808, 0.0, -0.000123379664728418, 0.0, -4.38690185546875e-05, -0.0001621246337890625, -2.09808349609375e-05, -0.00011265277862548828, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "battlecry", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "battlecry", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.battlecry)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.675644898100742, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -8.650008201599121, -1.1920928244535389e-07, -0.0001666481839492917, 0.0, -0.0002055133372778073, 0.0, -3.62396240234375e-05, -0.0002460479736328125, -3.24249267578125e-05, -0.00011074542999267578, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "MECH", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.94919136219442, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -0.0017473697662353516, -1.1920928244535389e-07, -8.129773050313815e-05, -1.9073486328125e-06, -9.76323353825137e-05, 0.0, -3.0517578125e-05, -0.0002899169921875, -3.814697265625e-05, -8.922067642211914, 0.0, -3.933906555175781e-06, 0.0]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 39, 110, 21, 134, "Mana", "Change", "<EOS>", 237, 64, 222, 99, 23, 139, "2", "<EOS>", 39, 109, 21, 134, "Card", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 16, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "MECH", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"_type": "Call", "args": [{"operand": {"_type": "Num", "n": 2}, "_type": "UnaryOp", "op": {"_type": "USub"}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"value": {"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword", "arg": "condition"}]}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, auras=[Aura(ManaChange(-2), CardSelector(\n            condition=IsType(MINION_TYPE.MECH)))])\n", "score": -9.214653930133004, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -0.0017473697662353516, -1.1920928244535389e-07, -8.129773050313815e-05, -1.9073486328125e-06, -9.76323353825137e-05, 0.0, -3.0517578125e-05, -8.22386646270752, -0.007208824157714844, -8.344650268554688e-06, -4.768370445162873e-07, -5.841255187988281e-06, -4.768370445162873e-07, -0.09504621475934982, 0.0, -0.000171661376953125, -0.05401134490966797, -0.010636210441589355, -1.9073486328125e-06, -0.0015506744384765625, -0.0008945465087890625, -0.0006999969482421875, -0.0008106231689453125, -1.71661376953125e-05, -0.03889035806059837, -0.0002810955047607422, -1.9073486328125e-06, -0.0008029937744140625, -0.0002841949462890625, -8.96453857421875e-05, -3.814697265625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.691596269607544, -1.3470558769768104e-05, -0.000682830810546875, -0.019461631774902344, -0.0001735687255859375, -1.9073486328125e-06, -0.00697791762650013, -4.017353057861328e-05, -3.814697265625e-06, -0.0002269744873046875, -3.24249267578125e-05, -9.34600830078125e-05, -0.019197463989257812, 0.0, -0.002197265625, -9.5367431640625e-06, -0.0014514923095703125, -9.5367431640625e-06, -0.009350299835205078, -0.00010728836059570312, 0.0, -0.0003032684326171875, -1.33514404296875e-05, -1.33514404296875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.00025963783264160156, -1.9073486328125e-06, -0.000247955322265625, 0.0]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 39, 110, 21, 134, "Mana", "Change", "<EOS>", 237, 64, 222, 99, 23, 139, "1", "<EOS>", 39, 109, 21, 134, "Card", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 16, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "COMMON", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}], "hole3": [{"hole0": "MECH", "_type": "Template35"}]}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "auras", "hole3": {"hole1": [{"_type": "Call", "args": [{"operand": {"_type": "Num", "n": 1}, "_type": "UnaryOp", "op": {"_type": "USub"}}], "func": {"id": "ManaChange", "_type": "Name"}}, {"_type": "Call", "func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"value": {"_type": "Call", "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "func": {"id": "IsType", "_type": "Name"}}, "_type": "keyword", "arg": "condition"}]}], "hole0": "Aura", "_type": "Template38"}}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, auras=[Aura(ManaChange(-1), CardSelector(\n            condition=IsType(MINION_TYPE.MECH)))])\n", "score": -9.355040583478562, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -0.0017473697662353516, -1.1920928244535389e-07, -8.129773050313815e-05, -1.9073486328125e-06, -9.76323353825137e-05, 0.0, -3.0517578125e-05, -8.22386646270752, -0.007208824157714844, -8.344650268554688e-06, -4.768370445162873e-07, -5.841255187988281e-06, -4.768370445162873e-07, -0.09504621475934982, 0.0, -0.000171661376953125, -0.05401134490966797, -0.010636210441589355, -1.9073486328125e-06, -0.0015506744384765625, -0.0008945465087890625, -0.0006999969482421875, -0.0008106231689453125, -1.71661376953125e-05, -0.03889035806059837, -0.0002810955047607422, -1.9073486328125e-06, -0.0008029937744140625, -0.0002841949462890625, -8.96453857421875e-05, -3.814697265625e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.7430472373962402, -2.6225699912174605e-05, -0.000640869140625, -0.10077667236328125, -5.340576171875e-05, -1.9073486328125e-06, -0.008130624890327454, -5.745887756347656e-05, -3.814697265625e-06, -0.00041961669921875, -3.4332275390625e-05, -9.918212890625e-05, -0.030330419540405273, 0.0, -0.0018911361694335938, -7.62939453125e-06, -0.0012760162353515625, -9.5367431640625e-06, -0.005187868606299162, -0.00014591217041015625, 0.0, -0.0001773834228515625, -1.33514404296875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00026345252990722656, -1.9073486328125e-06, -0.00025177001953125, 0.0]}, {"choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole1": "MinionCard", "hole0": "MechanicalDragonling", "hole2": [{"hole1": 1, "hole0": "Mechanical Dragonling", "hole2": "COMMON", "_type": "Template10", "hole4": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "hole3": "minion_type"}], "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "_type": "Template1", "hole4": "player", "hole3": "create_minion"}, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.433850405703843, "score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -4.192386627197266, -1.9073486328125e-05, -2.3841855067985307e-07, -5.5789947509765625e-05, -3.576278118089249e-07, -2.3841855067985307e-07, -1.7762169591151178e-05, -1.1920928244535389e-07, -0.00033020973205566406, 0.0, -0.00013673133798874915, -3.576278118089249e-07, -0.0001239776611328125, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -6.238991737365723, 0.0, -9.298310033045709e-06, 0.0, -0.00017786026000976562, 0.0, -0.0003337860107421875, -0.0002803802490234375, -5.14984130859375e-05, -2.8967857360839844e-05, 0.0, -4.0531158447265625e-06, -3.576278118089249e-07]}]}
{"index": 65, "beams": [{"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -0.02814011070316269, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -0.000980377197265625, -3.0517578125e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001055002212524414, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014781951904296875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0043048858642578125, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004329681396484375, 0.0, -0.0012292861938476562, 0.0, -0.00444755470380187, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -0.00020599365234375, -5.340576171875e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002053976058959961, 0.0, -0.0001099100336432457, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "FREE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.FREE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -5.53098301292269, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -5.50379753112793, 0.0, -0.011257410049438477, 0.0, -0.0004444122314453125, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -5.53131103515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.622600959512056e-06, -0.000988006591796875, -3.24249267578125e-05, -1.1444091796875e-05, -0.000164031982421875, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001035928726196289, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.001453399658203125, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0042858123779296875, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.000415802001953125, 0.0, -0.0012121200561523438, 0.0, -0.004459713120013475, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -0.00020599365234375, -5.14984130859375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002034902572631836, 0.0, -0.00010955242032650858, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PALADIN", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -5.7388943860235315, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -5.722380638122559, 0.0, -0.00038909912109375, 0.0, -0.0005474090576171875, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -8.20159912109375e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.768367489305092e-06, -0.000934600830078125, -3.24249267578125e-05, -1.33514404296875e-05, -0.0001697540283203125, -1.52587890625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.00010335445404052734, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014667510986328125, -4.38690185546875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.004322052001953125, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004482269287109375, 0.0, -0.0012426376342773438, 0.0, -0.00443837558850646, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -0.0002040863037109375, -5.340576171875e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002053976058959961, 0.0, -0.00011002924293279648, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "target", "_type": "Attribute", "value": {"id": "self", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n", "score": -5.7414413172352, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -0.000980377197265625, -3.0517578125e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001055002212524414, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014781951904296875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -5.5379638671875, -1.1444091796875e-05, -0.18450355529785156, 0.0, -3.814697265625e-05, 0.0, -0.0006694793701171875, 0.0, -3.814697265625e-06, -0.00026702880859375, -0.000125885009765625, -0.000621795654296875, 0.0, -9.5367431640625e-06, 0.0, -0.0002067089080810547, 0.0, -0.00010847958037629724, -4.768370445162873e-07, -0.000102996826171875, -1.1444091796875e-05, -1.33514404296875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "MAGE", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -6.755942267639313, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -6.739554405212402, -1.3470649719238281e-05, -0.0004712343215942383, 0.0, -0.0004024505615234375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.29153169534402e-06, -0.0008640289306640625, -3.24249267578125e-05, -1.33514404296875e-05, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.00010728836059570312, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.001461029052734375, -4.76837158203125e-05, -7.43865966796875e-05, -9.5367431640625e-06, -0.0043239593505859375, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004177093505859375, 0.0, -0.0012178421020507812, 0.0, -0.004455779679119587, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -0.00020599365234375, -5.340576171875e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002053976058959961, 0.0, -0.0001099100336432457, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -7.227122612613556, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -7.120058059692383, -3.814697265625e-05, -1.9073486328125e-06, -0.0001621246337890625, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.608268737792969e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -5.364416665543104e-06, 0.0, -0.000202178955078125, -4.57763671875e-05, -0.0001430511474609375, -1.9073486328125e-06, -0.01434326171875, -6.866455078125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -0.0008642673492431641, 0.0, -0.005025994963943958, 0.0, -7.62939453125e-05, 0.0, -5.7220458984375e-06, -5.340576171875e-05, -0.000156402587890625, -6.866455078125e-05, 0.0, -1.9073486328125e-05, 0.0, -0.0002168416976928711, 0.0, -0.00010776401904877275, -1.1920922133867862e-06, -5.91278076171875e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000850677490234375, -9.72747802734375e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.0065708160400390625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.009828567504882812, 0.0, -0.0007376670837402344, -1.9073486328125e-06, -0.013402811251580715, 0.0, -0.03879737854003906, 0.0, -1.33514404296875e-05, -0.0001010894775390625, -0.0001373291015625, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, 0.0, -0.00032913684844970703, 0.0, -0.00013625278370454907, -3.576278118089249e-07, -6.103515625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "taunt", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "taunt", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.taunt.damage(player.effective_spell_damage(5), self)\n", "score": -7.37332136107355, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -0.000980377197265625, -3.0517578125e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001055002212524414, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014781951904296875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0043048858642578125, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004329681396484375, 0.0, -0.0012292861938476562, 0.0, -7.340212345123291, 0.0, -0.009494900703430176, 0.0, -1.9073486328125e-06, -0.0001220703125, -7.62939453125e-06, -3.0517578125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00037479400634765625, 0.0, -0.00010669034236343578, -7.152555099310121e-07, -6.866455078125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "agent", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "agent", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.agent.damage(player.effective_spell_damage(5), self)\n", "score": -7.451494760968814, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -0.000980377197265625, -3.0517578125e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001055002212524414, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014781951904296875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0043048858642578125, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004329681396484375, 0.0, -0.0012292861938476562, 0.0, -7.426578044891357, 0.0, -0.0012149810791015625, 0.0, -1.9073486328125e-06, -6.103515625e-05, -0.0002422332763671875, -1.33514404296875e-05, 0.0, -2.288818359375e-05, 0.0, -0.00029969215393066406, 0.0, -0.00010311498772352934, -1.0728830375228426e-06, -6.4849853515625e-05, -9.5367431640625e-06, -1.33514404296875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.damage(player.effective_spell_damage(5), self)\n", "score": -7.465358801460496, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -0.000980377197265625, -3.0517578125e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001055002212524414, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014781951904296875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -5.5379638671875, -1.1444091796875e-05, -1.872361183166504, 0.0, -0.015044331550598145, 0.0, -0.0189208984375, 0.0, -1.9073486328125e-06, -0.00016021728515625, -0.0001583099365234375, -0.0034122467041015625, 0.0, -1.71661376953125e-05, 0.0, -0.0002917051315307617, 0.0, -0.00010979082435369492, -3.576278118089249e-07, -9.918212890625e-05, -9.5367431640625e-06, -1.33514404296875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "target_func"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.target_func)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -7.465600175577748, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -7.437943458557129, -7.748603820800781e-06, -0.00043487548828125, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -6.103515625e-05, -3.814697265625e-06, -3.814697265625e-06, -3.218649908376392e-06, -0.0013484954833984375, -2.47955322265625e-05, -1.33514404296875e-05, -0.00016021728515625, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00013399124145507812, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.649161837733118e-06, 0.0, -0.001483917236328125, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0044231414794921875, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004444122314453125, 0.0, -0.0012331008911132812, 0.0, -0.004401420708745718, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -0.00020599365234375, -5.340576171875e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002053976058959961, 0.0, -0.00011026764695998281, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "WARRIOR", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -7.724932116728979, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -7.707651138305664, 0.0, -0.0013370513916015625, 0.0, -0.0004520416259765625, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.43865966796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.649158654501662e-06, -0.000888824462890625, -3.4332275390625e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.00010538101196289062, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.001445770263671875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.004329681396484375, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0012178421020507812, 0.0, -0.004457925446331501, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -0.00020599365234375, -5.340576171875e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002053976058959961, 0.0, -0.00011002924293279648, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "HUNTER", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -7.796010059606516, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -7.778183937072754, 0.0, -0.001934051513671875, 0.0, -0.0004558563232421875, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.622600959512056e-06, -0.0009307861328125, -3.4332275390625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -9.608268737792969e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014476776123046875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0043048858642578125, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0012159347534179688, 0.0, -0.004452561028301716, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -0.0002040863037109375, -5.14984130859375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002034902572631836, 0.0, -0.00010919480700977147, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.minions.damage(player.effective_spell_damage(5), self\n            )\n", "score": -7.8460858535085265, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -0.000980377197265625, -3.0517578125e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001055002212524414, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014781951904296875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0043048858642578125, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004329681396484375, 0.0, -0.0012292861938476562, 0.0, -7.820944786071777, 0.0, -0.0016307830810546875, 0.0, -3.814697265625e-06, -0.000118255615234375, -5.53131103515625e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -0.00022423267364501953, 0.0, -0.00011515460209921002, -8.344646857949556e-07, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "WARLOCK", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"hole1": "damage", "hole0": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -7.923230452736135, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -7.90647029876709, 0.0, -0.001003265380859375, 0.0, -0.0002689361572265625, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -6.67572021484375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.50339189733495e-06, -0.0009136199951171875, -3.24249267578125e-05, -1.33514404296875e-05, -0.000171661376953125, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.00010156631469726562, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014820098876953125, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0042724609375, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -0.000446319580078125, 0.0, -0.0012445449829101562, 0.0, -0.0044334884732961655, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -0.0002040863037109375, -5.340576171875e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002053976058959961, 0.0, -0.00010979082435369492, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0]}, {"choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "3", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"], "model_output": {"hole1": "SpellCard", "hole0": "MindBlast", "hole2": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST", "hole3": "FREE"}], "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole6": [{"_type": "Expr", "value": {"hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player", "hole3": "game"}}, {"iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "func": {"id": "range", "_type": "Name"}}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}}], "hole4": "player", "hole3": "use"}, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            minion.damage(player.effective_spell_damage(5), self)\n", "score": -8.773271210707804, "score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -0.000980377197265625, -3.0517578125e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001055002212524414, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -7.316555023193359, -0.0002193450927734375, -1.9073486328125e-05, 0.0, -0.1738910675048828, 0.0, -0.004797935485839844, -7.62939453125e-06, -0.0019168853759765625, 0.0, -0.0012248754501342773, -5.7220458984375e-06, -8.20159912109375e-05, -0.002872467041015625, -1.9073486328125e-06, -0.00018143572378903627, -5.7220458984375e-06, -0.2383747100830078, -1.9073486328125e-05, -0.7305455803871155, -1.9073486328125e-06, -0.0015773773193359375, -0.006100654602050781, -0.0009288787841796875, -0.000301361083984375, -1.9073486328125e-06, -0.2516108751296997, 0.0, -0.02526092529296875, 0.0, -1.71661376953125e-05, -0.0007801055908203125, -0.0001735687255859375, -3.0517578125e-05, 0.0, -3.814697265625e-06, 0.0, -0.00029957288643345237, 0.0, -5.9246900491416454e-05, -4.768370445162873e-07, -0.0001926422119140625, -1.9073486328125e-06, -3.0517578125e-05, 0.0]}]}
