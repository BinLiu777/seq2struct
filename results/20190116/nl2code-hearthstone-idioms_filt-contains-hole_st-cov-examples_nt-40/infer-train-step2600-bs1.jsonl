{"index": 0, "beams": [{"score_history": [-4.38690185546875e-05, -0.0005130767822265625, -2.574904283392243e-05, -0.00046670433948747814, -3.4570680327306036e-06, -2.9802276912960224e-06, -5.149708886165172e-05, -3.814697265625e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.011869430541992188, -0.2713747024536133, -7.009273394942284e-05, -0.00037394929677248, -0.00018513202667236328, -8.463816629955545e-05, -4.172325134277344e-06, 0.0, -2.2649765014648438e-05, -2.3841855067985307e-07, -0.010124444030225277, 0.0, -0.0021538310684263706, -0.0016622429247945547, -0.011597216129302979, -2.384185791015625e-06, 0.0, -8.0108642578125e-05, -0.0010509490966796875, 0.0, -0.0006567233940586448, -0.00016963481903076172, 0.0, -4.0531158447265625e-06, 0.0, -1.728534698486328e-05, 0.0, 0.0, -0.00222015380859375, -2.288818359375e-05, -2.9206275939941406e-05, -1.1920928244535389e-07, -0.0034505128860473633, 0.0], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "AcidicSwampOoze", "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole3": "Destroy", "hole1": 2, "_type": "Template6", "hole0": "Acidic Swamp Ooze", "hole6": [{"hole0": "EnemyPlayer", "_type": "Template39"}], "hole5": "WeaponSelector", "hole2": "COMMON"}]}, "score": -0.3183419602259434, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "choice_history": [70, 147, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 211, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 237, 63, 205, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"]}]}
{"index": 1, "beams": [{"score_history": [-0.0009403228759765625, -5.53131103515625e-05, -3.933906555175781e-06, -3.075599670410156e-05, -4.887576324108522e-06, -3.3266842365264893e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -8.7738037109375e-05, -0.0007476806640625, -0.0001316070556640625, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.7087669372558594e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.7881377516459906e-06, -5.1975250244140625e-05, -7.11679458618164e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004352264222688973, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.817413330078125e-05, 0.0, -0.005313873291015625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00017547607421875, -7.05718994140625e-05, -0.0003662109375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001087188720703125, -7.82012939453125e-05, -4.1961669921875e-05, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000217437744140625, -1.9073486328125e-05, -1.537799835205078e-05, -9.5367431640625e-06, -0.0005685091018676758, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.254413604736328e-05, -1.1920928244535389e-07, -0.009454727172851562, -0.00014495849609375, -5.7220458984375e-06, -7.62939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -1.1682510375976562e-05, -3.814697265625e-06, -2.288818359375e-05, -3.62396240234375e-05, -1.2516951755969785e-05, -4.00543212890625e-05, -0.0013427734375, -0.00043487548828125, -0.000213623046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.021414637565612793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000591278076171875, -7.05718994140625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -4.38690185546875e-05, 0.0, -0.0002498626708984375, -1.52587890625e-05, -0.0021799798123538494, -1.9073486328125e-06, -5.340576171875e-05, -0.0045108795166015625, -0.0001735687255859375, -0.00649261474609375, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -1.0132789611816406e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008170366287231445, 0.0, -0.003795623779296875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.07146263122558594, -0.00030517578125, -3.0517578125e-05, -5.7220458984375e-06, -0.000179290771484375, -0.022188186645507812, 0.0, -0.0002651214599609375, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.055695533752441406, 0.0, -0.02946758270263672, -5.7220458984375e-06, -4.9591064453125e-05, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "AncestralHealing", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"func": {"attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"hole1": "calculate_max_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template36"}]}, {"id": "self", "_type": "Name"}]}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "_type": "Assign", "value": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.24972317766442842, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "choice_history": [70, 149, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Ancestral", " ", "Healing", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 39, 110, 13, 103, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", 237, 60, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 44, 134, "self", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 2, "beams": [{"score_history": [-7.62939453125e-06, -0.0031681060791015625, -0.0001515035255579278, -7.748573807475623e-06, -4.875540980719961e-05, -7.62939453125e-06, -3.0040397177799605e-05, -1.2874562344222795e-05, -5.7220458984375e-06, -0.00037384033203125, -0.0002002716064453125, -1.4305104514278355e-06, -7.474417361663654e-05, -2.3841855067985307e-07, 0.0, -1.1920926823449918e-07, -8.344646857949556e-07, -0.0004887580871582031, 0.0, -0.0013219118118286133, 0.0, -8.118075493257493e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000194549560546875, -3.814697265625e-05, -2.3841855067985307e-07, -0.09836483001708984, -0.0001049041748046875, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.741813204920618e-06, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00019681453704833984, -3.814697265625e-06, -0.03644847869873047, -3.62396240234375e-05, -7.62939453125e-06, -6.866455078125e-05, -1.33514404296875e-05, -0.0030661679338663816, 0.0, -0.07334232330322266, -0.008242607116699219, -0.0002498626708984375, -0.0060329437255859375, -3.814697265625e-06, -0.0005931854248046875, -6.67572021484375e-05, -0.00019073486328125, 0.0, -0.01241302490234375, -7.62939453125e-06, -0.001804351806640625, -3.814697265625e-06, -0.10353279113769531, -2.47955322265625e-05, -0.0026472758036106825, -5.960462772236497e-07, -0.0017044523265212774, -1.33514404296875e-05, -0.012612699531018734, -1.52587890625e-05, -0.7188399434089661, -1.919269561767578e-05, -0.0051250457763671875, -7.62939453125e-06, -0.0001373291015625, -0.0001010894775390625, -0.000225067138671875, -3.814697265625e-06, -0.003940582275390625, -1.1444091796875e-05, -0.009935379028320312, -3.814697265625e-06, -0.008871078491210938, -3.814697265625e-06, -0.0030307741835713387, -8.344646857949556e-07, -0.001769795548170805, -9.5367431640625e-06, -0.010535597801208496, -4.00543212890625e-05, -0.989697277545929, -7.152543730626348e-06, -0.01064300537109375, -3.62396240234375e-05, -0.0001392364501953125, -2.6702880859375e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0063953399658203125, -1.71661376953125e-05, -0.002391815185546875, -1.9073486328125e-06, -0.017845988273620605, -3.814697265625e-06, -0.002757668262347579, -5.960462772236497e-07, -0.0017214007675647736, -7.62939453125e-06, -0.010528206825256348, -3.063678741455078e-05, -0.9847579002380371, -2.1934378310106695e-05, -4.38690185546875e-05, 0.0, -2.288818359375e-05, -0.00011444091796875, -0.000118255615234375, -0.00244748592376709, -1.1920928244535389e-07, -0.0005035400390625, -0.0001068115234375, -8.0108642578125e-05, 0.0, -0.0071811676025390625, -1.9073486328125e-05, -0.001872998895123601, -1.1920928244535389e-07, -0.0004217624373268336, -2.861018856492592e-06, -1.71661376953125e-05, -0.0021076202392578125, -5.340576171875e-05, -0.019619107246398926, -1.4305104514278355e-06, -0.00299835205078125, -0.000118255615234375, -0.00160980224609375, -9.5367431640625e-06, -0.019208664074540138, -1.9550323486328125e-05, -0.012212991714477539, 0.0, -0.0003757476806640625, -0.0015735626220703125, -2.288818359375e-05, -7.140636444091797e-05, -1.9073486328125e-06, -0.0011425018310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0006542205810546875, -1.9073486328125e-06, -0.00010132788156624883, 0.0, -7.2479248046875e-05, -5.53131103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -8.64267349243164e-05, -3.933906555175781e-06, -4.57763671875e-05, -4.76837158203125e-05, 0.0, -7.43865966796875e-05, 0.0, -0.0001163482666015625, 0.0, -0.0010460615158081055, 0.0, -0.0001316070556640625, -0.0001964569091796875, -1.9073486328125e-05, -0.0004070996365044266, -8.344646857949556e-07, -4.57763671875e-05, -0.0001354217529296875, -8.96453857421875e-05, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9311904907226562e-05, -2.3841855067985307e-07, -0.00026702880859375, -0.0001659393310546875, -0.0001659393310546875, -0.000408172607421875, -1.9073486328125e-05, -4.38690185546875e-05, -0.0001220703125, -0.0001621246337890625, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4570634852570947e-06, -5.7220458984375e-06, -0.00142669677734375, 0.0, -7.62939453125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, -0.007823944091796875, -7.62939453125e-06, -0.0024213790893554688, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0003007473424077034, -4.768370445162873e-07, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.0009399652481079102, -1.9073486328125e-06, -4.00543212890625e-05, -0.00045013427734375, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -0.0005089023616164923, -9.72747802734375e-05], "model_output": {"hole3": "use", "hole7": [{"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"_type": "BoolOp", "values": [{"hole3": "game", "hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "_type": "Call", "args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}]}, "ops": [{"_type": "Lt"}], "_type": "Compare", "comparators": [{"_type": "Num", "n": 7}]}], "op": {"_type": "And"}}, "_type": "Return"}], "name": "can_use"}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "AnimalCompanion", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "_type": "Assign", "value": {"_type": "List", "elts": [{"hole1": "Huffer", "hole0": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template36"}, {"hole1": "Leokk", "hole0": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template36"}]}}, {"targets": [{"id": "card", "_type": "Name"}], "_type": "Assign", "value": {"func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "player", "_type": "Name"}, {"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"func": {"id": "len", "_type": "Name"}, "_type": "Call", "args": [{"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}]}]}], "hole4": "player", "hole2": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template14", "hole2": "HUNTER"}]}, "score": -3.2513297305026683, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "choice_history": [70, 150, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 252, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 19, 129, 239, 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 75, 102, 237, 44, 134, "card", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "<UNK>", "<EOS>", 93, 196, 21, 134, "card", "<EOS>", "summon", "<EOS>", 239, 44, 134, "player", "<EOS>", 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 39, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 234, 10, 237, 46, 139, "7", "<EOS>"]}]}
{"index": 3, "beams": [{"score_history": [-7.62939453125e-06, -0.00128936767578125, -8.344646857949556e-07, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.409695975482464e-06, -4.172325134277344e-06, 0.0, -7.62939453125e-06, -0.00017547607421875, -6.103515625e-05, -7.510157047363464e-06, -9.799002873478457e-05, -6.318082796497038e-06, 0.0, -2.0265579223632812e-06, -1.311301275563892e-06, -0.0029903650283813477, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -0.000133514404296875, -3.135204315185547e-05, -0.0001198053068947047, -0.00018310546875, -3.814697265625e-06, -2.09808349609375e-05, -5.91278076171875e-05, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -4.732607339974493e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016033649444580078, 0.0, -6.079673767089844e-06, -1.71661376953125e-05, -0.0003261566162109375, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, 0.0, -0.005084037780761719, -0.00106048583984375, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -0.0017070770263671875, -1.9073486328125e-06, -0.000339508056640625, -2.09808349609375e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004521608352661133, -1.9073486328125e-06, -5.9001584304496646e-05, 0.0, -5.340576171875e-05, -0.0003662109375, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.33514404296875e-05, 0.0, -0.00020647048950195312, -3.814697265625e-06, 0.0, -0.0026092529296875, -0.00012969970703125, -9.5367431640625e-06, 0.0, -0.0041065216064453125, -1.9073486328125e-06, -0.00036752221058122814, 0.0, -0.0026068040169775486, 0.0, -0.001201629638671875, 0.0, -0.0001201629638671875, -9.5367431640625e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "ArcaneExplosion", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}}], "hole4": "player", "hole2": [{"hole3": "FREE", "hole1": 2, "hole0": "Arcane Explosion", "_type": "Template15", "hole2": "MAGE"}]}, "score": -0.030377315091726587, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "choice_history": [70, 149, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 4, "beams": [{"score_history": [-1.33514404296875e-05, -0.0001125335693359375, -1.1920928244535389e-07, -1.9073486328125e-06, -3.8980677345534787e-05, -2.3007385607343167e-05, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -0.0001964569091796875, -3.576278118089249e-07, -0.00011813634046120569, -1.4185883628670126e-05, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0068285465240478516, 0.0, -0.0010682344436645508, 0.0, -6.103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, -4.1723224057932384e-06, -0.00119781494140625, -1.71661376953125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.1696090698242188e-05, 0.0, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -4.768367489305092e-06, -3.814697265625e-06, -0.0009860992431640625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.009147286415100098, 0.0, -0.000522613525390625, -0.000732421875, -0.0020809173583984375, 0.0, -0.0006767511367797852, 0.0, -3.814697265625e-06, -0.00029754638671875, 0.0, -0.0007006946252658963, -5.7220458984375e-06, -0.000316619873046875, -2.86102294921875e-05, -0.0021980516612529755, -5.7220458984375e-06, -0.0015201568603515625, -0.000732421875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00063323974609375, -1.1920928244535389e-07], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "ArcaneIntellect", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "c", "_type": "Name"}, "_type": "For", "body": [{"value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}, "_type": "Expr"}], "iter": {"func": {"id": "range", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "hole4": "player", "hole2": [{"hole3": "FREE", "hole1": 3, "hole0": "Arcane Intellect", "_type": "Template15", "hole2": "MAGE"}]}, "score": -0.030753068811783635, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "choice_history": [70, 149, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "c", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 249, 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"]}]}
{"index": 5, "beams": [{"score_history": [-1.9073486328125e-05, -7.62939453125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.814689989667386e-06, -9.058043360710144e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001373291015625, -4.1961669921875e-05, -3.3378546504536644e-06, -9.346005390398204e-05, -1.3589766240329482e-05, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.00567626953125, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, 0.0, -0.000278472900390625, -0.0006256103515625, -1.9073486328125e-06, -3.099440846199286e-06, -0.0002002716064453125, -7.62939453125e-06, -2.288818359375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.2874602361989673e-05, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0027227401733398438, -2.47955322265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0029697418212890625, 0.0, -0.012376785278320312, -9.5367431640625e-06, -0.0004100799560546875, 0.0, -0.0005552768707275391, 0.0, -1.33514404296875e-05, -0.00087738037109375, -1.9073486328125e-06, -0.001013636589050293, -3.814697265625e-06, -0.00287628173828125, -3.24249267578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00075531005859375, 0.0, -0.00021358094818424433, 0.0, -0.0012292861938476562, -0.00061798095703125, -0.0001010894775390625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00232541561126709, -7.62939453125e-06, -0.001712799072265625, -3.24249267578125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.00051116943359375, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -0.0004291534423828125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -0.0005950927734375, 0.0, -6.413457595044747e-05, 0.0, -0.00025177001953125, -0.0004863739013671875, -0.0024623870849609375, -4.76837158203125e-05, -0.00042629241943359375, 0.0, -0.0037508010864257812, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0006351470947265625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.030335664749145508, -1.9073486328125e-06, -0.00016677379608154297, 0.0, -0.0011386871337890625, -7.62939453125e-06, -1.9073486328125e-05, -0.000823974609375, -0.000240325927734375, -0.0015937089920043945, -3.814697265625e-06, -0.0033111572265625, -9.5367431640625e-06, -0.0004119873046875, -0.000125885009765625, -0.0001163482666015625, -1.9073486328125e-06, -0.0029439926147460938, 0.0, -0.005218505859375, 0.0, -0.0002002716064453125, -0.0013332366943359375, -4.1961669921875e-05, -0.0022630691528320312, -3.814697265625e-06, -0.00067901611328125, -3.62396240234375e-05, -0.000423431396484375, -5.7220458984375e-06, -0.0011926889419555664, -3.814697265625e-06, -0.001171112060546875, -1.9073486328125e-06, -9.5367431640625e-06, -0.0017147064208984375, -0.0001392364501953125, -0.0004668449691962451, 0.0, -0.0038394927978515625, -1.9073486328125e-05, -0.00023365020751953125, -5.7220458984375e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "ArcaneMissiles", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"targets": [{"id": "targets", "_type": "Name"}], "_type": "Assign", "value": {"func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}}, {"hole1": "append", "hole0": {"id": "targets", "_type": "Name"}, "_type": "Template37", "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}, {"targets": [{"id": "target", "_type": "Name"}], "_type": "Assign", "value": {"func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"id": "targets", "_type": "Name"}]}}, {"hole1": "damage", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template37", "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Num", "n": 0}, {"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}]}}], "hole4": "player", "hole2": [{"hole3": "FREE", "hole1": 1, "hole0": "Arcane Missiles", "_type": "Template15", "hole2": "MAGE"}]}, "score": -0.11073110214987025, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "choice_history": [70, 149, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 252, 75, 102, 237, 44, 134, "targets", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 93, 196, 21, 134, "targets", "<EOS>", "append", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 75, 102, 237, 44, 134, "target", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "targets", "<EOS>", 93, 196, 21, 134, "target", "<EOS>", "damage", "<EOS>", 238, 46, 139, "1", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 6, "beams": [{"score_history": [-0.0022754669189453125, -1.9073486328125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.3828182090946939e-05, -9.294250048696995e-06, -4.410742985783145e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000545501708984375, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6689286894688848e-06, -0.00011157988046761602, -6.318082796497038e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00017786026000976562, 0.0, -7.05718994140625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0003757476806640625, -1.9073486328125e-06, -0.004825949668884277, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0001277923583984375, 0.0, -0.042301177978515625, 0.0, -6.866455078125e-05, -0.0002231597900390625, -0.00031280517578125, -2.47955322265625e-05, -2.0265579223632812e-06, -6.4849853515625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -8.7738037109375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0007534027099609375, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -7.2479248046875e-05, -2.6702880859375e-05, -2.288818359375e-05, -1.1920928244535389e-07, -0.0003204345703125, -9.918212890625e-05, -7.62939453125e-06, -0.000232696533203125, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004578828811645508, -1.33514404296875e-05, -3.5285818739794195e-05, -1.9073486328125e-06, -8.0108642578125e-05, -0.0028896331787109375, -6.29425048828125e-05, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00086212158203125, 0.0, -0.00014495849609375, -1.1920928244535389e-07, -1.9073486328125e-06, -6.4849853515625e-05, -1.71661376953125e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00012743451225105673, -2.3841855067985307e-07, -0.0003962493792641908, -7.152555099310121e-07, -0.0002689361572265625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "ArcaneShot", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.05929862767759886, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "choice_history": [70, 149, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Arcane", " ", "Shot", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 7, "beams": [{"score_history": [-3.62396240234375e-05, -0.000507354736328125, -0.0012400802224874496, -9.536738616588991e-07, -8.463837730232626e-06, -9.536697689327411e-06, -5.3048133850097656e-05, -2.3841855067985307e-07, -1.71661376953125e-05, -0.0089111328125, -3.814697265625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -1.1920928244535389e-07, -5.841255187988281e-06, -0.0004475117602851242, -1.2516897186287679e-05, -0.05206108093261719, 0.0, -0.008657574653625488, -9.5367431640625e-06, -9.29814123082906e-05, 0.0, -0.000263214111328125, -0.0003509521484375, -0.001461029052734375, -1.1920928244535389e-07, -0.0003251500893384218, -0.00020587444305419922, -0.0002138386043952778, -7.80796617618762e-05, -2.3841855067985307e-07], "model_output": {"hole3": "create_weapon", "hole1": "WeaponCard", "_type": "Template1", "hole0": "ArcaniteReaper", "hole6": [{"hole1": 5, "hole0": "Weapon", "_type": "Template30", "hole2": 2}], "hole4": "player", "hole2": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template14", "hole2": "WARRIOR"}]}, "score": -0.07502745098405228, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "choice_history": [70, 147, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 249, 88, 153, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"]}]}
{"index": 8, "beams": [{"score_history": [-0.0031681060791015625, -5.7220458984375e-05, -5.960462772236497e-07, -3.099393507000059e-05, -1.7868587747216225e-06, -1.0609614946588408e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0014629364013671875, -0.0012798309326171875, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, -7.62939453125e-06, -0.0019513368606567383, 0.0, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -6.949660019017756e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -7.62939453125e-06, -0.011000514030456543, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.026544570922851562, 0.0, -6.4849853515625e-05, -0.0001087188720703125, -4.38690185546875e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0003376007080078125, -0.0001678466796875, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002346038818359375, -6.67572021484375e-05, -4.601478576660156e-05, -3.814697265625e-06, -0.012275934219360352, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -2.264974000354414e-06, -0.003192901611328125, -0.0001316070556640625, -5.7220458984375e-06, -0.0002574920654296875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0018863677978515625, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -0.0013332366943359375, -0.000335693359375, -0.0001163482666015625, -7.62939453125e-06, -0.0001220703125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0033129453659057617, 0.0, -0.0028553009033203125, -0.00669097900390625, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Assassinate", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.08030056534292385, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "choice_history": [70, 149, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Assassinate", "<EOS>", 46, 139, "5", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"]}]}
{"index": 9, "beams": [{"score_history": [-0.00939178466796875, -0.0001220703125, -0.0001068115234375, -0.001026153564453125, -0.0001659393310546875, -5.960462772236497e-07, -0.0003873551613651216, -0.0001373291015625, -0.000354766845703125, -0.0001983642578125, -0.000282135239103809, -4.4345855712890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -8.7738037109375e-05, -0.0008029937744140625, -3.814689989667386e-06, -8.106231689453125e-06, -4.5418739318847656e-05, -7.510169325541938e-06, -0.011108875274658203, -1.9073486328125e-06, -0.0029932260513305664, 0.0, -0.0007477981271222234, -2.9802316930727102e-05, -0.000606536865234375, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00031280517578125, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.005664944648742676, 0.0, -0.004310727119445801, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00046634674072265625, -5.14984130859375e-05, -0.0004024505615234375, -6.103515625e-05, -0.000194549560546875, -9.5367431640625e-06, -0.000720977783203125, -0.0002288818359375, -0.0025997161865234375, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.000822901725769043, -1.9073486328125e-06, -0.009106874465942383, -3.576278118089249e-07, -3.814697265625e-06, -0.012518882751464844, -0.0001373291015625, -0.001678466796875, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -7.212111086118966e-05, -5.7220458984375e-06, -0.027130722999572754, 0.0, -0.015947341918945312, -7.43865966796875e-05, -1.9073486328125e-05, 0.0, -0.000802397436928004, -4.410743713378906e-06, -0.010326743125915527, -5.7220458984375e-06, -0.0009517669677734375, -5.14984130859375e-05, -0.00021338458464015275, 0.0, -2.288818359375e-05, -0.0003108978271484375, -4.38690185546875e-05, -1.1444091796875e-05, -6.401528662536293e-05, -2.491474151611328e-05, -7.43865966796875e-05, -0.0004367828369140625, -3.814697265625e-06, -3.4332275390625e-05, -0.0003664472314994782, -2.622604142743512e-06, -0.0018100738525390625, -0.00041961669921875, -5.7220458984375e-06, -0.00089263916015625, -2.6702880859375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -1.7762184143066406e-05, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -4.57763671875e-05, 0.0, -4.482259100768715e-05, 0.0, -5.7220458984375e-05, -0.0024776458740234375, -0.0001049041748046875, -1.33514404296875e-05, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0002709627151489258, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.49689172860235e-05, -1.1920928244535389e-07, -0.00041934935143217444, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -4.9591064453125e-05, 0.0], "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "FREE", "hole7": "filter_func", "hole1": 0, "hole5": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole0": "Backstab", "hole8": {"args": {"hole0": "target", "_type": "Template21"}, "_type": "Lambda", "body": {"_type": "BoolOp", "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare", "comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "op": {"_type": "And"}}}, "hole6": "find_minion_spell_target", "hole4": "target_func", "hole2": "ROGUE"}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "name": "use"}], "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "name": "Backstab"}]}, "score": -0.13308808888540113, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "choice_history": [69, 133, 249, 78, 112, "Backstab", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 4, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 10, "beams": [{"score_history": [-9.5367431640625e-05, -3.0517578125e-05, -1.3947435945738107e-05, -0.0013007092056795955, -0.0001510267611593008, -4.696760879596695e-05, -9.263865649700165e-06, -1.6093217709567398e-05, -4.410734163684538e-06, -5.7220458984375e-06, -0.0011081695556640625, -2.09808349609375e-05, -3.4689302992774174e-05, -0.00045740604400634766, -1.52587890625e-05, -2.47955322265625e-05, -2.491474151611328e-05, -3.0517578125e-05, -3.3378541957063135e-06, -7.974798791110516e-05, -0.010401606559753418, -2.3841855067985307e-07, -0.00016772744129411876, -9.536738616588991e-07, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.000443696859292686, -4.053113570989808e-06, -0.00021040314459241927, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.00042724609375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0002505779266357422, -8.34461570775602e-06, -0.06672096252441406, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.936622619628906e-05, -5.7220458984375e-06, -1.3709059203392826e-05, -1.9073486328125e-06, -0.00026404857635498047, -3.814697265625e-05, -3.2544070563744754e-05, -0.0001010894775390625, -0.0005054473876953125, -1.9073486328125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.01790320873260498, -6.556510470545618e-06, -0.028585880994796753, -3.814697265625e-06, -0.001094818115234375, -7.2479248046875e-05, -0.0004100799560546875, -1.33514404296875e-05, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.57763671875e-05, -7.152555099310121e-07, -0.014310121536254883, -1.9073486328125e-06, -0.0024487674236297607, -1.52587890625e-05], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "BlessingOfKings", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template31", "hole2": 4}, "_type": "Expr"}, {"value": {"hole1": "increase_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template31", "hole2": 4}, "_type": "Expr"}], "hole4": "player", "hole2": [{"hole3": "target_func", "hole1": 4, "_type": "Template11", "hole0": "Blessing of Kings", "hole4": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": "PALADIN"}]}, "score": -0.15016570136430119, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "choice_history": [70, 149, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"]}]}
{"index": 11, "beams": [{"score_history": [-6.866455078125e-05, -4.00543212890625e-05, -1.1682479453156702e-05, -0.0013390262611210346, -3.671578815556131e-05, -4.61331001133658e-05, -1.18953175842762e-06, -8.106231689453125e-06, 0.0, -3.814697265625e-06, -0.0038280487060546875, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -1.1682510375976562e-05, 0.0, -1.5497207641601562e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.38690185546875e-05, -5.960462772236497e-07, -7.62939453125e-05, -3.8743019104003906e-05, -8.022785186767578e-05, -9.179114385915454e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.182887303410098e-05, -1.1920928244535389e-07, -0.00019073486328125, -0.0001125335693359375, -5.7220458984375e-06, -3.814697265625e-06, -4.3749801989179105e-05, 0.0, -0.022575855255126953, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.0001220703125, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00014495849609375, -7.2479248046875e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.000110626220703125, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015544891357421875, -7.62939453125e-06, -6.723403930664062e-05, 0.0, -0.0020395517349243164, 0.0, -4.76837158203125e-05, 0.0, -0.0001049041748046875, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -2.9087066650390625e-05, -5.960462772236497e-07, -0.0017261505126953125, -3.4332275390625e-05, -8.20159912109375e-05, -0.000827789306640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.841255187988281e-06, -0.0043544769287109375, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0033855438232421875, -1.71661376953125e-05, -0.000171661376953125, -0.0001430511474609375, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920928244535389e-07, -0.004913926124572754, -2.3603439331054688e-05, -0.01814264804124832, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "BlessingOfMight", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template31", "hole2": 3}, "_type": "Expr"}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.06971801446398729, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "choice_history": [70, 149, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Blessing", " ", "of", " ", "Might", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"]}]}
{"index": 12, "beams": [{"score_history": [-1.33514404296875e-05, -0.00030517578125, -2.634490556374658e-05, -1.1920928244535389e-07, -1.394745322613744e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0011386871337890625, -0.000133514404296875, -3.576278118089249e-07, -4.208087921142578e-05, -1.1920928244535389e-07, 0.0, -0.00011384490790078416, -3.576278118089249e-07, -0.00029754638671875, 0.0, -0.0002546309551689774, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.936622619628906e-05, 0.0, -0.0035123825073242188, 0.0, -4.172325134277344e-06, 0.0, -0.0003790855407714844, 0.0, -1.1444091796875e-05, -0.000797271728515625, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -6.639957427978516e-05, 0.0], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "BloodfenRaptor", "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole3": "minion_type", "hole1": 2, "_type": "Template10", "hole0": "Bloodfen Raptor", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole2": "FREE"}]}, "score": -0.0073248143643027674, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "choice_history": [70, 147, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "3", "<EOS>", "2", "<EOS>"]}]}
{"index": 13, "beams": [{"score_history": [-4.76837158203125e-05, -0.00060272216796875, -2.1815061700181104e-05, -2.9801984055666253e-05, -0.00013358891010284424, -4.947113120579161e-05, -3.3378591979271732e-06, -3.814697265625e-06, -0.000690460205078125, -0.0002002716064453125, -1.1920928244535389e-07, 0.0, -1.1920922133867862e-06, -2.777537883957848e-05, -0.009913206100463867, 0.0, -0.0003910064697265625, 0.0, -1.3589859008789062e-05, 0.0, -0.000640869140625, -2.288818359375e-05, -0.0001220703125, -3.576278118089249e-07, -0.0042591094970703125, -1.52587890625e-05, -0.000362396240234375, -0.00087738037109375, -7.62939453125e-06, -0.0001392364501953125, 0.0, -2.0265579223632812e-06, -1.1444091796875e-05, -0.00031280517578125, 0.0, -4.1961669921875e-05, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -0.000507354736328125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0068721771240234375, -6.67572021484375e-05, -0.000873565673828125, -0.000244140625, -4.76837158203125e-05, -4.38690185546875e-05, -0.000202178955078125, -1.9073486328125e-06, -0.01694953441619873, -1.9073486328125e-05, -0.0003108978271484375, -0.0008869171142578125, -0.00014495849609375, -0.023839950561523438, -0.0014972686767578125, -5.7220458984375e-05, -7.05718994140625e-05, -0.0012286901473999023, -9.1552734375e-05, -0.009598731994628906, -8.0108642578125e-05, -0.0027605858631432056, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Bloodlust", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template31", "hole2": 3}, "_type": "Expr"}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}}], "hole4": "player", "hole2": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template14", "hole2": "SHAMAN"}]}, "score": -0.0853982071277457, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "choice_history": [70, 149, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 79, 115, 29, 190, 21, 134, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"]}]}
{"index": 14, "beams": [{"score_history": [-0.000152587890625, -9.5367431640625e-05, -0.0011498297099024057, -7.867782187531702e-06, -5.364403477869928e-06, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0002918243408203125, -2.3841855067985307e-07, -0.00014495849609375, -4.0531158447265625e-06, 0.0, -0.00015056146366987377, -1.1920928244535389e-07, -0.0007289648056030273, 0.0, -5.424022674560547e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.017418265342712402, -3.933906555175781e-06, -0.00015342234109994024, 0.0, -1.7762184143066406e-05, 0.0, -3.814697265625e-06, -0.0011119842529296875, -5.53131103515625e-05, -6.878376007080078e-05, -2.50339189733495e-06, -1.1920923270736239e-07, -9.536738616588991e-07, -0.013138532638549805, -1.9073486328125e-06, -0.000148773193359375, -4.38690185546875e-05, -7.748603820800781e-06, 0.0], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "BluegillWarrior", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 1, "hole0": 2, "_type": "Template22", "hole2": "charge"}], "hole4": "player", "hole2": [{"hole3": "minion_type", "hole1": 2, "_type": "Template10", "hole0": "Bluegill Warrior", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole2": "COMMON"}]}, "score": -0.03513818636394461, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "choice_history": [70, 147, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 15, "beams": [{"score_history": [-2.288818359375e-05, -0.000370025634765625, -6.9141146923357155e-06, -9.417505680175964e-06, -1.2874486856162548e-05, -7.62939453125e-06, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000751495361328125, -0.003173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.576267772587016e-05, -1.1920928244535389e-07, -0.0001538991928100586, -1.1920928244535389e-07, -0.0040283203125, -0.000194549560546875, -0.000186920166015625, -2.264974000354414e-06, -5.125993993715383e-06, -3.814697265625e-06, -7.62939453125e-06, -4.410592373460531e-05, -2.3841855067985307e-07, -6.67572021484375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.295607792912051e-05, 0.0, -0.0001376815780531615, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.1920928244535389e-07, -5.9843052440555766e-05, 0.0, -0.00017547607421875, -8.392333984375e-05, -3.814697265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -0.0007076263427734375, -0.0001354217529296875, -0.0010409355163574219, -1.0609603123157285e-05, -0.0005068714963272214, 0.0, -0.00275493785738945, 0.0, -9.5367431640625e-06, -0.0002155303955078125, -4.57763671875e-05, -7.152605121518718e-07, -2.264974000354414e-06, -8.349052222911268e-07, -2.3841855067985307e-07], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "Boar", "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole3": [{"hole0": "BEAST", "_type": "Template35"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}]}, "score": -0.015233872543781501, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "choice_history": [70, 147, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Boar", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"]}]}
{"index": 16, "beams": [{"score_history": [-0.08008956909179688, -4.57763671875e-05, -4.291525328881107e-06, -7.021180499577895e-05, -1.6335397958755493e-05, -0.0008851289749145508, 0.0, -5.7220458984375e-06, -0.008138656616210938, -0.0006847381591796875, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.00104522705078125, 0.0, -0.00020599365234375, -3.814697265625e-06, -2.288818359375e-05, -1.1920922133867862e-06, -8.225440979003906e-05, -0.000560760498046875, 0.0, -3.0040344427106902e-05, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011718270980054513, 0.0, -0.0017107725143432617, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001964569091796875, 0.0, -0.01644134521484375, 0.0, -1.1444091796875e-05, -0.000308990478515625, -0.00016021728515625, -0.0002346038818359375, 0.0, -0.0001316070556640625, -6.103515625e-05, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000217437744140625, 0.0, -5.364418029785156e-05, 0.0, -0.018404006958007812, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001468658447265625, -2.3841855067985307e-07, -0.01251983642578125, -1.71661376953125e-05, -3.814697265625e-06, -4.57763671875e-05, 0.0, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.62396240234375e-05, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0072612762451171875, -1.9073486328125e-06, -0.000110626220703125, -0.0001125335693359375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0033799409866333008, -1.9073486328125e-06, -0.03856205940246582, 0.0, -0.001972198486328125, -5.14984130859375e-05, -0.00182342529296875, -0.00067901611328125, -0.0001697540283203125, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.768370445162873e-07, -0.007841348648071289, -2.3841855067985307e-07, -4.1961669921875e-05, -0.005436897277832031, -0.0015888214111328125, -0.001159238163381815, -7.49826431274414e-05], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Charge", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template31", "hole2": 2}, "_type": "Expr"}, {"hole1": "add_buff", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole0": "<UNK>", "_type": "Template25"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.2133559467193109, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "choice_history": [70, 149, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Charge", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "2", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "<UNK>", "<EOS>"]}]}
{"index": 17, "beams": [{"score_history": [-5.7220458984375e-06, -0.000720977783203125, -0.00011312322021694854, -2.3841855067985307e-07, -3.6238969187252223e-05, -1.4305104514278355e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.17289352416992188, -0.001110076904296875, -3.576278118089249e-07, -2.300739288330078e-05, 0.0, -1.1920928244535389e-07, -0.0004178288800176233, -1.2040087312925607e-05, -0.0002614259719848633, 0.0, -3.099440846199286e-06, 0.0, -3.659718277049251e-05, 0.0, -1.71661376953125e-05, -0.0022373199462890625, -9.5367431640625e-06, -0.0008258819580078125, -2.4199192921514623e-05, -1.311301275563892e-06, -8.344646857949556e-07], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "ChillwindYeti", "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template14", "hole2": "ALL"}]}, "score": -0.17875968695320665, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "choice_history": [70, 147, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "4", "<EOS>", "5", "<EOS>"]}]}
{"index": 18, "beams": [{"score_history": [-0.000270843505859375, -3.0517578125e-05, -0.0002917817619163543, -5.006789251638111e-06, -6.431248039007187e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.006824493408203125, -8.344646857949556e-07, 0.0, -0.00026023367536254227, -1.1920922133867862e-06, -0.003276824951171875, -1.9073486328125e-06, -0.002806544303894043, 0.0, -0.008766651153564453, 0.0, -1.2993807104066946e-05, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.00038063526153564453, -1.9073468138230965e-06, -0.0024538040161132812, -1.33514404296875e-05, -6.4849853515625e-05, -0.0001678466796875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.3378591979271732e-06, -8.96453857421875e-05, -0.0111083984375, -1.9073486328125e-06, -0.000308990478515625, -5.91278076171875e-05, -0.0001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-05, -0.0007572174072265625, 0.0, -0.0012918710708618164, 0.0, -0.03159407153725624, -2.0265579223632812e-06, -2.1099998775753193e-05, 0.0, -0.001300811767578125, -1.9073486328125e-06, -0.00476837158203125, -4.00543212890625e-05, -0.004908561706542969, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.001964569091796875, 0.0, -0.0030362606048583984, 0.0, -0.013646393083035946, 0.0, -5.149617209099233e-05, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Claw", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template31", "hole2": 2}, "_type": "Expr"}, {"value": {"hole1": "increase_armor", "hole0": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template31", "hole2": 2}, "_type": "Expr"}], "hole4": "player", "hole2": [{"hole3": "FREE", "hole1": 1, "hole0": "Claw", "_type": "Template15", "hole2": "DRUID"}]}, "score": -0.10173751050285773, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n", "choice_history": [70, 149, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"]}]}
{"index": 19, "beams": [{"score_history": [-8.7738037109375e-05, -0.018854141235351562, -6.592056161025539e-05, -2.8371459848131053e-05, -1.6050180420279503e-05, -1.39474832394626e-05, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0021305084228515625, -6.4849853515625e-05, -3.576278118089249e-07, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.059027671813964844, 0.0, -0.0002079010009765625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.3709068298339844e-05, -7.927417755126953e-05, -0.004146575927734375, -2.47955322265625e-05, -7.62939453125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -2.0384788513183594e-05, 0.0, -5.340576171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.748603820800781e-06, -2.86102294921875e-05, -0.001361846923828125, -3.0517578125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0009365081205032766, -7.62939453125e-06, -0.026592254638671875, -0.0002841949462890625, -2.47955322265625e-05, -9.34600830078125e-05, -0.0001983642578125, -3.814697265625e-06, -0.0012363195419311523, -9.5367431640625e-06, -0.0007038116455078125, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001373291015625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0014455318450927734, -2.861022494471399e-06, -0.0010063911322504282, 0.0, -0.0016307830810546875, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -0.005142331123352051, 0.0, -0.002044677734375, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -0.0007650852203369141, -5.7220458984375e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0005901371478103101, -3.24249267578125e-05, -8.7738037109375e-05, -7.05718994140625e-05, -0.002439890056848526, -1.1444091796875e-05, -0.0027894973754882812, -0.000225067138671875, -0.0019245147705078125, -0.00011444091796875, -0.0002803802490234375, -1.52587890625e-05, -0.00023651123046875, 0.0, -0.0008258819580078125, -2.47955322265625e-05, -1.1444091796875e-05, -0.00162506103515625, -0.0006427764892578125, -5.7220458984375e-06, -9.775161743164062e-06, 0.0, -0.004001736640930176, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0008013248443603516, 0.0, -0.001621246337890625, -2.288818359375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0018725395202636719, -1.9073486328125e-06, -0.013532280921936035, 0.0, -4.00543212890625e-05, -0.0032548904418945312, -1.1444091796875e-05, -0.005990028381347656, -1.9073486328125e-06, -0.000732421875, -4.76837158203125e-05, -0.0006961822509765625, -3.814697265625e-06, -0.011693954467773438, 0.0, -0.00018703937530517578, 0.0, -2.86102294921875e-05, -0.000194549560546875, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001735687255859375, -9.5367431640625e-06, -8.344649540958926e-05, 0.0, -0.022057436406612396, -1.9073486328125e-06, -0.00022125244140625, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.000301361083984375, -0.0002040863037109375, -0.000194549560546875, -0.0074034929275512695, 0.0, -2.86102294921875e-05, -0.0001087188720703125, -0.0003871917724609375, -0.0008411407470703125, -7.62939453125e-06, -2.288818359375e-05, -0.0002002716064453125, -0.0001201629638671875, -1.1444091796875e-05, -0.0002079010009765625, -1.7404556274414062e-05, -7.867813110351562e-06, -0.0010166168212890625, -0.002033233642578125, -0.000179290771484375, -9.72747802734375e-05, -2.86102294921875e-05, -0.0001430511474609375, -0.000141143798828125, -0.00023651123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.254413604736328e-05, 0.0, -0.0029296875, 0.0, -4.1961669921875e-05, 0.0, -1.0371208190917969e-05, -1.9073486328125e-06, -0.0006313323974609375, -4.1961669921875e-05, -0.00048065185546875, -2.86102294921875e-05, -4.9591064453125e-05, 0.0, -0.0006905794143676758, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -0.0001373291015625, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.001211404800415039, -7.62939453125e-06, -0.0001549710868857801, 0.0, -0.000186920166015625, -0.0011768341064453125, -0.0001621246337890625, -0.00048065185546875, 0.0, -0.00040579307824373245, -4.291534423828125e-06], "model_output": {"hole3": "use", "hole7": [{"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"_type": "BoolOp", "values": [{"hole3": "game", "hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "_type": "Call", "args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}, "ops": [{"_type": "GtE"}], "_type": "Compare", "comparators": [{"_type": "Num", "n": 2}]}], "op": {"_type": "And"}}, "_type": "Return"}], "name": "can_use"}], "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Cleave", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "_type": "Assign", "value": {"func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "_type": "Assign", "value": {"func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"id": "minions", "_type": "Name"}]}}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "hole4": "player", "hole2": [{"hole1": 2, "hole0": "Cleave", "_type": "Template14", "hole2": "WARRIOR"}]}, "score": -0.23182568148433802, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "choice_history": [70, 150, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "minions", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 80, 116, 21, 134, "i", "<EOS>", 16, 110, 21, 134, "range", "<EOS>", 238, 46, 139, "0", "<EOS>", 46, 139, "2", "<EOS>", 251, 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "game", "<EOS>", "random_choice", "<EOS>", 237, 44, 134, "minions", "<EOS>", 93, 196, 21, 134, "minions", "<EOS>", "remove", "<EOS>", 237, 44, 134, "minion", "<EOS>", 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 249, 81, 117, "can_use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 249, 84, 141, 15, 106, 2, 238, 54, 184, 33, 205, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 40, 113, 16, 110, 21, 134, "len", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 234, 6, 237, 46, 139, "2", "<EOS>"]}]}
{"index": 20, "beams": [{"score_history": [-2.09808349609375e-05, -4.9591064453125e-05, -5.602834789897315e-06, -1.2040065485052764e-05, -1.0721851140260696e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -0.002597808837890625, -0.0003948211669921875, -2.3841855067985307e-07, 0.0, -4.0531158447265625e-06, -2.503394853192731e-06, -0.0138702392578125, 0.0, -0.00042724609375, 0.0, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.314018249511719e-05, -8.583032467868179e-06, -0.01875591278076172, -9.5367431640625e-05, -7.62939453125e-06, -4.00543212890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.00010156631469726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, 0.0, -1.919269561767578e-05, -2.86102294921875e-05, -0.009426116943359375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -0.0014286041259765625, 0.0, -9.72747802734375e-05, -0.0015354156494140625, -5.7220458984375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0022220611572265625, -1.9073486328125e-06, -0.0015506744384765625, 0.0, -3.4332275390625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0014190673828125, -3.814697265625e-06, -5.757805411121808e-05, 0.0, -2.09808349609375e-05, -0.025345802307128906, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0002193450927734375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000652313232421875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0002300739288330078, 0.0, -0.003539831144735217, -1.9073486328125e-06, -0.000102996826171875, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.024671554565429688, -0.000141143798828125, -5.340576171875e-05, -6.103515625e-05, -0.0010433197021484375, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.007173657417297363, -1.9073486328125e-05, -0.0021514892578125, 0.0, -0.003223419189453125, 0.0, -2.47955322265625e-05, -0.0032520294189453125, -1.52587890625e-05, -0.0001983642578125, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0005985498428344727, 0.0, -0.0027589197270572186, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Consecration", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}}, {"hole1": "damage", "hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole1": 4, "hole0": "Consecration", "_type": "Template14", "hole2": "PALADIN"}]}, "score": -0.13092955885960578, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "choice_history": [70, 149, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 21, "beams": [{"score_history": [-1.1444091796875e-05, -0.0002651214599609375, -3.373566141817719e-05, -2.3841855067985307e-07, -0.0006297059589996934, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.017278671264648438, -0.0002231597900390625, -1.311301275563892e-06, -0.00011456012725830078, -1.1920928244535389e-07, -0.00013910756388213485, -6.711483001708984e-05, -2.3841855067985307e-07, -0.0005754231242462993, 0.0, -0.0003057339636143297, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.266334533691406e-05, -1.9073486328125e-06, -0.0057610273361206055, 0.0, -2.1457672119140625e-06, 0.0, -0.0003037452697753906, 0.0, -9.5367431640625e-06, -0.001262664794921875, -9.5367431640625e-06, -2.0265579223632812e-06, -7.629365427419543e-06, -0.0005247592926025391, -1.1920928244535389e-07], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "CoreHound", "hole6": [{"hole1": 5, "hole0": 9, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole3": "minion_type", "hole1": 7, "_type": "Template10", "hole0": "Core Hound", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole2": "COMMON"}]}, "score": -0.027659291223173454, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "choice_history": [70, 147, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "9", "<EOS>", "5", "<EOS>"]}]}
{"index": 22, "beams": [{"score_history": [-0.000904083251953125, -3.62396240234375e-05, -9.298310033045709e-06, -4.52994936495088e-06, -1.3110984582453966e-06, -2.0027157006552443e-05, -2.2649765014648438e-06, -3.0517578125e-05, -0.0006465911865234375, -3.814697265625e-05, -5.364403477869928e-06, -4.768370445162873e-07, -3.576272320060525e-06, -1.4305104514278355e-06, -0.0007355213165283203, 0.0, -5.936617890256457e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0009365081787109375, -1.1444091796875e-05, -6.79492904964718e-06, -5.7220458984375e-06, -0.009894728660583496, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -4.780292510986328e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001379251480102539, -1.311301275563892e-06, -0.006412506103515625, -0.005802154541015625, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00067901611328125, -1.1444091796875e-05, -4.172325134277344e-06, -8.58306884765625e-05, -0.005420684814453125, -0.00041961669921875, -9.5367431640625e-06, -4.00543212890625e-05, -0.0016689300537109375, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.03499031066894531, 0.0, -3.62396240234375e-05, -4.57763671875e-05, -5.7220458984375e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.001583099365234375, -3.814697265625e-06, -5.7220458984375e-06, -0.026058197021484375, -0.000152587890625, -0.0001125335693359375, 0.0, -0.0002938508987426758, -0.0034313201904296875, 0.0, -0.001262664794921875, -0.0034351348876953125, -0.0002689361572265625, -0.0026569366455078125, -1.9073486328125e-06, -5.91278076171875e-05, -0.000133514404296875, -0.007500404492020607, -1.33514404296875e-05, 0.0, -0.000640869140625, -0.0029554367065429688, -0.0005674362182617188, -2.384185791015625e-06, -0.0012018593261018395, -5.841255187988281e-06, -5.7220458984375e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Corruption", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_effect", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"func": {"id": "Effect", "_type": "Name"}, "_type": "Call", "args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "player"}], "func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call"}, {"hole3": "SelfSelector", "hole0": "Kill", "_type": "Template19"}]}]}], "hole4": "player", "hole2": [{"hole3": "target_func", "hole1": 1, "_type": "Template11", "hole0": "Corruption", "hole4": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": "WARLOCK"}]}, "score": -0.12200437514752593, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "choice_history": [70, 149, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 237, 39, 110, 21, 134, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Turn", "Started", "<EOS>", 244, 68, 227, "player", "<EOS>", 33, 205, "Enemy", "Player", "<EOS>", 50, 166, "Kill", "<EOS>", "Self", "Selector", "<EOS>"]}]}
{"index": 23, "beams": [{"score_history": [-5.7220458984375e-06, -0.0007762908935546875, -5.5549986427649856e-05, -1.1920928244535389e-07, -0.0014935302315279841, -2.3841855067985307e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.000576019287109375, -9.5367431640625e-06, 0.0, -3.635883331298828e-05, 0.0, -5.4477262892760336e-05, -6.794924047426321e-06, -9.536738616588991e-07, -4.851807898376137e-05, 0.0, -6.079673767089844e-06, 0.0, -1.668929871811997e-05, 0.0, -1.52587890625e-05, -5.91278076171875e-05, -1.71661376953125e-05, -2.9802313292748295e-06, -1.1920928244535389e-07, -2.384185791015625e-06, -2.2649765014648438e-06, -0.002621293067932129, -1.0728830375228426e-06, -7.05718994140625e-05, -6.4849853515625e-05, -0.0006490446394309402, 0.0], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "DalaranMage", "hole6": [{"hole3": {"_type": "Num", "n": 1}, "hole1": 4, "hole0": 1, "_type": "Template22", "hole2": "spell_damage"}], "hole4": "player", "hole2": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template14", "hole2": "ALL"}]}, "score": -0.006613993076669544, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "choice_history": [70, 147, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"]}]}
{"index": 24, "beams": [{"score_history": [-0.00048065185546875, -4.38690185546875e-05, 0.0, -2.0265558760002023e-06, -8.344629350176547e-06, -1.7154961824417114e-05, -0.0001093149185180664, 0.0, -7.62939453125e-06, -0.0021724700927734375, -1.52587890625e-05, -0.00021395819203462452, -0.00013935539755038917, -6.437291176553117e-06, -1.1920928244535389e-07, -0.00025505805388092995, 0.0, -0.013179540634155273, 0.0, -0.00012898442219011486, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.0001621246337890625, -5.53131103515625e-05, -0.00011587142944335938, -4.768370445162873e-07, -0.0004994869232177734, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -2.956390380859375e-05, -1.1920928244535389e-07, -0.00753021240234375, -8.58306884765625e-05, -3.814697265625e-05, -0.0002288818359375, -2.288818359375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00029861927032470703, 0.0, -2.1219253540039062e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -1.192092622659402e-05, -6.29425048828125e-05, -0.0090789794921875, -0.0003986358642578125, -2.288818359375e-05, -6.29425048828125e-05, -0.000110626220703125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.6954811548639555e-06, -0.1493145227432251, 0.0, -0.0012874603271484375, -0.0022220611572265625, -6.29425048828125e-05, -0.0004787445068359375, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.004268646240234375, 0.0, -0.000213623046875, -1.9073468138230965e-06, -0.02271413803100586, -2.384185791015625e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "DivineSpirit", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "increase_health", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}], "hole4": "player", "hole2": [{"hole3": "target_func", "hole1": 2, "_type": "Template11", "hole0": "Divine Spirit", "hole4": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": "PRIEST"}]}, "score": -0.21681359968953018, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "choice_history": [70, 149, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"]}]}
{"index": 25, "beams": [{"score_history": [-3.814697265625e-06, -0.000453948974609375, -6.294052582234144e-05, -2.861022494471399e-06, -0.0007435922743752599, -2.3841855067985307e-07, -1.9073486328125e-06, -1.1920922133867862e-06, -6.103515625e-05, -0.0030469894409179688, -0.05424690246582031, -2.0265579223632812e-06, -0.0005555135430768132, -4.208087921142578e-05, -2.76564787782263e-05, -0.00013399124145507812, -0.0004495622997637838, -0.0002046823501586914, -6.16293036728166e-05, -0.00012397255341056734, -0.0013223878340795636, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.00020609391503967345, -0.001980417175218463, -0.00011157982225995511, -5.471595432027243e-05, -7.4979972850997e-05, -3.6954863844584906e-06, -0.00011265246575931087, -3.814697265625e-06, -2.9563620046246797e-05, 0.0, -1.9073486328125e-06, -0.0003414154052734375, -6.67572021484375e-05, -0.0004673004150390625, -5.960462772236497e-07, 0.0, -5.960462772236497e-07], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "DragonlingMechanic", "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole3": "Summon", "hole1": 4, "hole5": "PlayerSelector", "_type": "Template6", "hole0": "Dragonling Mechanic", "hole4": [{"hole0": "MechanicalDragonling", "_type": "Template39"}], "hole2": "COMMON"}]}, "score": -0.0650259918662357, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "choice_history": [70, 147, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 214, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 237, 63, 205, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "4", "<EOS>"]}]}
{"index": 26, "beams": [{"score_history": [-0.0006465911865234375, -9.5367431640625e-06, -2.0265579223632812e-06, -5.602820692729438e-06, -3.4689302992774174e-05, -8.457922376692295e-06, -8.225440979003906e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.001224517822265625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9430925021879375e-05, -6.0915939684491605e-05, -5.960462772236497e-07, 0.0, -1.71661376953125e-05, 0.0, -1.0132787792827003e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, -4.661082857637666e-05, 0.0, -0.007388114929199219, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.029287338256835938, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002651214599609375, -0.00106048583984375, -2.6702880859375e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -0.00016021728515625, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.09289371967315674, 0.0, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.008845329284667969, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001049041748046875, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9192693798686378e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, -7.43865966796875e-05, -9.34600830078125e-05, -4.57763671875e-05, -0.0001125335693359375, -1.33514404296875e-05, -3.814697265625e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0019037723541259766, -3.814697265625e-06, -3.24249267578125e-05, -0.000640869140625, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016231536865234375, 0.0, -0.0011629898799583316, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00115966796875, -0.000156402587890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.011234283447265625, 0.0, -0.0015549659729003906, 0.0, -0.021430373191833496, 0.0, -0.0015859603881835938, 0.0, -6.103515625e-05, -0.0004978179931640625, -7.2479248046875e-05, -8.58306884765625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.001674532424658537, -3.099440846199286e-06, -0.00033077422995120287, -9.536738616588991e-07, -5.7220458984375e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "DrainLife", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "heal", "hole0": {"attr": "hero", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.18916243803051458, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "choice_history": [70, 149, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Drain", " ", "Life", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 27, "beams": [{"score_history": [-0.0023641586303710938, -0.0001544952392578125, -3.4332275390625e-05, -0.0006961822509765625, -7.62939453125e-06, -3.123234637314454e-05, -7.033323527139146e-06, -4.0531076592742465e-06, -1.52587890625e-05, -5.7220458984375e-05, -9.5367431640625e-06, -2.3840402718633413e-07, -0.0003402233123779297, -1.9073486328125e-06, -0.000293731689453125, -0.0012073516845703125, -0.00022125244140625, -2.2649508537142538e-05, -5.900859832763672e-05, -3.862380617647432e-05, -1.9073486328125e-06, -3.7458066799445078e-06, -1.1920928244535389e-07, -0.0030274391174316406, -9.5367431640625e-06, -0.000522613525390625, 0.0, -0.009580850601196289, 0.0, -9.1552734375e-05, 0.0, -0.00012969970703125, 0.0, -0.0015268325805664062, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.00872039794921875, -0.02729511260986328, -0.0008378024213016033, -1.1920928244535389e-07, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0001549404114484787, -3.063678741455078e-05, -0.00029360479675233364, -0.0001621246337890625, -1.9073486328125e-06, -0.13134479522705078, -0.00075531005859375, -1.1444091796875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -4.9591064453125e-05, -0.00037384033203125, -1.9073486328125e-06, -0.004874229431152344, -5.14984130859375e-05, -4.470248313737102e-05, -5.7220458984375e-06, -6.152358400868252e-05, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "COMMON", "hole7": "battlecry", "hole1": 6, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole0": "Dread Infernal", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}], "hole2": "CharacterSelector"}, "hole6": "DEMON", "hole4": "minion_type", "hole2": "WARLOCK"}, {"hole1": 6, "hole0": 6, "_type": "Template8"}], "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "name": "DreadInfernal"}]}, "score": -0.1960561478481253, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "choice_history": [69, 133, 249, 78, 112, "Dread", "Infernal", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 244, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 97, 219, "6", "<EOS>", "6", "<EOS>"]}]}
{"index": 28, "beams": [{"score_history": [-0.2209005355834961, -7.82012939453125e-05, -0.0009528625523671508, -1.311301275563892e-06, -8.451581379631534e-05, -4.768370445162873e-07, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -0.0002498626708984375, -0.09943103790283203, -4.971027374267578e-05, -0.0001250469358637929, -1.1920928244535389e-07, 0.0, -1.0729058885772247e-06, -2.3841855067985307e-07, -0.0034956932067871094, -1.52587890625e-05, -0.0008620822918601334, 0.0, -5.91278076171875e-05, -6.29425048828125e-05, 0.0, -3.2335519790649414e-06, -4.57763671875e-05, -0.0010660348925739527, -3.0517578125e-05, 0.0, -0.001682281494140625, -9.5367431640625e-05, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -0.0002727508544921875, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.0014781951904296875, 0.0, -0.02864837646484375, -1.9073486328125e-06, -0.000545501708984375, -0.00018143653869628906, 0.0, -2.47955322265625e-05, 0.0, -3.063678741455078e-05, 0.0, -7.2479248046875e-05, -0.001506805419921875, -3.814697265625e-05, -8.344654816028196e-07, -1.1920928244535389e-07, -3.965722135035321e-05, 0.0], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "ElvenArcher", "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole3": "Damage", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole1": 1, "hole5": "CharacterSelector", "_type": "Template6", "hole0": "Elven Archer", "hole4": [{"_type": "Num", "n": 1}], "hole2": "COMMON"}]}, "score": -0.3624954394689013, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "choice_history": [70, 147, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 249, 95, 216, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "1", "<EOS>", "1", "<EOS>"]}]}
{"index": 29, "beams": [{"score_history": [-2.86102294921875e-05, -7.62939453125e-05, -2.9802317840221804e-06, -8.344646857949556e-07, -0.00023041343956720084, -0.0006151348352432251, -3.24249267578125e-05, -2.1457672119140625e-06, -5.7220458984375e-06, -0.00017547607421875, -0.0016021728515625, -0.0002384185791015625, -5.7220458984375e-06, -1.9669374523800798e-05, -7.665157318115234e-05, -8.463859558105469e-05, 0.0, -0.33277034759521484, -2.288818359375e-05, -7.62939453125e-06, -8.833035099087283e-05, -0.00084924534894526, -3.6238969187252223e-05, -0.0002633333206176758, -0.001361846923828125, 0.0, -0.00046058333828113973, -4.14844362239819e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -3.0994415283203125e-05, 0.0, -0.0798337459564209, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.0048198699951171875, -1.9073486328125e-05, -9.28640365600586e-05, -1.1920928244535389e-07, -4.57763671875e-05, -5.7220458984375e-06, -0.013280868530273438, 0.0, -0.0070095062255859375, -9.918212890625e-05, -0.7614670991897583, 0.0, -0.0035219192504882812, 0.0, -0.0001990795135498047, 0.0, -3.0517578125e-05, -3.814697265625e-06, -0.00012421607971191406, -4.41074053014745e-06, -0.0059566497802734375, -2.288818359375e-05, -1.52587890625e-05, -0.0004405975341796875, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -6.675719760096399e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -2.2649765014648438e-06, -5.7220458984375e-06, -5.960462203802308e-06, -2.288818359375e-05, -0.030704498291015625, -5.7220458984375e-06, -0.00066375732421875, -4.57763671875e-05, -0.006328582763671875, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0012865066528320312, -5.006789251638111e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "ExcessMana", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}, "_type": "Expr"}], "hole4": "player", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "COMMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -1.2555889571791496, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, MINION_TYPE.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "choice_history": [70, 149, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Excess", " ", "Mana", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"]}]}
{"index": 30, "beams": [{"score_history": [-0.0011997222900390625, -0.000240325927734375, -1.52587890625e-05, -0.0003490447998046875, -4.76837158203125e-05, -5.960462772236497e-07, -0.0001045410826918669, -1.52587890625e-05, -2.86102294921875e-05, -0.0001087188720703125, -0.00021228929108474404, -0.00012600421905517578, -3.814697265625e-06, -9.918212890625e-05, -6.866455078125e-05, -0.00023651123046875, -1.0728830375228426e-06, -2.1219253540039062e-05, -3.576278118089249e-07, -1.1920922133867862e-06, -0.003128528594970703, -3.814697265625e-06, -0.0003668069839477539, 0.0, -0.004017710220068693, -8.106231689453125e-06, -0.0001964569091796875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006580352783203125, -4.38690185546875e-05, -3.814697265625e-05, -4.00543212890625e-05, -0.017582058906555176, 0.0, -0.00648343563079834, 0.0, -0.000217437744140625, -8.392333984375e-05, -0.00022125244140625, -0.000530242919921875, -0.0002040863037109375, -0.00567626953125, -0.0003566741943359375, -0.0001049041748046875, -0.000698089599609375, -1.33514404296875e-05, -0.0004425048828125, -0.000446319580078125, -0.00030517578125, -2.09808349609375e-05, -0.0007305145263671875, 0.0, -0.0004781484603881836, -7.82012939453125e-05, -0.003573298454284668, -2.503394853192731e-06, -3.814697265625e-06, -0.21419811248779297, -5.91278076171875e-05, -0.0004119873046875, -8.20159912109375e-05, -4.1961669921875e-05, -3.814697265625e-06, -0.00011396383342798799, -0.0001354217529296875, -0.013087987899780273, -1.33514404296875e-05, -0.0072917938232421875, -7.2479248046875e-05, -1.1444091796875e-05, 0.0, -0.00018954261031467468, -0.00010585784912109375, -0.002119302749633789, -0.0004730224609375, -9.34600830078125e-05, -0.000133514404296875, -0.0011788606643676758, -0.0001583099365234375, -4.9591064453125e-05, -0.0002727508544921875, -0.00011444091796875, -8.0108642578125e-05, -6.866455078125e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.0001163482666015625, -2.86102294921875e-05, -3.814697265625e-05, -4.2319297790527344e-05, -4.1723224057932384e-06, -0.0017528533935546875, -0.000110626220703125, -7.62939453125e-06, -0.001125335693359375, -1.52587890625e-05, -2.288818359375e-05, 0.0, -4.589557647705078e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000286102294921875, -3.814697265625e-06, -5.841255187988281e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.003330230712890625, -7.62939453125e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0003057718276977539, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010061264038085938, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06], "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "FREE", "hole7": "filter_func", "hole1": 1, "hole5": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template0", "hole0": "Execute", "hole8": {"args": {"hole0": "target", "_type": "Template21"}, "_type": "Lambda", "body": {"_type": "BoolOp", "values": [{"left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare", "comparators": [{"hole1": "calculate_max_health", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}]}, {"hole1": "spell_targetable", "hole0": {"id": "target", "_type": "Name"}, "_type": "Template36"}], "op": {"_type": "And"}}}, "hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole2": "WARRIOR"}, {"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "die", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "use"}], "_type": "ClassDef", "bases": [{"id": "SpellCard", "_type": "Name"}], "name": "Execute"}]}, "score": -0.2988174865778319, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "choice_history": [69, 133, 249, 78, 112, "Execute", "<EOS>", 237, 44, 134, "Spell", "Card", "<EOS>", 250, 85, 146, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 127, 0, 177, "target", "<EOS>", 15, 106, 2, 238, 40, 113, 13, 103, 21, 134, "target", "<EOS>", "health", "<EOS>", 234, 12, 237, 60, 195, 21, 134, "target", "<EOS>", "calculate_max_health", "<EOS>", 60, 195, 21, 134, "target", "<EOS>", "spell_targetable", "<EOS>", 81, 117, "use", "<EOS>", 1, 225, 233, 224, "self", "<EOS>", 224, "player", "<EOS>", 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 237, 44, 134, "self", "<EOS>"]}]}
{"index": 31, "beams": [{"score_history": [-2.288818359375e-05, -0.000179290771484375, -7.939023635117337e-05, -0.0005500147817656398, -2.038461752817966e-05, -1.9073468138230965e-06, -0.00015723136311862618, -7.987019671418238e-06, 0.0, -5.7220458984375e-06, -0.0004215240478515625, -0.000102996826171875, -4.255681051290594e-05, -9.59634780883789e-05, -3.695487976074219e-05, -7.43865966796875e-05, -6.318092346191406e-06, 0.0, -7.152552825573366e-07, -7.152555099310121e-07, -0.018273591995239258, 0.0, -1.1563301086425781e-05, 0.0, -3.576277322281385e-06, 0.0, -2.47955322265625e-05, -9.72747802734375e-05, -2.0265579223632812e-06, -2.861018856492592e-06, -0.00078582763671875, -3.814697265625e-06, -6.29425048828125e-05, -0.000118255615234375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016307830810546875, 0.0, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -5.245207830739673e-06, -2.6702880859375e-05, -0.000640869140625, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -0.0037183761596679688, -0.0006656646728515625, -1.9073486328125e-05, -0.0002689361572265625, -7.2479248046875e-05, -2.47955322265625e-05, -0.0027179718017578125, -1.9073486328125e-06, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0018275976181030273, -1.1920928244535389e-07, -0.0016499967314302921, 0.0, -6.866455078125e-05, -0.01885986328125, -1.9073486328125e-06, -0.0004138946533203125, 0.0, -3.445148468017578e-05, 0.0, -0.0005171298980712891, -3.933906555175781e-06, -5.7220458984375e-06, -0.0013456344604492188, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -5.543231964111328e-05, 0.0, -0.0011541788699105382, -1.5497195136049413e-06, -0.005225896369665861, -9.536738616588991e-07, -3.62396240234375e-05, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.007706642150878906, -2.86102294921875e-05, -0.00032806396484375, -1.9073486328125e-06, -0.01644134521484375, -7.62939453125e-05, -3.24249267578125e-05, 0.0, -0.0010406970977783203, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "FanOfKnives", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}}, {"value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}, "_type": "Expr"}], "hole4": "player", "hole2": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template14", "hole2": "ROGUE"}]}, "score": -0.08748792422681362, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "choice_history": [70, 149, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"]}]}
{"index": 32, "beams": [{"score_history": [-0.0003108978271484375, -3.62396240234375e-05, -5.960462772236497e-07, -9.667406266089529e-05, -3.9338774513453245e-06, -2.0980827684979886e-05, 0.0, -9.5367431640625e-06, -0.001239776611328125, -0.0002346038818359375, -3.814697265625e-06, 0.0, -2.622604142743512e-06, 0.0, -7.092952728271484e-05, 0.0, -6.866455078125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.0251977982989047e-05, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, -8.583032467868179e-06, -7.748603820800781e-06, -1.33514404296875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017786026000976562, -1.9073486328125e-06, -0.011003613471984863, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.019664764404296875, -1.9073486328125e-06, -0.000308990478515625, -0.000133514404296875, -8.0108642578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.000186920166015625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.000125885009765625, -1.9073486328125e-06, -0.00104522705078125, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001239776611328125, -7.82012939453125e-05, -9.5367431640625e-06, -2.503394853192731e-06, -0.0001316070556640625, -0.00037384033203125, -4.38690185546875e-05, -0.0003185272216796875, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.8743019104003906e-05, 0.0, -1.2993811651540454e-05, 0.0, -0.001903533935546875, -5.7220458984375e-06, -1.4066643416299485e-05, -5.7220458984375e-06, -3.0517578125e-05, -0.00025177001953125, -6.103515625e-05, -1.71661376953125e-05, -0.0001468658447265625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00048732757568359375, 0.0, -0.0001964569091796875, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -5.7220458984375e-05, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0008280276088044047, 0.0, -0.0014239534502848983, -4.887569048150908e-06, -0.0011425018310546875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Fireball", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.043347233033557586, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "choice_history": [70, 149, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Fireball", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 33, "beams": [{"score_history": [-7.62939453125e-06, -0.0008716583251953125, -6.6756979322235566e-06, -7.629365427419543e-06, -1.430191332474351e-06, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, -0.0009613037109375, -0.0004749298095703125, -4.6491513785440475e-06, 0.0, -3.576272320060525e-06, -1.3947414117865264e-05, -0.0090407133102417, -8.344646857949556e-07, -4.57763671875e-05, 0.0, -2.1457672119140625e-06, 0.0, -2.09808349609375e-05, -0.000553131103515625, -1.442432312614983e-05, -6.0558020777534693e-05, -0.0002803802490234375, -2.47955322265625e-05, -1.1444091796875e-05, -0.0002079010009765625, -0.0001220703125, -1.71661376953125e-05, 0.0, -0.00024151800607796758, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, 0.0, -3.933906555175781e-06, -9.5367431640625e-06, -0.00032806396484375, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.00038909912109375, 0.0, -0.011368751525878906, -8.0108642578125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.000225067138671875, -1.1444091796875e-05, -0.00116729736328125, -1.9073486328125e-06, -0.0020236968994140625, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008431673049926758, -1.9073486328125e-06, -0.00010703956650104374, 0.0, -1.52587890625e-05, -0.00104522705078125, -3.814697265625e-06, -0.0002593994140625, 0.0, -1.9073486328125e-05, 0.0, -0.0002499818801879883, -3.814697265625e-06, 0.0, -0.0004367828369140625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.006482124328613281, 0.0, -0.0005538462428376079, 0.0, -0.001444574212655425, -1.1920928244535389e-07, -3.0517578125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.814697265625e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Flamestrike", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 4}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}}], "hole4": "player", "hole2": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template14", "hole2": "MAGE"}]}, "score": -0.04051874545540812, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "choice_history": [70, 149, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "4", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 34, "beams": [{"score_history": [-7.62939453125e-06, -0.0001068115234375, -0.0010176619980484247, -2.2411237296182662e-05, -2.0265473722247407e-05, -2.7894584491150454e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.05229759216308594, -4.9591064453125e-05, -7.271502545336261e-05, -0.00012862682342529297, -0.0004334449768066406, -0.0017414093017578125, -0.00026982868439517915, 0.0, -0.014566898345947266, -1.9073486328125e-06, -0.00020456314086914062, 0.0, -0.0001354217529296875, -0.000553131103515625, -1.71661376953125e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-05, -0.0016937255859375, 0.0, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005397796630859375, -0.00017547607421875, -4.208087921142578e-05, -1.204010459332494e-05, -7.18832015991211e-05, -1.1920928244535389e-07, -0.0035344171337783337, 0.0, -0.0001087188720703125, -0.009120941162109375, -0.0007494688034057617, -3.826618194580078e-05, -0.0003795623779296875, -0.007030487060546875, -0.000301361083984375, -0.02710193395614624, -8.499559771735221e-05, -0.0010471343994140625, -0.0009670257568359375, -0.0001925826072692871, -5.24516508448869e-05, -1.9669374523800798e-05, -0.0015938864089548588, -0.000756715249735862], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "FlametongueTotem", "hole6": [{"hole3": {"hole1": [{"hole0": 2, "_type": "Template32"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template26"}], "hole0": "Aura", "_type": "Template38"}, "hole1": 3, "hole0": 0, "_type": "Template22", "hole2": "auras"}], "hole4": "player", "hole2": [{"hole3": "minion_type", "hole1": 2, "_type": "Template11", "hole0": "Flametongue Totem", "hole4": {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole2": "SHAMAN"}]}, "score": -0.12748054654819896, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "choice_history": [70, 147, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "2", "<EOS>", 53, 182, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"]}]}
{"index": 35, "beams": [{"score_history": [-1.1444091796875e-05, -0.0014286041259765625, -1.7166130419354886e-05, -0.0009628775296732783, -1.7881368421512889e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.014127731323242188, -0.0034275054931640625, -2.09808349609375e-05, 0.0, -0.0001325606572208926, 0.0, -8.821484516374767e-05, -1.9073486328125e-06, -0.0065155029296875, -5.7220458984375e-06, -0.0003986358642578125, -2.3841855067985307e-07, -8.618537685833871e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1782889487221837e-05, -7.152551916078664e-06, -0.0001697540283203125, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.687639688607305e-05, -2.3841855067985307e-07, -6.496792047983035e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0004369020462036133, -5.960462772236497e-07, -0.00024902820587158203, 0.0, -0.000118255615234375, -9.5367431640625e-06, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0007991790771484375, -2.288818359375e-05, -0.0047283172607421875, -8.58306884765625e-05, -0.0017460485687479377, 0.0, -0.05237331986427307, -1.9073486328125e-06, -5.7220458984375e-06, -0.000881195068359375, -0.0001773834228515625, -2.825220326485578e-05, -1.442432312614983e-05, -1.0012954589910805e-05, -4.5299530029296875e-06, -0.0014660211745649576, -0.000255584716796875, -0.0006685256958007812, -4.1961669921875e-05, -0.006574265193194151, -8.58306884765625e-05], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "Frog", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 1, "hole0": 0, "_type": "Template22", "hole2": "taunt"}], "hole4": "p", "hole2": [{"hole3": [{"hole0": "BEAST", "_type": "Template35"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}]}, "score": -0.0984613868931632, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "choice_history": [70, 147, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Frog", "<EOS>", 46, 139, "0", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 249, 90, 178, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 36, "beams": [{"score_history": [-7.62939453125e-06, -0.000732421875, -5.960462772236497e-07, -1.3708974620385561e-05, -1.1920928244535389e-07, -2.9251212254166603e-05, -7.748602001811378e-06, 0.0, -1.33514404296875e-05, -0.0001659393310546875, -9.5367431640625e-05, -2.145764938177308e-06, -8.702233753865585e-05, -2.622604142743512e-06, 0.0, -3.337851921969559e-06, -5.960462772236497e-07, -0.001399993896484375, 0.0, -5.340576171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -6.4373016357421875e-06, -6.759159441571683e-05, -0.0022830963134765625, -3.814697265625e-06, -0.0001049041748046875, -0.0016231536865234375, -0.0001583099365234375, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002574920654296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.009355545043945312, 0.0, -0.0061054229736328125, -0.0007476806640625, -0.0001392364501953125, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -0.014291167259216309, -6.866455078125e-05, -0.001419002772308886, 0.0, -0.000507354736328125, -0.008813858032226562, -9.5367431640625e-06, -0.005916595458984375, 0.0, -0.0016463994979858398, 0.0, -0.0267869234085083, 0.0, -0.000217437744140625, -0.001636505126953125, -0.000644683837890625, -0.0018095937557518482, -7.867813110351562e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "FrostNova", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"hole1": "add_buff", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}}], "hole4": "player", "hole2": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template14", "hole2": "MAGE"}]}, "score": -0.08778736619830596, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "choice_history": [70, 149, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"]}]}
{"index": 37, "beams": [{"score_history": [-0.000263214111328125, -7.82012939453125e-05, -7.152555099310121e-07, -1.168244216387393e-05, -6.31808916295995e-06, -1.0658055543899536e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00080108642578125, -4.1961669921875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -4.768370445162873e-07, -6.616104656131938e-05, -2.2649765014648438e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.001280401716940105, 0.0, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.003032684326171875, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.015443801879882812, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -0.0001316070556640625, -0.0043964385986328125, -1.9073486328125e-06, -0.0003948211669921875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -0.006976127624511719, -1.9073486328125e-06, -0.00014722347259521484, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.841255187988281e-06, -0.0055637359619140625, -1.71661376953125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -3.814697265625e-06, 0.0, -8.392333984375e-05, -1.1444091796875e-05, -4.41074053014745e-06, -0.0001373291015625, -0.000156402587890625, -2.6702880859375e-05, -0.0002460479736328125, 0.0, -0.0002689361572265625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.000560760498046875, 0.0, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.00012648104166146368, 0.0, -0.0017125257290899754, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00496673583984375, -9.1552734375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.011766433715820312, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.02519702911376953, 0.0, -0.0033092498779296875, -0.0034914016723632812, -0.000225067138671875, -0.01110696792602539, -4.398822784423828e-05], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "FrostShock", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.10437511202110272, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "choice_history": [70, 149, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Frost", " ", "Shock", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "1", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"]}]}
{"index": 38, "beams": [{"score_history": [-0.0002956390380859375, -8.20159912109375e-05, -2.4676019165781327e-05, -5.006777428206988e-06, -1.1918018572032452e-07, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.00164794921875, -3.0517578125e-05, -2.861018856492592e-06, 0.0, -8.225439160014503e-06, -1.1920928244535389e-07, -0.06631910800933838, -1.1920928244535389e-07, -0.002172112464904785, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.010066986083984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.576278118089249e-07, -0.008057594299316406, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.204010459332494e-05, -4.76837158203125e-05, -0.000286102294921875, -4.00543212890625e-05, -0.0001583099365234375, -5.53131103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.003681182861328125, 0.0, -5.7220458984375e-06, -0.000827789306640625, -1.9073486328125e-06, -0.000560760498046875, -1.71661376953125e-05, -0.0001964569091796875, 0.0, -0.00023841799702495337, 0.0, -0.00036096316762268543, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.016969680786132812, -0.0004863739013671875, -0.0001220703125, -3.814697265625e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.02499866485595703, 0.0, -0.0002384185791015625, -0.014693260192871094, -0.00016021728515625, -0.004740715026855469, -0.00012671947479248047], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Frostbolt", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"hole1": "add_buff", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole0": "Frozen", "_type": "Template25"}]}], "hole4": "player", "hole2": [{"hole3": "target_func", "hole1": 2, "_type": "Template11", "hole0": "Frostbolt", "hole4": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": "MAGE"}]}, "score": -0.15857910757073057, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "choice_history": [70, 149, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 237, 52, 180, "Frozen", "<EOS>"]}]}
{"index": 39, "beams": [{"score_history": [-7.62939453125e-06, -0.00150299072265625, -4.303362584323622e-05, -1.1920928244535389e-07, -4.4226108002476394e-05, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001926422119140625, -1.52587890625e-05, 0.0, -3.552436828613281e-05, 0.0, 0.0, -1.5516052371822298e-06, -1.1920928244535389e-07, -5.2213596063666046e-05, 0.0, -2.5153160095214844e-05, 0.0, -9.226771362591535e-05, 0.0, -3.814697265625e-06, -0.0001087188720703125, -4.38690185546875e-05, 0.0, -9.536738616588991e-07, -0.00018308557628188282, -1.1920928244535389e-07, -0.0007579326629638672, -1.9073486328125e-06, -0.0025386810302734375, -1.1444091796875e-05, -0.00023901430540718138, -8.106231689453125e-05], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "FrostwolfGrunt", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "taunt"}], "hole4": "player", "hole2": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template14", "hole2": "ALL"}]}, "score": -0.005989173772348977, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "choice_history": [70, 147, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 40, "beams": [{"score_history": [-5.7220458984375e-06, -0.0007228851318359375, -3.290122185717337e-05, -1.1920928244535389e-07, -3.921941606677137e-05, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.52587890625e-05, 0.0, -3.0994415283203125e-05, 0.0, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -7.164468115661293e-05, 0.0, -1.811981201171875e-05, 0.0, -0.00010585747077129781, 0.0, -9.5367431640625e-06, -7.62939453125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.6689286894688848e-06, -2.0384770323289558e-05, 0.0, -0.0006798505783081055, -3.814697265625e-06, -0.001560211181640625, -1.1444091796875e-05, -0.0002890816831495613, -6.794929504394531e-05], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "GoldshireFootman", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2, "hole0": 1, "_type": "Template22", "hole2": "taunt"}], "hole4": "player", "hole2": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template14", "hole2": "ALL"}]}, "score": -0.00403427845088089, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "choice_history": [70, 147, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 41, "beams": [{"score_history": [-0.0004863739013671875, -8.0108642578125e-05, -0.00025686301523819566, -2.2649765014648438e-06, -0.0003979606262873858, -2.861018856492592e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0002498626708984375, -0.000240325927734375, 0.0, -0.0001851278357207775, -2.3841855067985307e-07, -1.1920928244535389e-07, -9.775185390026309e-06, -2.3841855067985307e-07, -0.0007562637329101562, 0.0, -3.230571746826172e-05, -1.1920928244535389e-07, -0.000335693359375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.010088443756103516, -3.933906555175781e-06, -0.00010323509195586666, 0.0, -0.00015938276192173362, 0.0, -3.814697265625e-06, -0.00102996826171875, -0.000148773193359375, -2.384185336268274e-06, -5.364403477869928e-06, -0.0001277966657653451, -4.529942543740617e-06, -0.0013021038612350821, -1.1920928244535389e-07, -7.05718994140625e-05, -0.04654216766357422, -0.001775979995727539, -0.000574946403503418, -2.86102294921875e-05, -0.030533790588378906, -0.000812530517578125, -0.18950340151786804, -5.8412379075889476e-06, -0.00180816650390625, -0.000125885009765625, -0.000461578369140625, -7.62939453125e-05, -3.0274270102381706e-05, -0.0006284713745117188, -1.1920928244535389e-07, -0.0010662078857421875, -0.000171661376953125, -9.5367431640625e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0013089001877233386, -0.0007832050323486328, 0.0, -0.0029697418212890625, -0.0001392364501953125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0015395879745483398, -2.86102294921875e-05, -0.005277752876281738, -3.0517578125e-05, -0.000469207763671875, 0.0, -0.0007528065470978618, -0.0006353855133056641, -9.5367431640625e-06], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "GrimscaleOracle", "hole6": [{"hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call", "args": [{"func": {"id": "IsType", "_type": "Name"}, "_type": "Call", "args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}, {"hole0": "BothPlayer", "_type": "Template39"}]}], "hole0": "Aura", "_type": "Template38"}, "hole1": 1, "hole0": 1, "_type": "Template22", "hole2": "auras"}], "hole4": "player", "hole2": [{"hole3": "minion_type", "hole1": 1, "_type": "Template10", "hole0": "Grimscale Oracle", "hole4": {"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole2": "COMMON"}]}, "score": -0.3044710702073701, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "choice_history": [70, 147, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 39, 110, 21, 134, "Minion", "Selector", "<EOS>", 238, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 205, "Both", "Player", "<EOS>"]}]}
{"index": 42, "beams": [{"score_history": [-7.62939453125e-06, -0.00060272216796875, -0.0002795067266561091, -0.002401511650532484, -0.0003784178989008069, -0.0004064271633978933, -5.722029527532868e-06, -1.9073486328125e-06, -1.919269561767578e-05, -4.38690185546875e-05, -0.0046138763427734375, -0.000102996826171875, -2.0265558760002023e-06, -0.0015034337993711233, -2.4676321118022315e-05, -2.872943878173828e-05, -4.410743713378906e-06, -1.9073486328125e-06, -0.00014162063598632812, -5.8412379075889476e-06, -0.0015565156936645508, 0.0, -0.0002827644348144531, 0.0, -0.010385513305664062, -0.0007610321044921875, -0.0054749078117311, -0.00013529389980249107, -0.0045108795166015625, -0.0002498626708984375, 0.0, -0.0003301712276879698, -5.7220458984375e-06, -0.0003300905227661133, -3.9577484130859375e-05, -1.9073486328125e-06, -0.025213956832885742, -3.814697265625e-06, -1.4543528777721804e-05, 0.0, -1.1444091796875e-05, -0.01265716552734375, -0.000213623046875, -0.0005897283554077148, 0.0, -4.0531158447265625e-06, 0.0], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "GuardianOfKings", "hole6": [{"hole1": 6, "hole0": 5, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole3": "battlecry", "hole1": 7, "_type": "Template11", "hole0": "Guardian of Kings", "hole4": {"hole1": [{"_type": "Num", "n": 6}], "hole0": "Heal", "_type": "Template18", "hole2": "HeroSelector"}, "hole2": "PALADIN"}]}, "score": -0.0733489926076345, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "choice_history": [70, 147, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 249, 87, 152, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 25, 162, "Heal", "<EOS>", 237, 46, 139, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "5", "<EOS>", "6", "<EOS>"]}]}
{"index": 43, "beams": [{"score_history": [-3.814697265625e-06, -8.58306884765625e-05, -0.00019810620869975537, -4.768370445162873e-07, -2.1219066184130497e-05, -5.960462772236497e-07, -9.5367431640625e-06, 0.0, 0.0, -0.0030412673950195312, -1.1444091796875e-05, 0.0, -7.200239633675665e-05, 0.0, 0.0, -8.523459837306291e-05, -7.152555099310121e-07, -3.194808232365176e-05, 0.0, -2.09808349609375e-05, 0.0, -6.556510470545618e-06, 0.0, -1.33514404296875e-05, -9.72747802734375e-05, -4.1961669921875e-05, 0.0, -1.9073468138230965e-06, -1.5854835510253906e-05, -3.0636318115284666e-05, -0.0025295016821473837, -1.9073486328125e-06, -0.01577472686767578, -0.000522613525390625, -0.0006562471389770508, 0.0, -7.62939453125e-06, -0.000110626220703125, -0.000659942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -0.009195908904075623, -0.010713338851928711, -8.2254373410251e-06, -0.00038909912109375, -2.288818359375e-05, -3.814697265625e-06, -0.012350201606750488, -1.9073486328125e-06, -0.0003795623779296875, 0.0, -0.003346563782542944, -0.0024758577346801758, -0.007143095135688782, -5.7220458984375e-06, -0.000141143798828125, -0.0001010894775390625, -0.0003663301467895508, -4.971027374267578e-05, -1.9073486328125e-06, -0.0009822845458984375, -0.000400543212890625, -0.024628203362226486, -3.814697265625e-05, -0.000274658203125, -1.33514404296875e-05, -1.9073486328125e-06], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "GurubashiBerserker", "hole6": [{"hole3": {"hole1": [{"keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template39"}, "_type": "keyword", "arg": "condition"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"hole3": "SelfSelector", "hole1": [{"hole0": 3, "_type": "Template32"}], "hole0": "Give", "_type": "Template19"}], "hole0": "Effect", "_type": "Template38"}, "hole1": 7, "hole0": 2, "_type": "Template22", "hole2": "effects"}], "hole4": "player", "hole2": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template14", "hole2": "ALL"}]}, "score": -0.09712942632808108, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "choice_history": [70, 147, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 32, 200, "Effect", "<EOS>", 238, 39, 109, 21, 134, "Character", "Damaged", "<EOS>", 244, 68, 227, "condition", "<EOS>", 33, 205, "Minion", "Is", "Target", "<EOS>", 50, 169, "Give", "<EOS>", 237, 57, 191, "3", "<EOS>", "Self", "Selector", "<EOS>"]}]}
{"index": 44, "beams": [{"score_history": [-0.0004482269287109375, -1.33514404296875e-05, -2.753696753643453e-05, -0.0010689196642488241, -3.0874729418428615e-05, -0.00010060777276521549, -0.0003840755671262741, -1.6570091247558594e-05, 0.0, -5.340576171875e-05, -0.0003414154052734375, -3.814697265625e-05, -7.62939453125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.5616416931152344e-05, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.9591064453125e-05, -4.660974445869215e-05, -6.878376007080078e-05, -5.817412966280244e-05, -4.1961669921875e-05, -1.788138979463838e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.1920922133867862e-06, -2.86102294921875e-05, -8.392333984375e-05, -3.0517578125e-05, -1.1444091796875e-05, -8.475767390336841e-05, 0.0, -0.0071811676025390625, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.000347137451171875, -1.9073486328125e-06, -0.022434234619140625, -1.9073486328125e-06, -2.47955322265625e-05, -0.000316619873046875, -4.1961669921875e-05, -4.589557647705078e-05, -1.4543453289661556e-05, -0.000171661376953125, -0.0001659393310546875, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003376007080078125, -5.7220458984375e-06, -6.520748138427734e-05, 0.0, -0.0006619691848754883, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -0.0052318572998046875, -7.62939453125e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.00012028217315673828, -7.82012939453125e-05, -1.52587890625e-05, -0.0001354217529296875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0006465911865234375, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00033307020203210413, -2.7418097943154862e-06, -0.0047217607498168945, -4.768360213347478e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00021946430206298828, -1.1444091796875e-05, -0.0003261566162109375, -7.62939453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.013900160789489746, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "HammerOfWrath", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template36"}, "_type": "Expr"}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.0616746596874691, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "choice_history": [70, 149, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 46, 139, "4", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 79, 115, 31, 195, 21, 134, "player", "<EOS>", "draw", "<EOS>"]}]}
{"index": 45, "beams": [{"score_history": [-4.1961669921875e-05, -0.0001316070556640625, -0.00024101213784888387, -0.008308026939630508, -2.3126376618165523e-05, -0.00011300401820335537, -7.3749106377363205e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.002597808837890625, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -4.649161837733118e-06, 0.0, -7.283687591552734e-05, -1.9073486328125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.001079559326171875, -2.968311309814453e-05, -9.691715240478516e-05, -4.529952275333926e-05, -8.594989776611328e-05, -2.3603439331054688e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.47955322265625e-05, -1.9431105101830326e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0003414154052734375, -5.7220458984375e-06, 0.0, -0.0004086494445800781, -3.814697265625e-06, -0.0023545026779174805, -1.9073486328125e-06, -7.62939453125e-06, -8.392333984375e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.03933835029602051, -9.34600830078125e-05, -0.000469207763671875, -5.91278076171875e-05, -2.288818359375e-05, -0.0002880096435546875, -2.9444683605106547e-05, -0.0009613037109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00189208984375, -3.0517578125e-05, -0.000993013265542686, -2.3245811462402344e-05, -0.000475883309263736, -1.1444091796875e-05, -8.058547246037051e-05, 0.0, -0.001461625099182129, 0.0, -0.0011653900146484375, -0.0001735687255859375, -3.8504600524902344e-05, -3.576272320060525e-06, -0.0027370452880859375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.0517578125e-05, -2.3245811462402344e-05, -1.52587890625e-05, -0.10944938659667969, -7.43865966796875e-05, -0.00034332275390625, -0.0003223419189453125, -0.0108184814453125, -0.0017976760864257812, 0.0, -0.000431060791015625, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.000415802001953125, -1.6689286894688848e-06, -0.014525890350341797, 0.0, -0.028916358947753906, -0.000888824462890625, -5.53131103515625e-05, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "HandOfProtection", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "_type": "Assign", "value": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.23604027563850138, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "choice_history": [70, 149, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hand", " ", "of", " ", "Protection", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 36, 103, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 46, "beams": [{"score_history": [-0.0011959075927734375, -8.58306884765625e-05, -6.0795002355007455e-05, -1.4662683497590479e-05, -8.976433309726417e-05, -0.0009852559305727482, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001049041748046875, -0.001392364501953125, -0.000408172607421875, -7.05718994140625e-05, -2.5391558665432967e-05, 0.0, -3.1113624572753906e-05, 0.0, -0.0013427734375, -0.001220703125, -3.62396240234375e-05, -0.00010370690142735839, -0.000270843505859375, -4.1961669921875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0021935715340077877, -1.9073486328125e-06, -0.0009860992431640625, -3.814697265625e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00017547607421875, 0.0, -0.003509521484375, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.002384185791015625, 0.0, -0.017835617065429688, -4.9591064453125e-05, -0.0037975311279296875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.00075531005859375, -2.6702880859375e-05, -0.003154754638671875, 0.0, -0.006252288818359375, 0.0, -1.33514404296875e-05, 0.0, -0.001194000244140625, -0.0012111663818359375, -0.0005645751953125, -8.344646857949556e-07, -5.7220458984375e-06, -2.86102294921875e-05, -0.0003073934931308031, -7.343292236328125e-05, -2.3841855067985307e-07, -0.000171661376953125, -0.0001201629638671875, -0.020502090454101562, -0.0002275572915095836, -0.0028429031372070312, 0.0, -0.00054931640625, -0.0001201629638671875, -0.0045642852783203125, -0.00044989585876464844, -7.199995161499828e-05, -3.814697265625e-06, -0.0021839141845703125, -0.0001583099365234375, -0.0008384920656681061, 0.0, -0.0015961724566295743, -5.7220458984375e-06, -1.9073486328125e-06, -7.43865966796875e-05, -0.000629425048828125, -2.47955322265625e-05, -0.004793286323547363, -5.7220458984375e-06, -0.0013265609741210938, -0.0012187957763671875, -0.0002956390380859375, -4.8041292757261544e-05], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "HealingTotem", "hole6": [{"hole3": [{"hole0": "TurnEnded", "_type": "Template20", "hole2": [{"hole3": "MinionSelector", "hole1": [{"_type": "Num", "n": 1}], "hole0": "Heal", "_type": "Template19", "hole5": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}]}]}], "hole1": 0, "hole0": "Minion", "_type": "Template30", "hole2": 2}], "hole4": "player", "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.09556600979394148, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "choice_history": [70, 147, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 196, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 242, 47, 143, "Healing", " ", "Totem", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 45, 135, "False", "<EOS>", 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 92, 189, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 244, 66, 173, "Turn", "Ended", "<EOS>", 237, 50, 170, "Heal", "<EOS>", 237, 46, 139, "1", "<EOS>", "Minion", "Selector", "<EOS>", 244, 68, 227, "condition", "<EOS>", 22, 136, "Null", "<EOS>"]}]}
{"index": 47, "beams": [{"score_history": [-0.0001926422119140625, -6.866455078125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.291525328881107e-06, -2.26483098231256e-06, -1.2516970855358522e-05, -2.7418097943154862e-06, -3.62396240234375e-05, -0.000301361083984375, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -1.4662741705251392e-05, 0.0, -0.0001461505889892578, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -5.245195097813848e-06, -3.24249267578125e-05, -7.390974587906385e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -4.76836959251159e-07, -2.503394853192731e-06, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0004330296942498535, -1.9073486328125e-06, -0.0025922060012817383, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.002193450927734375, -1.52587890625e-05, -0.03768348693847656, -3.814697265625e-06, -1.52587890625e-05, -4.9591064453125e-05, -2.47955322265625e-05, -4.410743713378906e-05, -7.390969585685525e-06, -0.0001201629638671875, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0009288787841796875, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.20159912109375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.445148468017578e-05, -1.9311904907226562e-05, -0.0057201385498046875, -0.000545501708984375, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.00016236305236816406, 0.0, -2.6941299438476562e-05, -1.9073486328125e-06, -0.000743865966796875, -1.52587890625e-05, -1.549716034787707e-05, -0.000396728515625, -7.43865966796875e-05, -0.0004940032958984375, -6.67572021484375e-05, -0.0008525848388671875, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0033208131790161133, 0.0, -4.38690185546875e-05, -0.000720977783203125, -7.05718994140625e-05, -5.340576171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011966052697971463, -1.3709068298339844e-05, -0.0004245042509865016, -1.1801670552813448e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.462501525878906e-05, -1.9073486328125e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "HealingTouch", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 8}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.06149534777228638, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "choice_history": [70, 149, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Healing", " ", "Touch", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 48, "beams": [{"score_history": [-2.09808349609375e-05, -0.000736236572265625, -1.8596476365928538e-05, -1.156323378381785e-05, -1.7566606402397156e-05, -2.288818359375e-05, -1.0728830375228426e-06, -0.000102996826171875, -0.0010128021240234375, -0.0004329681396484375, -3.814697265625e-06, 0.0, -1.9669434550451115e-05, -5.7220458984375e-06, -0.00013458724424708635, 0.0, -5.14984130859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -4.887580871582031e-06, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -3.8145226426422596e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, 0.0, -0.006341338157653809, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0008144378662109375, 0.0, -0.0026398897171020508, -1.9073486328125e-06, -7.82012939453125e-05, -0.000118255615234375, -3.24249267578125e-05, -3.62396240234375e-05, -3.576278118089249e-07, -0.0001678466796875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.014781951904296875, 0.0, -0.00019156932830810547, -8.106231689453125e-06, -0.008539199829101562, -5.340576171875e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -2.956390380859375e-05, -3.2186455882765586e-06, -0.09357070922851562, -3.62396240234375e-05, -3.814697265625e-06, -5.340576171875e-05, 0.0, 0.0, -9.5367431640625e-06, -9.762782428879291e-05, -1.5854835510253906e-05, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -9.775161743164062e-06, -9.5367431640625e-06, -0.01471710205078125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010662078857421875, -3.814697265625e-06, -0.26116645336151123, 0.0, -0.030074119567871094, -0.000476837158203125, -0.0001964569091796875, -0.00055694580078125, -0.0043468475341796875, -0.0004863739013671875, -0.0017375946044921875, -2.288818359375e-05, -0.3277921676635742, -1.9073486328125e-06, -0.08424055576324463, -1.52587890625e-05, -0.005690454505383968, -2.1457672119140625e-06, -0.006868204567581415, -9.5367431640625e-06, -0.009146327152848244, -3.254413604736328e-05, -0.015594281256198883, -0.0009480714797973633, -0.0009288787841796875, -7.62939453125e-06, -2.288818359375e-05, -0.0076446533203125, -8.0108642578125e-05, -0.013640999794006348, -1.9073486328125e-06, -0.004284858703613281, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.009004592895507812, -3.24249267578125e-05, -0.13932764530181885, -3.576278118089249e-07, -0.01891946792602539, 0.0, -0.000583648681640625, -0.0030422210693359375, -0.0011034011840820312, -0.0001875162124633789, -6.7589629907161e-05, -0.001346588134765625, -5.7220458984375e-06, -0.0025844573974609375, -0.0007648468017578125, -1.9073486328125e-06, -0.00701904296875, -0.0008182525634765625, -0.00025963413645513356, -3.933906555175781e-06, -0.024745821952819824, -1.1920928244535389e-07, -9.918212890625e-05, -9.5367431640625e-06, -0.10185492038726807, 0.0, -0.0053997039794921875, -5.7220458984375e-05, -0.0009708404541015625, -0.000904083251953125, -0.011766433715820312, 0.0, -0.0015826221788302064, 0.0, -0.006565093994140625, -3.6954863844584906e-06, -0.001367330551147461, -8.106231689453125e-06, -0.000274658203125, -0.0036487579345703125, -3.0517578125e-05, -0.0005747079267166555, -4.768370445162873e-07], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Hex", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "_type": "Assign", "value": {"hole1": "Frog", "hole0": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template36"}}, {"targets": [{"id": "minion", "_type": "Name"}], "_type": "Assign", "value": {"func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"value": "Null", "_type": "NameConstant"}]}}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "_type": "Assign", "value": {"id": "frog", "_type": "Name"}}, {"hole1": "<UNK>", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"id": "minion", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -1.2674063680493575, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "choice_history": [70, 149, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Hex", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 253, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "frog", "<EOS>", 31, 195, 13, 103, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 75, 102, 237, 44, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "frog", "<EOS>", "create_minion", "<EOS>", 237, 45, 136, "Null", "<EOS>", 75, 102, 237, 36, 103, 21, 134, "minion", "<EOS>", "card", "<EOS>", 21, 134, "frog", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 237, 44, 134, "minion", "<EOS>"]}]}
{"index": 49, "beams": [{"score_history": [-0.0010089874267578125, -4.9591064453125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.0002031123876804486, -6.171409040689468e-06, -2.682204285520129e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0005397796630859375, -9.5367431640625e-05, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0002155303955078125, -7.62939453125e-06, 0.0, -9.536726793157868e-06, -4.673004150390625e-05, -1.251697449333733e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -1.7404556274414062e-05, -4.768367489305092e-06, -5.7220458984375e-06, -4.1961669921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002991949440911412, -1.9073486328125e-06, -0.006160736083984375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000308990478515625, -1.71661376953125e-05, -0.013029098510742188, -1.9073486328125e-06, -1.33514404296875e-05, -0.000141143798828125, -6.29425048828125e-05, -6.496906280517578e-05, -4.410743713378906e-06, -6.67572021484375e-05, -3.62396240234375e-05, -3.814697265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -0.003147125244140625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, 0.0, -9.918212890625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.5616416931152344e-05, -0.006968498229980469, -0.0007266998291015625, -7.62939453125e-06, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, -3.814697265625e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.0030385255813598633, -2.6702880859375e-05, -8.463855920126662e-06, -0.0005512237548828125, -9.1552734375e-05, -0.0004711151123046875, -7.05718994140625e-05, -6.67572021484375e-05, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -3.4332275390625e-05, 0.0, -0.008653640747070312, 0.0, -5.7220458984375e-05, -0.003162384033203125, -3.4332275390625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0007326601189561188, -9.417532055522315e-06, -0.0006748437881469727, -1.4424220353248529e-05, -6.103515625e-05, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "HolyLight", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 6}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.05233006785817196, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "choice_history": [70, 149, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Light", "<EOS>", 46, 139, "2", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 50, "beams": [{"score_history": [-0.00046539306640625, -3.814697265625e-05, -3.576278118089249e-07, -2.384185791015625e-06, -4.768370445162873e-07, -2.141110599040985e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -0.0008182525634765625, -0.0005035400390625, -4.41074053014745e-06, -8.737995813135058e-05, -2.2649765014648438e-06, 0.0, -3.540481338859536e-05, -1.1920928244535389e-07, -0.004619598388671875, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.537799835205078e-05, -1.5020257706055418e-05, -0.010724067687988281, -0.0001544952392578125, -4.1961669921875e-05, -2.288818359375e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00013780593872070312, 0.0, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -9.655952453613281e-06, -2.09808349609375e-05, -0.0021762847900390625, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0019665956497192383, 0.0, -0.0033855438232421875, -0.006697654724121094, -0.0001068115234375, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0008012056350708008, -3.814697265625e-06, -0.0007266998291015625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -3.0517578125e-05, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.00016009777027647942, 0.0, -0.000209808349609375, -0.0007381439208984375, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.6624412536621094e-05, -3.814697265625e-06, -0.2032155990600586, -1.9073486328125e-06, -3.62396240234375e-05, -0.002399444580078125, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.005869150161743164, 0.0, -0.002407287945970893, 0.0, -7.82012939453125e-05, -0.0001239776611328125, -1.1444091796875e-05, -1.9073486328125e-06, -0.010801315307617188, -1.9073486328125e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.0014295578002929688, 0.0, -0.0036754608154296875, -8.7738037109375e-05, -0.0012912750244140625, -3.814697265625e-06, -0.0019168853759765625, 0.0, -0.0008240938186645508, -3.814697265625e-06, -0.0002307891845703125, -0.0010051727294921875, -3.0517578125e-05, -0.00157928466796875, -3.814697265625e-06, -7.259845733642578e-05, -1.9073486328125e-06, -0.004528999328613281, 0.0, -0.0002593994140625, -0.001922607421875, -2.288818359375e-05, -0.000102996826171875, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.003685593605041504, -3.218649908376392e-06, -0.00014028482837602496, 0.0, -8.392333984375e-05, -0.0001583099365234375, -3.4332275390625e-05, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "HolyNova", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call", "args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}]}}, {"target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"hole1": "heal", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template37", "hole2": [{"hole1": "effective_heal_power", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "iter": {"attr": "minions", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}}], "hole4": "player", "hole2": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template14", "hole2": "PRIEST"}]}, "score": -0.286860130846712, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "choice_history": [70, 149, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 249, 88, 153, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 16, 110, 13, 103, 21, 134, "copy", "<EOS>", "copy", "<EOS>", 237, 36, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>", 80, 116, 21, 134, "minion", "<EOS>", 13, 103, 21, 134, "player", "<EOS>", "minions", "<EOS>", 249, 93, 196, 21, 134, "minion", "<EOS>", "heal", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 51, "beams": [{"score_history": [-0.0008640289306640625, -2.09808349609375e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -2.407998726994265e-05, -2.2646854631602764e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -0.0002841949462890625, -6.103515625e-05, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, 0.0, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.145764938177308e-06, -8.094309305306524e-05, -8.344646857949556e-07, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0009289979934692383, -2.3841855067985307e-07, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.00046563148498535156, -1.9073486328125e-06, -0.17240917682647705, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.014516830444335938, -1.9073486328125e-06, -4.1961669921875e-05, -9.918212890625e-05, -8.96453857421875e-05, -2.6702880859375e-05, -2.741813204920618e-06, -6.103515625e-05, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.0001583099365234375, 0.0, -7.62939453125e-05, 0.0, -0.0009250640869140625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.0003108978271484375, -0.000171661376953125, -9.5367431640625e-06, -0.0002765655517578125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.728534698486328e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0003833770751953125, -2.09808349609375e-05, -8.344639354618266e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0007305145263671875, -8.20159912109375e-05, -2.6702880859375e-05, -0.0001964569091796875, 0.0, -5.7220458984375e-06, 0.0, -0.0002079010009765625, 0.0, -0.000255584716796875, -1.1920928244535389e-07, -1.9073486328125e-06, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00017499906243756413, -1.1920928244535389e-07, -0.00014090287731960416, -7.152555099310121e-07, -5.340576171875e-05, -9.5367431640625e-06, -3.0517578125e-05, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "HolySmite", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 2}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": [{"value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword", "arg": "target_func"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}]}]}, "score": -0.194906589081981, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "choice_history": [70, 149, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 240, 47, 143, "Holy", " ", "Smite", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 244, 68, 227, "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "2", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 52, "beams": [{"score_history": [-0.0017099380493164062, -0.0001010894775390625, -1.1444091796875e-05, -0.0002899169921875, -2.288818359375e-05, -6.5565000113565475e-06, -6.12716976320371e-05, -1.9073486328125e-06, -0.0001010894775390625, -1.71661376953125e-05, -1.3470649719238281e-05, -6.532669067382812e-05, -3.4570680327306036e-06, -6.29425048828125e-05, -0.0004558563232421875, -0.0016021728515625, -3.099436753473128e-06, 0.0, -8.463858648610767e-06, -4.768370445162873e-07, -0.0011600255966186523, 0.0, -0.007629513740539551, 0.0, -0.004496930167078972, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.00174713134765625, -7.62939453125e-06, -0.0019435882568359375, 0.0, -0.00030231475830078125, 0.0, -0.02180957794189453, -0.09549522399902344, -0.0006104782223701477, -0.0014087589224800467, -3.814697265625e-06, -0.00206756591796875, -0.00012969970703125, -0.0073184967041015625, -0.0042591094970703125, -2.47955322265625e-05, -0.0008447659783996642, -4.839897155761719e-05, -0.0014502692501991987, -0.1230316162109375, -5.53131103515625e-05, -0.0026751263067126274, -1.9073486328125e-06, -0.005077362060546875, -0.0041790008544921875, -0.00021755695343017578, -1.9073486328125e-06, -0.0008028745651245117, -0.0039119720458984375, -3.814697265625e-06, -0.0016146916896104813, 0.0, -0.007890701293945312, -0.000400543212890625, -0.0014958088286221027, -0.0022950160782784224, -0.00012436509132385254, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0011463165283203125, -7.62939453125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0010733604431152344, -0.00012969970703125, -5.7220458984375e-06, -2.288818359375e-05, -8.392333984375e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.030185818672180176, -7.62939453125e-06, -0.00083160400390625, 0.0, -0.000308990478515625, -0.0001354217529296875, 0.0, -0.0016423463821411133, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -0.0006530264508910477, -0.0007820128230378032, -1.9073486328125e-06, -0.0002269744873046875, -0.00067138671875, -0.0001355290733044967, 0.0, -0.0008110413909889758, 0.0], "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "FREE", "hole7": "battlecry", "hole1": 4, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole0": "Houndmaster", "hole8": {"hole3": [{"func": {"id": "IsType", "_type": "Name"}, "_type": "Call", "args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}], "hole1": [{"_type": "List", "elts": [{"hole1": "ChangeHealth", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole1": "ChangeAttack", "hole0": "Buff", "_type": "Template23", "hole2": 2}, {"hole0": "Taunt", "_type": "Template25"}]}], "_type": "Template18", "hole0": "Give", "hole4": [{"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole2": "MinionSelector"}, "hole6": "<UNK>", "hole4": "minion_type", "hole2": "HUNTER"}, {"hole1": 3, "hole0": 4, "_type": "Template8"}], "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "name": "Houndmaster"}]}, "score": -0.35028275184970425, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "choice_history": [69, 133, 249, 78, 112, "Houndmaster", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 165, "Give", "<EOS>", 237, 42, 129, 239, 51, 179, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 51, 179, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 52, 180, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 237, 39, 110, 21, 134, "Is", "Type", "<EOS>", 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 244, 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "4", "<EOS>", "3", "<EOS>"]}]}
{"index": 53, "beams": [{"score_history": [-1.33514404296875e-05, -0.000995635986328125, -0.00016975337348412722, -0.003197702346369624, -5.435943239717744e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000682830810546875, -0.007997512817382812, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -5.91278076171875e-05, 0.0, -0.03586101531982422, -2.6702880859375e-05, -9.1552734375e-05, -3.576278118089249e-07, -1.2397711543599144e-05, 0.0, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.273124694824219e-05, -1.9073486328125e-06, -0.0022478103637695312, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -1.9788742065429688e-05, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -0.0003108978271484375, -4.1961669921875e-05, -0.0005570650100708008, -2.0265579223632812e-06, -2.09808349609375e-05, 0.0, -7.271760750882095e-06, 0.0, -5.7220458984375e-05, -9.918212890625e-05, -5.340576171875e-05, -2.872943878173828e-05, -4.4583364797290415e-05, -1.4781946447328664e-05, -3.3378546504536644e-06, -0.011142492294311523, -1.9073486328125e-06, -9.34600830078125e-05, -2.6702880859375e-05, -0.0002422332763671875, -7.62939453125e-06], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "Huffer", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2, "hole0": 4, "_type": "Template22", "hole2": "charge"}], "hole4": "player", "hole2": [{"hole3": [{"hole0": "BEAST", "_type": "Template35"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}]}, "score": -0.06446519586228305, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "choice_history": [70, 147, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Huffer", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 54, "beams": [{"score_history": [-2.6702880859375e-05, -0.0002155303955078125, -1.311301275563892e-06, -2.109982233378105e-05, -2.6219640858471394e-06, -2.6822088329936378e-05, -4.768370445162873e-07, -5.7220458984375e-06, -0.0012054443359375, -0.0004940032958984375, -7.629365427419543e-06, -2.3841855067985307e-07, 3.5762468542088754e-07, -7.152555099310121e-07, -0.019473403692245483, 0.0, -0.00030374518246389925, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002197265625, 0.0, -2.9325474315555766e-05, -1.9669532775878906e-05, -0.00047767162322998047, 0.0, -6.866455078125e-05, 0.0, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -0.0001220703125, -1.7881393432617188e-05, -2.145764938177308e-06, -0.002262115478515625, -0.000244140625, -2.09808349609375e-05, -0.0002193450927734375, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.6689295080141164e-05, 0.0, -9.894371032714844e-06, -1.9073486328125e-06, -2.86102294921875e-05, -4.57763671875e-05, -1.3589857189799659e-05, -5.7220458984375e-06, -0.020933151245117188, -0.00048065185546875, -7.62939453125e-06, -1.71661376953125e-05, -5.53131103515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.1920922133867862e-06, -0.07501423358917236, 0.0, -8.58306884765625e-05, -0.04210186004638672, -0.000972747802734375, -0.0024900436401367188, -0.0006275177001953125, -0.00010907615069299936, 0.0, -0.034969329833984375, -0.000530242919921875, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002269744873046875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0009770391043275595, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "Humility", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"left": {"_type": "Num", "n": 1}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template36"}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole2": [{"hole3": "target_func", "hole1": 1, "_type": "Template11", "hole0": "Humility", "hole4": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": "PALADIN"}]}, "score": -0.20743855675831213, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "choice_history": [70, 149, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 237, 37, 105, 23, 139, "1", "<EOS>", 72, 31, 195, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"]}]}
{"index": 55, "beams": [{"score_history": [-0.00106048583984375, -0.0013484954833984375, -0.00017141121497843415, -0.0010222929995507002, -1.1920928244535389e-07, -0.022410273551940918, -1.1444091796875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.20503997802734375, -9.918212890625e-05, -0.00016271922504529357, -7.259845733642578e-05, -1.1920928244535389e-07, 0.0, -9.894371032714844e-06, -3.576278118089249e-07, -0.0010513067245483398, 0.0, -0.0020062923431396484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00010156631469726562, -1.9073486328125e-06, -0.00032067298889160156, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.000957489013671875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.02968597412109375, -1.52587890625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -6.79492904964718e-06, -3.0517578125e-05, -0.2346782684326172, -2.86102294921875e-05, -0.0014667510986328125, -0.000614166259765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -0.1472914218902588, -7.62939453125e-06, -0.0008542374125681818, -5.960462772236497e-07], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "<UNK>Mark", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "set_health_to", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template31", "hole2": 1}, "_type": "Expr"}], "hole4": "player", "hole2": [{"hole3": "target_func", "hole1": 0, "_type": "Template11", "hole0": "<UNK> Mark", "hole4": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": "HUNTER"}]}, "score": -0.6509790858392392, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "choice_history": [70, 149, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 79, 115, 29, 190, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", "1", "<EOS>"]}]}
{"index": 56, "beams": [{"score_history": [-0.5351266860961914, -0.00018310546875, -2.288818359375e-05, -0.00103759765625, -9.5367431640625e-06, -4.31528314948082e-05, -2.9802276912960224e-06, -6.556489552167477e-06, -2.6702880859375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -2.3841312213335186e-07, -0.00013768664211966097, -1.1920928244535389e-07, -0.000247955322265625, -0.0004482269287109375, -0.000156402587890625, -0.00013064485392533243, -7.271766662597656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.0001233815710293129, -1.9073486328125e-06, -0.016353726387023926, 0.0, -0.002012968063354492, 0.0, -0.0006122589111328125, 0.0, -0.002803802490234375, -1.9073486328125e-06, -0.012994766235351562, 0.0, -0.0010645389556884766, 0.0, -0.0003414154052734375, -0.012431144714355469, -0.0020207413472235203, -9.536738616588991e-07, -2.86102294921875e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.0010831357212737203, -4.0531158447265625e-06, -0.0002560611173976213, -1.1444091796875e-05, -1.71661376953125e-05, -0.000457763671875, -5.14984130859375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.00020599365234375, -1.33514404296875e-05, -5.7220458984375e-06, -0.000202178955078125, -8.392333984375e-05, -0.003711700439453125, -1.9073486328125e-06, -0.009220123291015625, -6.103515625e-05, -0.0006122589111328125, -0.0003452301025390625, 0.0, -0.000274658203125, -7.82012939453125e-05, -4.5776359911542386e-05, 0.0, -0.0002950438647530973, 0.0], "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "COMMON", "hole7": "battlecry", "hole1": 3, "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Template0", "hole0": "Ironforge Rifleman", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "Damage", "_type": "Template18", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template39"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template39"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector"}, "hole6": "<UNK>", "hole4": "minion_type", "hole2": "ALL"}, {"hole1": 2, "hole0": 2, "_type": "Template8"}], "_type": "ClassDef", "bases": [{"id": "MinionCard", "_type": "Name"}], "name": "IronforgeRifleman"}]}, "score": -0.6057335294362787, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "choice_history": [69, 133, 249, 78, 112, "Ironforge", "Rifleman", "<EOS>", 237, 44, 134, "Minion", "Card", "<EOS>", 250, 85, 146, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 134, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 25, 163, "Damage", "<EOS>", 237, 46, 139, "1", "<EOS>", "Character", "Selector", "<EOS>", 245, 68, 227, "players", "<EOS>", 33, 205, "Both", "Player", "<EOS>", 68, 227, "picker", "<EOS>", 33, 205, "User", "Picker", "<EOS>", 97, 219, "2", "<EOS>", "2", "<EOS>"]}]}
{"index": 57, "beams": [{"score_history": [-9.5367431640625e-06, -0.000255584716796875, -2.8371408916427754e-05, -2.3841855067985307e-07, -1.1801687833212782e-05, -2.3841855067985307e-07, 0.0, 0.0, -1.9073486328125e-06, -0.0007038116455078125, -0.0009822845458984375, -2.3841855067985307e-07, -7.367134094238281e-05, 0.0, 0.0, -8.345214155269787e-07, 0.0, -0.0011461973190307617, 0.0, -0.00014710424875374883, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002976655960083008, -5.7220458984375e-06, -0.0035153627395629883, -1.1444091796875e-05, -0.0002683401107788086, 0.0, -0.0016226768493652344, 0.0, -5.7220458984375e-06, -8.7738037109375e-05, -8.0108642578125e-05, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.892450619488955e-05, -3.576278118089249e-07, -0.0010380744934082031, -1.9073486328125e-06, -0.000492095947265625, -1.1444091796875e-05, -0.00013375240087043494, -3.123283386230469e-05], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "IronfurGrizzly", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 3, "hole0": 3, "_type": "Template22", "hole2": "taunt"}], "hole4": "player", "hole2": [{"hole3": "minion_type", "hole1": 3, "_type": "Template10", "hole0": "Ironfur Grizzly", "hole4": {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}, "hole2": "COMMON"}]}, "score": -0.011126658179676951, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "choice_history": [70, 147, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 249, 86, 151, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 58, "beams": [{"score_history": [-0.011821746826171875, -0.00461578369140625, -2.145764938177308e-06, -8.761498611420393e-05, -5.245195097813848e-06, -1.192074705613777e-07, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.009527206420898438, -9.5367431640625e-06, -8.702239938429557e-06, -9.667871199781075e-05, -3.099440846199286e-06, 0.0, 0.0, -2.3841855067985307e-07, -0.001086115837097168, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -0.001331329345703125, -1.52587890625e-05, -0.009296417236328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2782554626464844e-05, -1.1920928244535389e-07, -0.013895034790039062, -9.5367431640625e-06, -0.0001201629638671875, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.001357759378152e-05, 0.0, -2.47955322265625e-05, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -6.723403930664062e-05, -9.5367431640625e-06, -0.001068115234375, -0.000507354736328125, -2.6702880859375e-05, -8.96453857421875e-05, -0.000286102294921875, -0.0036469697952270508, 0.0, -0.27253246307373047, -0.000736236572265625, -1.9073486328125e-05, -1.1444091796875e-05, -0.000438690185546875, 0.0, -8.392333984375e-05, 0.0, -0.004893302917480469, 0.0, -0.0005271434783935547, 0.0, -0.013556599617004395, 0.0, -0.010245323181152344, -0.0002460479736328125, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -4.231887578498572e-05, 0.0, -0.0013408660888671875, -5.7220458984375e-05, -0.00086212158203125, -0.001766204833984375, -0.0034227371215820312, -1.9073486328125e-06, -0.000614166259765625, -0.0003833770751953125, -0.015665054321289062, -0.000579833984375, -0.0015583038330078125, -1.1444091796875e-05, -7.2479248046875e-05, -1.52587890625e-05, -0.028973456472158432, 0.0, -0.010154247283935547, -1.1920928244535389e-07, -0.0010199544485658407, 0.0, -8.20159912109375e-05, -0.0018520355224609375, -9.72747802734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0007176399230957031, 0.0, -0.023418426513671875, 0.0, -0.013795852661132812, -0.0034313201904296875, -0.0007190704345703125, -0.001163482666015625, -0.0003604888916015625, -4.1961669921875e-05, -0.0006543380441144109, -1.3947389561508317e-05, -0.0009307861328125, -0.005106925964355469, -4.57763671875e-05, -0.004576683044433594, -8.0108642578125e-05, -9.5367431640625e-05, -1.71661376953125e-05, -0.0021305084228515625, -0.047570228576660156, -0.000415802001953125, -1.1444091796875e-05, -1.33514404296875e-05, -6.29425048828125e-05, 0.0, -4.589557647705078e-05, 0.0, -4.57763671875e-05, 0.0, -0.002246856689453125, 0.0, -5.14984130859375e-05, -0.0027799606323242188, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.00013172625040169805, 0.0, -0.04966407269239426, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.0002422332763671875, -0.00041961669921875, -0.0001087188720703125, -9.5367431640625e-06, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -7.62939453125e-06, -4.57763671875e-05, 0.0, -0.026693344116210938, 0.0, -3.24249267578125e-05, -0.000400543212890625, -4.38690185546875e-05, -4.57763671875e-05, 0.0, -5.53131103515625e-05, 0.0, -6.806846067775041e-05, 0.0, -0.05425667017698288, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "KillCommand", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "_type": "Assign", "value": {"func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call", "args": [{"attr": "game", "value": {"id": "player", "_type": "Name"}, "_type": "Attribute"}, {"args": {"hole0": "x", "_type": "Template21"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}]}}]}}, {"orelse": [{"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}], "test": {"left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare", "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "body": [{"hole1": "damage", "hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 3}, {"id": "self", "_type": "Name"}]}]}], "hole4": "player", "hole2": [{"hole3": "target_func", "hole1": 3, "_type": "Template11", "hole0": "Kill Command", "hole4": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": "HUNTER"}]}, "score": -0.6745382892365299, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "choice_history": [70, 149, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 249, 87, 152, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 251, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 75, 102, 237, 44, 134, "<UNK>", "<EOS>", 16, 110, 13, 103, 13, 103, 21, 134, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 238, 36, 103, 21, 134, "player", "<EOS>", "game", "<EOS>", 41, 127, 0, 177, "x", "<EOS>", 17, 113, 13, 103, 13, 103, 21, 134, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 234, 8, 237, 36, 103, 21, 134, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 82, 121, 17, 113, 21, 134, "<UNK>", "<EOS>", 234, 8, 237, 45, 136, "Null", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>", 249, 93, 196, 13, 103, 21, 134, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "3", "<EOS>", 44, 134, "self", "<EOS>"]}]}
{"index": 59, "beams": [{"score_history": [-7.62939453125e-06, -0.00092315673828125, -6.615896563744172e-05, -1.1920928244535389e-07, -2.586825030448381e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.0002994537353515625, -1.9073486328125e-05, 0.0, -3.6835670471191406e-05, 0.0, 0.0, -2.2664680727757514e-06, -2.3841855067985307e-07, -3.5524328268365934e-05, 0.0, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -1.6689284620952094e-06, -3.576278118089249e-07, -0.0003872242523357272, -1.1920928244535389e-07, -0.005532026290893555, -1.0728830375228426e-06, -6.67572021484375e-05, -0.000133514404296875, -0.0006140395998954773, 0.0], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "KoboldGeomancer", "hole6": [{"hole3": {"_type": "Num", "n": 1}, "hole1": 2, "hole0": 2, "_type": "Template22", "hole2": "spell_damage"}], "hole4": "player", "hole2": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template14", "hole2": "ALL"}]}, "score": -0.008258247656620199, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "choice_history": [70, 147, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 139, "1", "<EOS>"]}]}
{"index": 60, "beams": [{"score_history": [-2.288818359375e-05, -0.0008392333984375, -0.014359444379806519, -0.0010475391754880548, -1.955016705323942e-05, -2.622600959512056e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -0.0001163482666015625, -2.6702880859375e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -7.152557373046875e-06, -1.9073468138230965e-06, -0.0016651153564453125, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -6.723403930664062e-05, 0.0, -4.76837158203125e-05, -0.0001678466796875, -3.62396240234375e-05, -7.62939453125e-06, -6.556507287314162e-06, -1.9073468138230965e-06, 0.0, -0.005444169044494629, 0.0, -0.00016021728515625, -7.43865966796875e-05, -4.00543212890625e-05, -3.814697265625e-06], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "<UNK>Elite", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 3, "hole0": 4, "_type": "Template22", "hole2": "charge"}], "hole4": "player", "hole2": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template14", "hole2": "WARRIOR"}]}, "score": -0.024377959264029414, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "choice_history": [70, 147, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 61, "beams": [{"score_history": [-1.71661376953125e-05, -0.0001983642578125, -1.4305060176411644e-05, -3.7431702367030084e-05, -3.707333962665871e-05, -5.7220458984375e-06, 0.0, 0.0, -0.000881195068359375, -0.004338264465332031, -0.0002117156982421875, -1.9073486328125e-06, -0.0014642039313912392, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.0860595703125, -7.43865966796875e-05, -0.00016021728515625, -1.1920928244535389e-07, -3.4570680327306036e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.3909518505388405e-06, -2.622604142743512e-06, -3.24249267578125e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0007015465525910258, -2.0265579223632812e-06, -0.0018749232403934002, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002537965774536133, 0.0, -0.00022816628916189075, 0.0, -0.000316619873046875, -1.33514404296875e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0002994537353515625, -0.000141143798828125, -0.000141143798828125, -3.933906555175781e-06, -8.022763358894736e-05, 0.0, -0.0004679166304413229, 0.0, -0.0001277923583984375, -0.0002002716064453125, -0.000316619873046875, -0.0005203485488891602, -7.450303382938728e-05, -3.576278118089249e-07, -2.384185791015625e-06, -0.0008080003899522126, -1.9073486328125e-06, -9.72747802734375e-05, -0.003932952880859375, -0.00015330286987591535, -0.00015044186147861183, -0.0002536773681640625, -0.001026153564453125, -0.004405975341796875, -0.004099006298929453, -5.125993993715383e-06, -0.14754676818847656, -0.000202178955078125, -0.00039500370621681213, -0.00047302243183366954, -3.576278118089249e-07], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "Leokk", "hole6": [{"hole3": {"hole1": [{"hole0": 1, "_type": "Template32"}, {"hole0": "MinionSelector", "_type": "Template39"}], "hole0": "Aura", "_type": "Template38"}, "hole1": 4, "hole0": 2, "_type": "Template22", "hole2": "auras"}], "hole4": "player", "hole2": [{"hole3": [{"hole0": "BEAST", "_type": "Template35"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}]}, "score": -0.26320484215248996, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "choice_history": [70, 147, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Leokk", "<EOS>", 46, 139, "3", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 32, 200, "Aura", "<EOS>", 238, 57, 191, "1", "<EOS>", 63, 205, "Minion", "Selector", "<EOS>"]}]}
{"index": 62, "beams": [{"score_history": [-2.6702880859375e-05, -0.0014247894287109375, -0.00031039948225952685, -4.410646579344757e-05, -0.00012659362982958555, -0.00012766500003635883, -0.0005117654800415039, 0.0, -1.33514404296875e-05, -0.0042972564697265625, -0.0019378662109375, -0.0003758660168386996, -4.57763671875e-05, -5.316699389368296e-05, -0.000469207763671875, -0.000615476630628109, -1.1920928244535389e-07, -0.021838068962097168, 0.0, -0.0008730886620469391, 0.0, -0.0016655921936035156, -1.52587890625e-05, -0.00016295886598527431, -7.62939453125e-06, -1.9073486328125e-06, -0.0007476806640625, -0.0021772384643554688, -0.00044610031181946397, -3.814697265625e-06, -0.00011408329010009766, -9.536738616588991e-07, -4.291534423828125e-06, -1.1920928244535389e-07], "model_output": {"hole3": "create_weapon", "hole1": "WeaponCard", "_type": "Template1", "hole0": "<UNK>Justice", "hole6": [{"hole1": 1, "hole0": "Weapon", "_type": "Template30", "hole2": 4}], "hole4": "player", "hole2": [{"hole3": "FREE", "hole1": 1, "hole0": "<UNK> Justice", "_type": "Template15", "hole2": "PALADIN"}]}, "score": -0.038438895531257344, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "choice_history": [70, 147, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 249, 89, 154, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 249, 92, 188, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"]}]}
{"index": 63, "beams": [{"score_history": [-0.000202178955078125, -7.2479248046875e-05, -0.00027533964021131396, -0.0007030938868410885, -0.001341208117082715, -1.740443622111343e-05, -5.245203283266164e-06, -2.3841574147809297e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0007724761962890625, -3.4332275390625e-05, -1.2755369425576646e-05, -0.00041958404472097754, -8.821487426757812e-05, -0.00012636184692382812, -1.1444089977885596e-05, -0.00016999212675727904, -6.330013275146484e-05, -1.9073486328125e-06, -6.296788342297077e-06, -1.1920922133867862e-06, -7.700920104980469e-05, 0.0, -0.0003604888916015625, 0.0, -1.025199526338838e-05, 0.0, -5.7220458984375e-06, -9.1552734375e-05, -2.47955322265625e-05, -1.1920928244535389e-07, -7.033323527139146e-06, -0.00011765950330300257, -3.576278118089249e-07, -0.0008400678052566946, -1.9073486328125e-06, -0.0007801055908203125, -7.62939453125e-06, -0.00012135504221078008, -1.3589859008789062e-05], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "LordOfTheArena", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 5, "hole0": 6, "_type": "Template22", "hole2": "taunt"}], "hole4": "player", "hole2": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template14", "hole2": "ALL"}]}, "score": -0.006821644791834558, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "choice_history": [70, 147, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 249, 88, 153, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 90, 178, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 135, "True", "<EOS>"]}]}
{"index": 64, "beams": [{"score_history": [-7.62939453125e-06, -0.000812530517578125, -5.125986263010418e-06, -2.3841855067985307e-07, -1.788126610335894e-05, -4.172315584582975e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.015316009521484375, -0.0006732940673828125, -1.1444091796875e-05, 0.0, -1.77621805050876e-05, 0.0, -4.0411949157714844e-05, 0.0, -0.004913330078125, -0.0002002716064453125, -7.82012939453125e-05, -9.536738616588991e-07, -0.00025175290647894144, -3.218649908376392e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -6.98561270837672e-05, -4.768370445162873e-07, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011646747589111328, 0.0, -0.00038485918776132166, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-05, 0.0, -0.0009244676330126822, 0.0, -0.0002346038818359375, -7.62939453125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -0.000438690185546875, -0.0001392364501953125, -0.0017473697662353516, -1.1920928244535389e-07, -8.129773050313815e-05, -1.9073486328125e-06, -9.76323353825137e-05, 0.0, -3.0517578125e-05, -0.0002899169921875, -3.814697265625e-05, -0.00013375282287597656, 0.0, -6.198883056640625e-06, -1.1920928244535389e-07], "model_output": {"hole3": "create_minion", "hole1": "MinionCard", "_type": "Template1", "hole0": "MechanicalDragonling", "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template27"}], "hole4": "player", "hole2": [{"hole3": [{"hole0": "MECH", "_type": "Template35"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template37", "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}]}, "score": -0.027259856991165066, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "choice_history": [70, 147, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 249, 93, 197, 33, 205, "super", "<EOS>", "__init__", "<EOS>", 241, 47, 143, "Mechanical", " ", "Dragonling", "<EOS>", 46, 139, "1", "<EOS>", 36, 103, 21, 134, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 36, 103, 21, 134, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 45, 135, "False", "<EOS>", 244, 67, 194, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 249, 91, 183, "2", "<EOS>", "1", "<EOS>"]}]}
{"index": 65, "beams": [{"score_history": [-0.0001430511474609375, -8.96453857421875e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.6028297876764555e-06, -9.865965694189072e-06, -1.9550323486328125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.00051116943359375, -6.4849853515625e-05, -4.768370445162873e-07, -4.112719398108311e-05, -4.529942543740617e-06, 0.0, -0.00020632876839954406, -3.576278118089249e-07, -0.011157989501953125, -1.9073486328125e-06, -0.0010585784912109375, 0.0, -0.0003509521484375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.264974000354414e-06, -0.000980377197265625, -3.0517578125e-05, -1.1444091796875e-05, -0.0001735687255859375, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001055002212524414, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -4.5299530029296875e-06, 0.0, -0.0014781951904296875, -4.57763671875e-05, -7.2479248046875e-05, -9.5367431640625e-06, -0.0043048858642578125, -0.000102996826171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004329681396484375, 0.0, -0.0012292861938476562, 0.0, -0.00444755470380187, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -0.00020599365234375, -5.340576171875e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002053976058959961, 0.0, -0.0001099100336432457, -1.1920922133867862e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0], "model_output": {"hole3": "use", "hole1": "SpellCard", "hole5": [{"_type": "arg", "arg": "game"}], "_type": "Template1", "hole0": "MindBlast", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template39"}, "_type": "Template28", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Template37", "hole2": [{"hole1": "effective_spell_damage", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template31", "hole2": 5}, {"id": "self", "_type": "Name"}]}], "hole4": "player", "hole2": [{"hole3": "FREE", "hole1": 2, "hole0": "Mind Blast", "_type": "Template15", "hole2": "PRIEST"}]}, "score": -0.02814011070316269, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "choice_history": [70, 149, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 249, 89, 154, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 231, 224, "game", "<EOS>", 250, 79, 115, 27, 184, 33, 205, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 93, 196, 13, 103, 13, 103, 21, 134, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 238, 56, 190, 21, 134, "player", "<EOS>", "effective_spell_damage", "<EOS>", "5", "<EOS>", 44, 134, "self", "<EOS>"]}]}
